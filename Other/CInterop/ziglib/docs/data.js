zigAnalysis={"typeKinds": ["Type","Void","Bool","NoReturn","Int","Float","Pointer","Array","Struct","ComptimeFloat","ComptimeInt","Undefined","Null","Optional","ErrorUnion","ErrorSet","Enum","Union","Fn","BoundFn","Opaque","Frame","AnyFrame","Vector","EnumLiteral"],"params": {"zigVersion": "0.9.0-dev.1733+8f1e41775","builds": [{"target": "x86_64-windows-gnu"}],"rootName": "ziglib"},"rootPkg": 0,"calls": [{"fn": 683,"result": {"type": 592,"value": 593},"args": [{"type": 592,"value": 594}]},{"fn": 684,"result": {"type": 592,"value": 596},"args": [{"type": 597,"value": null},{"type": 598,"value": 320}]},{"fn": 684,"result": {"type": 592,"value": 599},"args": [{"type": 597,"value": null},{"type": 598,"value": 9}]},{"fn": 685,"result": {"type": 592,"value": 599},"args": [{"type": 592,"value": 596}]},{"fn": 684,"result": {"type": 592,"value": 601},"args": [{"type": 597,"value": null},{"type": 598,"value": 6}]},{"fn": 685,"result": {"type": 592,"value": 601},"args": [{"type": 592,"value": 602}]},{"fn": 6,"result": {"type": 603,"value": "undefined"},"args": [{"type": 604,"value": "true"}]},{"fn": 686,"result": {"type": 592,"value": 606},"args": [{"type": 592,"value": 607},{"type": 592,"value": 608},{"type": 10,"value": 10}]},{"fn": 687,"result": {"type": 592,"value": 610},"args": [{"type": 592,"value": 602}]},{"fn": 688,"result": {"type": 28,"value": 30},"args": [{"type": 592,"value": 602},{"type": 592,"value": 610}]},{"fn": 689,"result": {"type": 29,"value": 31},"args": [{"type": 592,"value": 602},{"type": 592,"value": 610}]},{"fn": 690,"result": {"type": 603,"value": "undefined"},"args": [{"type": 592,"value": 610},{"type": 592,"value": 602},{"type": 592,"value": 602},{"type": 592,"value": 614}]},{"fn": 691,"result": {"type": 592,"value": 616},"args": [{"type": 592,"value": 602},{"type": 592,"value": 617},{"type": 592,"value": 610},{"type": 614,"value": 80}]},{"fn": 692,"result": {"type": 592,"value": 616},"args": [{"type": 592,"value": 602},{"type": 592,"value": 617}]},{"fn": 693,"result": {"type": 592,"value": 620},"args": [{"type": 592,"value": 602},{"type": 592,"value": 617},{"type": 592,"value": 610},{"type": 614,"value": 80}]},{"fn": 694,"result": {"type": 592,"value": 602},"args": [{"type": 592,"value": 602},{"type": 592,"value": 602}]},{"fn": 695,"result": {"type": 592,"value": 623},"args": [{"type": 592,"value": 624},{"type": 625,"value": "null"}]},{"fn": 696,"result": {"type": 592,"value": 623},"args": [{"type": 592,"value": 624}]},{"fn": 695,"result": {"type": 592,"value": 627},"args": [{"type": 592,"value": 628},{"type": 625,"value": "null"}]},{"fn": 696,"result": {"type": 592,"value": 627},"args": [{"type": 592,"value": 628}]},{"fn": 695,"result": {"type": 592,"value": 629},"args": [{"type": 592,"value": 630},{"type": 625,"value": "null"}]},{"fn": 696,"result": {"type": 592,"value": 629},"args": [{"type": 592,"value": 630}]},{"fn": 695,"result": {"type": 592,"value": 631},"args": [{"type": 592,"value": 632},{"type": 625,"value": "null"}]},{"fn": 696,"result": {"type": 592,"value": 631},"args": [{"type": 592,"value": 632}]},{"fn": 695,"result": {"type": 592,"value": 633},"args": [{"type": 592,"value": 634},{"type": 625,"value": "null"}]},{"fn": 696,"result": {"type": 592,"value": 633},"args": [{"type": 592,"value": 634}]},{"fn": 695,"result": {"type": 592,"value": 635},"args": [{"type": 592,"value": 636},{"type": 625,"value": "null"}]},{"fn": 696,"result": {"type": 592,"value": 635},"args": [{"type": 592,"value": 636}]},{"fn": 695,"result": {"type": 592,"value": 637},"args": [{"type": 592,"value": 638},{"type": 625,"value": "null"}]},{"fn": 696,"result": {"type": 592,"value": 637},"args": [{"type": 592,"value": 638}]},{"fn": 42,"result": {"type": 604,"value": "false"},"args": [{"type": 639,"value": null}]},{"fn": 41,"result": {"type": 604,"value": "false"},"args": [{"type": 640,"value": null}]},{"fn": 694,"result": {"type": 592,"value": 641},"args": [{"type": 592,"value": 641},{"type": 592,"value": 641}]},{"fn": 697,"result": {"type": 592,"value": 643},"args": [{"type": 592,"value": 607},{"type": 592,"value": 644},{"type": 56,"value": 58}]},{"fn": 66,"result": {"type": 645,"value": null},"args": [{"type": 646,"value": null}]},{"fn": 698,"result": {"type": 592,"value": 648},"args": [{"type": 592,"value": 648}]},{"fn": 699,"result": {"type": 592,"value": 648},"args": [{"type": 592,"value": 648}]},{"fn": 700,"result": {"type": 592,"value": 651},"args": [{"type": 592,"value": 648}]},{"fn": 697,"result": {"type": 592,"value": 652},"args": [{"type": 592,"value": 653},{"type": 592,"value": 654},{"type": 98,"value": 101}]},{"fn": 701,"result": {"type": 592,"value": 656},"args": [{"type": 592,"value": 653},{"type": 592,"value": 657},{"type": 592,"value": 658},{"type": 100,"value": 103},{"type": 101,"value": 104},{"type": 102,"value": 105},{"type": 102,"value": 106}]},{"fn": 685,"result": {"type": 592,"value": 601},"args": [{"type": 592,"value": 614}]},{"fn": 702,"result": {"type": 592,"value": 660},"args": [{"type": 592,"value": 661}]},{"fn": 703,"result": {"type": 663,"value": 704},"args": [{"type": 660,"value": null}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 665}]},{"fn": 705,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 665}]},{"fn": 706,"result": {"type": 668,"value": 707},"args": [{"type": 660,"value": null}]},{"fn": 708,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 665}]},{"fn": 709,"result": {"type": 592,"value": 672},"args": [{"type": 592,"value": 665}]},{"fn": 707,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 665}]},{"fn": 710,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 665},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 665}]},{"fn": 712,"result": {"type": 592,"value": 679},"args": [{"type": 592,"value": 676}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 680}]},{"fn": 705,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 680}]},{"fn": 708,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 680}]},{"fn": 709,"result": {"type": 592,"value": 681},"args": [{"type": 592,"value": 680}]},{"fn": 707,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 680}]},{"fn": 710,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 680},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 680}]},{"fn": 697,"result": {"type": 592,"value": 682},"args": [{"type": 592,"value": 683},{"type": 592,"value": 684},{"type": 203,"value": 213}]},{"fn": 694,"result": {"type": 592,"value": 602},"args": [{"type": 592,"value": 614},{"type": 592,"value": 602}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 685}]},{"fn": 705,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 685}]},{"fn": 708,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 685}]},{"fn": 709,"result": {"type": 592,"value": 686},"args": [{"type": 592,"value": 685}]},{"fn": 707,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 685}]},{"fn": 710,"result": {"type": 592,"value": 687},"args": [{"type": 592,"value": 685},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 687},"args": [{"type": 592,"value": 685}]},{"fn": 695,"result": {"type": 592,"value": 688},"args": [{"type": 592,"value": 641},{"type": 625,"value": "null"}]},{"fn": 696,"result": {"type": 592,"value": 688},"args": [{"type": 592,"value": 641}]},{"fn": 713,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 691}]},{"fn": 714,"result": {"type": 592,"value": 676},"args": [{"type": 592,"value": 693}]},{"fn": 715,"result": {"type": 592,"value": 695},"args": [{"type": 592,"value": 693},{"type": 676,"value": 0}]},{"fn": 698,"result": {"type": 592,"value": 696},"args": [{"type": 592,"value": 695}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 697}]},{"fn": 705,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 697}]},{"fn": 708,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 697}]},{"fn": 709,"result": {"type": 592,"value": 698},"args": [{"type": 592,"value": 697}]},{"fn": 707,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 697}]},{"fn": 710,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 697},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 697}]},{"fn": 695,"result": {"type": 592,"value": 699},"args": [{"type": 592,"value": 700},{"type": 625,"value": "null"}]},{"fn": 696,"result": {"type": 592,"value": 699},"args": [{"type": 592,"value": 700}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 701}]},{"fn": 705,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 701}]},{"fn": 708,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 701}]},{"fn": 709,"result": {"type": 592,"value": 702},"args": [{"type": 592,"value": 701}]},{"fn": 707,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 701}]},{"fn": 710,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 701},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 701}]},{"fn": 695,"result": {"type": 592,"value": 703},"args": [{"type": 592,"value": 676},{"type": 625,"value": "null"}]},{"fn": 696,"result": {"type": 592,"value": 703},"args": [{"type": 592,"value": 676}]},{"fn": 695,"result": {"type": 592,"value": 704},"args": [{"type": 592,"value": 705},{"type": 625,"value": "null"}]},{"fn": 696,"result": {"type": 592,"value": 704},"args": [{"type": 592,"value": 705}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 706}]},{"fn": 705,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 706}]},{"fn": 708,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 706}]},{"fn": 709,"result": {"type": 592,"value": 707},"args": [{"type": 592,"value": 706}]},{"fn": 707,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 706}]},{"fn": 710,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 706},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 706}]},{"fn": 716,"result": {"type": 690,"value": null},"args": [{"type": 690,"value": null},{"type": 690,"value": null}]},{"fn": 716,"result": {"type": 690,"value": null},"args": [{"type": 690,"value": null},{"type": 690,"value": null}]},{"fn": 717,"result": {"type": 690,"value": null},"args": [{"type": 690,"value": null},{"type": 690,"value": null},{"type": 690,"value": null}]},{"fn": 713,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 602}]},{"fn": 695,"result": {"type": 592,"value": 710},"args": [{"type": 592,"value": 648},{"type": 625,"value": "null"}]},{"fn": 696,"result": {"type": 592,"value": 710},"args": [{"type": 592,"value": 648}]},{"fn": 695,"result": {"type": 592,"value": 711},"args": [{"type": 592,"value": 712},{"type": 625,"value": "null"}]},{"fn": 696,"result": {"type": 592,"value": 711},"args": [{"type": 592,"value": 712}]},{"fn": 684,"result": {"type": 592,"value": 614},"args": [{"type": 597,"value": null},{"type": 598,"value": 64}]},{"fn": 718,"result": {"type": 592,"value": 714},"args": [{"type": 592,"value": 715}]},{"fn": 719,"result": {"type": 592,"value": 717},"args": [{"type": 592,"value": 715}]},{"fn": 720,"result": {"type": 592,"value": 719},"args": [{"type": 592,"value": 720}]},{"fn": 718,"result": {"type": 592,"value": 721},"args": [{"type": 592,"value": 722}]},{"fn": 719,"result": {"type": 592,"value": 723},"args": [{"type": 592,"value": 722}]},{"fn": 721,"result": {"type": 592,"value": 725},"args": [{"type": 592,"value": 674}]},{"fn": 722,"result": {"type": 592,"value": 727},"args": [{"type": 592,"value": 728}]},{"fn": 713,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 641}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 724,"result": {"type": 731,"value": 725},"args": [{"type": 648,"value": null}]},{"fn": 726,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 614}]},{"fn": 725,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 614}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 716,"result": {"type": 690,"value": null},"args": [{"type": 690,"value": null},{"type": 690,"value": null}]},{"fn": 716,"result": {"type": 690,"value": null},"args": [{"type": 690,"value": null},{"type": 690,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 726,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 648}]},{"fn": 725,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 648}]},{"fn": 727,"result": {"type": 735,"value": null},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 602,"value": 0},{"type": 676,"value": 115}]},{"fn": 728,"result": {"type": 735,"value": null},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 676,"value": 115}]},{"fn": 723,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 729,"result": {"type": 604,"value": "true"},"args": [{"type": 690,"value": null}]},{"fn": 730,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 602}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 739}]},{"fn": 708,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 739}]},{"fn": 709,"result": {"type": 592,"value": 602},"args": [{"type": 592,"value": 739}]},{"fn": 710,"result": {"type": 592,"value": 740},"args": [{"type": 592,"value": 739},{"type": 675,"value": null},{"type": 592,"value": 741}]},{"fn": 731,"result": {"type": 592,"value": 740},"args": [{"type": 592,"value": 739}]},{"fn": 379,"result": {"type": 604,"value": "false"},"args": [{"type": 646,"value": null}]},{"fn": 378,"result": {"type": 604,"value": "false"},"args": [{"type": 640,"value": null}]},{"fn": 732,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 602}]},{"fn": 732,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 641}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 744}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 744}]},{"fn": 710,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 744},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 744}]},{"fn": 710,"result": {"type": 592,"value": 693},"args": [{"type": 592,"value": 665},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 714,"result": {"type": 592,"value": 746},"args": [{"type": 592,"value": 665}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 674}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 674}]},{"fn": 710,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 674},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 674}]},{"fn": 714,"result": {"type": 592,"value": 598},"args": [{"type": 592,"value": 747}]},{"fn": 715,"result": {"type": 592,"value": 748},"args": [{"type": 592,"value": 747},{"type": 598,"value": 0}]},{"fn": 710,"result": {"type": 592,"value": 693},"args": [{"type": 592,"value": 680},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 714,"result": {"type": 592,"value": 749},"args": [{"type": 592,"value": 680}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 750}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 750}]},{"fn": 710,"result": {"type": 592,"value": 687},"args": [{"type": 592,"value": 750},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 687},"args": [{"type": 592,"value": 750}]},{"fn": 710,"result": {"type": 592,"value": 751},"args": [{"type": 592,"value": 685},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 714,"result": {"type": 592,"value": 752},"args": [{"type": 592,"value": 685}]},{"fn": 710,"result": {"type": 592,"value": 693},"args": [{"type": 592,"value": 697},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 714,"result": {"type": 592,"value": 753},"args": [{"type": 592,"value": 697}]},{"fn": 710,"result": {"type": 592,"value": 693},"args": [{"type": 592,"value": 701},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 714,"result": {"type": 592,"value": 754},"args": [{"type": 592,"value": 701}]},{"fn": 710,"result": {"type": 592,"value": 693},"args": [{"type": 592,"value": 706},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 714,"result": {"type": 592,"value": 705},"args": [{"type": 592,"value": 706}]},{"fn": 713,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 614}]},{"fn": 713,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 755}]},{"fn": 732,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 614}]},{"fn": 732,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 755}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 726,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 756}]},{"fn": 725,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 756}]},{"fn": 727,"result": {"type": 735,"value": null},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 602,"value": 0},{"type": 676,"value": 115}]},{"fn": 728,"result": {"type": 735,"value": null},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 676,"value": 115}]},{"fn": 723,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 369,"result": {"type": 757,"value": null},"args": [{"type": 676,"value": 90}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 369,"result": {"type": 759,"value": null},"args": [{"type": 676,"value": 73}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 369,"result": {"type": 760,"value": null},"args": [{"type": 676,"value": 71}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 369,"result": {"type": 761,"value": null},"args": [{"type": 676,"value": 95}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 369,"result": {"type": 762,"value": null},"args": [{"type": 676,"value": 68}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 369,"result": {"type": 763,"value": null},"args": [{"type": 676,"value": 69}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 369,"result": {"type": 764,"value": null},"args": [{"type": 676,"value": 66}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 369,"result": {"type": 765,"value": null},"args": [{"type": 676,"value": 85}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 369,"result": {"type": 766,"value": null},"args": [{"type": 676,"value": 67}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 369,"result": {"type": 767,"value": null},"args": [{"type": 676,"value": 79}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 369,"result": {"type": 768,"value": null},"args": [{"type": 676,"value": 76}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 369,"result": {"type": 769,"value": null},"args": [{"type": 676,"value": 82}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 502,"result": {"type": 602,"value": 15},"args": [{"type": 648,"value": null}]},{"fn": 733,"result": {"type": 598,"value": 90},"args": [{"type": 592,"value": 598},{"type": 598,"value": 90}]},{"fn": 733,"result": {"type": 598,"value": 73},"args": [{"type": 592,"value": 598},{"type": 598,"value": 73}]},{"fn": 733,"result": {"type": 598,"value": 71},"args": [{"type": 592,"value": 598},{"type": 598,"value": 71}]},{"fn": 733,"result": {"type": 598,"value": 95},"args": [{"type": 592,"value": 598},{"type": 598,"value": 95}]},{"fn": 733,"result": {"type": 598,"value": 68},"args": [{"type": 592,"value": 598},{"type": 598,"value": 68}]},{"fn": 733,"result": {"type": 598,"value": 69},"args": [{"type": 592,"value": 598},{"type": 598,"value": 69}]},{"fn": 733,"result": {"type": 598,"value": 66},"args": [{"type": 592,"value": 598},{"type": 598,"value": 66}]},{"fn": 733,"result": {"type": 598,"value": 85},"args": [{"type": 592,"value": 598},{"type": 598,"value": 85}]},{"fn": 733,"result": {"type": 598,"value": 67},"args": [{"type": 592,"value": 598},{"type": 598,"value": 67}]},{"fn": 733,"result": {"type": 598,"value": 79},"args": [{"type": 592,"value": 598},{"type": 598,"value": 79}]},{"fn": 733,"result": {"type": 598,"value": 76},"args": [{"type": 592,"value": 598},{"type": 598,"value": 76}]},{"fn": 733,"result": {"type": 598,"value": 82},"args": [{"type": 592,"value": 598},{"type": 598,"value": 82}]},{"fn": 734,"result": {"type": 772,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 369,"result": {"type": 773,"value": null},"args": [{"type": 676,"value": 78}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 370,"result": {"type": 758,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 502,"result": {"type": 602,"value": 8},"args": [{"type": 648,"value": null}]},{"fn": 733,"result": {"type": 598,"value": 78},"args": [{"type": 592,"value": 598},{"type": 598,"value": 78}]},{"fn": 734,"result": {"type": 774,"value": null},"args": [{"type": 648,"value": null}]},{"fn": 714,"result": {"type": 592,"value": 775},"args": [{"type": 592,"value": 744}]},{"fn": 735,"result": {"type": 777,"value": "null"},"args": [{"type": 592,"value": 744}]},{"fn": 710,"result": {"type": 592,"value": 778},"args": [{"type": 592,"value": 744},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 694,"result": {"type": 592,"value": 641},"args": [{"type": 592,"value": 641},{"type": 592,"value": 602}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 779}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 779}]},{"fn": 710,"result": {"type": 592,"value": 687},"args": [{"type": 592,"value": 779},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 687},"args": [{"type": 592,"value": 779}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 687}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 687}]},{"fn": 714,"result": {"type": 592,"value": 676},"args": [{"type": 592,"value": 687}]},{"fn": 708,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 687}]},{"fn": 707,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 687}]},{"fn": 710,"result": {"type": 592,"value": 779},"args": [{"type": 592,"value": 687},{"type": 675,"value": null},{"type": 592,"value": 638}]},{"fn": 736,"result": {"type": 592,"value": 779},"args": [{"type": 592,"value": 638},{"type": 592,"value": 687}]},{"fn": 713,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 781}]},{"fn": 732,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 781}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 782}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 782}]},{"fn": 710,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 782},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 782}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 745}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 745}]},{"fn": 714,"result": {"type": 592,"value": 676},"args": [{"type": 592,"value": 745}]},{"fn": 708,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 745}]},{"fn": 707,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 745}]},{"fn": 710,"result": {"type": 592,"value": 782},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 628}]},{"fn": 736,"result": {"type": 592,"value": 782},"args": [{"type": 592,"value": 628},{"type": 592,"value": 745}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 783}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 783}]},{"fn": 710,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 783},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 783}]},{"fn": 710,"result": {"type": 592,"value": 783},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 630}]},{"fn": 736,"result": {"type": 592,"value": 783},"args": [{"type": 592,"value": 630},{"type": 592,"value": 745}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 784}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 784}]},{"fn": 710,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 784},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 784}]},{"fn": 710,"result": {"type": 592,"value": 784},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 624}]},{"fn": 736,"result": {"type": 592,"value": 784},"args": [{"type": 592,"value": 624},{"type": 592,"value": 745}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 785}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 785}]},{"fn": 710,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 785},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 785}]},{"fn": 710,"result": {"type": 592,"value": 785},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 634}]},{"fn": 736,"result": {"type": 592,"value": 785},"args": [{"type": 592,"value": 634},{"type": 592,"value": 745}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 786}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 786}]},{"fn": 710,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 786},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 786}]},{"fn": 710,"result": {"type": 592,"value": 786},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 636}]},{"fn": 736,"result": {"type": 592,"value": 786},"args": [{"type": 592,"value": 636},{"type": 592,"value": 745}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 787}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 787}]},{"fn": 710,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 787},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 787}]},{"fn": 710,"result": {"type": 592,"value": 787},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 632}]},{"fn": 736,"result": {"type": 592,"value": 787},"args": [{"type": 592,"value": 632},{"type": 592,"value": 745}]},{"fn": 714,"result": {"type": 592,"value": 676},"args": [{"type": 592,"value": 674}]},{"fn": 735,"result": {"type": 788,"value": "null"},"args": [{"type": 592,"value": 674}]},{"fn": 710,"result": {"type": 592,"value": 693},"args": [{"type": 592,"value": 674},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 714,"result": {"type": 592,"value": 641},"args": [{"type": 592,"value": 750}]},{"fn": 735,"result": {"type": 789,"value": "null"},"args": [{"type": 592,"value": 750}]},{"fn": 710,"result": {"type": 592,"value": 751},"args": [{"type": 592,"value": 750},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 710,"result": {"type": 592,"value": 750},"args": [{"type": 592,"value": 687},{"type": 675,"value": null},{"type": 592,"value": 641}]},{"fn": 736,"result": {"type": 592,"value": 750},"args": [{"type": 592,"value": 641},{"type": 592,"value": 687}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 790}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 790}]},{"fn": 710,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 790},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 790}]},{"fn": 708,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 674}]},{"fn": 707,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 674}]},{"fn": 736,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 676},{"type": 592,"value": 674}]},{"fn": 710,"result": {"type": 592,"value": 790},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 700}]},{"fn": 736,"result": {"type": 592,"value": 790},"args": [{"type": 592,"value": 700},{"type": 592,"value": 745}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 791}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 791}]},{"fn": 710,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 791},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 674},"args": [{"type": 592,"value": 791}]},{"fn": 710,"result": {"type": 592,"value": 791},"args": [{"type": 592,"value": 674},{"type": 675,"value": null},{"type": 592,"value": 705}]},{"fn": 736,"result": {"type": 592,"value": 791},"args": [{"type": 592,"value": 705},{"type": 592,"value": 674}]},{"fn": 684,"result": {"type": 592,"value": 792},"args": [{"type": 597,"value": null},{"type": 598,"value": 33}]},{"fn": 710,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 736,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 676},{"type": 592,"value": 745}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 793}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 793}]},{"fn": 710,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 793},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 793}]},{"fn": 710,"result": {"type": 592,"value": 793},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 648}]},{"fn": 736,"result": {"type": 592,"value": 793},"args": [{"type": 592,"value": 648},{"type": 592,"value": 745}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 794}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 794}]},{"fn": 710,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 794},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 794}]},{"fn": 710,"result": {"type": 592,"value": 794},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 712}]},{"fn": 736,"result": {"type": 592,"value": 794},"args": [{"type": 592,"value": 712},{"type": 592,"value": 745}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 727,"result": {"type": 735,"value": null},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 602,"value": 0},{"type": 676,"value": 115}]},{"fn": 728,"result": {"type": 735,"value": null},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 676,"value": 115}]},{"fn": 723,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 698,"result": {"type": 592,"value": 795},"args": [{"type": 592,"value": 796}]},{"fn": 710,"result": {"type": 592,"value": 797},"args": [{"type": 592,"value": 687},{"type": 675,"value": null},{"type": 592,"value": 598}]},{"fn": 736,"result": {"type": 592,"value": 797},"args": [{"type": 592,"value": 598},{"type": 592,"value": 687}]},{"fn": 714,"result": {"type": 592,"value": 638},"args": [{"type": 592,"value": 779}]},{"fn": 710,"result": {"type": 592,"value": 751},"args": [{"type": 592,"value": 779},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 710,"result": {"type": 592,"value": 798},"args": [{"type": 592,"value": 687},{"type": 675,"value": null},{"type": 592,"value": 638}]},{"fn": 713,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 676}]},{"fn": 732,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 676}]},{"fn": 714,"result": {"type": 592,"value": 628},"args": [{"type": 592,"value": 782}]},{"fn": 710,"result": {"type": 592,"value": 778},"args": [{"type": 592,"value": 782},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 710,"result": {"type": 592,"value": 799},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 628}]},{"fn": 714,"result": {"type": 592,"value": 630},"args": [{"type": 592,"value": 783}]},{"fn": 710,"result": {"type": 592,"value": 778},"args": [{"type": 592,"value": 783},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 710,"result": {"type": 592,"value": 800},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 630}]},{"fn": 714,"result": {"type": 592,"value": 624},"args": [{"type": 592,"value": 784}]},{"fn": 710,"result": {"type": 592,"value": 778},"args": [{"type": 592,"value": 784},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 710,"result": {"type": 592,"value": 801},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 624}]},{"fn": 714,"result": {"type": 592,"value": 634},"args": [{"type": 592,"value": 785}]},{"fn": 710,"result": {"type": 592,"value": 778},"args": [{"type": 592,"value": 785},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 710,"result": {"type": 592,"value": 802},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 634}]},{"fn": 714,"result": {"type": 592,"value": 636},"args": [{"type": 592,"value": 786}]},{"fn": 710,"result": {"type": 592,"value": 778},"args": [{"type": 592,"value": 786},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 710,"result": {"type": 592,"value": 803},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 636}]},{"fn": 714,"result": {"type": 592,"value": 632},"args": [{"type": 592,"value": 787}]},{"fn": 710,"result": {"type": 592,"value": 778},"args": [{"type": 592,"value": 787},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 710,"result": {"type": 592,"value": 804},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 632}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 805}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 805}]},{"fn": 710,"result": {"type": 592,"value": 806},"args": [{"type": 592,"value": 805},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 806},"args": [{"type": 592,"value": 805}]},{"fn": 710,"result": {"type": 592,"value": 807},"args": [{"type": 592,"value": 687},{"type": 675,"value": null},{"type": 592,"value": 641}]},{"fn": 714,"result": {"type": 592,"value": 700},"args": [{"type": 592,"value": 790}]},{"fn": 710,"result": {"type": 592,"value": 778},"args": [{"type": 592,"value": 790},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 710,"result": {"type": 592,"value": 808},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 700}]},{"fn": 714,"result": {"type": 592,"value": 705},"args": [{"type": 592,"value": 791}]},{"fn": 710,"result": {"type": 592,"value": 693},"args": [{"type": 592,"value": 791},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 710,"result": {"type": 592,"value": 809},"args": [{"type": 592,"value": 674},{"type": 675,"value": null},{"type": 592,"value": 705}]},{"fn": 685,"result": {"type": 592,"value": 601},"args": [{"type": 592,"value": 792}]},{"fn": 710,"result": {"type": 592,"value": 778},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 745},"args": [{"type": 592,"value": 745}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 727,"result": {"type": 735,"value": null},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 602,"value": 0},{"type": 676,"value": 115}]},{"fn": 728,"result": {"type": 735,"value": null},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 676,"value": 115}]},{"fn": 723,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 726,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 602}]},{"fn": 725,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 602}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 727,"result": {"type": 735,"value": null},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 602,"value": 0},{"type": 676,"value": 115}]},{"fn": 728,"result": {"type": 735,"value": null},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 676,"value": 115}]},{"fn": 723,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 723,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 727,"result": {"type": 735,"value": null},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 602,"value": 0},{"type": 676,"value": 115}]},{"fn": 728,"result": {"type": 735,"value": null},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 676,"value": 115}]},{"fn": 723,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 676},{"type": 648,"value": null},{"type": 648,"value": null}]},{"fn": 714,"result": {"type": 592,"value": 648},"args": [{"type": 592,"value": 793}]},{"fn": 710,"result": {"type": 592,"value": 778},"args": [{"type": 592,"value": 793},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 710,"result": {"type": 592,"value": 810},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 648}]},{"fn": 714,"result": {"type": 592,"value": 712},"args": [{"type": 592,"value": 794}]},{"fn": 710,"result": {"type": 592,"value": 778},"args": [{"type": 592,"value": 794},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 710,"result": {"type": 592,"value": 811},"args": [{"type": 592,"value": 745},{"type": 675,"value": null},{"type": 592,"value": 712}]},{"fn": 704,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 648}]},{"fn": 705,"result": {"type": 604,"value": "true"},"args": [{"type": 592,"value": 648}]},{"fn": 710,"result": {"type": 592,"value": 648},"args": [{"type": 592,"value": 648},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 711,"result": {"type": 592,"value": 648},"args": [{"type": 592,"value": 648}]},{"fn": 713,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 598}]},{"fn": 732,"result": {"type": 690,"value": null},"args": [{"type": 592,"value": 598}]},{"fn": 710,"result": {"type": 592,"value": 812},"args": [{"type": 592,"value": 687},{"type": 675,"value": null},{"type": 592,"value": 598}]},{"fn": 714,"result": {"type": 592,"value": 598},"args": [{"type": 592,"value": 805}]},{"fn": 735,"result": {"type": 813,"value": "null"},"args": [{"type": 592,"value": 805}]},{"fn": 710,"result": {"type": 592,"value": 814},"args": [{"type": 592,"value": 805},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 735,"result": {"type": 788,"value": "null"},"args": [{"type": 592,"value": 745}]},{"fn": 714,"result": {"type": 592,"value": 676},"args": [{"type": 592,"value": 648}]},{"fn": 735,"result": {"type": 788,"value": "null"},"args": [{"type": 592,"value": 648}]},{"fn": 710,"result": {"type": 592,"value": 815},"args": [{"type": 592,"value": 648},{"type": 675,"value": null},{"type": 592,"value": 676}]},{"fn": 684,"result": {"type": 592,"value": 676},"args": [{"type": 597,"value": null},{"type": 598,"value": 8}]},{"fn": 684,"result": {"type": 592,"value": 598},"args": [{"type": 597,"value": null},{"type": 598,"value": 16}]},{"fn": 684,"result": {"type": 592,"value": 641},"args": [{"type": 597,"value": null},{"type": 598,"value": 32}]},{"fn": 684,"result": {"type": 592,"value": 816},"args": [{"type": 597,"value": null},{"type": 598,"value": 128}]},{"fn": 690,"result": {"type": 603,"value": "undefined"},"args": [{"type": 592,"value": 817},{"type": 592,"value": 648},{"type": 592,"value": 648},{"type": 592,"value": 614}]},{"fn": 691,"result": {"type": 592,"value": 818},"args": [{"type": 592,"value": 648},{"type": 592,"value": 819},{"type": 592,"value": 817},{"type": 614,"value": 80}]},{"fn": 737,"result": {"type": 592,"value": 818},"args": [{"type": 592,"value": 819}]},{"fn": 693,"result": {"type": 592,"value": 821},"args": [{"type": 592,"value": 648},{"type": 592,"value": 819},{"type": 592,"value": 817},{"type": 614,"value": 80}]},{"fn": 738,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 720}]},{"fn": 739,"result": {"type": 592,"value": 824},"args": [{"type": 604,"value": "false"},{"type": 592,"value": 825}]},{"fn": 740,"result": {"type": 604,"value": "false"},"args": [{"type": 592,"value": 720}]},{"fn": 739,"result": {"type": 592,"value": 827},"args": [{"type": 604,"value": "false"},{"type": 592,"value": 828}]}],"packages": [{"name": "","file": 0,"main": 829,"table": {"std": 1,"builtin": 2,"root": 0,"root": 0}},{"name": "std","file": 1,"main": 830,"table": {"builtin": 2,"std": 1,"root": 0}},{"name": "builtin","file": 2,"main": 831,"table": {"std": 1}}],"types": [{"kind": 18,"name": "fn([]const u8, ?*std.builtin.StackTrace) noreturn","generic": false,"ret": 832,"args": [648,833]},{"kind": 18,"name": "fn(i32, i32) callconv(.C) i32","generic": false,"ret": 834,"args": [834,834]},{"kind": 18,"name": "fn([]const std.target.x86.Feature) std.target.Set","generic": false,"ret": 835,"args": [836]},{"kind": 18,"name": "fn() std.target.Set","generic": false,"ret": 835},{"kind": 18,"name": "fn(*std.target.Set, u9) void","generic": false,"ret": 603,"args": [837,599]},{"kind": 18,"name": "fn(*std.os.windows.HINSTANCE, u32, *c_void) callconv(.C) c_int","generic": false,"ret": 838,"args": [839,641,840]},{"kind": 18,"name": "fn(bool) void","generic": false,"ret": 603,"args": [604]},{"kind": 18,"name": "fn(?*const std.builtin.StackTrace, ?usize, []const u8) noreturn","generic": false,"ret": 832,"args": [841,735,648]},{"kind": 18,"name": "fn(*std.Thread.Mutex) void","generic": false,"ret": 603,"args": [842]},{"kind": 18,"name": "fn() std.fs.file.File","generic": false,"ret": 607},{"kind": 18,"name": "fn(std.fs.file.File, []const u8) std.os.WriteError!usize","generic": false,"ret": 843,"args": [607,648]},{"kind": 18,"name": "fn(std.fs.file.File) std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)","generic": false,"ret": 606,"args": [607]},{"kind": 18,"name": "fn() u64","generic": false,"ret": 614},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:297:56) std.os.WriteError!void","generic": false,"ret": 844,"args": [606,845]},{"kind": 18,"name": "fn() noreturn","generic": false,"ret": 832},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:299:40) std.os.WriteError!void","generic": false,"ret": 844,"args": [606,846]},{"kind": 18,"name": "fn(std.builtin.StackTrace) void","generic": false,"ret": 603,"args": [847]},{"kind": 18,"name": "fn(?usize) void","generic": false,"ret": 603,"args": [735]},{"kind": 18,"name": "fn(*std.Thread.StaticResetEvent) void","generic": false,"ret": 603,"args": [848]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:323:67) std.os.WriteError!void","generic": false,"ret": 844,"args": [606,849]},{"kind": 18,"name": "fn(*std.Thread.Mutex.WindowsMutex) void","generic": false,"ret": 603,"args": [850]},{"kind": 18,"name": "fn() *c_void","generic": false,"ret": 840},{"kind": 18,"name": "fn(*c_void, []const u8, ?u64, std.io.ModeOverride) std.os.windows.WriteFileError!usize","generic": false,"ret": 851,"args": [840,648,852,853]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:297:56) @typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 854,"args": [606,845]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), []const u8) std.os.WriteError!void","generic": false,"ret": 844,"args": [606,648]},{"kind": 18,"name": "fn(u64, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), usize) std.os.WriteError!void","generic": false,"ret": 844,"args": [614,855,606,602]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:299:40) @typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 856,"args": [606,846]},{"kind": 18,"name": "fn([]const u8, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), usize) std.os.WriteError!void","generic": false,"ret": 844,"args": [648,855,606,602]},{"kind": 18,"name": "fn(std.hash_map.AutoContext(usize), usize) u64","generic": false,"ret": 614,"args": [610,602]},{"kind": 18,"name": "fn(std.hash_map.AutoContext(usize), usize, usize) bool","generic": false,"ret": 604,"args": [610,602,602]},{"kind": 18,"name": "fn() @typeInfo(@typeInfo(@TypeOf(std.debug.getSelfDebugInfo)).Fn.return_type.?).ErrorUnion.error_set!*std.debug.DebugInfo","generic": false,"ret": 857},{"kind": 18,"name": "fn(*std.mem.Allocator) anyerror!std.debug.DebugInfo","generic": false,"ret": 858,"args": [859]},{"kind": 18,"name": "fn() *std.mem.Allocator","generic": false,"ret": 859},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:205:91) std.os.WriteError!void","generic": false,"ret": 844,"args": [606,860]},{"kind": 18,"name": "fn() std.debug.Config","generic": false,"ret": 861},{"kind": 18,"name": "fn(std.builtin.StackTrace, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), *std.mem.Allocator, *std.debug.DebugInfo, std.debug.Config) @typeInfo(@typeInfo(@TypeOf(std.debug.writeStackTrace)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 862,"args": [847,606,859,863,861]},{"kind": 18,"name": "fn(usize, usize) usize","generic": false,"ret": 602,"args": [602,602]},{"kind": 18,"name": "fn(*std.debug.DebugInfo, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), usize, std.debug.Config) @typeInfo(@typeInfo(@TypeOf(std.debug.printSourceAtAddress)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 864,"args": [863,606,602,861]},{"kind": 18,"name": "fn(*std.debug.DebugInfo, usize) @typeInfo(@typeInfo(@TypeOf(std.debug.DebugInfo.getModuleForAddress)).Fn.return_type.?).ErrorUnion.error_set!*std.debug.ModuleDebugInfo","generic": false,"ret": 865,"args": [863,602]},{"kind": 18,"name": "fn(std.target.Target) bool","generic": false,"ret": 604,"args": [640]},{"kind": 18,"name": "fn(std.target.Tag) bool","generic": false,"ret": 604,"args": [639]},{"kind": 18,"name": "fn(*std.debug.DebugInfo, usize) @typeInfo(@typeInfo(@TypeOf(std.debug.DebugInfo.lookupModuleWin32)).Fn.return_type.?).ErrorUnion.error_set!*std.debug.ModuleDebugInfo","generic": false,"ret": 866,"args": [863,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Allocator.Error![]*std.os.windows.HMODULE","generic": false,"ret": 867,"args": [859,602]},{"kind": 18,"name": "fn(usize) std.math.error:993:44!u32","generic": false,"ret": 868,"args": [602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []*std.os.windows.HMODULE) void","generic": false,"ret": 603,"args": [859,744]},{"kind": 18,"name": "fn(u32, u32) u32","generic": false,"ret": 641,"args": [641,641]},{"kind": 18,"name": "fn(std.hash_map.HashMap(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80), usize) ?*std.debug.ModuleDebugInfo","generic": false,"ret": 869,"args": [616,602]},{"kind": 18,"name": "fn([]u16, []const u16) void","generic": false,"ret": 603,"args": [870,805]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.mem.Allocator.Error!*std.debug.ModuleDebugInfo","generic": false,"ret": 871,"args": [859]},{"kind": 18,"name": "fn([]const u16, std.fs.file.OpenFlags) std.fs.file.OpenError!std.fs.file.File","generic": false,"ret": 872,"args": [805,873]},{"kind": 18,"name": "fn(*std.mem.Allocator, *std.debug.ModuleDebugInfo) void","generic": false,"ret": 603,"args": [859,617]},{"kind": 18,"name": "fn(*std.mem.Allocator, std.fs.file.File) @typeInfo(@typeInfo(@TypeOf(std.debug.readCoffDebugInfo)).Fn.return_type.?).ErrorUnion.error_set!std.debug.ModuleDebugInfo","generic": false,"ret": 874,"args": [859,607]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.mem.Allocator.Error!*std.coff.Coff","generic": false,"ret": 875,"args": [859]},{"kind": 18,"name": "fn(std.fs.file.File) void","generic": false,"ret": 603,"args": [607]},{"kind": 18,"name": "fn(*std.mem.Allocator, std.fs.file.File) std.coff.Coff","generic": false,"ret": 876,"args": [859,607]},{"kind": 18,"name": "fn(*std.coff.Coff) @typeInfo(@typeInfo(@TypeOf(std.coff.Coff.loadHeader)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 877,"args": [878]},{"kind": 18,"name": "fn(std.fs.file.File, []u8) std.os.ReadError!usize","generic": false,"ret": 879,"args": [607,674]},{"kind": 18,"name": "fn(std.fs.file.File) std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read)","generic": false,"ret": 643,"args": [607]},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read), []u8) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readNoEof)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 880,"args": [643,674]},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read), []u8) std.os.ReadError!usize","generic": false,"ret": 879,"args": [643,674]},{"kind": 18,"name": "fn([]const u8, []const u8) bool","generic": false,"ret": 604,"args": [648,648]},{"kind": 18,"name": "fn(std.fs.file.File, u64) std.os.SeekError!void","generic": false,"ret": 881,"args": [607,614]},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readIntLittle)).Fn.return_type.?).ErrorUnion.error_set!u32","generic": false,"ret": 882,"args": [643]},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set![4]u8","generic": false,"ret": 883,"args": [643]},{"kind": 18,"name": "fn(std.target.Arch) std.builtin.Endian","generic": false,"ret": 645,"args": [646]},{"kind": 18,"name": "fn(*const [4]u8) u32","generic": false,"ret": 641,"args": [884]},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readIntLittle)).Fn.return_type.?).ErrorUnion.error_set!u16","generic": false,"ret": 885,"args": [643]},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set![2]u8","generic": false,"ret": 886,"args": [643]},{"kind": 18,"name": "fn(*const [2]u8) u16","generic": false,"ret": 598,"args": [887]},{"kind": 18,"name": "fn(*std.coff.Coff) @typeInfo(@typeInfo(@TypeOf(std.coff.Coff.loadOptionalHeader)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 888,"args": [878]},{"kind": 18,"name": "fn(std.fs.file.File) std.fs.file.GetSeekPosError!u64","generic": false,"ret": 889,"args": [607]},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readIntLittle)).Fn.return_type.?).ErrorUnion.error_set!u64","generic": false,"ret": 890,"args": [643]},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set![8]u8","generic": false,"ret": 891,"args": [643]},{"kind": 18,"name": "fn(*const [8]u8) u64","generic": false,"ret": 614,"args": [892]},{"kind": 18,"name": "fn(*std.coff.Coff) @typeInfo(@typeInfo(@TypeOf(std.coff.Coff.loadSections)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 893,"args": [878]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.coff.Section,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.coff.Section,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 894,"args": [895,602]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(std.coff.Section,null)) []std.coff.Section","generic": false,"ret": 779,"args": [637]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.coff.Section, usize) std.mem.Allocator.Error![]std.coff.Section","generic": false,"ret": 896,"args": [859,779,602]},{"kind": 18,"name": "fn([]const u8, u8) ?usize","generic": false,"ret": 735,"args": [648,676]},{"kind": 18,"name": "fn([]const u8, u8) std.fmt.ParseIntError!u32","generic": false,"ret": 897,"args": [648,676]},{"kind": 18,"name": "fn(*std.coff.Coff, usize, []u8) @typeInfo(@typeInfo(@TypeOf(std.coff.Coff.readStringFromTable)).Fn.return_type.?).ErrorUnion.error_set![]const u8","generic": false,"ret": 898,"args": [878,602,674]},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read), []u8, u8) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readUntilDelimiterOrEof)).Fn.return_type.?).ErrorUnion.error_set!?[]u8","generic": false,"ret": 899,"args": [643,674,676]},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readByte)).Fn.return_type.?).ErrorUnion.error_set!u8","generic": false,"ret": 900,"args": [643]},{"kind": 18,"name": "fn([]u8, u8) void","generic": false,"ret": 603,"args": [674,676]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.coff.Section,null), std.coff.Section) void","generic": false,"ret": 603,"args": [895,638]},{"kind": 18,"name": "fn(*std.coff.Coff) ?*std.coff.Section","generic": false,"ret": 901,"args": [878]},{"kind": 18,"name": "fn(*std.coff.Coff, *std.mem.Allocator) @typeInfo(@typeInfo(@TypeOf(std.coff.Coff.getSectionData)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 902,"args": [878,859]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Allocator.Error![]u8","generic": false,"ret": 903,"args": [859,602]},{"kind": 18,"name": "fn(*std.coff.Coff, *std.mem.Allocator) @typeInfo(@typeInfo(@TypeOf(std.coff.Coff.getSectionData)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 904,"args": [878,859]},{"kind": 18,"name": "fn(*std.coff.Coff, *std.mem.Allocator) @typeInfo(@typeInfo(@TypeOf(std.coff.Coff.getSectionData)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 905,"args": [878,859]},{"kind": 18,"name": "fn(*std.coff.Coff, *std.mem.Allocator) @typeInfo(@typeInfo(@TypeOf(std.coff.Coff.getSectionData)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 906,"args": [878,859]},{"kind": 18,"name": "fn(*std.coff.Coff, *std.mem.Allocator) @typeInfo(@typeInfo(@TypeOf(std.coff.Coff.getSectionData)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 907,"args": [878,859]},{"kind": 18,"name": "fn(*std.dwarf.DwarfInfo, *std.mem.Allocator) @typeInfo(@typeInfo(@TypeOf(std.dwarf.openDwarfDebugInfo)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 908,"args": [909,859]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null)","generic": false,"ret": 623,"args": [859]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null)","generic": false,"ret": 631,"args": [859]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.ArrayListAligned(std.dwarf.Func,null)","generic": false,"ret": 635,"args": [859]},{"kind": 18,"name": "fn(*std.dwarf.DwarfInfo) @typeInfo(@typeInfo(@TypeOf(std.dwarf.DwarfInfo.scanAllFunctions)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 910,"args": [909]},{"kind": 18,"name": "fn([]const u8) std.io.fixed_buffer_stream.FixedBufferStream([]const u8)","generic": false,"ret": 651,"args": [648]},{"kind": 18,"name": "fn(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8), []u8) std.io.fixed_buffer_stream.ReadError!usize","generic": false,"ret": 911,"args": [653,674]},{"kind": 18,"name": "fn(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8)) std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read)","generic": false,"ret": 652,"args": [653]},{"kind": 18,"name": "fn(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8), u64) std.io.fixed_buffer_stream.SeekError!void","generic": false,"ret": 912,"args": [653,614]},{"kind": 18,"name": "fn(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8), i64) std.io.fixed_buffer_stream.SeekError!void","generic": false,"ret": 912,"args": [653,781]},{"kind": 18,"name": "fn(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8)) std.io.fixed_buffer_stream.GetSeekPosError!u64","generic": false,"ret": 913,"args": [653]},{"kind": 18,"name": "fn(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8)) std.io.seekable_stream.SeekableStream(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.SeekError,std.io.fixed_buffer_stream.GetSeekPosError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).seekTo,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).seekBy,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).getPos,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).getEndPos)","generic": false,"ret": 656,"args": [653]},{"kind": 18,"name": "fn(std.io.seekable_stream.SeekableStream(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.SeekError,std.io.fixed_buffer_stream.GetSeekPosError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).seekTo,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).seekBy,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).getPos,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).getEndPos)) std.io.fixed_buffer_stream.GetSeekPosError!u64","generic": false,"ret": 913,"args": [656]},{"kind": 18,"name": "fn(std.io.seekable_stream.SeekableStream(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.SeekError,std.io.fixed_buffer_stream.GetSeekPosError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).seekTo,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).seekBy,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).getPos,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).getEndPos), u64) std.io.fixed_buffer_stream.SeekError!void","generic": false,"ret": 912,"args": [656,614]},{"kind": 18,"name": "fn(*std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), std.builtin.Endian, *bool) @typeInfo(@typeInfo(@TypeOf(std.dwarf.readUnitLength)).Fn.return_type.?).ErrorUnion.error_set!u64","generic": false,"ret": 914,"args": [915,645,916]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), std.builtin.Endian) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readInt)).Fn.return_type.?).ErrorUnion.error_set!u32","generic": false,"ret": 917,"args": [652,645]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set![4]u8","generic": false,"ret": 918,"args": [652]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), []u8) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readNoEof)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 919,"args": [652,674]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), []u8) std.io.fixed_buffer_stream.ReadError!usize","generic": false,"ret": 911,"args": [652,674]},{"kind": 18,"name": "fn(*const [4]u8, std.builtin.Endian) u32","generic": false,"ret": 641,"args": [884,645]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), std.builtin.Endian) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readInt)).Fn.return_type.?).ErrorUnion.error_set!u64","generic": false,"ret": 920,"args": [652,645]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set![8]u8","generic": false,"ret": 921,"args": [652]},{"kind": 18,"name": "fn(*const [8]u8, std.builtin.Endian) u64","generic": false,"ret": 614,"args": [892,645]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), std.builtin.Endian) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readInt)).Fn.return_type.?).ErrorUnion.error_set!u16","generic": false,"ret": 922,"args": [652,645]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set![2]u8","generic": false,"ret": 923,"args": [652]},{"kind": 18,"name": "fn(*const [2]u8, std.builtin.Endian) u16","generic": false,"ret": 598,"args": [887,645]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readByte)).Fn.return_type.?).ErrorUnion.error_set!u8","generic": false,"ret": 924,"args": [652]},{"kind": 18,"name": "fn(*std.dwarf.DwarfInfo, u64) @typeInfo(@typeInfo(@TypeOf(std.dwarf.DwarfInfo.getAbbrevTable)).Fn.return_type.?).ErrorUnion.error_set!*const std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null)","generic": false,"ret": 925,"args": [909,614]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null), std.dwarf.AbbrevTableHeader) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null).append)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 926,"args": [927,624]},{"kind": 18,"name": "fn(*std.dwarf.DwarfInfo, u64) @typeInfo(@typeInfo(@TypeOf(std.dwarf.DwarfInfo.parseAbbrevTable)).Fn.return_type.?).ErrorUnion.error_set!std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null)","generic": false,"ret": 928,"args": [909,614]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null)","generic": false,"ret": 627,"args": [859]},{"kind": 18,"name": "fn(std.dwarf.DwarfInfo) *std.mem.Allocator","generic": false,"ret": 859,"args": [819]},{"kind": 18,"name": "fn(*std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read)) @typeInfo(@typeInfo(@TypeOf(std.leb128.readULEB128)).Fn.return_type.?).ErrorUnion.error_set!u64","generic": false,"ret": 929,"args": [915]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null)) void","generic": false,"ret": 603,"args": [627]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null), std.dwarf.AbbrevTableEntry) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null).append)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 930,"args": [931,628]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null)","generic": false,"ret": 629,"args": [859]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null)) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null).addOne)).Fn.return_type.?).ErrorUnion.error_set!*std.dwarf.AbbrevTableEntry","generic": false,"ret": 932,"args": [931]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 933,"args": [931,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 934,"args": [931,602]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null)) []std.dwarf.AbbrevTableEntry","generic": false,"ret": 782,"args": [627]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.AbbrevTableEntry, usize) std.mem.Allocator.Error![]std.dwarf.AbbrevTableEntry","generic": false,"ret": 935,"args": [859,782,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null)) *std.dwarf.AbbrevTableEntry","generic": false,"ret": 936,"args": [931]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null), std.dwarf.AbbrevAttr) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null).append)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 937,"args": [938,630]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null)) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null).addOne)).Fn.return_type.?).ErrorUnion.error_set!*std.dwarf.AbbrevAttr","generic": false,"ret": 939,"args": [938]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 940,"args": [938,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 941,"args": [938,602]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null)) []std.dwarf.AbbrevAttr","generic": false,"ret": 783,"args": [629]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.AbbrevAttr, usize) std.mem.Allocator.Error![]std.dwarf.AbbrevAttr","generic": false,"ret": 942,"args": [859,783,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null)) *std.dwarf.AbbrevAttr","generic": false,"ret": 943,"args": [938]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null)) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null).addOne)).Fn.return_type.?).ErrorUnion.error_set!*std.dwarf.AbbrevTableHeader","generic": false,"ret": 944,"args": [927]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 945,"args": [927,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 946,"args": [927,602]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null)) []std.dwarf.AbbrevTableHeader","generic": false,"ret": 784,"args": [623]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.AbbrevTableHeader, usize) std.mem.Allocator.Error![]std.dwarf.AbbrevTableHeader","generic": false,"ret": 947,"args": [859,784,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null)) *std.dwarf.AbbrevTableHeader","generic": false,"ret": 948,"args": [927]},{"kind": 18,"name": "fn(*std.dwarf.DwarfInfo, *std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), *const std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null), bool) @typeInfo(@typeInfo(@TypeOf(std.dwarf.DwarfInfo.parseDie)).Fn.return_type.?).ErrorUnion.error_set!?std.dwarf.Die","generic": false,"ret": 949,"args": [909,915,950,604]},{"kind": 18,"name": "fn(*const std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null), u64) ?*const std.dwarf.AbbrevTableEntry","generic": false,"ret": 951,"args": [950,614]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.ArrayListAligned(std.dwarf.Attr,null)","generic": false,"ret": 633,"args": [859]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.Attr,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.Attr,null).resize)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 952,"args": [953,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.Attr,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.Attr,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 954,"args": [953,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.Attr,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.Attr,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 955,"args": [953,602]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(std.dwarf.Attr,null)) []std.dwarf.Attr","generic": false,"ret": 785,"args": [633]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.Attr, usize) std.mem.Allocator.Error![]std.dwarf.Attr","generic": false,"ret": 956,"args": [859,785,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, *std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), u64, std.builtin.Endian, bool) anyerror!std.dwarf.FormValue","generic": false,"ret": 957,"args": [859,915,614,645,604]},{"kind": 18,"name": "fn(*const std.dwarf.Die, u64) ?*const std.dwarf.FormValue","generic": false,"ret": 958,"args": [959,614]},{"kind": 18,"name": "fn(*const std.dwarf.Die, *std.dwarf.DwarfInfo, u64) @typeInfo(@typeInfo(@TypeOf(std.dwarf.Die.getAttrString)).Fn.return_type.?).ErrorUnion.error_set![]const u8","generic": false,"ret": 960,"args": [959,909,614]},{"kind": 18,"name": "fn(*std.dwarf.DwarfInfo, u64) @typeInfo(@typeInfo(@TypeOf(std.dwarf.DwarfInfo.getString)).Fn.return_type.?).ErrorUnion.error_set![]const u8","generic": false,"ret": 961,"args": [909,614]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(std.dwarf.Attr,null)) void","generic": false,"ret": 603,"args": [633]},{"kind": 18,"name": "fn(*const std.dwarf.Die, u64) @typeInfo(@typeInfo(@TypeOf(std.dwarf.Die.getAttrRef)).Fn.return_type.?).ErrorUnion.error_set!u64","generic": false,"ret": 962,"args": [959,614]},{"kind": 18,"name": "fn(*const std.dwarf.Die, u64) @typeInfo(@typeInfo(@TypeOf(std.dwarf.Die.getAttrAddr)).Fn.return_type.?).ErrorUnion.error_set!u64","generic": false,"ret": 963,"args": [959,614]},{"kind": 18,"name": "fn(*const std.dwarf.Constant) @typeInfo(@typeInfo(@TypeOf(std.dwarf.Constant.asUnsignedLe)).Fn.return_type.?).ErrorUnion.error_set!u64","generic": false,"ret": 964,"args": [965]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.Func,null), std.dwarf.Func) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.Func,null).append)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 966,"args": [967,636]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.Func,null)) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.Func,null).addOne)).Fn.return_type.?).ErrorUnion.error_set!*std.dwarf.Func","generic": false,"ret": 968,"args": [967]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.Func,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.Func,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 969,"args": [967,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.Func,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.Func,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 970,"args": [967,602]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(std.dwarf.Func,null)) []std.dwarf.Func","generic": false,"ret": 786,"args": [635]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.Func, usize) std.mem.Allocator.Error![]std.dwarf.Func","generic": false,"ret": 971,"args": [859,786,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.Func,null)) *std.dwarf.Func","generic": false,"ret": 972,"args": [967]},{"kind": 18,"name": "fn(*std.dwarf.DwarfInfo) @typeInfo(@typeInfo(@TypeOf(std.dwarf.DwarfInfo.scanAllCompileUnits)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 973,"args": [909]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.mem.Allocator.Error!*std.dwarf.Die","generic": false,"ret": 974,"args": [859]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null), std.dwarf.CompileUnit) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null).append)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 975,"args": [976,632]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null)) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null).addOne)).Fn.return_type.?).ErrorUnion.error_set!*std.dwarf.CompileUnit","generic": false,"ret": 977,"args": [976]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 978,"args": [976,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 979,"args": [976,602]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null)) []std.dwarf.CompileUnit","generic": false,"ret": 787,"args": [631]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.CompileUnit, usize) std.mem.Allocator.Error![]std.dwarf.CompileUnit","generic": false,"ret": 980,"args": [859,787,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null)) *std.dwarf.CompileUnit","generic": false,"ret": 981,"args": [976]},{"kind": 18,"name": "fn(*std.coff.Coff, []u8) @typeInfo(@typeInfo(@TypeOf(std.coff.Coff.getPdbPath)).Fn.return_type.?).ErrorUnion.error_set!usize","generic": false,"ret": 982,"args": [878,674]},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readStruct)).Fn.return_type.?).ErrorUnion.error_set!std.coff.DebugDirectoryEntry","generic": false,"ret": 983,"args": [643]},{"kind": 18,"name": "fn(*[1]std.coff.DebugDirectoryEntry) []u8","generic": false,"ret": 674,"args": [665]},{"kind": 18,"name": "fn(*std.mem.Allocator, []const []const u8) @typeInfo(@typeInfo(@TypeOf(std.fs.path.resolve)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 984,"args": [859,985]},{"kind": 18,"name": "fn(*std.mem.Allocator, []const []const u8) @typeInfo(@typeInfo(@TypeOf(std.fs.path.resolveWindows)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 986,"args": [859,985]},{"kind": 18,"name": "fn(*std.mem.Allocator) @typeInfo(@typeInfo(@TypeOf(std.process.getCwdAlloc)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 987,"args": [859]},{"kind": 18,"name": "fn([]const u8) std.fs.path.WindowsPath","generic": false,"ret": 988,"args": [648]},{"kind": 18,"name": "fn(u8) u8","generic": false,"ret": 676,"args": [676]},{"kind": 18,"name": "fn(std.fs.path.Kind, []const u8, []const u8) bool","generic": false,"ret": 604,"args": [989,648,648]},{"kind": 18,"name": "fn([]u8, []const u8) void","generic": false,"ret": 603,"args": [674,648]},{"kind": 18,"name": "fn([]const u8, []const u8) std.mem.TokenIterator(u8)","generic": false,"ret": 679,"args": [648,648]},{"kind": 18,"name": "fn(*std.mem.TokenIterator(u8)) ?[]const u8","generic": false,"ret": 990,"args": [991]},{"kind": 18,"name": "fn([]u8) std.os.GetCwdError![]u8","generic": false,"ret": 992,"args": [674]},{"kind": 18,"name": "fn(*std.mem.Allocator, []const u8) @typeInfo(@typeInfo(@TypeOf(std.mem.Allocator.dupe)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 993,"args": [859,648]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8) void","generic": false,"ret": 603,"args": [859,674]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, usize) []u8","generic": false,"ret": 674,"args": [859,674,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []const u8) @typeInfo(@typeInfo(@TypeOf(std.pdb.Pdb.init)).Fn.return_type.?).ErrorUnion.error_set!std.pdb.Pdb","generic": false,"ret": 994,"args": [859,648]},{"kind": 18,"name": "fn() std.fs.Dir","generic": false,"ret": 995},{"kind": 18,"name": "fn(std.fs.Dir, []const u8, std.fs.file.OpenFlags) std.fs.file.OpenError!std.fs.file.File","generic": false,"ret": 872,"args": [995,648,873]},{"kind": 18,"name": "fn(*std.mem.Allocator, std.fs.file.File) @typeInfo(@typeInfo(@TypeOf(std.pdb.Msf.init)).Fn.return_type.?).ErrorUnion.error_set!std.pdb.Msf","generic": false,"ret": 996,"args": [859,607]},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readStruct)).Fn.return_type.?).ErrorUnion.error_set!std.pdb.SuperBlock","generic": false,"ret": 997,"args": [643]},{"kind": 18,"name": "fn(*[1]std.pdb.SuperBlock) []u8","generic": false,"ret": 674,"args": [680]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Allocator.Error![]u32","generic": false,"ret": 998,"args": [859,602]},{"kind": 18,"name": "fn(u32, std.fs.file.File, []u32) std.pdb.MsfStream","generic": false,"ret": 999,"args": [641,607,750]},{"kind": 18,"name": "fn(*std.pdb.MsfStream, []u8) @typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set!usize","generic": false,"ret": 1000,"args": [683,674]},{"kind": 18,"name": "fn(*std.pdb.MsfStream) std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read)","generic": false,"ret": 682,"args": [683]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readIntLittle)).Fn.return_type.?).ErrorUnion.error_set!u32","generic": false,"ret": 1001,"args": [682]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set![4]u8","generic": false,"ret": 1002,"args": [682]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read), []u8) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readNoEof)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1003,"args": [682,674]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read), []u8) @typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set!usize","generic": false,"ret": 1000,"args": [682,674]},{"kind": 18,"name": "fn(u64, usize) usize","generic": false,"ret": 602,"args": [614,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u32) void","generic": false,"ret": 603,"args": [859,750]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Allocator.Error![]std.pdb.MsfStream","generic": false,"ret": 1004,"args": [859,602]},{"kind": 18,"name": "fn(*std.pdb.Pdb) @typeInfo(@typeInfo(@TypeOf(std.pdb.Pdb.parseInfoStream)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1005,"args": [1006]},{"kind": 18,"name": "fn(*std.pdb.Pdb, std.pdb.StreamType) ?*std.pdb.MsfStream","generic": false,"ret": 1007,"args": [1006,1008]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set![16]u8","generic": false,"ret": 1009,"args": [682]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readStruct)).Fn.return_type.?).ErrorUnion.error_set!std.pdb.HashTableHeader","generic": false,"ret": 1010,"args": [682]},{"kind": 18,"name": "fn(*[1]std.pdb.HashTableHeader) []align(4) u8","generic": false,"ret": 687,"args": [685]},{"kind": 18,"name": "fn(u32) u32","generic": false,"ret": 641,"args": [641]},{"kind": 18,"name": "fn(*const std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read), *std.mem.Allocator) @typeInfo(@typeInfo(@TypeOf(std.pdb.readSparseBitVector)).Fn.return_type.?).ErrorUnion.error_set![]u32","generic": false,"ret": 1011,"args": [1012,859]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.ArrayListAligned(u32,null)","generic": false,"ret": 688,"args": [859]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(u32,null)) void","generic": false,"ret": 603,"args": [688]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(u32,null), u32) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u32,null).append)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1013,"args": [1014,641]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(u32,null)) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u32,null).addOne)).Fn.return_type.?).ErrorUnion.error_set!*u32","generic": false,"ret": 1015,"args": [1014]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(u32,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u32,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1016,"args": [1014,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(u32,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u32,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1017,"args": [1014,602]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(u32,null)) []u32","generic": false,"ret": 750,"args": [688]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u32, usize) std.mem.Allocator.Error![]u32","generic": false,"ret": 998,"args": [859,750,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(u32,null)) *u32","generic": false,"ret": 1018,"args": [1014]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(u32,null)) []u32","generic": false,"ret": 750,"args": [1014]},{"kind": 18,"name": "fn([*]u8) [*:0]u8","generic": false,"ret": 695,"args": [693]},{"kind": 18,"name": "fn([*:0]u8) [:0]u8","generic": false,"ret": 696,"args": [695]},{"kind": 18,"name": "fn(*std.pdb.Pdb, u32) ?*std.pdb.MsfStream","generic": false,"ret": 1007,"args": [1006,641]},{"kind": 18,"name": "fn(*std.pdb.Pdb) @typeInfo(@typeInfo(@TypeOf(std.pdb.Pdb.parseDbiStream)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1019,"args": [1006]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readStruct)).Fn.return_type.?).ErrorUnion.error_set!std.pdb.DbiStreamHeader","generic": false,"ret": 1020,"args": [682]},{"kind": 18,"name": "fn(*[1]std.pdb.DbiStreamHeader) []u8","generic": false,"ret": 674,"args": [697]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.ArrayListAligned(std.pdb.Module,null)","generic": false,"ret": 699,"args": [859]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readStruct)).Fn.return_type.?).ErrorUnion.error_set!std.pdb.ModInfo","generic": false,"ret": 1021,"args": [682]},{"kind": 18,"name": "fn(*[1]std.pdb.ModInfo) []u8","generic": false,"ret": 674,"args": [701]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(std.pdb.Module,null)) void","generic": false,"ret": 603,"args": [699]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read), *std.mem.Allocator, u8, usize) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readUntilDelimiterAlloc)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 1022,"args": [682,859,676,602]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.ArrayListAligned(u8,null)","generic": false,"ret": 703,"args": [859]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read), *std.array_list.ArrayListAligned(u8,null), u8, usize) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readUntilDelimiterArrayList)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1023,"args": [682,1024,676,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(u8,null), usize) void","generic": false,"ret": 603,"args": [1024,602]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readByte)).Fn.return_type.?).ErrorUnion.error_set!u8","generic": false,"ret": 1025,"args": [682]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(u8,null), u8) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u8,null).append)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1026,"args": [1024,676]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(u8,null)) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u8,null).addOne)).Fn.return_type.?).ErrorUnion.error_set!*u8","generic": false,"ret": 1027,"args": [1024]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(u8,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u8,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1028,"args": [1024,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(u8,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u8,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1029,"args": [1024,602]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(u8,null)) []u8","generic": false,"ret": 674,"args": [703]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, usize) std.mem.Allocator.Error![]u8","generic": false,"ret": 903,"args": [859,674,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(u8,null)) *u8","generic": false,"ret": 1030,"args": [1024]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(u8,null)) void","generic": false,"ret": 603,"args": [703]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(u8,null)) []u8","generic": false,"ret": 674,"args": [1024]},{"kind": 18,"name": "fn(*std.pdb.MsfStream, i64) @typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.seekBy)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1031,"args": [683,781]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.pdb.Module,null), std.pdb.Module) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.pdb.Module,null).append)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1032,"args": [1033,700]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.pdb.Module,null)) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.pdb.Module,null).addOne)).Fn.return_type.?).ErrorUnion.error_set!*std.pdb.Module","generic": false,"ret": 1034,"args": [1033]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.pdb.Module,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.pdb.Module,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1035,"args": [1033,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.pdb.Module,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.pdb.Module,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1036,"args": [1033,602]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(std.pdb.Module,null)) []std.pdb.Module","generic": false,"ret": 790,"args": [699]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.pdb.Module, usize) std.mem.Allocator.Error![]std.pdb.Module","generic": false,"ret": 1037,"args": [859,790,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.pdb.Module,null)) *std.pdb.Module","generic": false,"ret": 1038,"args": [1033]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null)","generic": false,"ret": 704,"args": [859]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read), std.builtin.Endian) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readEnum)).Fn.return_type.?).ErrorUnion.error_set!std.pdb.SectionContrSubstreamVersion","generic": false,"ret": 1039,"args": [682,645]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read), std.builtin.Endian) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readInt)).Fn.return_type.?).ErrorUnion.error_set!u32","generic": false,"ret": 1040,"args": [682,645]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null)) void","generic": false,"ret": 603,"args": [704]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null)) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null).addOne)).Fn.return_type.?).ErrorUnion.error_set!*std.pdb.SectionContribEntry","generic": false,"ret": 1041,"args": [1042]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1043,"args": [1042,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1044,"args": [1042,602]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null)) []std.pdb.SectionContribEntry","generic": false,"ret": 791,"args": [704]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.pdb.SectionContribEntry, usize) std.mem.Allocator.Error![]std.pdb.SectionContribEntry","generic": false,"ret": 1045,"args": [859,791,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null)) *std.pdb.SectionContribEntry","generic": false,"ret": 1046,"args": [1042]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readStruct)).Fn.return_type.?).ErrorUnion.error_set!std.pdb.SectionContribEntry","generic": false,"ret": 1047,"args": [682]},{"kind": 18,"name": "fn(*[1]std.pdb.SectionContribEntry) []u8","generic": false,"ret": 674,"args": [706]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.pdb.Module,null)) []std.pdb.Module","generic": false,"ret": 790,"args": [1033]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null)) []std.pdb.SectionContribEntry","generic": false,"ret": 791,"args": [1042]},{"kind": 18,"name": "fn(*std.hash_map.HashMap(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80), usize, *std.debug.ModuleDebugInfo) @typeInfo(@typeInfo(@TypeOf(std.hash_map.HashMap(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80).putNoClobber)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1048,"args": [1049,602,617]},{"kind": 18,"name": "fn(*std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80), *std.mem.Allocator, usize, *std.debug.ModuleDebugInfo, std.hash_map.AutoContext(usize)) @typeInfo(@typeInfo(@TypeOf(std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80).putNoClobberContext)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1050,"args": [1051,859,602,617,610]},{"kind": 18,"name": "fn(*const std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80), usize, std.hash_map.AutoContext(usize)) bool","generic": false,"ret": 604,"args": [1052,602,610]},{"kind": 18,"name": "fn(*std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80), *std.mem.Allocator, u32, std.hash_map.AutoContext(usize)) @typeInfo(@typeInfo(@TypeOf(std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80).growIfNeeded)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1053,"args": [1051,859,641,610]},{"kind": 18,"name": "fn(*std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80), *std.mem.Allocator, u32, std.hash_map.AutoContext(usize)) @typeInfo(@typeInfo(@TypeOf(std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80).grow)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1054,"args": [1051,859,641,610]},{"kind": 18,"name": "fn(*const std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80)) u32","generic": false,"ret": 641,"args": [1052]},{"kind": 18,"name": "fn(u32) bool","generic": false,"ret": 604,"args": [641]},{"kind": 18,"name": "fn(*std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80), *std.mem.Allocator, u32) @typeInfo(@typeInfo(@TypeOf(std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80).allocate)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1055,"args": [1051,859,641]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Allocator.Error![]align(8) u8","generic": false,"ret": 1056,"args": [859,602]},{"kind": 18,"name": "fn(*std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80), *std.mem.Allocator) void","generic": false,"ret": 603,"args": [1051,859]},{"kind": 18,"name": "fn(*std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80)) void","generic": false,"ret": 603,"args": [1051]},{"kind": 18,"name": "fn(*const std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80)) [*]usize","generic": false,"ret": 1057,"args": [1052]},{"kind": 18,"name": "fn(*const std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80)) [*]*std.debug.ModuleDebugInfo","generic": false,"ret": 1058,"args": [1052]},{"kind": 18,"name": "fn(std.hash_map.Metadata) bool","generic": false,"ret": 604,"args": [1059]},{"kind": 18,"name": "fn(*std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80), usize, *std.debug.ModuleDebugInfo, std.hash_map.AutoContext(usize)) void","generic": false,"ret": 603,"args": [1051,602,617,610]},{"kind": 18,"name": "fn(*std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80), *std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80)) void","generic": false,"ret": 603,"args": [1051,1051]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), ?std.debug.LineInfo, usize, []const u8, []const u8, std.debug.Config) @typeInfo(@typeInfo(@TypeOf(std.debug.printLineInfo)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1060,"args": [606,1061,602,648,648,861]},{"kind": 18,"name": "fn(*std.debug.ModuleDebugInfo, usize) @typeInfo(@typeInfo(@TypeOf(std.debug.ModuleDebugInfo.getSymbolAtAddress)).Fn.return_type.?).ErrorUnion.error_set!std.debug.SymbolInfo","generic": false,"ret": 1062,"args": [617,602]},{"kind": 18,"name": "fn(u64, *std.dwarf.DwarfInfo) @typeInfo(@typeInfo(@TypeOf(std.debug.getSymbolFromDwarf)).Fn.return_type.?).ErrorUnion.error_set!std.debug.SymbolInfo","generic": false,"ret": 1063,"args": [614,909]},{"kind": 18,"name": "fn(*std.pdb.Pdb, usize) @typeInfo(@typeInfo(@TypeOf(std.pdb.Pdb.getModule)).Fn.return_type.?).ErrorUnion.error_set!?*std.pdb.Module","generic": false,"ret": 1064,"args": [1006,602]},{"kind": 18,"name": "fn([]const u8) []const u8","generic": false,"ret": 648,"args": [648]},{"kind": 18,"name": "fn(*std.pdb.Pdb, *std.pdb.Module, u64) ?[]const u8","generic": false,"ret": 990,"args": [1006,1038,614]},{"kind": 18,"name": "fn(*std.pdb.Pdb, *std.pdb.Module, u64) @typeInfo(@typeInfo(@TypeOf(std.pdb.Pdb.getLineNumberInfo)).Fn.return_type.?).ErrorUnion.error_set!std.debug.LineInfo","generic": false,"ret": 1065,"args": [1006,1038,614]},{"kind": 18,"name": "fn(*std.pdb.MsfStream, u64) @typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.seekTo)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1066,"args": [683,614]},{"kind": 18,"name": "fn(*std.dwarf.DwarfInfo, u64) @typeInfo(@typeInfo(@TypeOf(std.dwarf.DwarfInfo.findCompileUnit)).Fn.return_type.?).ErrorUnion.error_set!*const std.dwarf.CompileUnit","generic": false,"ret": 1067,"args": [909,614]},{"kind": 18,"name": "fn(*const std.dwarf.Die, u64) @typeInfo(@typeInfo(@TypeOf(std.dwarf.Die.getAttrSecOffset)).Fn.return_type.?).ErrorUnion.error_set!u64","generic": false,"ret": 1068,"args": [959,614]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), std.builtin.Endian) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readInt)).Fn.return_type.?).ErrorUnion.error_set!usize","generic": false,"ret": 1069,"args": [652,645]},{"kind": 18,"name": "fn(*const [8]u8, std.builtin.Endian) usize","generic": false,"ret": 602,"args": [892,645]},{"kind": 18,"name": "fn(*std.dwarf.DwarfInfo, u64) ?[]const u8","generic": false,"ret": 990,"args": [909,614]},{"kind": 18,"name": "fn(*std.dwarf.DwarfInfo, std.dwarf.CompileUnit, u64) @typeInfo(@typeInfo(@TypeOf(std.dwarf.DwarfInfo.getLineNumberInfo)).Fn.return_type.?).ErrorUnion.error_set!std.debug.LineInfo","generic": false,"ret": 1070,"args": [909,632,614]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readByteSigned)).Fn.return_type.?).ErrorUnion.error_set!i8","generic": false,"ret": 1071,"args": [652]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.ArrayListAligned([]const u8,null)","generic": false,"ret": 710,"args": [859]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned([]const u8,null), []const u8) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned([]const u8,null).append)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1072,"args": [1073,648]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned([]const u8,null)) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned([]const u8,null).addOne)).Fn.return_type.?).ErrorUnion.error_set!*[]const u8","generic": false,"ret": 1074,"args": [1073]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned([]const u8,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned([]const u8,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1075,"args": [1073,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned([]const u8,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned([]const u8,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1076,"args": [1073,602]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned([]const u8,null)) [][]const u8","generic": false,"ret": 793,"args": [710]},{"kind": 18,"name": "fn(*std.mem.Allocator, [][]const u8, usize) std.mem.Allocator.Error![][]const u8","generic": false,"ret": 1077,"args": [859,793,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned([]const u8,null)) *[]const u8","generic": false,"ret": 1078,"args": [1073]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), *std.mem.Allocator, u8, usize) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readUntilDelimiterAlloc)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 1079,"args": [652,859,676,602]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), *std.array_list.ArrayListAligned(u8,null), u8, usize) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readUntilDelimiterArrayList)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1080,"args": [652,1024,676,602]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.ArrayListAligned(std.dwarf.FileEntry,null)","generic": false,"ret": 711,"args": [859]},{"kind": 18,"name": "fn(bool, []const []const u8, *std.array_list.ArrayListAligned(std.dwarf.FileEntry,null), u64) std.dwarf.LineNumberProgram","generic": false,"ret": 1081,"args": [604,985,1082,614]},{"kind": 18,"name": "fn(*std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read)) @typeInfo(@typeInfo(@TypeOf(std.leb128.readULEB128)).Fn.return_type.?).ErrorUnion.error_set!usize","generic": false,"ret": 1083,"args": [915]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.FileEntry,null), std.dwarf.FileEntry) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.FileEntry,null).append)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1084,"args": [1082,712]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.FileEntry,null)) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.FileEntry,null).addOne)).Fn.return_type.?).ErrorUnion.error_set!*std.dwarf.FileEntry","generic": false,"ret": 1085,"args": [1082]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.FileEntry,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.FileEntry,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1086,"args": [1082,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.FileEntry,null), usize) @typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.FileEntry,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1087,"args": [1082,602]},{"kind": 18,"name": "fn(std.array_list.ArrayListAligned(std.dwarf.FileEntry,null)) []std.dwarf.FileEntry","generic": false,"ret": 794,"args": [711]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.FileEntry, usize) std.mem.Allocator.Error![]std.dwarf.FileEntry","generic": false,"ret": 1088,"args": [859,794,602]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.dwarf.FileEntry,null)) *std.dwarf.FileEntry","generic": false,"ret": 1089,"args": [1082]},{"kind": 18,"name": "fn(u64) std.math.error:993:44!isize","generic": false,"ret": 1090,"args": [614]},{"kind": 18,"name": "fn(std.io.seekable_stream.SeekableStream(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.SeekError,std.io.fixed_buffer_stream.GetSeekPosError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).seekTo,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).seekBy,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).getPos,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).getEndPos), i64) std.io.fixed_buffer_stream.SeekError!void","generic": false,"ret": 912,"args": [656,781]},{"kind": 18,"name": "fn(*std.dwarf.LineNumberProgram) @typeInfo(@typeInfo(@TypeOf(std.dwarf.LineNumberProgram.checkLineMatch)).Fn.return_type.?).ErrorUnion.error_set!?std.debug.LineInfo","generic": false,"ret": 1091,"args": [1092]},{"kind": 18,"name": "fn(*std.mem.Allocator, []const []const u8) @typeInfo(@typeInfo(@TypeOf(std.fs.path.join)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 1093,"args": [859,985]},{"kind": 18,"name": "fn(*std.mem.Allocator, u8, fn(u8) bool, []const []const u8, bool) @typeInfo(@typeInfo(@TypeOf(std.fs.path.joinSepMaybeZ)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 1094,"args": [859,676,331,985,604]},{"kind": 18,"name": "fn(u8) bool","generic": false,"ret": 604,"args": [676]},{"kind": 18,"name": "fn(*std.dwarf.LineNumberProgram) void","generic": false,"ret": 603,"args": [1092]},{"kind": 18,"name": "fn(*std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read)) @typeInfo(@typeInfo(@TypeOf(std.leb128.readILEB128)).Fn.return_type.?).ErrorUnion.error_set!i64","generic": false,"ret": 1095,"args": [915]},{"kind": 18,"name": "fn(std.debug.SymbolInfo) void","generic": false,"ret": 603,"args": [1096]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:209:64) std.os.WriteError!void","generic": false,"ret": 844,"args": [606,1097]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:114:91) std.os.WriteError!void","generic": false,"ret": 844,"args": [606,1098]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), *std.debug.DebugInfo, std.debug.Config, ?usize) @typeInfo(@typeInfo(@TypeOf(std.debug.writeCurrentStackTrace)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1099,"args": [606,863,861,735]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), *std.debug.DebugInfo, std.debug.Config, ?usize) @typeInfo(@typeInfo(@TypeOf(std.debug.writeCurrentStackTraceWindows)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1100,"args": [606,863,861,735]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:118:64) std.os.WriteError!void","generic": false,"ret": 844,"args": [606,1101]},{"kind": 18,"name": "fn(*std.Thread.StaticResetEvent.AtomicEvent) void","generic": false,"ret": 603,"args": [1102]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:323:67) @typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1103,"args": [606,849]},{"kind": 18,"name": "fn() *std.os.windows.PEB","generic": false,"ret": 1104},{"kind": 18,"name": "fn(std.os.windows.win32error.Win32Error) std.os.UnexpectedError","generic": false,"ret": 1105,"args": [1106]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), []const u8) std.os.WriteError!usize","generic": false,"ret": 843,"args": [606,648]},{"kind": 18,"name": "fn(u64, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatValue)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1107,"args": [614,855,606]},{"kind": 18,"name": "fn(u64, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatIntValue)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1108,"args": [614,855,606]},{"kind": 18,"name": "fn(u64, u8, std.fmt.Case, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatInt)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1109,"args": [614,676,1110,855,606]},{"kind": 18,"name": "fn(u64) u64","generic": false,"ret": 614,"args": [614]},{"kind": 18,"name": "fn(u8, std.fmt.Case) u8","generic": false,"ret": 676,"args": [676,1110]},{"kind": 18,"name": "fn([]const u8, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatBuf)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1111,"args": [648,855,606]},{"kind": 18,"name": "fn([]const u8) @typeInfo(@typeInfo(@TypeOf(std.unicode.utf8CountCodepoints)).Fn.return_type.?).ErrorUnion.error_set!usize","generic": false,"ret": 1112,"args": [648]},{"kind": 18,"name": "fn(*const [8]u8) usize","generic": false,"ret": 602,"args": [892]},{"kind": 18,"name": "fn(u8) @typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set!u3","generic": false,"ret": 1113,"args": [676]},{"kind": 18,"name": "fn([]const u8) std.unicode.Utf8DecodeError!u21","generic": false,"ret": 758,"args": [648]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), u8, usize) std.os.WriteError!void","generic": false,"ret": 844,"args": [606,676,602]},{"kind": 18,"name": "fn([]const u8, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatText)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1114,"args": [648,855,606]},{"kind": 18,"name": "fn(u64, []const u8) u64","generic": false,"ret": 614,"args": [614,648]},{"kind": 18,"name": "fn(*const usize) *align(8) const [8]u8","generic": false,"ret": 740,"args": [739]},{"kind": 18,"name": "fn(usize, usize) bool","generic": false,"ret": 604,"args": [602,602]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.debug.DebugInfo","generic": false,"ret": 1115,"args": [859]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.heap.arena_allocator.ArenaAllocator","generic": false,"ret": 1116,"args": [859]},{"kind": 18,"name": "fn(std.target.Arch) bool","generic": false,"ret": 604,"args": [646]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, u29, u29, usize) std.heap.error:239:90![]u8","generic": false,"ret": 1117,"args": [859,602,1118,1118,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, u29, usize, u29, usize) std.mem.Allocator.Error!usize","generic": false,"ret": 1119,"args": [859,674,1118,602,1118,602]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:205:91) @typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1120,"args": [606,860]},{"kind": 18,"name": "fn([:0]const u8, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), usize) std.os.WriteError!void","generic": false,"ret": 844,"args": [756,855,606,602]},{"kind": 18,"name": "fn() bool","generic": false,"ret": 604},{"kind": 18,"name": "fn(std.fs.file.File) bool","generic": false,"ret": 604,"args": [607]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]*std.os.windows.HMODULE","generic": false,"ret": 867,"args": [859,602,1121,602]},{"kind": 18,"name": "fn([]*std.os.windows.HMODULE) []align(8) u8","generic": false,"ret": 745,"args": [744]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, u29, usize, u29, usize) usize","generic": false,"ret": 602,"args": [859,674,1118,602,1118,602]},{"kind": 18,"name": "fn(std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80), usize, std.hash_map.AutoContext(usize)) ?*std.debug.ModuleDebugInfo","generic": false,"ret": 869,"args": [620,602,610]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.debug.ModuleDebugInfo","generic": false,"ret": 1122,"args": [859,602,1121,602]},{"kind": 18,"name": "fn([]const u16) bool","generic": false,"ret": 604,"args": [805]},{"kind": 18,"name": "fn(std.fs.Dir, []const u16, std.fs.file.OpenFlags) std.fs.file.OpenError!std.fs.file.File","generic": false,"ret": 872,"args": [995,805,873]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.coff.Coff","generic": false,"ret": 1123,"args": [859,602,1121,602]},{"kind": 18,"name": "fn(*c_void) void","generic": false,"ret": 603,"args": [840]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.ArrayListAligned(std.coff.Section,null)","generic": false,"ret": 637,"args": [859]},{"kind": 18,"name": "fn(*c_void, []u8, ?u64, std.io.ModeOverride) std.os.windows.ReadFileError!usize","generic": false,"ret": 1124,"args": [840,674,852,853]},{"kind": 18,"name": "fn(*c_void, u64) std.os.SeekError!void","generic": false,"ret": 881,"args": [840,614]},{"kind": 18,"name": "fn(*c_void) std.os.SeekError!u64","generic": false,"ret": 1125,"args": [840]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.coff.Section, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.coff.Section","generic": false,"ret": 896,"args": [859,779,602,1121,602]},{"kind": 18,"name": "fn([]const u8, usize, u8) ?usize","generic": false,"ret": 735,"args": [648,602,676]},{"kind": 18,"name": "fn(*std.array_list.ArrayListAligned(std.coff.Section,null)) *std.coff.Section","generic": false,"ret": 1126,"args": [895]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]u8","generic": false,"ret": 903,"args": [859,602,1121,602]},{"kind": 18,"name": "fn(u64) std.math.error:993:44!usize","generic": false,"ret": 1127,"args": [614]},{"kind": 18,"name": "fn(i64) u64","generic": false,"ret": 614,"args": [781]},{"kind": 18,"name": "fn(i64) std.math.error:993:44!usize","generic": false,"ret": 1128,"args": [781]},{"kind": 18,"name": "fn(usize, usize) std.math.error:455:43!usize","generic": false,"ret": 1129,"args": [602,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.AbbrevTableEntry) void","generic": false,"ret": 603,"args": [859,782]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.AbbrevTableEntry, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.AbbrevTableEntry","generic": false,"ret": 935,"args": [859,782,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.AbbrevAttr, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.AbbrevAttr","generic": false,"ret": 942,"args": [859,783,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.AbbrevTableHeader, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.AbbrevTableHeader","generic": false,"ret": 947,"args": [859,784,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.Attr, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.Attr","generic": false,"ret": 956,"args": [859,785,602,1121,602]},{"kind": 18,"name": "fn(*std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), std.builtin.Endian, bool) @typeInfo(@typeInfo(@TypeOf(std.dwarf.readAddress)).Fn.return_type.?).ErrorUnion.error_set!u64","generic": false,"ret": 1130,"args": [915,645,604]},{"kind": 18,"name": "fn(*std.mem.Allocator, *std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), std.builtin.Endian, usize) @typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueBlock)).Fn.return_type.?).ErrorUnion.error_set!std.dwarf.FormValue","generic": false,"ret": 1131,"args": [859,915,645,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, *std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), usize) @typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueBlockLen)).Fn.return_type.?).ErrorUnion.error_set!std.dwarf.FormValue","generic": false,"ret": 1132,"args": [859,915,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, *std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), bool, std.builtin.Endian) @typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueConstant)).Fn.return_type.?).ErrorUnion.error_set!std.dwarf.FormValue","generic": false,"ret": 1133,"args": [859,915,604,645]},{"kind": 18,"name": "fn(*std.mem.Allocator, *std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), bool, std.builtin.Endian) @typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueConstant)).Fn.return_type.?).ErrorUnion.error_set!std.dwarf.FormValue","generic": false,"ret": 1134,"args": [859,915,604,645]},{"kind": 18,"name": "fn(*std.mem.Allocator, *std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), bool, std.builtin.Endian) @typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueConstant)).Fn.return_type.?).ErrorUnion.error_set!std.dwarf.FormValue","generic": false,"ret": 1135,"args": [859,915,604,645]},{"kind": 18,"name": "fn(*std.mem.Allocator, *std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), bool, std.builtin.Endian) @typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueConstant)).Fn.return_type.?).ErrorUnion.error_set!std.dwarf.FormValue","generic": false,"ret": 1136,"args": [859,915,604,645]},{"kind": 18,"name": "fn(*std.mem.Allocator, *std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), bool, std.builtin.Endian) @typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueConstant)).Fn.return_type.?).ErrorUnion.error_set!std.dwarf.FormValue","generic": false,"ret": 1137,"args": [859,915,604,645]},{"kind": 18,"name": "fn(*std.mem.Allocator, *std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), usize) @typeInfo(@typeInfo(@TypeOf(std.dwarf.readAllocBytes)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 1138,"args": [859,915,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, *std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), std.builtin.Endian, i32) @typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueRef)).Fn.return_type.?).ErrorUnion.error_set!std.dwarf.FormValue","generic": false,"ret": 1139,"args": [859,915,645,834]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.mem.Allocator.Error!*@Frame(std.dwarf.parseFormValue)","generic": false,"ret": 1140,"args": [859]},{"kind": 18,"name": "fn(*std.mem.Allocator, *@Frame(std.dwarf.parseFormValue)) void","generic": false,"ret": 603,"args": [859,1141]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.Attr) void","generic": false,"ret": 603,"args": [859,785]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.Func, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.Func","generic": false,"ret": 971,"args": [859,786,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.Die","generic": false,"ret": 1142,"args": [859,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.CompileUnit, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.CompileUnit","generic": false,"ret": 980,"args": [859,787,602,1121,602]},{"kind": 18,"name": "fn([]const u8) bool","generic": false,"ret": 604,"args": [648]},{"kind": 18,"name": "fn(std.mem.TokenIterator(u8), u8) bool","generic": false,"ret": 604,"args": [679,676]},{"kind": 18,"name": "fn([]u8) std.os.windows.GetCurrentDirectoryError![]u8","generic": false,"ret": 1143,"args": [674]},{"kind": 18,"name": "fn([]u8) []u8","generic": false,"ret": 674,"args": [674]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, usize, usize) []u8","generic": false,"ret": 674,"args": [859,674,602,602]},{"kind": 18,"name": "fn([]const u8) @typeInfo(@typeInfo(@TypeOf(std.os.windows.sliceToPrefixedFileW)).Fn.return_type.?).ErrorUnion.error_set!std.os.windows.PathSpace","generic": false,"ret": 1144,"args": [648]},{"kind": 18,"name": "fn([]u16, []const u8) @typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ToUtf16Le)).Fn.return_type.?).ErrorUnion.error_set!usize","generic": false,"ret": 1145,"args": [870,648]},{"kind": 18,"name": "fn(u16) u16","generic": false,"ret": 598,"args": [598]},{"kind": 18,"name": "fn([]u16) std.os.windows.RemoveDotDirsError!usize","generic": false,"ret": 1146,"args": [870]},{"kind": 18,"name": "fn([*:0]const u16, []u16) @typeInfo(@typeInfo(@TypeOf(std.os.windows.getFullPathNameW)).Fn.return_type.?).ErrorUnion.error_set!usize","generic": false,"ret": 1147,"args": [796,870]},{"kind": 18,"name": "fn([*]u16) [*:0]u16","generic": false,"ret": 748,"args": [747]},{"kind": 18,"name": "fn(std.os.windows.PathSpace) [:0]const u16","generic": false,"ret": 795,"args": [1148]},{"kind": 18,"name": "fn(*c_void) std.os.windows.GetFileSizeError!u64","generic": false,"ret": 1149,"args": [840]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]u32","generic": false,"ret": 998,"args": [859,602,1121,602]},{"kind": 18,"name": "fn([]u32) []align(4) u8","generic": false,"ret": 687,"args": [750]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.pdb.MsfStream","generic": false,"ret": 1004,"args": [859,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u32, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]u32","generic": false,"ret": 998,"args": [859,750,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u32, usize) []u32","generic": false,"ret": 750,"args": [859,750,602]},{"kind": 18,"name": "fn([*:0]u8) usize","generic": false,"ret": 602,"args": [695]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.pdb.Module) void","generic": false,"ret": 603,"args": [859,790]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]u8","generic": false,"ret": 903,"args": [859,674,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.pdb.Module, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.pdb.Module","generic": false,"ret": 1037,"args": [859,790,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.pdb.SectionContribEntry) void","generic": false,"ret": 603,"args": [859,791]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.pdb.SectionContribEntry, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.pdb.SectionContribEntry","generic": false,"ret": 1045,"args": [859,791,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.pdb.Module, usize) []std.pdb.Module","generic": false,"ret": 790,"args": [859,790,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.pdb.SectionContribEntry, usize) []std.pdb.SectionContribEntry","generic": false,"ret": 791,"args": [859,791,602]},{"kind": 18,"name": "fn(u32) std.math.error:1073:52!u32","generic": false,"ret": 1150,"args": [641]},{"kind": 18,"name": "fn(*const std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80)) *std.hash_map.Header","generic": false,"ret": 1151,"args": [1052]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]align(8) u8","generic": false,"ret": 1056,"args": [859,602,1121,602]},{"kind": 18,"name": "fn(u64) u7","generic": false,"ret": 1152,"args": [614]},{"kind": 18,"name": "fn(*std.hash_map.Metadata, u7) void","generic": false,"ret": 603,"args": [1153,1152]},{"kind": 18,"name": "fn(std.debug.Config, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.Color) void","generic": false,"ret": 603,"args": [861,606,1154]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:624:50) std.os.WriteError!void","generic": false,"ret": 844,"args": [606,1155]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:632:53) std.os.WriteError!void","generic": false,"ret": 844,"args": [606,1156]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.LineInfo) @typeInfo(@typeInfo(@TypeOf(std.debug.printLineFromFileAnyOs)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1157,"args": [606,1158]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), u8) std.os.WriteError!void","generic": false,"ret": 844,"args": [606,676]},{"kind": 18,"name": "fn(*std.mem.Allocator, [][]const u8, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![][]const u8","generic": false,"ret": 1077,"args": [859,793,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.FileEntry, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.FileEntry","generic": false,"ret": 1088,"args": [859,794,602,1121,602]},{"kind": 18,"name": "fn(std.debug.LineInfo) void","generic": false,"ret": 603,"args": [1158]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:209:64) @typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1159,"args": [606,1097]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:114:91) @typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1160,"args": [606,1098]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:118:64) @typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1161,"args": [606,1101]},{"kind": 18,"name": "fn(*std.Thread.StaticResetEvent.AtomicEvent, ?u64) std.Thread.ResetEvent.TimedWaitResult","generic": false,"ret": 1162,"args": [1102,852]},{"kind": 18,"name": "fn() *std.os.windows.TEB","generic": false,"ret": 1163},{"kind": 18,"name": "fn([]const u8) std.unicode.Utf8Decode2Error!u21","generic": false,"ret": 1164,"args": [648]},{"kind": 18,"name": "fn([]const u8) std.unicode.Utf8Decode3Error!u21","generic": false,"ret": 1165,"args": [648]},{"kind": 18,"name": "fn([]const u8) std.unicode.Utf8Decode4Error!u21","generic": false,"ret": 1166,"args": [648]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.hash_map.HashMap(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80)","generic": false,"ret": 616,"args": [859]},{"kind": 18,"name": "fn(std.heap.arena_allocator.State, *std.mem.Allocator) std.heap.arena_allocator.ArenaAllocator","generic": false,"ret": 1116,"args": [1167,859]},{"kind": 18,"name": "fn(?*c_void, usize, u32, u32) std.os.windows.VirtualAllocError!*c_void","generic": false,"ret": 1168,"args": [1169,602,641,641]},{"kind": 18,"name": "fn(usize, usize, u29) usize","generic": false,"ret": 602,"args": [602,602,1118]},{"kind": 18,"name": "fn(?*c_void, usize, u32) void","generic": false,"ret": 603,"args": [1169,602,641]},{"kind": 18,"name": "fn([]const u8, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatText)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1170,"args": [648,855,606]},{"kind": 18,"name": "fn([]const u8) usize","generic": false,"ret": 602,"args": [648]},{"kind": 18,"name": "fn([*:0]const u16) ?[:0]const u16","generic": false,"ret": 1171,"args": [796]},{"kind": 18,"name": "fn(*c_void) bool","generic": false,"ret": 604,"args": [840]},{"kind": 18,"name": "fn(usize, usize) std.math.error:449:43!usize","generic": false,"ret": 1172,"args": [602,602]},{"kind": 18,"name": "fn([]const u16, std.os.windows.OpenFileOptions) std.os.windows.OpenError!*c_void","generic": false,"ret": 1173,"args": [805,1174]},{"kind": 18,"name": "fn(*c_void, ?*c_void, ?*fn(*c_void, *std.os.windows.IO_STATUS_BLOCK, u32) callconv(.C) void, ?*c_void, *std.os.windows.IO_STATUS_BLOCK, *const i64, *const i64, ?*u32, u8, u8) @typeInfo(@typeInfo(@TypeOf(std.os.windows.LockFile)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1175,"args": [840,1169,1176,1169,1177,1178,1178,1179,676,676]},{"kind": 18,"name": "fn(std.os.windows.ntstatus.NTSTATUS) std.os.UnexpectedError","generic": false,"ret": 1105,"args": [1180]},{"kind": 18,"name": "fn(u32, usize) u32","generic": false,"ret": 641,"args": [641,602]},{"kind": 18,"name": "fn(*c_void, u64) std.os.windows.SetFilePointerError!void","generic": false,"ret": 1181,"args": [840,614]},{"kind": 18,"name": "fn(*c_void) std.os.windows.SetFilePointerError!u64","generic": false,"ret": 1182,"args": [840]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.coff.Section","generic": false,"ret": 896,"args": [859,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.coff.Section) void","generic": false,"ret": 603,"args": [859,779]},{"kind": 18,"name": "fn([]std.coff.Section) []align(4) u8","generic": false,"ret": 687,"args": [779]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, u29, usize, u29, u29, usize) std.mem.Allocator.Error![]u8","generic": false,"ret": 903,"args": [859,674,1118,602,1118,1118,602]},{"kind": 18,"name": "fn([]align(4) u8) []std.coff.Section","generic": false,"ret": 779,"args": [687]},{"kind": 18,"name": "fn(u8, u8) std.fmt.error:1761:39!u8","generic": false,"ret": 1183,"args": [676,676]},{"kind": 18,"name": "fn(u8) std.math.error:993:44!u32","generic": false,"ret": 1184,"args": [676]},{"kind": 18,"name": "fn(u32, u32) std.math.error:449:43!u32","generic": false,"ret": 1185,"args": [641,641]},{"kind": 18,"name": "fn(u32, u32) std.math.error:455:43!u32","generic": false,"ret": 1186,"args": [641,641]},{"kind": 18,"name": "fn(u32, u32) std.math.error:462:43!u32","generic": false,"ret": 1187,"args": [641,641]},{"kind": 18,"name": "fn([]std.dwarf.AbbrevTableEntry) []align(8) u8","generic": false,"ret": 745,"args": [782]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.AbbrevTableEntry","generic": false,"ret": 935,"args": [859,602,1121,602]},{"kind": 18,"name": "fn([]align(8) u8) []std.dwarf.AbbrevTableEntry","generic": false,"ret": 782,"args": [745]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.AbbrevAttr","generic": false,"ret": 942,"args": [859,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.AbbrevAttr) void","generic": false,"ret": 603,"args": [859,783]},{"kind": 18,"name": "fn([]std.dwarf.AbbrevAttr) []align(8) u8","generic": false,"ret": 745,"args": [783]},{"kind": 18,"name": "fn([]align(8) u8) []std.dwarf.AbbrevAttr","generic": false,"ret": 783,"args": [745]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.AbbrevTableHeader","generic": false,"ret": 947,"args": [859,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.AbbrevTableHeader) void","generic": false,"ret": 603,"args": [859,784]},{"kind": 18,"name": "fn([]std.dwarf.AbbrevTableHeader) []align(8) u8","generic": false,"ret": 745,"args": [784]},{"kind": 18,"name": "fn([]align(8) u8) []std.dwarf.AbbrevTableHeader","generic": false,"ret": 784,"args": [745]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.Attr","generic": false,"ret": 956,"args": [859,602,1121,602]},{"kind": 18,"name": "fn([]std.dwarf.Attr) []align(8) u8","generic": false,"ret": 745,"args": [785]},{"kind": 18,"name": "fn([]align(8) u8) []std.dwarf.Attr","generic": false,"ret": 785,"args": [745]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), std.builtin.Endian, usize) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readVarInt)).Fn.return_type.?).ErrorUnion.error_set!usize","generic": false,"ret": 1188,"args": [652,645,602]},{"kind": 18,"name": "fn([]const u8, std.builtin.Endian) usize","generic": false,"ret": 602,"args": [648,645]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read), std.builtin.Endian) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readInt)).Fn.return_type.?).ErrorUnion.error_set!u8","generic": false,"ret": 1189,"args": [652,645]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read)) @typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set![1]u8","generic": false,"ret": 1190,"args": [652]},{"kind": 18,"name": "fn(*const [1]u8, std.builtin.Endian) u8","generic": false,"ret": 676,"args": [1191,645]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]@Frame(std.dwarf.parseFormValue)","generic": false,"ret": 1192,"args": [859,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.Func","generic": false,"ret": 971,"args": [859,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.Func) void","generic": false,"ret": 603,"args": [859,786]},{"kind": 18,"name": "fn([]std.dwarf.Func) []align(8) u8","generic": false,"ret": 745,"args": [786]},{"kind": 18,"name": "fn([]align(8) u8) []std.dwarf.Func","generic": false,"ret": 786,"args": [745]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.CompileUnit","generic": false,"ret": 980,"args": [859,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.CompileUnit) void","generic": false,"ret": 603,"args": [859,787]},{"kind": 18,"name": "fn([]std.dwarf.CompileUnit) []align(8) u8","generic": false,"ret": 745,"args": [787]},{"kind": 18,"name": "fn([]align(8) u8) []std.dwarf.CompileUnit","generic": false,"ret": 787,"args": [745]},{"kind": 18,"name": "fn([]const u16) std.unicode.Utf16LeIterator","generic": false,"ret": 1193,"args": [805]},{"kind": 18,"name": "fn(*std.unicode.Utf16LeIterator) @typeInfo(@typeInfo(@TypeOf(std.unicode.Utf16LeIterator.nextCodepoint)).Fn.return_type.?).ErrorUnion.error_set!?u21","generic": false,"ret": 1194,"args": [1195]},{"kind": 18,"name": "fn(u21) @typeInfo(@typeInfo(@TypeOf(std.unicode.utf8CodepointSequenceLength)).Fn.return_type.?).ErrorUnion.error_set!u3","generic": false,"ret": 1196,"args": [1197]},{"kind": 18,"name": "fn(u21, []u8) @typeInfo(@typeInfo(@TypeOf(std.unicode.utf8Encode)).Fn.return_type.?).ErrorUnion.error_set!u3","generic": false,"ret": 1198,"args": [1197,674]},{"kind": 18,"name": "fn([]u16, u16, u16) void","generic": false,"ret": 603,"args": [870,598,598]},{"kind": 18,"name": "fn([]u16, u16) usize","generic": false,"ret": 602,"args": [870,598]},{"kind": 18,"name": "fn([]align(4) u8) []u32","generic": false,"ret": 750,"args": [687]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u32, usize, usize) []u32","generic": false,"ret": 750,"args": [859,750,602,602]},{"kind": 18,"name": "fn([*:0]const u8) usize","generic": false,"ret": 602,"args": [1199]},{"kind": 18,"name": "fn([]std.pdb.Module) []align(8) u8","generic": false,"ret": 745,"args": [790]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.pdb.Module","generic": false,"ret": 1037,"args": [859,602,1121,602]},{"kind": 18,"name": "fn([]align(8) u8) []std.pdb.Module","generic": false,"ret": 790,"args": [745]},{"kind": 18,"name": "fn([]std.pdb.SectionContribEntry) []u8","generic": false,"ret": 674,"args": [791]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.pdb.SectionContribEntry","generic": false,"ret": 1045,"args": [859,602,1121,602]},{"kind": 18,"name": "fn([]u8) []std.pdb.SectionContribEntry","generic": false,"ret": 791,"args": [674]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.pdb.Module, usize, usize) []std.pdb.Module","generic": false,"ret": 790,"args": [859,790,602,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.pdb.SectionContribEntry, usize, usize) []std.pdb.SectionContribEntry","generic": false,"ret": 791,"args": [859,791,602,602]},{"kind": 18,"name": "fn(std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80), usize, std.hash_map.AutoContext(usize)) callconv(.Inline) ?usize","generic": false,"ret": 735,"args": [620,602,610]},{"kind": 18,"name": "fn(u32) u33","generic": false,"ret": 792,"args": [641]},{"kind": 18,"name": "fn([]align(8) u8) []align(8) u8","generic": false,"ret": 745,"args": [745]},{"kind": 18,"name": "fn(*std.mem.Allocator, []align(8) u8) void","generic": false,"ret": 603,"args": [859,745]},{"kind": 18,"name": "fn(*c_void, u16) std.os.windows.SetConsoleTextAttributeError!void","generic": false,"ret": 1200,"args": [840,598]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:624:50) @typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1201,"args": [606,1155]},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), std.debug.struct:632:53) @typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1202,"args": [606,1156]},{"kind": 18,"name": "fn(usize, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write), usize) std.os.WriteError!void","generic": false,"ret": 844,"args": [602,855,606,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![][]const u8","generic": false,"ret": 1077,"args": [859,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, [][]const u8) void","generic": false,"ret": 603,"args": [859,793]},{"kind": 18,"name": "fn([][]const u8) []align(8) u8","generic": false,"ret": 745,"args": [793]},{"kind": 18,"name": "fn([]align(8) u8) [][]const u8","generic": false,"ret": 793,"args": [745]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, std.mem.Allocator.Exact, usize) std.mem.Allocator.Error![]std.dwarf.FileEntry","generic": false,"ret": 1088,"args": [859,602,1121,602]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.dwarf.FileEntry) void","generic": false,"ret": 603,"args": [859,794]},{"kind": 18,"name": "fn([]std.dwarf.FileEntry) []align(8) u8","generic": false,"ret": 745,"args": [794]},{"kind": 18,"name": "fn([]align(8) u8) []std.dwarf.FileEntry","generic": false,"ret": 794,"args": [745]},{"kind": 18,"name": "fn(*std.mem.Allocator, []const u8) void","generic": false,"ret": 603,"args": [859,648]},{"kind": 18,"name": "fn([]const u8, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatText)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1203,"args": [648,855,606]},{"kind": 18,"name": "fn(*u32, ?u64) @typeInfo(@typeInfo(@TypeOf(std.Thread.StaticResetEvent.WindowsFutex.wait)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1204,"args": [1018,852]},{"kind": 18,"name": "fn() ?*c_void","generic": false,"ret": 1169},{"kind": 18,"name": "fn(*u32, ?u64) @typeInfo(@typeInfo(@TypeOf(std.Thread.StaticResetEvent.SpinFutex.wait)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1205,"args": [1018,852]},{"kind": 18,"name": "fn() std.time.Error!std.time.Timer","generic": false,"ret": 1206},{"kind": 18,"name": "fn() std.os.SchedYieldError!void","generic": false,"ret": 1207},{"kind": 18,"name": "fn() callconv(.Inline) void","generic": false,"ret": 603},{"kind": 18,"name": "fn(std.time.Timer) u64","generic": false,"ret": 614,"args": [1208]},{"kind": 18,"name": "fn(u64) std.hash.wyhash.WyhashStateless","generic": false,"ret": 1209,"args": [614]},{"kind": 18,"name": "fn(*std.hash.wyhash.WyhashStateless, []const u8) void","generic": false,"ret": 603,"args": [1210,648]},{"kind": 18,"name": "fn(*std.hash.wyhash.WyhashStateless, []const u8) u64","generic": false,"ret": 614,"args": [1210,648]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, u29, u29, usize) @typeInfo(@typeInfo(@TypeOf(std.heap.arena_allocator.ArenaAllocator.alloc)).Fn.return_type.?).ErrorUnion.error_set![]u8","generic": false,"ret": 1211,"args": [859,602,1118,1118,602]},{"kind": 18,"name": "fn(*std.heap.arena_allocator.ArenaAllocator, usize, usize) @typeInfo(@typeInfo(@TypeOf(std.heap.arena_allocator.ArenaAllocator.createNode)).Fn.return_type.?).ErrorUnion.error_set!*std.linked_list.Node","generic": false,"ret": 1212,"args": [1213,602,602]},{"kind": 18,"name": "fn(*std.linked_list.SinglyLinkedList([]u8), *std.linked_list.Node) void","generic": false,"ret": 603,"args": [1214,1215]},{"kind": 18,"name": "fn(u64, u64) bool","generic": false,"ret": 604,"args": [614,614]},{"kind": 18,"name": "fn([*:0]const u16) [:0]const u16","generic": false,"ret": 795,"args": [796]},{"kind": 18,"name": "fn([]const u16, []const u16) bool","generic": false,"ret": 604,"args": [805,805]},{"kind": 18,"name": "fn(u16) std.math.error:993:44!u8","generic": false,"ret": 1216,"args": [598]},{"kind": 18,"name": "fn([]align(4) u8) []align(4) u16","generic": false,"ret": 797,"args": [687]},{"kind": 18,"name": "fn([]const u16, []const u16) ?usize","generic": false,"ret": 735,"args": [805,805]},{"kind": 18,"name": "fn(usize) std.math.error:993:44!u16","generic": false,"ret": 1217,"args": [602]},{"kind": 18,"name": "fn(*const [1]u8) u8","generic": false,"ret": 676,"args": [1191]},{"kind": 18,"name": "fn([]const u16) []align(2) const u8","generic": false,"ret": 806,"args": [805]},{"kind": 18,"name": "fn([]const u8, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatText)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1218,"args": [648,855,606]},{"kind": 18,"name": "fn(u64, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatValue)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1219,"args": [614,855,606]},{"kind": 18,"name": "fn(u64, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatIntValue)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1220,"args": [614,855,606]},{"kind": 18,"name": "fn(u64, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatValue)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1221,"args": [614,855,606]},{"kind": 18,"name": "fn(u64, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatIntValue)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1222,"args": [614,855,606]},{"kind": 18,"name": "fn(usize, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatValue)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1223,"args": [602,855,606]},{"kind": 18,"name": "fn(usize, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatIntValue)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1224,"args": [602,855,606]},{"kind": 18,"name": "fn(usize, u8, std.fmt.Case, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatInt)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1225,"args": [602,676,1110,855,606]},{"kind": 18,"name": "fn(usize) u64","generic": false,"ret": 614,"args": [602]},{"kind": 18,"name": "fn([]const u8, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatText)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1226,"args": [648,855,606]},{"kind": 18,"name": "fn([]const u8, std.fmt.FormatOptions, std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)) @typeInfo(@typeInfo(@TypeOf(std.fmt.formatText)).Fn.return_type.?).ErrorUnion.error_set!void","generic": false,"ret": 1227,"args": [648,855,606]},{"kind": 18,"name": "fn(std.time.Timer, u64) u64","generic": false,"ret": 614,"args": [1208,614]},{"kind": 18,"name": "fn(u64, u64, u64) u64","generic": false,"ret": 614,"args": [614,614,614]},{"kind": 18,"name": "fn([]const u8) u64","generic": false,"ret": 614,"args": [648]},{"kind": 18,"name": "fn(u64, u64) u64","generic": false,"ret": 614,"args": [614,614]},{"kind": 18,"name": "fn([*:0]const u16) usize","generic": false,"ret": 602,"args": [796]},{"kind": 18,"name": "fn([]const u16, usize, []const u16) ?usize","generic": false,"ret": 735,"args": [805,602,805]},{"kind": 18,"name": "fn(u64, u64) u128","generic": false,"ret": 816,"args": [614,614]},{"kind": 18,"name": "fn(u8, std.ascii.tIndex) bool","generic": false,"ret": 604,"args": [676,1228]},{"kind": 18,"name": "fn([]const u8, *[256]usize) void","generic": false,"ret": 603,"args": [648,1229]},{"kind": 18,"name": "fn(std.hash_map.StringContext, []const u8) u64","generic": false,"ret": 614,"args": [817,648]},{"kind": 18,"name": "fn(std.hash_map.StringContext, []const u8, []const u8) bool","generic": false,"ret": 604,"args": [817,648,648]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 0},{"kind": 8,"name": "std.target.Feature.feature_set_fns(std.target.x86.Feature)","src": 410,"pubDecls": [0,1,2,3],"privDecls": []},{"kind": 16,"name": "std.target.x86.Feature","src": 411,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141]},{"kind": 18,"name": "fn(std.builtin.Signedness,anytype) anytype","generic": true,"args": [597,null]},{"kind": 4,"u": 320},{"kind": 16,"name": "std.builtin.Signedness","src": 412,"pubDecls": [],"privDecls": [],"fields": [0,1]},{"kind": 4,"u": 16},{"kind": 4,"u": 9},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 4,"u": 6},{"kind": 4,"u": 64},{"kind": 1,"name": "void"},{"kind": 2},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 8,"name": "std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write)","src": 413,"pubDecls": [4,5,6,7,8,9,10,11,12,13,14,15],"privDecls": [16],"fields": [607]},{"kind": 8,"name": "std.fs.file.File","src": 414,"pubDecls": [17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"privDecls": [91,92,93],"fields": [840,853,853]},{"kind": 15,"name": "std.os.WriteError","errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 8,"name": "std.hash_map.AutoContext(usize)","src": 415,"pubDecls": [94,95],"privDecls": []},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 18,"name": "fn(type,anytype,anytype,anytype) anytype","generic": true,"args": [592,null,null,null]},{"kind": 4,"u": 64},{"kind": 18,"name": "fn(type,anytype,anytype,anytype) anytype","generic": true,"args": [592,null,null,null]},{"kind": 8,"name": "std.hash_map.HashMap(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80)","src": 416,"pubDecls": [96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"privDecls": [149],"fields": [620,859,610]},{"kind": 6,"elem": 1239},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 18,"name": "fn(type,anytype,anytype,anytype) anytype","generic": true,"args": [592,null,null,null]},{"kind": 8,"name": "std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80)","src": 417,"pubDecls": [150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"privDecls": [221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237],"fields": [1244,641,641]},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 8,"name": "std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null)","src": 418,"pubDecls": [238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285],"privDecls": [286,287],"fields": [784,602,859]},{"kind": 8,"name": "std.dwarf.AbbrevTableHeader","src": 419,"pubDecls": [],"privDecls": [],"fields": [614,627]},{"kind": 13,"child": 1118},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 8,"name": "std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null)","src": 418,"pubDecls": [288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"privDecls": [336,337],"fields": [782,602,859]},{"kind": 8,"name": "std.dwarf.AbbrevTableEntry","src": 420,"pubDecls": [],"privDecls": [],"fields": [604,614,614,629]},{"kind": 8,"name": "std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null)","src": 418,"pubDecls": [338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385],"privDecls": [386,387],"fields": [783,602,859]},{"kind": 8,"name": "std.dwarf.AbbrevAttr","src": 421,"pubDecls": [],"privDecls": [],"fields": [614,614]},{"kind": 8,"name": "std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null)","src": 418,"pubDecls": [388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435],"privDecls": [436,437],"fields": [787,602,859]},{"kind": 8,"name": "std.dwarf.CompileUnit","src": 422,"pubDecls": [],"privDecls": [],"fields": [598,604,1246,1247]},{"kind": 8,"name": "std.array_list.ArrayListAligned(std.dwarf.Attr,null)","src": 418,"pubDecls": [438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485],"privDecls": [486,487],"fields": [785,602,859]},{"kind": 8,"name": "std.dwarf.Attr","src": 423,"pubDecls": [],"privDecls": [],"fields": [614,1248]},{"kind": 8,"name": "std.array_list.ArrayListAligned(std.dwarf.Func,null)","src": 418,"pubDecls": [488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535],"privDecls": [536,537],"fields": [786,602,859]},{"kind": 8,"name": "std.dwarf.Func","src": 424,"pubDecls": [],"privDecls": [],"fields": [1247,990]},{"kind": 8,"name": "std.array_list.ArrayListAligned(std.coff.Section,null)","src": 418,"pubDecls": [538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585],"privDecls": [586,587],"fields": [779,602,859]},{"kind": 8,"name": "std.coff.Section","src": 425,"pubDecls": [],"privDecls": [],"fields": [1249]},{"kind": 16,"name": "std.target.Tag","src": 426,"pubDecls": [588,589,590,591],"privDecls": [],"fields": [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]},{"kind": 8,"name": "std.target.Target","src": 427,"pubDecls": [592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646],"privDecls": [],"fields": [1253,1250,1252]},{"kind": 4,"u": 32},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 8,"name": "std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read)","src": 428,"pubDecls": [647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674],"privDecls": [675],"fields": [607]},{"kind": 15,"name": "std.os.ReadError","errors": [12,13,14,15,16,17,18,19,20,21,11]},{"kind": 16,"name": "std.builtin.Endian","src": 429,"pubDecls": [],"privDecls": [],"fields": [0,1]},{"kind": 16,"name": "std.target.Arch","src": 430,"pubDecls": [676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694],"privDecls": [695],"fields": [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 6,"len": 2,"const": true,"elem": 676},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 8,"name": "std.io.fixed_buffer_stream.FixedBufferStream([]const u8)","src": 431,"pubDecls": [696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713],"privDecls": [714],"fields": [648,602]},{"kind": 8,"name": "std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read)","src": 428,"pubDecls": [715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742],"privDecls": [743],"fields": [653]},{"kind": 6,"elem": 651},{"kind": 15,"name": "std.io.fixed_buffer_stream.ReadError","errors": []},{"kind": 18,"name": "fn(type,anytype,anytype,anytype,anytype,anytype,anytype) anytype","generic": true,"args": [592,null,null,null,null,null,null]},{"kind": 8,"name": "std.io.seekable_stream.SeekableStream(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.SeekError,std.io.fixed_buffer_stream.GetSeekPosError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).seekTo,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).seekBy,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).getPos,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).getEndPos)","src": 432,"pubDecls": [744,745,746,747,748,749],"privDecls": [750],"fields": [653]},{"kind": 15,"name": "std.io.fixed_buffer_stream.SeekError","errors": []},{"kind": 15,"name": "std.io.fixed_buffer_stream.GetSeekPosError","errors": []},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 16,"name": "@typeInfo(std.builtin.TypeInfo).Union.tag_type.?","src": 433,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]},{"kind": 17,"name": "std.builtin.TypeInfo","src": 433,"pubDecls": [751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772],"privDecls": [],"fields": [603,603,603,603,1264,1265,1266,1267,1270,603,603,603,603,1271,1272,1274,1276,1278,1280,1280,1281,1282,1283,1284,603]},{"kind": 18,"name": "fn(@typeInfo(std.builtin.TypeInfo).Union.tag_type.?) anytype","generic": true,"args": [660]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 6,"elem": 672},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 18,"name": "fn(@typeInfo(std.builtin.TypeInfo).Union.tag_type.?) anytype","generic": true,"args": [660]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 7,"len": 1,"elem": 746},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 6,"len": 2,"elem": 676},{"kind": 16,"name": "std.builtin.Size","src": 434,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3]},{"kind": 4,"u": 8},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 8,"name": "std.mem.TokenIterator(u8)","src": 435,"pubDecls": [773,774,775],"privDecls": [776,777],"fields": [648,648,602]},{"kind": 6,"elem": 681},{"kind": 7,"len": 1,"elem": 749},{"kind": 8,"name": "std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read)","src": 428,"pubDecls": [778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805],"privDecls": [806],"fields": [683]},{"kind": 6,"elem": 999},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set","fn": 213,"errors": [22,23,11,12,13,14,15,16,17,18,19,20]},{"kind": 6,"elem": 686},{"kind": 7,"len": 1,"elem": 752},{"kind": 6,"len": 2,"align": 4,"elem": 676},{"kind": 8,"name": "std.array_list.ArrayListAligned(u32,null)","src": 418,"pubDecls": [807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854],"privDecls": [855,856],"fields": [750,602,859]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 10,"name": "comptime_int"},{"kind": 4,"u": 5},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 6,"len": 1,"elem": 676},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 6,"len": 1,"elem": 676},{"kind": 6,"len": 2,"elem": 676},{"kind": 6,"elem": 698},{"kind": 7,"len": 1,"elem": 753},{"kind": 8,"name": "std.array_list.ArrayListAligned(std.pdb.Module,null)","src": 418,"pubDecls": [857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904],"privDecls": [905,906],"fields": [790,602,859]},{"kind": 8,"name": "std.pdb.Module","src": 436,"pubDecls": [],"privDecls": [],"fields": [754,674,674,604,674,674,735]},{"kind": 6,"elem": 702},{"kind": 7,"len": 1,"elem": 754},{"kind": 8,"name": "std.array_list.ArrayListAligned(u8,null)","src": 418,"pubDecls": [907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954],"privDecls": [955,956],"fields": [674,602,859]},{"kind": 8,"name": "std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null)","src": 418,"pubDecls": [957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004],"privDecls": [1005,1006],"fields": [791,602,859]},{"kind": 8,"name": "std.pdb.SectionContribEntry","src": 437,"pubDecls": [],"privDecls": [],"fields": [598,1292,641,641,641,598,1292,641,641]},{"kind": 6,"elem": 707},{"kind": 7,"len": 1,"elem": 705},{"kind": 18,"name": "fn(anytype,anytype) anytype","generic": true,"args": [null,null]},{"kind": 18,"name": "fn(anytype,anytype,anytype) anytype","generic": true,"args": [null,null,null]},{"kind": 8,"name": "std.array_list.ArrayListAligned([]const u8,null)","src": 418,"pubDecls": [1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054],"privDecls": [1055,1056],"fields": [793,602,859]},{"kind": 8,"name": "std.array_list.ArrayListAligned(std.dwarf.FileEntry,null)","src": 418,"pubDecls": [1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104],"privDecls": [1105,1106],"fields": [794,602,859]},{"kind": 8,"name": "std.dwarf.FileEntry","src": 438,"pubDecls": [],"privDecls": [],"fields": [648,602,602,602]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 8,"name": "std.atomic.queue.Queue(anyframe)","src": 439,"pubDecls": [1107,1108,1109,1110,1111,1112,1113,1114,1115,1116],"privDecls": [],"fields": [1295,1295,1296]},{"kind": 22},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 8,"name": "std.linked_list.TailQueue(anyframe)","src": 440,"pubDecls": [1117,1118,1119,1120,1121,1122,1123,1124,1125],"privDecls": [1126],"fields": [1295,1295,602]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 8,"name": "std.atomic.Atomic.Atomic(std.Thread.enum:320:27)","src": 441,"pubDecls": [1127,1128,1129,1130,1131,1132,1133,1134],"privDecls": [1135,1136,1137,1138],"fields": [720]},{"kind": 16,"name": "std.Thread.enum:320:27","src": 442,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 8,"name": "std.atomic.queue.Queue(std.event.loop.Request)","src": 439,"pubDecls": [1139,1140,1141,1142,1143,1144,1145,1146,1147,1148],"privDecls": [],"fields": [1300,1300,1296]},{"kind": 8,"name": "std.event.loop.Request","src": 443,"pubDecls": [1149,1150,1151],"privDecls": [],"fields": [1303,1302]},{"kind": 8,"name": "std.linked_list.TailQueue(std.event.loop.Request)","src": 440,"pubDecls": [1152,1153,1154,1155,1156,1157,1158,1159,1160],"privDecls": [1161],"fields": [1300,1300,602]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 8,"name": "std.linked_list.SinglyLinkedList([]u8)","src": 444,"pubDecls": [1162,1163,1164,1165,1166],"privDecls": [1167],"fields": [1305]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 8,"name": "std.atomic.stack.Stack(std.event.loop.EventFd)","src": 445,"pubDecls": [1168,1169,1170,1171,1172,1173,1174],"privDecls": [1175],"fields": [1308,604]},{"kind": 8,"name": "std.event.loop.EventFd","src": 446,"pubDecls": [],"privDecls": [],"fields": [1309,602]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn([]const u8) anytype","generic": true,"args": [648]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 18,"name": "fn(type,anytype,anytype,anytype) anytype","generic": true,"args": [592,null,null,null]},{"kind": 13,"child": 602},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(anytype) anytype","generic": true,"args": [null]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 6,"const": true,"elem": 602},{"kind": 6,"align": 8,"const": true,"elem": 741},{"kind": 7,"len": 8,"elem": 676},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 6,"len": 2,"elem": 775},{"kind": 6,"len": 2,"align": 8,"elem": 676},{"kind": 8,"name": "std.coff.DebugDirectoryEntry","src": 447,"pubDecls": [],"privDecls": [],"fields": [641,641,598,598,641,641,641,641]},{"kind": 6,"len": 1,"elem": 598},{"kind": 6,"len": 1,"elem": 598},{"kind": 8,"name": "std.pdb.SuperBlock","src": 448,"pubDecls": [],"privDecls": [1176],"fields": [1312,641,641,641,641,641,641]},{"kind": 6,"len": 2,"elem": 641},{"kind": 6,"len": 1,"align": 4,"elem": 676},{"kind": 8,"name": "std.pdb.HashTableHeader","src": 449,"pubDecls": [],"privDecls": [1177],"fields": [641,641]},{"kind": 8,"name": "std.pdb.DbiStreamHeader","src": 450,"pubDecls": [],"privDecls": [],"fields": [834,641,641,598,598,598,598,598,598,641,641,641,834,834,641,834,834,598,598,641]},{"kind": 8,"name": "std.pdb.ModInfo","src": 451,"pubDecls": [],"privDecls": [],"fields": [641,705,598,598,641,641,641,598,1292,641,641,641]},{"kind": 4,"i": 64},{"kind": 6,"len": 2,"const": true,"elem": 676},{"kind": 14,"err": 1313,"payload": 1314},{"kind": 14,"err": 1315,"payload": 1197},{"kind": 14,"err": 1316,"payload": 1314},{"kind": 14,"err": 1317,"payload": 1314},{"kind": 14,"err": 1318,"payload": 1314},{"kind": 14,"err": 1319,"payload": 1314},{"kind": 14,"err": 1320,"payload": 1314},{"kind": 14,"err": 1321,"payload": 1314},{"kind": 14,"err": 1322,"payload": 1314},{"kind": 14,"err": 1323,"payload": 1314},{"kind": 14,"err": 1324,"payload": 1314},{"kind": 14,"err": 1325,"payload": 1314},{"kind": 14,"err": 1326,"payload": 1314},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 18,"name": "fn([]const u8) anytype","generic": true,"args": [648]},{"kind": 6,"const": true,"elem": 1327},{"kind": 14,"err": 1328,"payload": 1314},{"kind": 6,"const": true,"elem": 1329},{"kind": 6,"elem": 1330},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 13,"child": 775},{"kind": 6,"len": 1,"align": 8,"elem": 676},{"kind": 6,"len": 2,"elem": 638},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 4,"i": 64},{"kind": 6,"len": 2,"elem": 628},{"kind": 6,"len": 2,"elem": 630},{"kind": 6,"len": 2,"elem": 624},{"kind": 6,"len": 2,"elem": 634},{"kind": 6,"len": 2,"elem": 636},{"kind": 6,"len": 2,"elem": 632},{"kind": 13,"child": 676},{"kind": 13,"child": 641},{"kind": 6,"len": 2,"elem": 700},{"kind": 6,"len": 2,"elem": 705},{"kind": 4,"u": 33},{"kind": 6,"len": 2,"elem": 648},{"kind": 6,"len": 2,"elem": 712},{"kind": 6,"len": 2,"const": true,"elem": 598},{"kind": 6,"len": 1,"const": true,"elem": 598},{"kind": 6,"len": 2,"align": 4,"elem": 598},{"kind": 6,"len": 1,"elem": 638},{"kind": 6,"len": 1,"elem": 628},{"kind": 6,"len": 1,"elem": 630},{"kind": 6,"len": 1,"elem": 624},{"kind": 6,"len": 1,"elem": 634},{"kind": 6,"len": 1,"elem": 636},{"kind": 6,"len": 1,"elem": 632},{"kind": 6,"len": 2,"const": true,"elem": 598},{"kind": 6,"len": 2,"align": 2,"const": true,"elem": 676},{"kind": 6,"len": 1,"elem": 641},{"kind": 6,"len": 1,"elem": 700},{"kind": 6,"len": 1,"elem": 705},{"kind": 6,"len": 1,"elem": 648},{"kind": 6,"len": 1,"elem": 712},{"kind": 6,"len": 1,"align": 4,"elem": 598},{"kind": 13,"child": 598},{"kind": 6,"len": 1,"align": 2,"const": true,"elem": 676},{"kind": 6,"len": 1,"const": true,"elem": 676},{"kind": 4,"u": 128},{"kind": 8,"name": "std.hash_map.StringContext","src": 452,"pubDecls": [1178,1179],"privDecls": []},{"kind": 8,"name": "std.hash_map.HashMap([]const u8,std.dwarf.DwarfInfo,std.hash_map.StringContext,80)","src": 416,"pubDecls": [1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232],"privDecls": [1233],"fields": [821,859,817]},{"kind": 8,"name": "std.dwarf.DwarfInfo","src": 453,"pubDecls": [1234,1235,1236,1237],"privDecls": [1238,1239,1240,1241,1242,1243],"fields": [645,648,648,648,648,990,623,631,635]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 8,"name": "std.hash_map.HashMapUnmanaged([]const u8,std.dwarf.DwarfInfo,std.hash_map.StringContext,80)","src": 417,"pubDecls": [1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314],"privDecls": [1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331],"fields": [1334,641,641]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 18,"name": "fn(bool,anytype) anytype","generic": true,"args": [604,null]},{"kind": 8,"name": "std.atomic.Atomic.Atomic(std.Thread.enum:320:27).exportWhen(false,std.atomic.Atomic.struct:131:69)","src": 454,"pubDecls": [],"privDecls": []},{"kind": 8,"name": "std.atomic.Atomic.struct:131:69","src": 455,"pubDecls": [1332,1333,1334,1335,1336,1337,1338],"privDecls": [1339,1340,1341]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 8,"name": "std.atomic.Atomic.Atomic(std.Thread.enum:320:27).exportWhen(false,std.atomic.Atomic.struct:113:67)","src": 454,"pubDecls": [],"privDecls": []},{"kind": 8,"name": "std.atomic.Atomic.struct:113:67","src": 456,"pubDecls": [1342,1343,1344,1345],"privDecls": []},{"kind": 8,"name": "(root)","src": 457,"pubDecls": [1346],"privDecls": [1347,1348],"file": 0},{"kind": 8,"name": "std","src": 458,"pubDecls": [1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436],"privDecls": [],"file": 1},{"kind": 8,"name": "builtin","src": 459,"pubDecls": [1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458],"privDecls": [1459],"file": 2},{"kind": 3,"name": "noreturn"},{"kind": 13,"child": 1358},{"kind": 4,"i": 32},{"kind": 8,"name": "std.target.Set","src": 460,"pubDecls": [1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1476],"privDecls": [],"fields": [1359]},{"kind": 6,"len": 2,"const": true,"elem": 594},{"kind": 6,"elem": 835},{"kind": 4,"i": 32},{"kind": 6,"elem": 1360},{"kind": 6,"elem": 1361},{"kind": 13,"child": 1362},{"kind": 6,"elem": 1296},{"kind": 14,"err": 608,"payload": 602},{"kind": 14,"err": 608,"payload": 603},{"kind": 8,"name": "std.debug.struct:297:56","src": 461,"pubDecls": [],"privDecls": [],"fields": [614]},{"kind": 8,"name": "std.debug.struct:299:40","src": 462,"pubDecls": [],"privDecls": [],"fields": [648]},{"kind": 8,"name": "std.builtin.StackTrace","src": 463,"pubDecls": [1477],"privDecls": [],"fields": [602,1363]},{"kind": 6,"elem": 1364},{"kind": 8,"name": "std.debug.struct:323:67","src": 464,"pubDecls": [],"privDecls": []},{"kind": 6,"elem": 1365},{"kind": 14,"err": 1366,"payload": 602},{"kind": 13,"child": 614},{"kind": 16,"name": "std.io.ModeOverride","src": 465,"pubDecls": [],"privDecls": [],"fields": [0]},{"kind": 14,"err": 1367,"payload": 603},{"kind": 8,"name": "std.fmt.FormatOptions","src": 466,"pubDecls": [],"privDecls": [],"fields": [735,735,1368,676]},{"kind": 14,"err": 1369,"payload": 603},{"kind": 14,"err": 1370,"payload": 863},{"kind": 14,"err": 1371,"payload": 1115},{"kind": 6,"elem": 1372},{"kind": 8,"name": "std.debug.struct:205:91","src": 467,"pubDecls": [],"privDecls": [],"fields": [756]},{"kind": 16,"name": "std.debug.Config","src": 468,"pubDecls": [1478],"privDecls": [],"fields": [0,1,2]},{"kind": 14,"err": 1374,"payload": 603},{"kind": 6,"elem": 1115},{"kind": 14,"err": 1375,"payload": 603},{"kind": 14,"err": 1376,"payload": 617},{"kind": 14,"err": 1377,"payload": 617},{"kind": 14,"err": 1378,"payload": 744},{"kind": 14,"err": 1379,"payload": 641},{"kind": 13,"child": 617},{"kind": 6,"len": 2,"elem": 598},{"kind": 14,"err": 1378,"payload": 617},{"kind": 14,"err": 1234,"payload": 607},{"kind": 8,"name": "std.fs.file.OpenFlags","src": 469,"pubDecls": [],"privDecls": [],"fields": [604,604,1235,604,853,604]},{"kind": 14,"err": 1380,"payload": 1239},{"kind": 14,"err": 1378,"payload": 878},{"kind": 8,"name": "std.coff.Coff","src": 470,"pubDecls": [1479,1480,1481,1482,1483,1484],"privDecls": [1485,1486],"fields": [607,859,1383,1384,637,1385,641]},{"kind": 14,"err": 1386,"payload": 603},{"kind": 6,"elem": 876},{"kind": 14,"err": 644,"payload": 602},{"kind": 14,"err": 1387,"payload": 603},{"kind": 14,"err": 1236,"payload": 603},{"kind": 14,"err": 1388,"payload": 641},{"kind": 14,"err": 1389,"payload": 1390},{"kind": 6,"const": true,"elem": 1390},{"kind": 14,"err": 1391,"payload": 598},{"kind": 14,"err": 1392,"payload": 1292},{"kind": 6,"const": true,"elem": 1292},{"kind": 14,"err": 1393,"payload": 603},{"kind": 14,"err": 1237,"payload": 614},{"kind": 14,"err": 1394,"payload": 614},{"kind": 14,"err": 1395,"payload": 741},{"kind": 6,"const": true,"elem": 741},{"kind": 14,"err": 1396,"payload": 603},{"kind": 14,"err": 1397,"payload": 603},{"kind": 6,"elem": 637},{"kind": 14,"err": 1378,"payload": 779},{"kind": 14,"err": 1398,"payload": 641},{"kind": 14,"err": 1399,"payload": 648},{"kind": 14,"err": 1400,"payload": 1401},{"kind": 14,"err": 1402,"payload": 676},{"kind": 13,"child": 1126},{"kind": 14,"err": 1403,"payload": 674},{"kind": 14,"err": 1378,"payload": 674},{"kind": 14,"err": 1404,"payload": 674},{"kind": 14,"err": 1405,"payload": 674},{"kind": 14,"err": 1406,"payload": 674},{"kind": 14,"err": 1407,"payload": 674},{"kind": 14,"err": 1408,"payload": 603},{"kind": 6,"elem": 819},{"kind": 14,"err": 1409,"payload": 603},{"kind": 14,"err": 654,"payload": 602},{"kind": 14,"err": 657,"payload": 603},{"kind": 14,"err": 658,"payload": 614},{"kind": 14,"err": 1410,"payload": 614},{"kind": 6,"elem": 652},{"kind": 6,"elem": 604},{"kind": 14,"err": 1411,"payload": 641},{"kind": 14,"err": 1412,"payload": 1390},{"kind": 14,"err": 1413,"payload": 603},{"kind": 14,"err": 1414,"payload": 614},{"kind": 14,"err": 1415,"payload": 741},{"kind": 14,"err": 1416,"payload": 598},{"kind": 14,"err": 1417,"payload": 1292},{"kind": 14,"err": 1418,"payload": 676},{"kind": 14,"err": 1419,"payload": 950},{"kind": 14,"err": 1420,"payload": 603},{"kind": 6,"elem": 623},{"kind": 14,"err": 1421,"payload": 627},{"kind": 14,"err": 1422,"payload": 614},{"kind": 14,"err": 1423,"payload": 603},{"kind": 6,"elem": 627},{"kind": 14,"err": 1424,"payload": 936},{"kind": 14,"err": 1425,"payload": 603},{"kind": 14,"err": 1426,"payload": 603},{"kind": 14,"err": 1378,"payload": 782},{"kind": 6,"elem": 628},{"kind": 14,"err": 1427,"payload": 603},{"kind": 6,"elem": 629},{"kind": 14,"err": 1428,"payload": 943},{"kind": 14,"err": 1429,"payload": 603},{"kind": 14,"err": 1430,"payload": 603},{"kind": 14,"err": 1378,"payload": 783},{"kind": 6,"elem": 630},{"kind": 14,"err": 1431,"payload": 948},{"kind": 14,"err": 1432,"payload": 603},{"kind": 14,"err": 1433,"payload": 603},{"kind": 14,"err": 1378,"payload": 784},{"kind": 6,"elem": 624},{"kind": 14,"err": 1434,"payload": 1435},{"kind": 6,"const": true,"elem": 627},{"kind": 13,"child": 1436},{"kind": 14,"err": 1437,"payload": 603},{"kind": 6,"elem": 633},{"kind": 14,"err": 1438,"payload": 603},{"kind": 14,"err": 1439,"payload": 603},{"kind": 14,"err": 1378,"payload": 785},{"kind": 14,"err": 1371,"payload": 1248},{"kind": 13,"child": 1440},{"kind": 6,"const": true,"elem": 1441},{"kind": 14,"err": 1442,"payload": 648},{"kind": 14,"err": 1443,"payload": 648},{"kind": 14,"err": 1444,"payload": 614},{"kind": 14,"err": 1445,"payload": 614},{"kind": 14,"err": 1446,"payload": 614},{"kind": 6,"const": true,"elem": 1447},{"kind": 14,"err": 1448,"payload": 603},{"kind": 6,"elem": 635},{"kind": 14,"err": 1449,"payload": 972},{"kind": 14,"err": 1450,"payload": 603},{"kind": 14,"err": 1451,"payload": 603},{"kind": 14,"err": 1378,"payload": 786},{"kind": 6,"elem": 636},{"kind": 14,"err": 1452,"payload": 603},{"kind": 14,"err": 1378,"payload": 1246},{"kind": 14,"err": 1453,"payload": 603},{"kind": 6,"elem": 631},{"kind": 14,"err": 1454,"payload": 981},{"kind": 14,"err": 1455,"payload": 603},{"kind": 14,"err": 1456,"payload": 603},{"kind": 14,"err": 1378,"payload": 787},{"kind": 6,"elem": 632},{"kind": 14,"err": 1457,"payload": 602},{"kind": 14,"err": 1458,"payload": 746},{"kind": 14,"err": 1459,"payload": 674},{"kind": 6,"len": 2,"const": true,"elem": 648},{"kind": 14,"err": 1460,"payload": 674},{"kind": 14,"err": 1461,"payload": 674},{"kind": 8,"name": "std.fs.path.WindowsPath","src": 471,"pubDecls": [1487],"privDecls": [],"fields": [604,989,648]},{"kind": 16,"name": "std.fs.path.Kind","src": 472,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 13,"child": 648},{"kind": 6,"elem": 679},{"kind": 14,"err": 1463,"payload": 674},{"kind": 14,"err": 1464,"payload": 674},{"kind": 14,"err": 1465,"payload": 1466},{"kind": 8,"name": "std.fs.Dir","src": 473,"pubDecls": [1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,1551,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566],"privDecls": [1567,1568,1569],"fields": [840]},{"kind": 14,"err": 1467,"payload": 1468},{"kind": 14,"err": 1469,"payload": 749},{"kind": 14,"err": 1378,"payload": 750},{"kind": 8,"name": "std.pdb.MsfStream","src": 474,"pubDecls": [1570,1571,1572,1573],"privDecls": [1574,1575,1576,1577],"fields": [607,614,750,641]},{"kind": 14,"err": 684,"payload": 602},{"kind": 14,"err": 1470,"payload": 641},{"kind": 14,"err": 1471,"payload": 1390},{"kind": 14,"err": 1472,"payload": 603},{"kind": 14,"err": 1378,"payload": 1473},{"kind": 14,"err": 1474,"payload": 603},{"kind": 6,"elem": 1466},{"kind": 13,"child": 683},{"kind": 16,"name": "std.pdb.StreamType","src": 475,"pubDecls": [],"privDecls": [],"fields": [1,2,3,4]},{"kind": 14,"err": 1475,"payload": 1385},{"kind": 14,"err": 1476,"payload": 752},{"kind": 14,"err": 1477,"payload": 750},{"kind": 6,"const": true,"elem": 682},{"kind": 14,"err": 1478,"payload": 603},{"kind": 6,"elem": 688},{"kind": 14,"err": 1479,"payload": 1018},{"kind": 14,"err": 1480,"payload": 603},{"kind": 14,"err": 1481,"payload": 603},{"kind": 6,"elem": 641},{"kind": 14,"err": 1482,"payload": 603},{"kind": 14,"err": 1483,"payload": 753},{"kind": 14,"err": 1484,"payload": 754},{"kind": 14,"err": 1485,"payload": 674},{"kind": 14,"err": 1486,"payload": 603},{"kind": 6,"elem": 703},{"kind": 14,"err": 1487,"payload": 676},{"kind": 14,"err": 1488,"payload": 603},{"kind": 14,"err": 1489,"payload": 1030},{"kind": 14,"err": 1490,"payload": 603},{"kind": 14,"err": 1491,"payload": 603},{"kind": 6,"elem": 676},{"kind": 14,"err": 1492,"payload": 603},{"kind": 14,"err": 1493,"payload": 603},{"kind": 6,"elem": 699},{"kind": 14,"err": 1494,"payload": 1038},{"kind": 14,"err": 1495,"payload": 603},{"kind": 14,"err": 1496,"payload": 603},{"kind": 14,"err": 1378,"payload": 790},{"kind": 6,"elem": 700},{"kind": 14,"err": 1497,"payload": 1498},{"kind": 14,"err": 1499,"payload": 641},{"kind": 14,"err": 1500,"payload": 1046},{"kind": 6,"elem": 704},{"kind": 14,"err": 1501,"payload": 603},{"kind": 14,"err": 1502,"payload": 603},{"kind": 14,"err": 1378,"payload": 791},{"kind": 6,"elem": 705},{"kind": 14,"err": 1503,"payload": 705},{"kind": 14,"err": 1504,"payload": 603},{"kind": 6,"elem": 616},{"kind": 14,"err": 1505,"payload": 603},{"kind": 6,"elem": 620},{"kind": 6,"const": true,"elem": 620},{"kind": 14,"err": 1506,"payload": 603},{"kind": 14,"err": 1507,"payload": 603},{"kind": 14,"err": 1508,"payload": 603},{"kind": 14,"err": 1378,"payload": 745},{"kind": 6,"len": 1,"elem": 602},{"kind": 6,"len": 1,"elem": 617},{"kind": 8,"name": "std.hash_map.Metadata","src": 476,"pubDecls": [1578,1579,1580,1581,1582],"privDecls": [1583,1584,1585],"fields": [1152,1509]},{"kind": 14,"err": 1510,"payload": 603},{"kind": 13,"child": 1158},{"kind": 14,"err": 1511,"payload": 1096},{"kind": 14,"err": 1512,"payload": 1096},{"kind": 14,"err": 1513,"payload": 1514},{"kind": 14,"err": 1515,"payload": 1158},{"kind": 14,"err": 1516,"payload": 603},{"kind": 14,"err": 1517,"payload": 1518},{"kind": 14,"err": 1519,"payload": 614},{"kind": 14,"err": 1520,"payload": 602},{"kind": 14,"err": 1521,"payload": 1158},{"kind": 14,"err": 1522,"payload": 1523},{"kind": 14,"err": 1524,"payload": 603},{"kind": 6,"elem": 710},{"kind": 14,"err": 1525,"payload": 1078},{"kind": 14,"err": 1526,"payload": 603},{"kind": 14,"err": 1527,"payload": 603},{"kind": 14,"err": 1378,"payload": 793},{"kind": 6,"elem": 648},{"kind": 14,"err": 1528,"payload": 674},{"kind": 14,"err": 1529,"payload": 603},{"kind": 8,"name": "std.dwarf.LineNumberProgram","src": 477,"pubDecls": [1586,1587,1588],"privDecls": [],"fields": [614,602,781,614,604,604,604,604,614,985,1082,604,614,602,781,614,604,604,604]},{"kind": 6,"elem": 711},{"kind": 14,"err": 1530,"payload": 602},{"kind": 14,"err": 1531,"payload": 603},{"kind": 14,"err": 1532,"payload": 1089},{"kind": 14,"err": 1533,"payload": 603},{"kind": 14,"err": 1534,"payload": 603},{"kind": 14,"err": 1378,"payload": 794},{"kind": 6,"elem": 712},{"kind": 14,"err": 1535,"payload": 755},{"kind": 14,"err": 1536,"payload": 1061},{"kind": 6,"elem": 1081},{"kind": 14,"err": 1537,"payload": 674},{"kind": 14,"err": 1538,"payload": 674},{"kind": 14,"err": 1539,"payload": 781},{"kind": 8,"name": "std.debug.SymbolInfo","src": 478,"pubDecls": [1589],"privDecls": [],"fields": [648,648,1061]},{"kind": 8,"name": "std.debug.struct:209:64","src": 479,"pubDecls": [],"privDecls": [],"fields": [756]},{"kind": 8,"name": "std.debug.struct:114:91","src": 480,"pubDecls": [],"privDecls": [],"fields": [756]},{"kind": 14,"err": 1540,"payload": 603},{"kind": 14,"err": 1541,"payload": 603},{"kind": 8,"name": "std.debug.struct:118:64","src": 481,"pubDecls": [],"privDecls": [],"fields": [756]},{"kind": 6,"elem": 1542},{"kind": 14,"err": 1543,"payload": 603},{"kind": 6,"elem": 1544},{"kind": 15,"name": "std.os.UnexpectedError","errors": [11]},{"kind": 16,"name": "std.os.windows.win32error.Win32Error","src": 482,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,38,39,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,80,82,83,84,85,86,87,88,89,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,167,170,171,173,174,180,182,183,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,212,214,215,216,217,218,220,221,222,223,224,225,226,229,230,231,232,233,234,240,254,255,258,259,266,267,275,276,277,278,282,288,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,350,351,352,353,400,401,402,403,487,500,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,646,647,648,649,650,651,652,653,654,655,656,657,665,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,994,995,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1140,1141,1142,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1178,1179,1180,1181,1190,1191,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1500,1501,1502,1503,1550,1551,1552,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1632,1633,1634,1635,1636,1637,1638,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,1713,1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1732,1733,1734,1735,1736,1737,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1769,1770,1771,1772,1773,1774,1775,1777,1778,1779,1780,1781,1782,1783,1784,1785,1786,1787,1788,1789,1790,1791,1792,1793,1794,1795,1796,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,2000,2001,2002,2003,2004,2005,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2108,2109,2202,2250,2401,2402,2404,3000,3001,3002,3003,3004,3005,3006,3007,3008,3009,3010,3011,3012,3013,3014,3015,3016,3017,3018,3019,3020,3021,3022,3050,3950]},{"kind": 14,"err": 1545,"payload": 603},{"kind": 14,"err": 1546,"payload": 603},{"kind": 14,"err": 1547,"payload": 603},{"kind": 16,"name": "std.fmt.Case","src": 483,"pubDecls": [],"privDecls": [],"fields": [0,1]},{"kind": 14,"err": 1548,"payload": 603},{"kind": 14,"err": 1549,"payload": 602},{"kind": 14,"err": 1550,"payload": 1314},{"kind": 14,"err": 1551,"payload": 603},{"kind": 8,"name": "std.debug.DebugInfo","src": 484,"pubDecls": [1590,1591,1592],"privDecls": [1593,1594,1595,1596],"fields": [859,616]},{"kind": 8,"name": "std.heap.arena_allocator.ArenaAllocator","src": 485,"pubDecls": [1597,1598,1599],"privDecls": [1600,1601,1602,1603],"fields": [1372,859,1167]},{"kind": 14,"err": 1553,"payload": 674},{"kind": 4,"u": 29},{"kind": 14,"err": 1378,"payload": 602},{"kind": 14,"err": 1554,"payload": 603},{"kind": 16,"name": "std.mem.Allocator.Exact","src": 486,"pubDecls": [],"privDecls": [],"fields": [0,1]},{"kind": 14,"err": 1378,"payload": 1555},{"kind": 14,"err": 1378,"payload": 1556},{"kind": 14,"err": 1557,"payload": 602},{"kind": 14,"err": 1236,"payload": 614},{"kind": 6,"elem": 638},{"kind": 14,"err": 1558,"payload": 602},{"kind": 14,"err": 1559,"payload": 602},{"kind": 14,"err": 1560,"payload": 602},{"kind": 14,"err": 1561,"payload": 614},{"kind": 14,"err": 1562,"payload": 1248},{"kind": 14,"err": 1563,"payload": 1248},{"kind": 14,"err": 1564,"payload": 1248},{"kind": 14,"err": 1565,"payload": 1248},{"kind": 14,"err": 1566,"payload": 1248},{"kind": 14,"err": 1567,"payload": 1248},{"kind": 14,"err": 1568,"payload": 1248},{"kind": 14,"err": 1569,"payload": 674},{"kind": 14,"err": 1570,"payload": 1248},{"kind": 14,"err": 1378,"payload": 1141},{"kind": 6,"elem": 1571},{"kind": 14,"err": 1378,"payload": 1572},{"kind": 14,"err": 1573,"payload": 674},{"kind": 14,"err": 1574,"payload": 1148},{"kind": 14,"err": 1575,"payload": 602},{"kind": 14,"err": 1576,"payload": 602},{"kind": 14,"err": 1577,"payload": 602},{"kind": 8,"name": "std.os.windows.PathSpace","src": 487,"pubDecls": [1604],"privDecls": [],"fields": [1579,602]},{"kind": 14,"err": 1580,"payload": 614},{"kind": 14,"err": 1581,"payload": 641},{"kind": 6,"elem": 1242},{"kind": 4,"u": 7},{"kind": 6,"elem": 1059},{"kind": 16,"name": "std.debug.Color","src": 488,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5,6]},{"kind": 8,"name": "std.debug.struct:624:50","src": 489,"pubDecls": [],"privDecls": [],"fields": [648,614,614]},{"kind": 8,"name": "std.debug.struct:632:53","src": 490,"pubDecls": [],"privDecls": [],"fields": [602,648,648]},{"kind": 14,"err": 1582,"payload": 603},{"kind": 8,"name": "std.debug.LineInfo","src": 491,"pubDecls": [1605],"privDecls": [],"fields": [614,614,648,1583]},{"kind": 14,"err": 1584,"payload": 603},{"kind": 14,"err": 1585,"payload": 603},{"kind": 14,"err": 1586,"payload": 603},{"kind": 16,"name": "std.Thread.ResetEvent.TimedWaitResult","src": 492,"pubDecls": [],"privDecls": [],"fields": [0,1]},{"kind": 6,"elem": 1587},{"kind": 14,"err": 1588,"payload": 1197},{"kind": 14,"err": 1589,"payload": 1197},{"kind": 14,"err": 1590,"payload": 1197},{"kind": 8,"name": "std.heap.arena_allocator.State","src": 493,"pubDecls": [1606],"privDecls": [],"fields": [725,602]},{"kind": 14,"err": 1591,"payload": 840},{"kind": 13,"child": 840},{"kind": 14,"err": 1592,"payload": 603},{"kind": 13,"child": 795},{"kind": 14,"err": 1593,"payload": 602},{"kind": 14,"err": 1594,"payload": 840},{"kind": 8,"name": "std.os.windows.OpenFileOptions","src": 494,"pubDecls": [],"privDecls": [],"fields": [641,1169,1595,641,641,853,604,604]},{"kind": 14,"err": 1596,"payload": 603},{"kind": 13,"child": 1597},{"kind": 6,"elem": 1598},{"kind": 6,"const": true,"elem": 781},{"kind": 13,"child": 1018},{"kind": 16,"name": "std.os.windows.ntstatus.NTSTATUS","src": 495,"pubDecls": [1607,1608,1609],"privDecls": [],"fields": [0,1,2,3,63,128,191,192,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,288,289,290,291,292,293,294,295,296,297,298,299,514,871,65537,65538,1835009,3221226599,3221226624,3221227297,1073741824,1073741825,1073741826,1073741827,1073741828,1073741829,1073741830,1073741831,1073741832,1073741833,1073741834,1073741835,1073741836,1073741837,1073741838,1073741839,1073741840,1073741841,1073741842,1073741843,1073741844,1073741845,1073741846,1073741847,1073741848,1073741849,1073741850,1073741851,1073741852,1073741853,1073741854,1073741855,1073741856,1073741857,1073741858,1073741859,1073741860,1073741861,1073741862,1073741863,1073741864,1073741865,1073741866,1073741867,1073741868,1073741869,1073741870,1073741871,1073741872,1073741873,1073741874,1073741875,1073741876,1073742484,1073742704,1073807361,1073807362,1073807363,1073807364,1073807365,1073807366,1073807367,1073807368,1073807369,1073872982,1073873071,1074397188,1074397189,1075118093,1075380276,1075380277,1075445772,1075511532,1075707914,1075708183,1075708679,1075708702,1075708747,1075708748,1075708753,1075708975,1075708983,1075708985,1075708986,1076035585,2147483649,2147483650,2147483651,2147483652,2147483653,2147483654,2147483655,2147483658,2147483659,2147483660,2147483661,2147483662,2147483663,2147483664,2147483665,2147483666,2147483667,2147483668,2147483669,2147483670,2147483671,2147483672,2147483674,2147483675,2147483676,2147483677,2147483678,2147483679,2147483680,2147483681,2147483682,2147483683,2147483684,2147483685,2147483686,2147483687,2147483688,2147483689,2147483690,2147483691,2147483692,2147483693,2147484296,2147484297,2147485699,2147549185,2148728833,2148728834,2148728835,2148728836,2148728837,2149122057,2149122089,2149122097,2149122113,2149122114,2149253355,2149318657,2149646337,2149646338,3221225473,3221225474,3221225475,3221225476,3221225477,3221225478,3221225479,3221225480,3221225481,3221225482,3221225483,3221225484,3221225485,3221225486,3221225487,3221225488,3221225489,3221225490,3221225491,3221225492,3221225493,3221225494,3221225495,3221225496,3221225497,3221225498,3221225499,3221225500,3221225501,3221225502,3221225503,3221225504,3221225505,3221225506,3221225507,3221225508,3221225509,3221225510,3221225511,3221225512,3221225513,3221225514,3221225515,3221225516,3221225517,3221225518,3221225519,3221225520,3221225521,3221225522,3221225523,3221225524,3221225525,3221225527,3221225528,3221225529,3221225530,3221225531,3221225532,3221225533,3221225534,3221225535,3221225536,3221225537,3221225538,3221225539,3221225540,3221225541,3221225542,3221225543,3221225544,3221225545,3221225546,3221225547,3221225548,3221225549,3221225550,3221225551,3221225552,3221225553,3221225554,3221225555,3221225556,3221225557,3221225558,3221225559,3221225560,3221225561,3221225562,3221225563,3221225564,3221225565,3221225566,3221225567,3221225568,3221225569,3221225570,3221225571,3221225572,3221225573,3221225574,3221225575,3221225576,3221225577,3221225578,3221225579,3221225580,3221225581,3221225582,3221225583,3221225584,3221225585,3221225586,3221225587,3221225588,3221225589,3221225590,3221225591,3221225592,3221225593,3221225594,3221225595,3221225596,3221225597,3221225598,3221225599,3221225600,3221225601,3221225602,3221225603,3221225604,3221225605,3221225606,3221225607,3221225608,3221225609,3221225610,3221225611,3221225612,3221225613,3221225614,3221225615,3221225616,3221225617,3221225618,3221225619,3221225620,3221225621,3221225622,3221225623,3221225624,3221225625,3221225626,3221225627,3221225628,3221225629,3221225631,3221225632,3221225633,3221225634,3221225635,3221225636,3221225637,3221225638,3221225639,3221225640,3221225641,3221225642,3221225643,3221225644,3221225645,3221225646,3221225647,3221225648,3221225649,3221225650,3221225651,3221225652,3221225653,3221225654,3221225655,3221225656,3221225657,3221225658,3221225659,3221225660,3221225661,3221225662,3221225663,3221225664,3221225665,3221225666,3221225667,3221225668,3221225669,3221225670,3221225671,3221225672,3221225673,3221225674,3221225675,3221225676,3221225677,3221225678,3221225679,3221225680,3221225681,3221225682,3221225683,3221225684,3221225685,3221225686,3221225687,3221225688,3221225689,3221225690,3221225691,3221225692,3221225693,3221225694,3221225695,3221225696,3221225697,3221225698,3221225699,3221225700,3221225701,3221225702,3221225703,3221225704,3221225705,3221225706,3221225707,3221225708,3221225709,3221225710,3221225711,3221225712,3221225713,3221225714,3221225715,3221225716,3221225717,3221225718,3221225719,3221225720,3221225721,3221225722,3221225723,3221225724,3221225725,3221225726,3221225727,3221225728,3221225729,3221225730,3221225731,3221225732,3221225733,3221225734,3221225735,3221225736,3221225737,3221225738,3221225739,3221225740,3221225741,3221225742,3221225751,3221225752,3221225753,3221225754,3221225755,3221225756,3221225757,3221225758,3221225759,3221225760,3221225761,3221225762,3221225763,3221225764,3221225765,3221225766,3221225767,3221225768,3221225769,3221225770,3221225771,3221225772,3221225773,3221225774,3221225775,3221225776,3221225777,3221225778,3221225779,3221225780,3221225781,3221225782,3221225783,3221225784,3221225785,3221225786,3221225787,3221225788,3221225789,3221225790,3221225791,3221225792,3221225793,3221225794,3221225795,3221225796,3221225797,3221225798,3221225799,3221225800,3221225801,3221225802,3221225803,3221225804,3221225805,3221225806,3221225807,3221225808,3221225809,3221225810,3221225811,3221225812,3221225813,3221225814,3221225815,3221225816,3221225817,3221225818,3221225819,3221225820,3221225821,3221225822,3221225823,3221225824,3221225825,3221225826,3221225827,3221225828,3221225829,3221225830,3221225831,3221225832,3221225833,3221225834,3221225835,3221225836,3221225837,3221225838,3221225842,3221225843,3221225844,3221225845,3221225846,3221225847,3221225848,3221225850,3221225851,3221225852,3221225853,3221225854,3221225855,3221225856,3221225857,3221225858,3221225859,3221225860,3221225861,3221225862,3221225863,3221225864,3221225865,3221225866,3221225867,3221225868,3221225869,3221225870,3221225871,3221225872,3221225873,3221225874,3221225875,3221225876,3221225877,3221225878,3221225879,3221225880,3221225881,3221225882,3221225883,3221225884,3221225885,3221225886,3221225887,3221225888,3221225889,3221225890,3221225891,3221225892,3221225985,3221225986,3221225987,3221225988,3221225989,3221225990,3221225991,3221225992,3221225993,3221225994,3221225995,3221225996,3221225997,3221225998,3221225999,3221226000,3221226001,3221226002,3221226003,3221226004,3221226005,3221226006,3221226007,3221226008,3221226009,3221226010,3221226011,3221226012,3221226013,3221226014,3221226015,3221226016,3221226017,3221226018,3221226019,3221226020,3221226021,3221226022,3221226023,3221226024,3221226025,3221226026,3221226027,3221226028,3221226029,3221226030,3221226031,3221226032,3221226033,3221226034,3221226035,3221226036,3221226037,3221226038,3221226039,3221226040,3221226041,3221226042,3221226043,3221226044,3221226045,3221226046,3221226047,3221226048,3221226049,3221226050,3221226051,3221226052,3221226053,3221226054,3221226055,3221226056,3221226057,3221226064,3221226065,3221226066,3221226067,3221226068,3221226069,3221226070,3221226071,3221226072,3221226073,3221226074,3221226075,3221226076,3221226078,3221226079,3221226080,3221226081,3221226082,3221226083,3221226084,3221226085,3221226086,3221226087,3221226088,3221226089,3221226090,3221226091,3221226092,3221226093,3221226094,3221226095,3221226096,3221226097,3221226098,3221226099,3221226101,3221226102,3221226103,3221226104,3221226105,3221226112,3221226113,3221226114,3221226115,3221226116,3221226117,3221226118,3221226119,3221226122,3221226123,3221226124,3221226125,3221226126,3221226127,3221226128,3221226129,3221226130,3221226131,3221226133,3221226134,3221226135,3221226136,3221226137,3221226138,3221226139,3221226140,3221226141,3221226142,3221226143,3221226144,3221226145,3221226146,3221226147,3221226148,3221226149,3221226150,3221226151,3221226152,3221226153,3221226154,3221226155,3221226156,3221226157,3221226158,3221226159,3221226160,3221226161,3221226162,3221226163,3221226164,3221226165,3221226166,3221226167,3221226168,3221226169,3221226177,3221226178,3221226179,3221226180,3221226181,3221226182,3221226183,3221226184,3221226185,3221226186,3221226187,3221226188,3221226189,3221226190,3221226191,3221226192,3221226193,3221226194,3221226195,3221226196,3221226197,3221226198,3221226199,3221226200,3221226201,3221226202,3221226203,3221226204,3221226205,3221226206,3221226207,3221226208,3221226209,3221226210,3221226211,3221226212,3221226213,3221226214,3221226215,3221226217,3221226218,3221226219,3221226220,3221226221,3221226222,3221226223,3221226224,3221226225,3221226226,3221226227,3221226228,3221226229,3221226230,3221226231,3221226232,3221226233,3221226234,3221226235,3221226236,3221226237,3221226238,3221226239,3221226240,3221226241,3221226242,3221226243,3221226244,3221226245,3221226246,3221226247,3221226248,3221226249,3221226250,3221226251,3221226272,3221226273,3221226274,3221226320,3221226321,3221226322,3221226323,3221226324,3221226325,3221226326,3221226327,3221226328,3221226329,3221226330,3221226331,3221226332,3221226333,3221226334,3221226335,3221226337,3221226338,3221226339,3221226340,3221226341,3221226342,3221226344,3221226345,3221226346,3221226347,3221226348,3221226349,3221226350,3221226351,3221226353,3221226354,3221226355,3221226356,3221226368,3221226369,3221226370,3221226371,3221226372,3221226373,3221226374,3221226375,3221226376,3221226377,3221226378,3221226379,3221226380,3221226381,3221226382,3221226383,3221226497,3221226498,3221226499,3221226500,3221226501,3221226502,3221226503,3221226504,3221226505,3221226506,3221226507,3221226508,3221226509,3221226510,3221226511,3221226512,3221226513,3221226514,3221226515,3221226516,3221226517,3221226518,3221226519,3221226520,3221226521,3221226522,3221226523,3221226524,3221226528,3221226529,3221226531,3221226532,3221226533,3221226534,3221226535,3221226536,3221226537,3221226538,3221226539,3221226540,3221226541,3221226542,3221226546,3221226547,3221226548,3221226549,3221226560,3221226561,3221226562,3221226563,3221226564,3221226565,3221226566,3221226576,3221226577,3221226578,3221226579,3221226580,3221226592,3221226595,3221226596,3221226597,3221226598,3221226752,3221226753,3221226754,3221226755,3221227010,3221227011,3221227264,3221227265,3221227266,3221227267,3221227268,3221227269,3221227270,3221227271,3221227272,3221227273,3221227274,3221227275,3221227276,3221227277,3221227278,3221227279,3221227280,3221227281,3221227282,3221227283,3221227284,3221227285,3221227286,3221227287,3221227288,3221227289,3221227290,3221227291,3221227292,3221227293,3221227294,3221227295,3221227296,3221227520,3221227521,3221227522,3221227524,3221227525,3221227526,3221227777,3221227778,3221227779,3221227780,3221227781,3221227782,3221227783,3221227784,3221227785,3221264536,3221266432,3221266433,3221266448,3221266449,3221266450,3221266451,3221266560,3221266561,3221266562,3221266563,3221266564,3221266565,3221266566,3221266567,3221266568,3221266688,3221266689,3221267105,3221267106,3221267107,3221267108,3221291009,3221291010,3221356545,3221356546,3221356547,3221356548,3221356549,3221356550,3221356551,3221356552,3221356553,3221356554,3221356555,3221356556,3221356557,3221356558,3221356559,3221356560,3221356561,3221356562,3221356563,3221356564,3221356565,3221356566,3221356567,3221356568,3221356569,3221356570,3221356571,3221356572,3221356573,3221356575,3221356577,3221356578,3221356579,3221356580,3221356581,3221356582,3221356584,3221356585,3221356586,3221356587,3221356588,3221356589,3221356590,3221356591,3221356592,3221356593,3221356594,3221356595,3221356596,3221356597,3221356598,3221356599,3221356600,3221356601,3221356602,3221356603,3221356604,3221356605,3221356606,3221356607,3221356608,3221356609,3221356610,3221356611,3221356612,3221356613,3221356614,3221356615,3221356616,3221356617,3221356618,3221356619,3221356620,3221356621,3221356623,3221356624,3221356625,3221356626,3221356627,3221356628,3221356629,3221356631,3221356632,3221356642,3221356643,3221356644,3221422081,3221422082,3221422083,3221422084,3221422085,3221422086,3221422087,3221422088,3221422089,3221422090,3221422091,3221422092,3221422169,3221422170,3221422171,3221422172,3221422173,3221422174,3221422175,3221422176,3221422177,3221487669,3221487670,3221487671,3221487672,3221487673,3221880833,3221880834,3221880835,3221880838,3221880839,3221880840,3221880841,3221880842,3221880843,3221880844,3221880845,3221880846,3221880847,3221880848,3221880850,3221880851,3221880852,3221880853,3221880854,3221880855,3221880856,3221880866,3221880868,3221880870,3221880871,3221880872,3221880874,3221880875,3221880878,3221880879,3221880880,3221880881,3221880882,3221880883,3221880884,3221880885,3221880886,3221880887,3221880888,3221880889,3221946369,3221946370,3221946371,3221946372,3221946373,3221946374,3221946375,3222470657,3222470658,3222470659,3222470660,3222470661,3222470662,3222470663,3222470664,3222470665,3222470666,3222470667,3222470668,3222470669,3222470670,3222470671,3222470672,3222470673,3222470674,3222470675,3222470676,3222470677,3222470678,3222470679,3222536193,3222536194,3222536195,3222536196,3222536197,3222536198,3222536199,3222536200,3222536201,3222536202,3222536203,3222536204,3222536205,3222536206,3222536207,3222536208,3222536209,3222536210,3222536211,3222536212,3222536213,3222536214,3222536215,3222536216,3222536217,3222536224,3222536225,3222601729,3222601730,3222601731,3222601732,3222601733,3222601734,3222601735,3222601736,3222601737,3222601738,3222601739,3222601740,3222601742,3222601743,3222601744,3222601745,3222601746,3222601747,3222601748,3222601749,3222601750,3222601751,3222601752,3222601753,3222601754,3222601755,3222601756,3222601757,3222601758,3222601759,3222601760,3222601761,3222601762,3222601763,3222601764,3222601765,3222601766,3222601767,3222863873,3222863874,3222863875,3222863876,3222863877,3222863878,3222863879,3222863880,3222863882,3222863883,3222863884,3222863887,3222863888,3222863889,3222863890,3222863891,3222863892,3222863893,3222863894,3222863895,3222863896,3222863897,3222863905,3222863906,3222863907,3222863908,3222863909,3222863910,3222863912,3222863920,3222863922,3222863923,3222863926,3222863927,3222863928,3222863929,3222863930,3222863931,3222863932,3222863933,3222863934,3222863935,3222863936,3222863939,3222863940,3222863941,3222863942,3222863943,3222863944,3222863945,3222863946,3222863947,3222863948,3222863949,3222863950,3222863951,3222863952,3222863953,3222863954,3222863955,3222863956,3222863957,3222863958,3222863959,3222863960,3222863961,3222863962,3222863963,3222863968,3222863969,3222929409,3222929410,3222929411,3222929412,3222929413,3222929414,3222929415,3222929416,3222929417,3222929418,3222929419,3222929421,3222929422,3222929423,3222929424,3222929425,3222929426,3222929427,3222929428,3222929429,3222929430,3222929431,3222929432,3222929433,3222929434,3222929435,3222929436,3222929437,3222929438,3222929439,3222929440,3222929441,3222929442,3222929443,3222929444,3222929445,3222929446,3222929447,3222929448,3222929449,3222929450,3222929451,3222929452,3222929453,3222929454,3222929455,3222929456,3222995178,3223060481,3223060482,3223060483,3223060484,3223060485,3223060486,3223060487,3223060488,3223060489,3223060490,3223060491,3223060492,3223060493,3223060494,3223060495,3223060496,3223060497,3223060498,3223060499,3223060500,3223060501,3223060502,3223060503,3223060504,3223060505,3223060506,3223060507,3223060508,3223060512,3223126017,3223126018,3223126019,3223126020,3223126021,3223126022,3223126023,3223126024,3223126025,3223126026,3223191552,3223191553,3223191554,3223191555,3223191556,3223191557,3223191558,3223191559,3223191560,3223191563,3223191564,3223191808,3223191809,3223191810,3223191811,3223191812,3223191813,3223191814,3223191815,3223191816,3223191817,3223191824,3223191825,3223191826,3223191827,3223191828,3223191829,3223191830,3223192064,3223192320,3223192321,3223192322,3223192323,3223192324,3223192325,3223192326,3223192328,3223192329,3223192330,3223192331,3223192332,3223192336,3223192337,3223192338,3223192339,3223192340,3223192341,3223192342,3223192343,3223192344,3223192345,3223192346,3223192347,3223192348,3223192349,3223192351,3223192352,3223192353,3223192354,3223192355,3223192356,3223192357,3223192358,3223192359,3223192360,3223192361,3223192362,3223192363,3223192364,3223192365,3223192366,3223192367,3223192368,3223192369,3223192370,3223192371,3223192372,3223192373,3223192374,3223192375,3223192376,3223192377,3223192378,3223192379,3223192380,3223192381,3223192382,3223192383,3223192384,3223192385,3223192386,3223192387,3223192388,3223192389,3223192390,3223192391,3223192392,3223192393,3223192394,3223192397,3223192398,3223192399,3223192400,3223192402,3223192403,3223192404,3223192405,3223192406,3223192407,3223192408,3223192409,3223192410,3223192411,3223192412,3223192576,3223192577,3223192624,3223192625,3223192626,3223192627,3223192628,3223192629,3223192630,3223192632,3223192635,3223192832,3223192833,3223192834,3223192835,3223192836,3223192837,3223192838,3223192839,3223192840,3223192842,3223192843,3223192844,3223192845,3223192846,3223192847,3223192848,3223192849,3223192850,3223192851,3223192852,3223192853,3223192854,3223192855,3223192856,3223192858,3223192859,3223192860,3223192861,3223192862,3223192863,3223192864,3223192865,3223192960,3223192961,3223192962,3223192963,3223192964,3223192965,3223192966,3223192967,3223192968,3223192969,3223192970,3223192971,3223192972,3223192973,3223193056,3223193057,3223193058,3223193059,3223193060,3223193061,3223193062,3223193063,3223193064,3223388160,3223388161,3223388162,3223388163,3223388164,3223388165,3223388166,3223388167,3223388168,3223388169,3223388170,3223388171,3223388172,3223388173,3223388174,3223388175,3223388176,3223388177,3223388178,3223388179,3223388180,3223388181,3223388182,3223388183,3223388184,3223388185,3223388186,3223388187,3223388188,3223388189,3223388190,3223388191,3223388192,3223388193,3223388194,3223388195,3223388198,3223388199,3223388200,3223388201,3223388208,3223453697,3223453698,3223453699,3223453700,3223453701,3223453702,3223453703,3223453704,3223453705,3223453706,3223453707,3223453708,3223453709,3223453710,3223453711,3223453712,3223453713,3223453714,3223453715,3223453716,3223453717,3223453718,3223453719,3223453720,3223453721,3223453722,3223453723,3223453724,3223453725,3223453726,3223453727,3223453728,3223453729,3223453730,3223453731,3223453732,3223453733,3223453734,3223453735,3223453736,3223453737,3223453738,3223453739,3223453740,3223453741,3223453742,3223453743,3223453744,3223453745,3223453746,3223453747,3223453748,3223453749,3223453750,3223453751,3223453752,3223453753,3223453756,3223453952,3223453953,3223453954,3223453955,3223519234,3223519236,3223519237,3223519238,3223519239,3223519240,3223519241,3223519242,3223519243,3223519244,3223519245,3223519247,3223519248,3223519249,3223519252,3223519253,3223519254,3223519255,3223519256,3223519257,3223519258,3223519259,3223519260,3223519261,3223519262,3223519263,3223519266,3223519274,3223519275,3223519276,3223519277,3223519278,3223519279,3223519419,3223523343,3223523346,3223523347,3223527424,3223527425,3223527426,3223527427,3223527428,3224764417,3224764418,3224764419,3224764420,3224764421,3224764422,3224764423,3224764424,3224764425,3224797184,3224797185,3224797186,3224797187,3224797188,3224797189,3224797190,3224895579,3224895580,3225026580,3225026581,3225026582,3225026583,3225026584,3225026585]},{"kind": 14,"err": 1600,"payload": 603},{"kind": 14,"err": 1600,"payload": 614},{"kind": 14,"err": 1601,"payload": 676},{"kind": 14,"err": 1602,"payload": 641},{"kind": 14,"err": 1603,"payload": 641},{"kind": 14,"err": 1604,"payload": 641},{"kind": 14,"err": 1605,"payload": 641},{"kind": 14,"err": 1606,"payload": 602},{"kind": 14,"err": 1607,"payload": 676},{"kind": 14,"err": 1608,"payload": 1609},{"kind": 6,"const": true,"elem": 1609},{"kind": 14,"err": 1378,"payload": 1610},{"kind": 8,"name": "std.unicode.Utf16LeIterator","src": 496,"pubDecls": [1610,1611],"privDecls": [],"fields": [648,602]},{"kind": 14,"err": 1611,"payload": 1612},{"kind": 6,"elem": 1193},{"kind": 14,"err": 1613,"payload": 1314},{"kind": 4,"u": 21},{"kind": 14,"err": 1614,"payload": 1314},{"kind": 6,"len": 1,"const": true,"elem": 676},{"kind": 14,"err": 1615,"payload": 603},{"kind": 14,"err": 1616,"payload": 603},{"kind": 14,"err": 1617,"payload": 603},{"kind": 14,"err": 1618,"payload": 603},{"kind": 14,"err": 1619,"payload": 603},{"kind": 14,"err": 1620,"payload": 603},{"kind": 14,"err": 1621,"payload": 1208},{"kind": 14,"err": 1622,"payload": 603},{"kind": 8,"name": "std.time.Timer","src": 497,"pubDecls": [1612,1613,1614,1615,1616],"privDecls": [1617,1618,1619],"fields": [614,614,614]},{"kind": 8,"name": "std.hash.wyhash.WyhashStateless","src": 498,"pubDecls": [1620,1621,1622,1623],"privDecls": [1624],"fields": [614,602]},{"kind": 6,"elem": 1209},{"kind": 14,"err": 1624,"payload": 674},{"kind": 14,"err": 1625,"payload": 1215},{"kind": 6,"elem": 1116},{"kind": 6,"elem": 725},{"kind": 6,"elem": 1304},{"kind": 14,"err": 1626,"payload": 676},{"kind": 14,"err": 1627,"payload": 598},{"kind": 14,"err": 1628,"payload": 603},{"kind": 14,"err": 1629,"payload": 603},{"kind": 14,"err": 1630,"payload": 603},{"kind": 14,"err": 1631,"payload": 603},{"kind": 14,"err": 1632,"payload": 603},{"kind": 14,"err": 1633,"payload": 603},{"kind": 14,"err": 1634,"payload": 603},{"kind": 14,"err": 1635,"payload": 603},{"kind": 14,"err": 1636,"payload": 603},{"kind": 14,"err": 1637,"payload": 603},{"kind": 16,"name": "std.ascii.tIndex","src": 499,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5,6,7]},{"kind": 6,"elem": 1638},{"kind": 8,"name": "std.target","src": 500,"pubDecls": [1625],"privDecls": [1626,1627,1628],"file": 3},{"kind": 8,"name": "std.io.writer","src": 501,"pubDecls": [1629],"privDecls": [1630,1631,1632],"file": 4},{"kind": 18,"name": "fn(std.io.writer.Writer(std.fs.file.File,std.os.WriteError,std.fs.file.File.write),[]const u8,anytype) anytype","generic": true,"args": [606,648,null]},{"kind": 8,"name": "std.fs.file","src": 502,"pubDecls": [1633],"privDecls": [1634,1635,1636,1637,1638,1639,1640,1641,1642,1643,1644],"file": 5},{"kind": 15,"name": "std.fs.file.OpenError","errors": [24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44]},{"kind": 16,"name": "std.fs.file.Lock","src": 503,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 15,"name": "std.os.SeekError","errors": [22,23,11]},{"kind": 15,"name": "std.fs.file.GetSeekPosError","errors": [22,23,11,45]},{"kind": 8,"name": "std.hash_map","src": 504,"pubDecls": [1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1655,1656,1657,1658,1659,1660,1661],"privDecls": [1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675],"file": 6},{"kind": 8,"name": "std.debug.ModuleDebugInfo","src": 505,"pubDecls": [1676,1677],"privDecls": [],"fields": [602,1642,878]},{"kind": 18,"name": "fn(std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80),anytype,anytype) anytype","generic": true,"args": [620,null,null]},{"kind": 18,"name": "fn(*const std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80),anytype,anytype) anytype","generic": true,"args": [1052,null,null]},{"kind": 8,"name": "std.hash_map.Header","src": 506,"pubDecls": [],"privDecls": [],"fields": [1058,1057,641]},{"kind": 18,"name": "fn(std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80),anytype,anytype) callconv(.Inline) anytype","generic": true,"args": [620,null,null]},{"kind": 13,"child": 1643},{"kind": 8,"name": "std.array_list","src": 507,"pubDecls": [1678,1679,1680,1681],"privDecls": [1682,1683,1684,1685,1686,1687,1688,1689],"file": 7},{"kind": 6,"elem": 1441},{"kind": 13,"child": 1644},{"kind": 17,"name": "std.dwarf.FormValue","src": 508,"pubDecls": [],"privDecls": [],"fields": [614,674,1447,674,604,614,614,614,648,614]},{"kind": 8,"name": "std.coff.SectionHeader","src": 509,"pubDecls": [],"privDecls": [1690],"fields": [1312,1645,641,641,641,641,641,598,598,641]},{"kind": 8,"name": "std.target.Os","src": 510,"pubDecls": [1691,1692,1693,1694,1695,1696,1697,1698],"privDecls": [],"fields": [639,1648]},{"kind": 8,"name": "std.target.x86","src": 511,"pubDecls": [1699,1700,1701,1702,1703,1704,1705],"privDecls": [1706,1707,1708],"file": 8},{"kind": 16,"name": "std.target.Abi","src": 512,"pubDecls": [1709,1710,1711,1712],"privDecls": [],"fields": [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]},{"kind": 8,"name": "std.target.Cpu","src": 513,"pubDecls": [1713,1714,1715,1716],"privDecls": [],"fields": [646,1652,835]},{"kind": 8,"name": "std.io.reader","src": 514,"pubDecls": [1717],"privDecls": [1718,1719,1720,1721,1722],"file": 9},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read),usize) anytype","generic": true,"args": [643,602]},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read),type) anytype","generic": true,"args": [643,592]},{"kind": 18,"name": "fn(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read),type) anytype","generic": true,"args": [643,592]},{"kind": 8,"name": "std.io.fixed_buffer_stream","src": 515,"pubDecls": [1723,1724],"privDecls": [1725,1726,1727,1728,1729,1730],"file": 10},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read),usize) anytype","generic": true,"args": [652,602]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read),type,anytype) anytype","generic": true,"args": [652,592,null]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read),type,anytype,anytype) anytype","generic": true,"args": [652,592,null,null]},{"kind": 8,"name": "std.io.seekable_stream","src": 516,"pubDecls": [1731],"privDecls": [1732],"file": 11},{"kind": 8,"name": "std.builtin","src": 517,"pubDecls": [1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,1777,1778,1779,1780],"privDecls": [1781,1782,1783],"file": 12},{"kind": 8,"name": "std.builtin.Int","src": 518,"pubDecls": [],"privDecls": [],"fields": [597,690]},{"kind": 8,"name": "std.builtin.Float","src": 519,"pubDecls": [],"privDecls": [],"fields": [690]},{"kind": 8,"name": "std.builtin.Pointer","src": 520,"pubDecls": [1784],"privDecls": [],"fields": [675,604,604,690,1658,592,604,1661]},{"kind": 8,"name": "std.builtin.Array","src": 521,"pubDecls": [],"privDecls": [],"fields": [690,592,1661]},{"kind": 16,"name": "std.builtin.ContainerLayout","src": 522,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 8,"name": "std.builtin.StructField","src": 523,"pubDecls": [],"privDecls": [],"fields": [648,592,1661,604,690]},{"kind": 8,"name": "std.builtin.Struct","src": 524,"pubDecls": [],"privDecls": [],"fields": [1268,1662,1663,604]},{"kind": 8,"name": "std.builtin.Optional","src": 525,"pubDecls": [],"privDecls": [],"fields": [592]},{"kind": 8,"name": "std.builtin.ErrorUnion","src": 526,"pubDecls": [],"privDecls": [],"fields": [592,592]},{"kind": 8,"name": "std.builtin.Error","src": 527,"pubDecls": [],"privDecls": [],"fields": [648]},{"kind": 13,"child": 1664},{"kind": 8,"name": "std.builtin.EnumField","src": 528,"pubDecls": [],"privDecls": [],"fields": [648,690]},{"kind": 8,"name": "std.builtin.Enum","src": 529,"pubDecls": [],"privDecls": [],"fields": [1268,592,1665,1663,604]},{"kind": 8,"name": "std.builtin.UnionField","src": 530,"pubDecls": [],"privDecls": [],"fields": [648,592,690]},{"kind": 8,"name": "std.builtin.Union","src": 531,"pubDecls": [],"privDecls": [],"fields": [1268,1666,1667,1663]},{"kind": 8,"name": "std.builtin.FnArg","src": 532,"pubDecls": [],"privDecls": [],"fields": [604,604,1666]},{"kind": 8,"name": "std.builtin.Fn","src": 533,"pubDecls": [],"privDecls": [],"fields": [1657,690,604,604,1666,1668]},{"kind": 8,"name": "std.builtin.Opaque","src": 534,"pubDecls": [],"privDecls": [],"fields": [1663]},{"kind": 8,"name": "std.builtin.Frame","src": 535,"pubDecls": [],"privDecls": [],"fields": [1661]},{"kind": 8,"name": "std.builtin.AnyFrame","src": 536,"pubDecls": [],"privDecls": [],"fields": [1666]},{"kind": 8,"name": "std.builtin.Vector","src": 537,"pubDecls": [],"privDecls": [],"fields": [690,592]},{"kind": 8,"name": "std.builtin.Declaration","src": 538,"pubDecls": [1785],"privDecls": [],"fields": [648,604,1669]},{"kind": 8,"name": "std.mem","src": 539,"pubDecls": [1786,1787,1788,1789,1790,1791,1792,1793,1794,1795,1796,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897],"privDecls": [1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924],"file": 13},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read),usize) anytype","generic": true,"args": [682,602]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read),type) anytype","generic": true,"args": [682,592]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read),type,anytype) anytype","generic": true,"args": [682,592,null]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read),type) anytype","generic": true,"args": [682,592]},{"kind": 18,"name": "fn(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read),type,anytype) anytype","generic": true,"args": [682,592,null]},{"kind": 7,"len": 2,"elem": 676},{"kind": 8,"name": "std.atomic.queue","src": 540,"pubDecls": [1925],"privDecls": [1926,1927,1928,1929,1930,1931,1932,1933,1934],"file": 14},{"kind": 8,"name": "std.linked_list.Node","src": 541,"pubDecls": [],"privDecls": [],"fields": [1295,1295,715]},{"kind": 13,"child": 1695},{"kind": 8,"name": "std.Thread.Mutex","src": 542,"pubDecls": [1935,1936,1937,1938,1939,1940,1941],"privDecls": [1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953],"fields": [1365],"file": 15},{"kind": 8,"name": "std.linked_list","src": 543,"pubDecls": [1954,1955],"privDecls": [1956,1957,1958,1959,1960,1961],"file": 16},{"kind": 8,"name": "std.atomic.Atomic","src": 544,"pubDecls": [1962],"privDecls": [1963,1964,1965,1966,1967,1968,1969],"file": 17},{"kind": 8,"name": "std.linked_list.Node","src": 541,"pubDecls": [],"privDecls": [],"fields": [1300,1300,722]},{"kind": 13,"child": 1696},{"kind": 8,"name": "std.event.loop","src": 545,"pubDecls": [1970],"privDecls": [1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986],"file": 18},{"kind": 17,"name": "std.event.loop.Finish","src": 546,"pubDecls": [],"privDecls": [],"fields": [1294,603]},{"kind": 17,"name": "std.event.loop.Msg","src": 547,"pubDecls": [1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998],"privDecls": [],"fields": [1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,603]},{"kind": 8,"name": "std.linked_list.Node","src": 548,"pubDecls": [1999,2000,2001,2002,2003],"privDecls": [],"fields": [1305,674]},{"kind": 13,"child": 1215},{"kind": 8,"name": "std.atomic.stack","src": 549,"pubDecls": [2004],"privDecls": [2005,2006,2007,2008,2009,2010,2011,2012,2013],"file": 19},{"kind": 8,"name": "std.atomic.stack.Node","src": 550,"pubDecls": [],"privDecls": [],"fields": [1308,728]},{"kind": 13,"child": 1710},{"kind": 8,"name": "std.event.loop.ResumeNode","src": 551,"pubDecls": [2014,2015,2016,2017,2018],"privDecls": [2019,2020],"fields": [1712,715,1711]},{"kind": 8,"name": "std.pdb","src": 552,"pubDecls": [2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042],"privDecls": [2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058],"file": 20},{"kind": 6,"const": true,"elem": 1727},{"kind": 7,"len": 32,"elem": 676},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 369,"errors": []},{"kind": 4,"u": 3},{"kind": 15,"name": "std.unicode.Utf8DecodeError","errors": [46,47,48,49]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 369,"errors": []},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 369,"errors": []},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 369,"errors": []},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 369,"errors": []},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 369,"errors": []},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 369,"errors": []},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 369,"errors": []},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 369,"errors": []},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 369,"errors": []},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 369,"errors": []},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 369,"errors": []},{"kind": 7,"len": 15,"elem": 598},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 369,"errors": []},{"kind": 7,"len": 8,"elem": 598},{"kind": 20,"name": "std.os.windows.HMODULE"},{"kind": 8,"name": "std.dwarf","src": 553,"pubDecls": [2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072],"privDecls": [2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101],"file": 21},{"kind": 18,"name": "fn(*std.dwarf.DwarfInfo,anytype,anytype,anytype) anytype","generic": true,"args": [909,null,null,null]},{"kind": 8,"name": "std.hash_map.Metadata","src": 476,"pubDecls": [2102,2103,2104,2105,2106],"privDecls": [2107,2108,2109],"fields": [1152,1509]},{"kind": 13,"child": 1743},{"kind": 8,"name": "std.Thread","src": 554,"pubDecls": [2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134],"privDecls": [2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151],"fields": [1746],"file": 22},{"kind": 8,"name": "std.atomic","src": 555,"pubDecls": [2152,2153,2154,2155,2156,2157,2158],"privDecls": [2159,2160],"file": 23},{"kind": 8,"name": "std.c","src": 556,"pubDecls": [2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396],"privDecls": [2397,2398,2399,2400,2401,2402],"file": 24},{"kind": 8,"name": "std.coff","src": 557,"pubDecls": [2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416],"privDecls": [2417,2418,2419,2420,2421,2422,2423,2424,2425,2426,2427,2428,2429,2430,2431,2432,2433,2434],"file": 25},{"kind": 8,"name": "std.debug","src": 558,"pubDecls": [2435,2436,2437,2438,2439,2440,2441,2442,2443,2444,2445,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466],"privDecls": [2467,2468,2469,2470,2471,2472,2473,2474,2475,2476,2477,2478,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2489,2490,2491,2492,2493,2494,2495,2496,2497,2498,2499,2500,2501,2502,2503,2504,2505,2506,2507,2508,2509,2510,2511,2512,2513,2514,2515,2516,2517],"file": 26},{"kind": 8,"name": "std.event","src": 559,"pubDecls": [2518,2519,2520,2521,2522,2523,2524,2525,2526,2527],"privDecls": [],"file": 27},{"kind": 8,"name": "std.fmt","src": 560,"pubDecls": [2528,2529,2530,2531,2532,2533,2534,2535,2536,2537,2538,2539,2540,2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2552,2553,2554,2555,2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,2567,2568,2569,2570,2571,2572,2573,2574],"privDecls": [2575,2576,2577,2578,2579,2580,2581,2582,2583,2584,2585,2586,2587,2588,2589,2590,2591,2592,2593,2594,2595,2596,2597,2598,2599,2600],"file": 28},{"kind": 8,"name": "std.fs","src": 561,"pubDecls": [2601,2602,2603,2604,2605,2606,2607,2608,2609,2610,2611,2612,2613,2614,2615,2616,2617,2618,2619,2620,2621,2622,2623,2624,2625,2626,2627,2628,2629,2630,2631,2632,2633,2634,2635,2636,2637,2638,2639,2640,2641,2642,2643,2644,2645,2646,2647,2648,2649,2650,2651,2652,2653,2654,2655,2656,2657,2658,2659,2660,2661,2662,2663,2664,2665,2666,2667,2668,2669,2670,2671,2672,2673,2674,2675,2676,2677,2678,2679],"privDecls": [2680,2681,2682,2683,2684,2685,2686,2687,2688,2689,2690,2691,2692,2693],"file": 29},{"kind": 8,"name": "std.hash","src": 562,"pubDecls": [2694,2695,2696,2697,2698,2699,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712],"privDecls": [2713,2714,2715,2716,2717],"file": 30},{"kind": 8,"name": "std.heap","src": 563,"pubDecls": [2718,2719,2720,2721,2722,2723,2724,2725,2726,2727,2728,2729,2730,2731,2732,2733,2734,2735,2736,2737,2738],"privDecls": [2739,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2750,2751,2752,2753,2754,2755,2756,2757,2758,2759,2760,2761],"file": 31},{"kind": 8,"name": "std.io","src": 564,"pubDecls": [2762,2763,2764,2765,2766,2767,2768,2769,2770,2771,2772,2773,2774,2775,2776,2777,2778,2779,2780,2781,2782,2783,2784,2785,2786,2787,2788,2789,2790,2791,2792,2793,2794,2795,2796,2797,2798,2799,2800,2801,2802,2803,2804,2805],"privDecls": [2806,2807,2808,2809,2810,2811,2812,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822],"file": 32},{"kind": 8,"name": "std.macho","src": 565,"pubDecls": [2823,2824,2825,2826,2827,2828,2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,2840,2841,2842,2843,2844,2845,2846,2847,2848,2849,2850,2851,2852,2853,2854,2855,2856,2857,2858,2859,2860,2861,2862,2863,2864,2865,2866,2867,2868,2869,2870,2871,2872,2873,2874,2875,2876,2877,2878,2879,2880,2881,2882,2883,2884,2885,2886,2887,2888,2889,2890,2891,2892,2893,2894,2895,2896,2897,2898,2899,2900,2901,2902,2903,2904,2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,2916,2917,2918,2919,2920,2921,2922,2923,2924,2925,2926,2927,2928,2929,2930,2931,2932,2933,2934,2935,2936,2937,2938,2939,2940,2941,2942,2943,2944,2945,2946,2947,2948,2949,2950,2951,2952,2953,2954,2955,2956,2957,2958,2959,2960,2961,2962,2963,2964,2965,2966,2967,2968,2969,2970,2971,2972,2973,2974,2975,2976,2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2987,2988,2989,2990,2991,2992,2993,2994,2995,2996,2997,2998,2999,3000,3001,3002,3003,3004,3005,3006,3007,3008,3009,3010,3011,3012,3013,3014,3015,3016,3017,3018,3019,3020,3021,3022,3023,3024,3025,3026,3027,3028,3029,3030,3031,3032,3033,3034,3035,3036,3037,3038,3039,3040,3041,3042,3043,3044,3045,3046,3047,3048,3049,3050,3051,3052,3053,3054,3055,3056,3057,3058,3059,3060,3061,3062,3063,3064,3065,3066,3067,3068,3069,3070,3071,3072,3073,3074,3075,3076,3077,3078,3079,3080,3081,3082,3083,3084,3085,3086,3087,3088,3089,3090,3091,3092,3093,3094,3095,3096,3097,3098,3099,3100,3101,3102,3103,3104,3105,3106,3107,3108,3109,3110,3111,3112,3113,3114,3115,3116,3117,3118,3119,3120,3121,3122,3123,3124,3125,3126,3127,3128,3129,3130,3131,3132,3133,3134,3135,3136,3137,3138,3139,3140,3141,3142,3143,3144,3145,3146,3147,3148,3149],"privDecls": [],"file": 33},{"kind": 8,"name": "std.math","src": 566,"pubDecls": [3150,3151,3152,3153,3154,3155,3156,3157,3158,3159,3160,3161,3162,3163,3164,3165,3166,3167,3168,3169,3170,3171,3172,3173,3174,3175,3176,3177,3178,3179,3180,3181,3182,3183,3184,3185,3186,3187,3188,3189,3190,3191,3192,3193,3194,3195,3196,3197,3198,3199,3200,3201,3202,3203,3204,3205,3206,3207,3208,3209,3210,3211,3212,3213,3214,3215,3216,3217,3218,3219,3220,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3232,3233,3234,3235,3236,3237,3238,3239,3240,3241,3242,3243,3244,3245,3246,3247,3248,3249,3250,3251,3252,3253,3254,3255,3256,3257,3258,3259,3260,3261,3262,3263,3264,3265,3266,3267,3268,3269,3270,3271,3272,3273,3274,3275,3276,3277,3278,3279,3280,3281,3282,3283,3284,3285,3286,3287,3288,3289,3290,3291,3292,3293,3294,3295,3296,3297,3298,3299,3300,3301,3302,3303,3304,3305,3306,3307,3308,3309,3310,3311,3312,3313,3314,3315,3316,3317,3318,3319],"privDecls": [3320,3321,3322,3323,3324,3325,3326,3327,3328,3329,3330,3331,3332,3333,3334,3335],"file": 34},{"kind": 8,"name": "std.meta","src": 567,"pubDecls": [3336,3337,3338,3339,3340,3341,3342,3343,3344,3345,3346,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,3360,3361,3362,3363,3364,3365,3366,3367,3368,3369,3370,3371],"privDecls": [3372,3373,3374,3375,3376,3377,3378,3379,3380,3381,3382],"file": 35},{"kind": 8,"name": "std.os","src": 568,"pubDecls": [3383,3384,3385,3386,3387,3388,3389,3390,3391,3392,3393,3394,3395,3396,3397,3398,3399,3400,3401,3402,3403,3404,3405,3406,3407,3408,3409,3410,3411,3412,3413,3414,3415,3416,3417,3418,3419,3420,3421,3422,3423,3424,3425,3426,3427,3428,3429,3430,3431,3432,3433,3434,3435,3436,3437,3438,3439,3440,3441,3442,3443,3444,3445,3446,3447,3448,3449,3450,3451,3452,3453,3454,3455,3456,3457,3458,3459,3460,3461,3462,3463,3464,3465,3466,3467,3468,3469,3470,3471,3472,3473,3474,3475,3476,3477,3478,3479,3480,3481,3482,3483,3484,3485,3486,3487,3488,3489,3490,3491,3492,3493,3494,3495,3496,3497,3498,3499,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,3512,3513,3514,3515,3516,3517,3518,3519,3520,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,3574,3575,3576,3577,3578,3579,3580,3581,3582,3583,3584,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,3643,3644,3645,3646,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,3676,3677,3678,3679,3680,3681,3682,3683,3684,3685,3686,3687,3688,3689,3690,3691,3692,3693,3694,3695,3696,3697,3698,3699,3700,3701,3702,3703,3704,3705,3706,3707,3708,3709,3710,3711,3712,3713,3714,3715,3716,3717,3718,3719,3720,3721,3722,3723,3724,3725,3726,3727,3728,3729,3730,3731,3732,3733,3734,3735,3736,3737,3738,3739,3740,3741,3742,3743,3744,3745,3746,3747,3748,3749,3750,3751,3752,3753,3754,3755,3756,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,3767,3768,3769,3770,3771,3772,3773,3774,3775,3776,3777,3778,3779,3780,3781,3782,3783,3784,3785,3786,3787,3788,3789,3790,3791,3792,3793,3794,3795,3796],"privDecls": [3797,3798,3799,3800,3801,3802,3803,3804,3805,3806,3807,3808,3809,3810,3811,3812],"file": 36},{"kind": 8,"name": "std.process","src": 569,"pubDecls": [3813,3814,3815,3816,3817,3818,3819,3820,3821,3822,3823,3824,3825,3826,3827,3828,3829,3830,3831,3832,3833,3834,3835,3836,3837,3838,3839,3840],"privDecls": [3841,3842,3843,3844,3845,3846,3847,3848,3849,3850,3851,3852],"file": 37},{"kind": 8,"name": "std.ascii","src": 570,"pubDecls": [3853,3854,3855,3856,3857,3858,3859,3860,3861,3862,3863,3864,3865,3866,3867,3868,3869,3870,3871,3872,3873,3874,3875,3876,3877,3878,3879,3880],"privDecls": [3881,3882,3883,3884],"file": 38},{"kind": 8,"name": "std.time","src": 571,"pubDecls": [3885,3886,3887,3888,3889,3890,3891,3892,3893,3894,3895,3896,3897,3898,3899,3900,3901,3902,3903,3904,3905,3906,3907,3908,3909,3910,3911,3912],"privDecls": [3913,3914,3915,3916,3917,3918,3919,3920],"file": 39},{"kind": 8,"name": "std.unicode","src": 572,"pubDecls": [3921,3922,3923,3924,3925,3926,3927,3928,3929,3930,3931,3932,3933,3934,3935,3936,3937,3938,3939,3940],"privDecls": [3941,3942,3943,3944,3945,3946,3947,3948,3949,3950,3951,3952,3953,3954,3955,3956,3957,3958,3959,3960,3961,3962,3963,3964,3965,3966,3967],"file": 40},{"kind": 8,"name": "std.start","src": 573,"pubDecls": [3968,3969],"privDecls": [3970,3971,3972,3973,3974,3975,3976,3977,3978,3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,3992,3993,3994,3995,3996,3997,3998,3999,4000,4001,4002],"file": 41},{"kind": 16,"name": "std.builtin.OutputMode","src": 574,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 16,"name": "std.builtin.LinkMode","src": 575,"pubDecls": [],"privDecls": [],"fields": [0,1]},{"kind": 16,"name": "std.builtin.Mode","src": 576,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3]},{"kind": 6,"elem": 847},{"kind": 7,"len": 5,"elem": 602},{"kind": 20,"name": "std.os.windows.HINSTANCE"},{"kind": 20,"name": "c_void"},{"kind": 6,"const": true,"elem": 847},{"kind": 6,"len": 2,"elem": 602},{"kind": 8,"name": "std.Thread.StaticResetEvent","src": 577,"pubDecls": [4003,4004,4005,4006,4007,4008,4009,4010],"privDecls": [4011,4012,4013,4014,4015,4016,4017,4018,4019],"fields": [1542],"file": 42},{"kind": 8,"name": "std.Thread.Mutex.WindowsMutex","src": 578,"pubDecls": [4020,4021,4022],"privDecls": [],"fields": [602]},{"kind": 15,"name": "std.os.windows.WriteFileError","errors": [50,51,52,53,54]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set","fn": 25,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 16,"name": "std.fmt.Alignment","src": 579,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set","fn": 28,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15},{"kind": 15},{"kind": 8,"name": "std.mem.Allocator","src": 580,"pubDecls": [4023,4024,4025,4026,4027,4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047],"privDecls": [4048,4049,4050,4051,4052,4053,4054],"fields": [1807,364],"file": 43},{"kind": 18,"name": "fn(std.debug.Config,anytype,anytype) anytype","generic": true,"args": [861,null,null]},{"kind": 15},{"kind": 15},{"kind": 15},{"kind": 15},{"kind": 15,"name": "std.mem.Allocator.Error","errors": [55]},{"kind": 15,"name": "std.math.error:993:44","errors": [56]},{"kind": 15},{"kind": 18,"name": "fn(*std.coff.Coff,[]const u8) anytype","generic": true,"args": [878,648]},{"kind": 18,"name": "fn(*std.coff.Coff,[]const u8,anytype) anytype","generic": true,"args": [878,648,null]},{"kind": 8,"name": "std.coff.CoffHeader","src": 581,"pubDecls": [],"privDecls": [],"fields": [598,598,641,641,641,598,598]},{"kind": 8,"name": "std.coff.OptionalHeader","src": 582,"pubDecls": [],"privDecls": [4055],"fields": [598,1809,614]},{"kind": 7,"len": 16,"elem": 676},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.coff.Coff.loadHeader)).Fn.return_type.?).ErrorUnion.error_set","fn": 57,"errors": [57,58,22,23,11,59,60,12,13,14,15,16,17,18,19,20]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readNoEof)).Fn.return_type.?).ErrorUnion.error_set","fn": 60,"errors": [60,12,13,14,15,16,17,18,19,20,21,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readIntLittle)).Fn.return_type.?).ErrorUnion.error_set","fn": 64,"errors": [60,12,13,14,15,16,17,18,19,20,21,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set","fn": 65,"errors": [60,12,13,14,15,16,17,18,19,20,21,11]},{"kind": 7,"len": 4,"elem": 676},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readIntLittle)).Fn.return_type.?).ErrorUnion.error_set","fn": 68,"errors": [60,12,13,14,15,16,17,18,19,20,21,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set","fn": 69,"errors": [60,12,13,14,15,16,17,18,19,20,21,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.coff.Coff.loadOptionalHeader)).Fn.return_type.?).ErrorUnion.error_set","fn": 71,"errors": [58,59,60,12,13,14,15,16,17,18,19,20,21,11,22]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readIntLittle)).Fn.return_type.?).ErrorUnion.error_set","fn": 73,"errors": [60,12,13,14,15,16,17,18,19,20,21,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set","fn": 74,"errors": [60,12,13,14,15,16,17,18,19,20,21,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.coff.Coff.loadSections)).Fn.return_type.?).ErrorUnion.error_set","fn": 76,"errors": [55,60,12,13,14,15,16,17,18,19,20,21,11,61,62,63,22,64]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.coff.Section,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set","fn": 77,"errors": [55]},{"kind": 15,"name": "std.fmt.ParseIntError","errors": [61,62]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.coff.Coff.readStringFromTable)).Fn.return_type.?).ErrorUnion.error_set","fn": 82,"errors": [12,13,14,15,16,17,18,19,20,21,11,63,22,64]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readUntilDelimiterOrEof)).Fn.return_type.?).ErrorUnion.error_set","fn": 83,"errors": [12,13,14,15,16,17,18,19,20,21,11,63]},{"kind": 13,"child": 674},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readByte)).Fn.return_type.?).ErrorUnion.error_set","fn": 84,"errors": [60,12,13,14,15,16,17,18,19,20,21,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.coff.Coff.getSectionData)).Fn.return_type.?).ErrorUnion.error_set","fn": 89,"errors": [60,12,13,14,15,16,17,18,19,20,21,11,55,22,65]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.coff.Coff.getSectionData)).Fn.return_type.?).ErrorUnion.error_set","fn": 91,"errors": [60,12,13,14,15,16,17,18,19,20,21,11,55,22,65]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.coff.Coff.getSectionData)).Fn.return_type.?).ErrorUnion.error_set","fn": 92,"errors": [60,12,13,14,15,16,17,18,19,20,21,11,55,22,65]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.coff.Coff.getSectionData)).Fn.return_type.?).ErrorUnion.error_set","fn": 93,"errors": [60,12,13,14,15,16,17,18,19,20,21,11,55,22,65]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.coff.Coff.getSectionData)).Fn.return_type.?).ErrorUnion.error_set","fn": 94,"errors": [60,12,13,14,15,16,17,18,19,20,21,11,55,22,65]},{"kind": 15},{"kind": 15},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.readUnitLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 110,"errors": [60,66]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readInt)).Fn.return_type.?).ErrorUnion.error_set","fn": 111,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set","fn": 112,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readNoEof)).Fn.return_type.?).ErrorUnion.error_set","fn": 113,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readInt)).Fn.return_type.?).ErrorUnion.error_set","fn": 116,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set","fn": 117,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readInt)).Fn.return_type.?).ErrorUnion.error_set","fn": 119,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set","fn": 120,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readByte)).Fn.return_type.?).ErrorUnion.error_set","fn": 122,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.DwarfInfo.getAbbrevTable)).Fn.return_type.?).ErrorUnion.error_set","fn": 125,"errors": [56,60,55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null).append)).Fn.return_type.?).ErrorUnion.error_set","fn": 126,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.DwarfInfo.parseAbbrevTable)).Fn.return_type.?).ErrorUnion.error_set","fn": 127,"errors": [56,60,55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.leb128.readULEB128)).Fn.return_type.?).ErrorUnion.error_set","fn": 130,"errors": [56,60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null).append)).Fn.return_type.?).ErrorUnion.error_set","fn": 132,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null).addOne)).Fn.return_type.?).ErrorUnion.error_set","fn": 134,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set","fn": 135,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableEntry,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set","fn": 136,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null).append)).Fn.return_type.?).ErrorUnion.error_set","fn": 140,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null).addOne)).Fn.return_type.?).ErrorUnion.error_set","fn": 141,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set","fn": 142,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevAttr,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set","fn": 143,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null).addOne)).Fn.return_type.?).ErrorUnion.error_set","fn": 147,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set","fn": 148,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.AbbrevTableHeader,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set","fn": 149,"errors": [55]},{"kind": 15},{"kind": 13,"child": 1441},{"kind": 6,"const": true,"elem": 628},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.Attr,null).resize)).Fn.return_type.?).ErrorUnion.error_set","fn": 156,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.Attr,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set","fn": 157,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.Attr,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set","fn": 158,"errors": [55]},{"kind": 6,"const": true,"elem": 1248},{"kind": 8,"name": "std.dwarf.Die","src": 583,"pubDecls": [4056],"privDecls": [4057,4058,4059,4060,4061,4062],"fields": [614,604,633]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.Die.getAttrString)).Fn.return_type.?).ErrorUnion.error_set","fn": 163,"errors": [66,67]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.DwarfInfo.getString)).Fn.return_type.?).ErrorUnion.error_set","fn": 164,"errors": [66]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.Die.getAttrRef)).Fn.return_type.?).ErrorUnion.error_set","fn": 166,"errors": [66,67]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.Die.getAttrAddr)).Fn.return_type.?).ErrorUnion.error_set","fn": 167,"errors": [66,67]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.Constant.asUnsignedLe)).Fn.return_type.?).ErrorUnion.error_set","fn": 168,"errors": [66]},{"kind": 8,"name": "std.dwarf.Constant","src": 584,"pubDecls": [],"privDecls": [4063],"fields": [614,604]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.Func,null).append)).Fn.return_type.?).ErrorUnion.error_set","fn": 169,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.Func,null).addOne)).Fn.return_type.?).ErrorUnion.error_set","fn": 170,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.Func,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set","fn": 171,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.Func,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set","fn": 172,"errors": [55]},{"kind": 15},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null).append)).Fn.return_type.?).ErrorUnion.error_set","fn": 178,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null).addOne)).Fn.return_type.?).ErrorUnion.error_set","fn": 179,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set","fn": 180,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.CompileUnit,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set","fn": 181,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.coff.Coff.getPdbPath)).Fn.return_type.?).ErrorUnion.error_set","fn": 185,"errors": [29,59,65,55,60,12,13,14,15,16,17,18,19,20,21,11,61,62,63,22,64]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readStruct)).Fn.return_type.?).ErrorUnion.error_set","fn": 188,"errors": [60,12,13,14,15,16,17,18,19,20,21,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fs.path.resolve)).Fn.return_type.?).ErrorUnion.error_set","fn": 190,"errors": [55,68,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fs.path.resolveWindows)).Fn.return_type.?).ErrorUnion.error_set","fn": 191,"errors": [55,68,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.process.getCwdAlloc)).Fn.return_type.?).ErrorUnion.error_set","fn": 192,"errors": [55,68,11]},{"kind": 8,"name": "std.fs.path","src": 585,"pubDecls": [4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103],"privDecls": [4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136],"file": 44},{"kind": 15,"name": "std.os.GetCwdError","errors": [69,68,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.mem.Allocator.dupe)).Fn.return_type.?).ErrorUnion.error_set","fn": 200,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.pdb.Pdb.init)).Fn.return_type.?).ErrorUnion.error_set","fn": 203,"errors": [70,71,55,72,22,23,11,45,66,60,12,14,15,16,17,18,19,20,24,25,26,28,29,30,31,33,34,35,36,38,40,41,42,43]},{"kind": 8,"name": "std.pdb.Pdb","src": 586,"pubDecls": [4137,4138,4139,4140,4141,4142,4143,4144,4145,4146],"privDecls": [],"fields": [607,1468,859,1007,1007,790,791,1385,641]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.pdb.Msf.init)).Fn.return_type.?).ErrorUnion.error_set","fn": 206,"errors": [70,71,55,72,22,23,11,45,66,60,12,14,15,16,17,18,19,20]},{"kind": 8,"name": "std.pdb.Msf","src": 587,"pubDecls": [],"privDecls": [4147],"fields": [999,1473]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(std.fs.file.File,std.os.ReadError,std.fs.file.File.read).readStruct)).Fn.return_type.?).ErrorUnion.error_set","fn": 207,"errors": [60,12,13,14,15,16,17,18,19,20,21,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readIntLittle)).Fn.return_type.?).ErrorUnion.error_set","fn": 215,"errors": [60,22,23,11,12,13,14,15,16,17,18,19,20]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set","fn": 216,"errors": [60,22,23,11,12,13,14,15,16,17,18,19,20]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readNoEof)).Fn.return_type.?).ErrorUnion.error_set","fn": 217,"errors": [60,22,23,11,12,13,14,15,16,17,18,19,20]},{"kind": 6,"len": 2,"elem": 999},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.pdb.Pdb.parseInfoStream)).Fn.return_type.?).ErrorUnion.error_set","fn": 222,"errors": [67,55,73,60,22,23,11,12,13,14,15,16,17,18,19,20,66]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set","fn": 224,"errors": [60,22,23,11,12,13,14,15,16,17,18,19,20]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readStruct)).Fn.return_type.?).ErrorUnion.error_set","fn": 225,"errors": [60,22,23,11,12,13,14,15,16,17,18,19,20]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.pdb.readSparseBitVector)).Fn.return_type.?).ErrorUnion.error_set","fn": 228,"errors": [55,60,22,23,11,12,13,14,15,16,17,18,19,20]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u32,null).append)).Fn.return_type.?).ErrorUnion.error_set","fn": 231,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u32,null).addOne)).Fn.return_type.?).ErrorUnion.error_set","fn": 232,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u32,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set","fn": 233,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u32,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set","fn": 234,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.pdb.Pdb.parseDbiStream)).Fn.return_type.?).ErrorUnion.error_set","fn": 242,"errors": [74,60,22,23,11,12,13,14,15,16,17,18,19,20,63,55,73,66]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readStruct)).Fn.return_type.?).ErrorUnion.error_set","fn": 243,"errors": [60,22,23,11,12,13,14,15,16,17,18,19,20]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readStruct)).Fn.return_type.?).ErrorUnion.error_set","fn": 246,"errors": [60,22,23,11,12,13,14,15,16,17,18,19,20]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readUntilDelimiterAlloc)).Fn.return_type.?).ErrorUnion.error_set","fn": 249,"errors": [60,22,23,11,12,13,14,15,16,17,18,19,20,63,55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readUntilDelimiterArrayList)).Fn.return_type.?).ErrorUnion.error_set","fn": 251,"errors": [60,22,23,11,12,13,14,15,16,17,18,19,20,63,55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readByte)).Fn.return_type.?).ErrorUnion.error_set","fn": 253,"errors": [60,22,23,11,12,13,14,15,16,17,18,19,20]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u8,null).append)).Fn.return_type.?).ErrorUnion.error_set","fn": 255,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u8,null).addOne)).Fn.return_type.?).ErrorUnion.error_set","fn": 256,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u8,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set","fn": 257,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(u8,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set","fn": 258,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.seekBy)).Fn.return_type.?).ErrorUnion.error_set","fn": 264,"errors": [74]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.pdb.Module,null).append)).Fn.return_type.?).ErrorUnion.error_set","fn": 265,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.pdb.Module,null).addOne)).Fn.return_type.?).ErrorUnion.error_set","fn": 266,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.pdb.Module,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set","fn": 267,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.pdb.Module,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set","fn": 268,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readEnum)).Fn.return_type.?).ErrorUnion.error_set","fn": 273,"errors": [60,22,23,11,12,13,14,15,16,17,18,19,20,75]},{"kind": 16,"name": "std.pdb.SectionContrSubstreamVersion","src": 588,"pubDecls": [],"privDecls": [],"fields": [4046371373,4046541284]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readInt)).Fn.return_type.?).ErrorUnion.error_set","fn": 274,"errors": [60,22,23,11,12,13,14,15,16,17,18,19,20]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null).addOne)).Fn.return_type.?).ErrorUnion.error_set","fn": 276,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set","fn": 277,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.pdb.SectionContribEntry,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set","fn": 278,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.pdb.MsfStream,@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.read)).Fn.return_type.?).ErrorUnion.error_set,std.pdb.MsfStream.read).readStruct)).Fn.return_type.?).ErrorUnion.error_set","fn": 282,"errors": [60,22,23,11,12,13,14,15,16,17,18,19,20]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.hash_map.HashMap(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80).putNoClobber)).Fn.return_type.?).ErrorUnion.error_set","fn": 286,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80).putNoClobberContext)).Fn.return_type.?).ErrorUnion.error_set","fn": 287,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80).growIfNeeded)).Fn.return_type.?).ErrorUnion.error_set","fn": 289,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80).grow)).Fn.return_type.?).ErrorUnion.error_set","fn": 290,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.hash_map.HashMapUnmanaged(usize,*std.debug.ModuleDebugInfo,std.hash_map.AutoContext(usize),80).allocate)).Fn.return_type.?).ErrorUnion.error_set","fn": 296,"errors": [55]},{"kind": 4,"u": 1},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.debug.printLineInfo)).Fn.return_type.?).ErrorUnion.error_set","fn": 306,"errors": [0,1,2,3,4,5,6,7,8,9,10,11,14,18,19,24,25,26,28,29,30,31,33,34,35,36,41,42,43,76]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.debug.ModuleDebugInfo.getSymbolAtAddress)).Fn.return_type.?).ErrorUnion.error_set","fn": 307,"errors": [56,60,63,55,66,67,22,23,11,12,13,14,15,16,17,18,19,20,74]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.debug.getSymbolFromDwarf)).Fn.return_type.?).ErrorUnion.error_set","fn": 308,"errors": [56,60,63,55,66,67]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.pdb.Pdb.getModule)).Fn.return_type.?).ErrorUnion.error_set","fn": 309,"errors": [66,67,60,22,23,11,12,13,14,15,16,17,18,19,20,55]},{"kind": 13,"child": 1038},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.pdb.Pdb.getLineNumberInfo)).Fn.return_type.?).ErrorUnion.error_set","fn": 312,"errors": [60,22,23,11,12,13,14,15,16,17,18,19,20,63,55,74,67,66]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.pdb.MsfStream.seekTo)).Fn.return_type.?).ErrorUnion.error_set","fn": 313,"errors": [74]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.DwarfInfo.findCompileUnit)).Fn.return_type.?).ErrorUnion.error_set","fn": 314,"errors": [66,67,60]},{"kind": 6,"const": true,"elem": 632},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.Die.getAttrSecOffset)).Fn.return_type.?).ErrorUnion.error_set","fn": 315,"errors": [66,67]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readInt)).Fn.return_type.?).ErrorUnion.error_set","fn": 316,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.DwarfInfo.getLineNumberInfo)).Fn.return_type.?).ErrorUnion.error_set","fn": 319,"errors": [56,60,63,55,66,67]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readByteSigned)).Fn.return_type.?).ErrorUnion.error_set","fn": 320,"errors": [60]},{"kind": 4,"i": 8},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned([]const u8,null).append)).Fn.return_type.?).ErrorUnion.error_set","fn": 322,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned([]const u8,null).addOne)).Fn.return_type.?).ErrorUnion.error_set","fn": 323,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned([]const u8,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set","fn": 324,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned([]const u8,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set","fn": 325,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readUntilDelimiterAlloc)).Fn.return_type.?).ErrorUnion.error_set","fn": 329,"errors": [60,63,55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readUntilDelimiterArrayList)).Fn.return_type.?).ErrorUnion.error_set","fn": 330,"errors": [60,63,55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.leb128.readULEB128)).Fn.return_type.?).ErrorUnion.error_set","fn": 333,"errors": [56,60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.FileEntry,null).append)).Fn.return_type.?).ErrorUnion.error_set","fn": 334,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.FileEntry,null).addOne)).Fn.return_type.?).ErrorUnion.error_set","fn": 335,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.FileEntry,null).ensureTotalCapacity)).Fn.return_type.?).ErrorUnion.error_set","fn": 336,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.array_list.ArrayListAligned(std.dwarf.FileEntry,null).ensureTotalCapacityPrecise)).Fn.return_type.?).ErrorUnion.error_set","fn": 337,"errors": [55]},{"kind": 15,"name": "std.math.error:993:44","errors": [77]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.LineNumberProgram.checkLineMatch)).Fn.return_type.?).ErrorUnion.error_set","fn": 343,"errors": [55,66,67]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fs.path.join)).Fn.return_type.?).ErrorUnion.error_set","fn": 344,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fs.path.joinSepMaybeZ)).Fn.return_type.?).ErrorUnion.error_set","fn": 345,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.leb128.readILEB128)).Fn.return_type.?).ErrorUnion.error_set","fn": 348,"errors": [56,60]},{"kind": 15},{"kind": 15},{"kind": 8,"name": "std.Thread.StaticResetEvent.AtomicEvent","src": 589,"pubDecls": [4148,4149,4150,4151,4152,4153,4154,4155,4156,4157],"privDecls": [4158,4159],"fields": [641]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set","fn": 357,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 8,"name": "std.os.windows.PEB","src": 590,"pubDecls": [],"privDecls": [],"fields": [676,676,676,676,840,775,1813,1814,840,840,1815,840,840,641,1816,641,641,840,641,1817,1818,840,840,1819,840,840,840,641,641,781,602,602,602,602,641,641,1819,840,840,641,1815,641,641,598,598,641,641,641,641,602,1820,840,1817,1821,641,614,614,840,840,1822,1823,1824,1823,1824,602,1825,1826,1817,1827,641,840,840,840,840,641,614,641,1826,1828,840,641]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatValue)).Fn.return_type.?).ErrorUnion.error_set","fn": 361,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatIntValue)).Fn.return_type.?).ErrorUnion.error_set","fn": 362,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatInt)).Fn.return_type.?).ErrorUnion.error_set","fn": 363,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatBuf)).Fn.return_type.?).ErrorUnion.error_set","fn": 366,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8CountCodepoints)).Fn.return_type.?).ErrorUnion.error_set","fn": 367,"errors": [46,47,48,49,78,79]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ByteSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 369,"errors": [79]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatText)).Fn.return_type.?).ErrorUnion.error_set","fn": 372,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 8,"name": "std.heap.arena_allocator","src": 591,"pubDecls": [4160],"privDecls": [4161,4162,4163,4164],"file": 45},{"kind": 15,"name": "std.heap.error:239:90","errors": [80]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set","fn": 382,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 6,"len": 2,"elem": 1239},{"kind": 6,"len": 2,"elem": 876},{"kind": 15,"name": "std.os.windows.ReadFileError","errors": [81,82,83]},{"kind": 15,"name": "std.math.error:993:44","errors": [84]},{"kind": 15,"name": "std.math.error:993:44","errors": [85]},{"kind": 15,"name": "std.math.error:455:43","errors": [86]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.readAddress)).Fn.return_type.?).ErrorUnion.error_set","fn": 421,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueBlock)).Fn.return_type.?).ErrorUnion.error_set","fn": 422,"errors": [76,55,60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueBlockLen)).Fn.return_type.?).ErrorUnion.error_set","fn": 423,"errors": [76,55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueConstant)).Fn.return_type.?).ErrorUnion.error_set","fn": 424,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueConstant)).Fn.return_type.?).ErrorUnion.error_set","fn": 425,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueConstant)).Fn.return_type.?).ErrorUnion.error_set","fn": 426,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueConstant)).Fn.return_type.?).ErrorUnion.error_set","fn": 427,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueConstant)).Fn.return_type.?).ErrorUnion.error_set","fn": 428,"errors": [56,60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.readAllocBytes)).Fn.return_type.?).ErrorUnion.error_set","fn": 429,"errors": [76,55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.dwarf.parseFormValueRef)).Fn.return_type.?).ErrorUnion.error_set","fn": 430,"errors": [56,60]},{"kind": 21,"fnName": "std.dwarf.parseFormValue","fn": 161},{"kind": 6,"len": 2,"elem": 1441},{"kind": 15,"name": "std.os.windows.GetCurrentDirectoryError","errors": [87,88]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.os.windows.sliceToPrefixedFileW)).Fn.return_type.?).ErrorUnion.error_set","fn": 444,"errors": [11,29,30,31]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8ToUtf16Le)).Fn.return_type.?).ErrorUnion.error_set","fn": 446,"errors": [30]},{"kind": 15,"name": "std.os.windows.RemoveDotDirsError","errors": [89]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.os.windows.getFullPathNameW)).Fn.return_type.?).ErrorUnion.error_set","fn": 449,"errors": [11]},{"kind": 8,"name": "std.os.windows","src": 592,"pubDecls": [4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258,4259,4260,4261,4262,4263,4264,4265,4266,4267,4268,4269,4270,4271,4272,4273,4274,4275,4276,4277,4278,4279,4280,4281,4282,4283,4284,4285,4286,4287,4288,4289,4290,4291,4292,4293,4294,4295,4296,4297,4298,4299,4300,4301,4302,4303,4304,4305,4306,4307,4308,4309,4310,4311,4312,4313,4314,4315,4316,4317,4318,4319,4320,4321,4322,4323,4324,4325,4326,4327,4328,4329,4330,4331,4332,4333,4334,4335,4336,4337,4338,4339,4340,4341,4342,4343,4344,4345,4346,4347,4348,4349,4350,4351,4352,4353,4354,4355,4356,4357,4358,4359,4360,4361,4362,4363,4364,4365,4366,4367,4368,4369,4370,4371,4372,4373,4374,4375,4376,4377,4378,4379,4380,4381,4382,4383,4384,4385,4386,4387,4388,4389,4390,4391,4392,4393,4394,4395,4396,4397,4398,4399,4400,4401,4402,4403,4404,4405,4406,4407,4408,4409,4410,4411,4412,4413,4414,4415,4416,4417,4418,4419,4420,4421,4422,4423,4424,4425,4426,4427,4428,4429,4430,4431,4432,4433,4434,4435,4436,4437,4438,4439,4440,4441,4442,4443,4444,4445,4446,4447,4448,4449,4450,4451,4452,4453,4454,4455,4456,4457,4458,4459,4460,4461,4462,4463,4464,4465,4466,4467,4468,4469,4470,4471,4472,4473,4474,4475,4476,4477,4478,4479,4480,4481,4482,4483,4484,4485,4486,4487,4488,4489,4490,4491,4492,4493,4494,4495,4496,4497,4498,4499,4500,4501,4502,4503,4504,4505,4506,4507,4508,4509,4510,4511,4512,4513,4514,4515,4516,4517,4518,4519,4520,4521,4522,4523,4524,4525,4526,4527,4528,4529,4530,4531,4532,4533,4534,4535,4536,4537,4538,4539,4540,4541,4542,4543,4544,4545,4546,4547,4548,4549,4550,4551,4552,4553,4554,4555,4556,4557,4558,4559,4560,4561,4562,4563,4564,4565,4566,4567,4568,4569,4570,4571,4572,4573,4574,4575,4576,4577,4578,4579,4580,4581,4582,4583,4584,4585,4586,4587,4588,4589,4590,4591,4592,4593,4594,4595,4596,4597,4598,4599,4600,4601,4602,4603,4604,4605,4606,4607,4608,4609,4610,4611,4612,4613,4614,4615,4616,4617,4618,4619,4620,4621,4622,4623,4624,4625,4626,4627,4628,4629,4630,4631,4632,4633,4634,4635,4636,4637,4638,4639,4640,4641,4642,4643,4644,4645,4646,4647,4648,4649,4650,4651,4652,4653,4654,4655,4656,4657,4658,4659,4660,4661,4662,4663,4664,4665,4666,4667,4668,4669,4670,4671,4672,4673,4674,4675,4676,4677,4678,4679,4680,4681,4682,4683,4684,4685,4686,4687,4688,4689,4690,4691,4692,4693,4694,4695,4696,4697,4698,4699,4700,4701,4702,4703,4704,4705,4706,4707,4708,4709,4710,4711,4712,4713,4714,4715,4716,4717,4718,4719,4720,4721,4722,4723,4724,4725,4726,4727,4728,4729,4730,4731,4732,4733,4734,4735,4736,4737,4738,4739,4740,4741,4742,4743,4744,4745,4746,4747,4748,4749,4750,4751,4752,4753,4754,4755,4756,4757,4758,4759,4760,4761,4762,4763,4764,4765,4766,4767,4768,4769,4770,4771,4772,4773,4774,4775,4776,4777,4778,4779,4780,4781,4782,4783,4784,4785,4786,4787,4788,4789,4790,4791,4792,4793,4794,4795,4796,4797,4798,4799,4800,4801,4802,4803,4804,4805,4806,4807,4808,4809,4810,4811,4812,4813,4814,4815,4816,4817,4818,4819,4820,4821,4822,4823,4824,4825,4826,4827,4828,4829,4830,4831,4832,4833,4834,4835,4836,4837,4838,4839,4840],"privDecls": [4841,4842,4843,4844,4845,4846,4847,4848,4849,4850,4851,4852],"file": 46},{"kind": 7,"len": 32767,"elem": 598},{"kind": 15,"name": "std.os.windows.GetFileSizeError","errors": [90]},{"kind": 15,"name": "std.math.error:1073:52","errors": [91]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.debug.printLineFromFileAnyOs)).Fn.return_type.?).ErrorUnion.error_set","fn": 478,"errors": [0,1,2,3,4,5,6,7,8,9,10,11,14,18,19,24,25,26,28,29,30,31,33,34,35,36,41,42,43,76]},{"kind": 13,"child": 859},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set","fn": 485,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set","fn": 487,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set","fn": 488,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 8,"name": "std.os.windows.TEB","src": 593,"pubDecls": [],"privDecls": [],"fields": [1854,1104,1855,1856,1857,741,1858,840,1859,840]},{"kind": 15,"name": "std.unicode.Utf8Decode2Error","errors": [46,47]},{"kind": 15,"name": "std.unicode.Utf8Decode3Error","errors": [92,93,48]},{"kind": 15,"name": "std.unicode.Utf8Decode4Error","errors": [94,95,49]},{"kind": 15,"name": "std.os.windows.VirtualAllocError","errors": [96]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatText)).Fn.return_type.?).ErrorUnion.error_set","fn": 501,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "std.math.error:449:43","errors": [97]},{"kind": 15,"name": "std.os.windows.OpenError","errors": [98,99,100,101,102,103,104,105,106,107]},{"kind": 13,"child": 1860},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.os.windows.LockFile)).Fn.return_type.?).ErrorUnion.error_set","fn": 510,"errors": [11,6,9]},{"kind": 6,"elem": 1851},{"kind": 8,"name": "std.os.windows.IO_STATUS_BLOCK","src": 594,"pubDecls": [],"privDecls": [],"fields": [1861,602]},{"kind": 8,"name": "std.os.windows.ntstatus","src": 595,"pubDecls": [4853],"privDecls": [],"file": 47},{"kind": 15,"name": "std.os.windows.SetFilePointerError","errors": [108]},{"kind": 15,"name": "std.fmt.error:1761:39","errors": [109]},{"kind": 15,"name": "std.math.error:993:44","errors": [110]},{"kind": 15,"name": "std.math.error:449:43","errors": [111]},{"kind": 15,"name": "std.math.error:455:43","errors": [112]},{"kind": 15,"name": "std.math.error:462:43","errors": [113]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readVarInt)).Fn.return_type.?).ErrorUnion.error_set","fn": 540,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readInt)).Fn.return_type.?).ErrorUnion.error_set","fn": 542,"errors": [60]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.io.reader.Reader(*std.io.fixed_buffer_stream.FixedBufferStream([]const u8),std.io.fixed_buffer_stream.ReadError,std.io.fixed_buffer_stream.FixedBufferStream([]const u8).read).readBytesNoEof)).Fn.return_type.?).ErrorUnion.error_set","fn": 543,"errors": [60]},{"kind": 7,"len": 1,"elem": 676},{"kind": 6,"len": 2,"elem": 1571},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.Utf16LeIterator.nextCodepoint)).Fn.return_type.?).ErrorUnion.error_set","fn": 556,"errors": [114,115,116]},{"kind": 13,"child": 1197},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8CodepointSequenceLength)).Fn.return_type.?).ErrorUnion.error_set","fn": 557,"errors": [117]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.unicode.utf8Encode)).Fn.return_type.?).ErrorUnion.error_set","fn": 558,"errors": [118,117]},{"kind": 15,"name": "std.os.windows.SetConsoleTextAttributeError","errors": [119]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set","fn": 582,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.format)).Fn.return_type.?).ErrorUnion.error_set","fn": 586,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatText)).Fn.return_type.?).ErrorUnion.error_set","fn": 599,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.Thread.StaticResetEvent.WindowsFutex.wait)).Fn.return_type.?).ErrorUnion.error_set","fn": 600,"errors": [120]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.Thread.StaticResetEvent.SpinFutex.wait)).Fn.return_type.?).ErrorUnion.error_set","fn": 602,"errors": [120]},{"kind": 15,"name": "std.time.Error","errors": [121]},{"kind": 15,"name": "std.os.SchedYieldError","errors": [122]},{"kind": 8,"name": "std.hash.wyhash","src": 596,"pubDecls": [4854],"privDecls": [4855,4856,4857,4858,4859,4860,4861,4862,4863,4864],"file": 48},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.heap.arena_allocator.ArenaAllocator.alloc)).Fn.return_type.?).ErrorUnion.error_set","fn": 610,"errors": [55]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.heap.arena_allocator.ArenaAllocator.createNode)).Fn.return_type.?).ErrorUnion.error_set","fn": 611,"errors": [55]},{"kind": 15,"name": "std.math.error:993:44","errors": [123]},{"kind": 15,"name": "std.math.error:993:44","errors": [124]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatText)).Fn.return_type.?).ErrorUnion.error_set","fn": 638,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatValue)).Fn.return_type.?).ErrorUnion.error_set","fn": 639,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatIntValue)).Fn.return_type.?).ErrorUnion.error_set","fn": 640,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatValue)).Fn.return_type.?).ErrorUnion.error_set","fn": 641,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatIntValue)).Fn.return_type.?).ErrorUnion.error_set","fn": 642,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatValue)).Fn.return_type.?).ErrorUnion.error_set","fn": 643,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatIntValue)).Fn.return_type.?).ErrorUnion.error_set","fn": 644,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatInt)).Fn.return_type.?).ErrorUnion.error_set","fn": 645,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatText)).Fn.return_type.?).ErrorUnion.error_set","fn": 647,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 15,"name": "@typeInfo(@typeInfo(@TypeOf(std.fmt.formatText)).Fn.return_type.?).ErrorUnion.error_set","fn": 648,"errors": [0,1,2,3,4,5,6,7,8,9,10,11]},{"kind": 7,"len": 256,"elem": 602},{"kind": 8,"name": "std.builtin.Version","src": 597,"pubDecls": [4865,4866,4867,4868],"privDecls": [],"fields": [641,641,641]},{"kind": 8,"name": "std.meta.trait","src": 598,"pubDecls": [4869,4870,4871,4872,4873,4874,4875,4876,4877,4878,4879,4880,4881,4882,4883,4884,4885,4886,4887,4888,4889,4890,4891,4892,4893,4894],"privDecls": [4895,4896,4897,4898,4899,4900],"file": 49},{"kind": 8,"name": "std.hash.wyhash.Wyhash","src": 599,"pubDecls": [4901,4902,4903,4904],"privDecls": [],"fields": [1209,1312,602]},{"kind": 17,"name": "std.debug.PdbOrDwarf","src": 600,"pubDecls": [],"privDecls": [],"fields": [1466,819]},{"kind": 6,"len": 1,"elem": 1059},{"kind": 8,"name": "std.dwarf.PcRange","src": 601,"pubDecls": [],"privDecls": [],"fields": [614,614]},{"kind": 17,"name": "std.coff.Misc","src": 602,"pubDecls": [],"privDecls": [],"fields": [641,641]},{"kind": 16,"name": "std.target.WindowsVersion","src": 603,"pubDecls": [4905,4906,4907,4908,4909],"privDecls": [],"fields": [67108864,83886080,83951616,84017152,100663296,100728832,100794368,100859904,167772160,167772161,167772162,167772163,167772164,167772165,167772166,167772167,167772168,167772169,167772170]},{"kind": 8,"name": "std.target.LinuxVersionRange","src": 604,"pubDecls": [4910,4911],"privDecls": [],"fields": [1864,1639]},{"kind": 17,"name": "std.target.VersionRange","src": 605,"pubDecls": [4912],"privDecls": [],"fields": [603,1864,1647,1866]},{"kind": 8,"name": "std.target.x86.cpu","src": 606,"pubDecls": [4913,4914,4915,4916,4917,4918,4919,4920,4921,4922,4923,4924,4925,4926,4927,4928,4929,4930,4931,4932,4933,4934,4935,4936,4937,4938,4939,4940,4941,4942,4943,4944,4945,4946,4947,4948,4949,4950,4951,4952,4953,4954,4955,4956,4957,4958,4959,4960,4961,4962,4963,4964,4965,4966,4967,4968,4969,4970,4971,4972,4973,4974,4975,4976,4977,4978,4979,4980,4981,4982,4983,4984,4985,4986,4987,4988,4989,4990,4991,4992,4993,4994,4995,4996,4997,4998],"privDecls": []},{"kind": 8,"name": "std.target.Feature","src": 607,"pubDecls": [4999,5000],"privDecls": [],"fields": [599,648,1867,648,835]},{"kind": 8,"name": "std.target.Model","src": 608,"pubDecls": [5001,5002,5003],"privDecls": [],"fields": [648,1867,835]},{"kind": 6,"const": true,"elem": 1651},{"kind": 18,"name": "fn(anytype) anytype","generic": true,"args": [null]},{"kind": 16,"name": "std.builtin.GlobalLinkage","src": 609,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3]},{"kind": 16,"name": "std.builtin.AtomicOrder","src": 610,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5]},{"kind": 16,"name": "std.builtin.AtomicRmwOp","src": 611,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5,6,7,8]},{"kind": 16,"name": "std.builtin.CallingConvention","src": 612,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]},{"kind": 16,"name": "std.builtin.AddressSpace","src": 613,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3]},{"kind": 8,"name": "std.builtin.CallOptions","src": 614,"pubDecls": [5004],"privDecls": [],"fields": [1868,1869]},{"kind": 8,"name": "std.builtin.ExportOptions","src": 615,"pubDecls": [],"privDecls": [],"fields": [648,1654,990]},{"kind": 20,"name": "(anytype)"},{"kind": 6,"len": 2,"const": true,"elem": 1269},{"kind": 6,"len": 2,"const": true,"elem": 1285},{"kind": 6,"len": 2,"const": true,"elem": 1273},{"kind": 6,"len": 2,"const": true,"elem": 1275},{"kind": 13,"child": 592},{"kind": 6,"len": 2,"const": true,"elem": 1277},{"kind": 6,"len": 2,"const": true,"elem": 1279},{"kind": 17,"name": "std.builtin.Data","src": 616,"pubDecls": [5005],"privDecls": [],"fields": [592,592,1870]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(anytype) anytype","generic": true,"args": [null]},{"kind": 18,"name": "fn(anytype) anytype","generic": true,"args": [null]},{"kind": 18,"name": "fn(anytype) anytype","generic": true,"args": [null]},{"kind": 18,"name": "fn(anytype) anytype","generic": true,"args": [null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype,anytype) anytype","generic": true,"args": [592,null,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype,anytype) anytype","generic": true,"args": [592,null,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype,anytype) anytype","generic": true,"args": [592,null,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(anytype) anytype","generic": true,"args": [null]},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 18,"name": "fn(anytype) anytype","generic": true,"args": [null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 6,"elem": 1294},{"kind": 6,"elem": 1299},{"kind": 8,"name": "std.event.loop.Loop","src": 617,"pubDecls": [5006,5007,5008,5009,5010,5011,5012,5013,5014,5015,5016,5017,5018,5019,5020,5021,5022,5023,5024,5025,5026,5027,5028,5029,5030,5031,5032,5033,5034,5035,5036,5037,5038,5039,5040,5041,5042,5043,5044,5045,5046,5047,5048,5049],"privDecls": [5050,5051,5052,5053,5054,5055,5056,5057,5058,5059,5060,5061,5062,5063,5064],"fields": [714,1873,1309,602,1874,1335,721,1299,1745,1116,1872,727,1875]},{"kind": 8,"name": "std.event.loop.Read","src": 618,"pubDecls": [5065],"privDecls": [],"fields": [840,674,879]},{"kind": 8,"name": "std.event.loop.ReadV","src": 619,"pubDecls": [5066],"privDecls": [],"fields": [840,1876,879]},{"kind": 8,"name": "std.event.loop.Write","src": 620,"pubDecls": [5067],"privDecls": [],"fields": [840,648,843]},{"kind": 8,"name": "std.event.loop.WriteV","src": 621,"pubDecls": [5068],"privDecls": [],"fields": [840,1877,843]},{"kind": 8,"name": "std.event.loop.PWrite","src": 622,"pubDecls": [5069],"privDecls": [],"fields": [840,648,602,1878]},{"kind": 8,"name": "std.event.loop.PWriteV","src": 623,"pubDecls": [5070],"privDecls": [],"fields": [840,1877,602,1878]},{"kind": 8,"name": "std.event.loop.PRead","src": 624,"pubDecls": [5071],"privDecls": [],"fields": [840,674,602,1879]},{"kind": 8,"name": "std.event.loop.PReadV","src": 625,"pubDecls": [5072],"privDecls": [],"fields": [840,1876,602,1879]},{"kind": 8,"name": "std.event.loop.Open","src": 626,"pubDecls": [5073],"privDecls": [],"fields": [1199,641,1748,1880]},{"kind": 8,"name": "std.event.loop.OpenAt","src": 627,"pubDecls": [5074],"privDecls": [],"fields": [840,1199,641,1748,1880]},{"kind": 8,"name": "std.event.loop.Close","src": 628,"pubDecls": [],"privDecls": [],"fields": [840]},{"kind": 8,"name": "std.event.loop.FAccessAt","src": 629,"pubDecls": [5075],"privDecls": [],"fields": [840,1199,641,641,1881]},{"kind": 6,"elem": 1307},{"kind": 8,"name": "std.os.windows.OVERLAPPED","src": 630,"pubDecls": [],"privDecls": [],"fields": [602,602,1882,1169]},{"kind": 16,"name": "std.event.loop.Id","src": 631,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 16,"name": "std.pdb.SymbolKind","src": 632,"pubDecls": [],"privDecls": [],"fields": [1,2,3,4,5,7,8,9,10,11,12,13,14,256,257,258,259,260,261,262,263,264,265,266,267,268,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,768,769,1024,1025,1026,1027,1028,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4352,4356,4362,4372,4373,4375,4376,4377,4378,4379,4382,4383,4384,4385,4386,4387,4388,4390,4392,4393,4394,4395,4398,4399,4400,4401,4402,4403,4404,4405,4411,4424,4425,4426,4427,4432,4433,4434,4436,4439,4440,4441,4444,4445,4447,4448,4449,4450,4451,4452,4453,4455,4456,6,4430,4431,4354,4396,4406,4407,4408,4367,4368,4422,4423,4437,4438,4358,4366,4389,4391,4413,4429,4414,4415,4416,4417,4418,4419,4420,4421,4355,4357,4353,4374,4412,4114,4409,4435,4446,4410,4442,4443,4360,4361,4428,4363,4369,4359,4397,4364,4365,4380,4381,4370,4371]},{"kind": 8,"name": "std.pdb.ProcSym","src": 633,"pubDecls": [],"privDecls": [],"fields": [641,641,641,641,641,641,641,641,598,1715]},{"kind": 8,"name": "std.pdb.ProcSymFlags","src": 634,"pubDecls": [],"privDecls": [],"fields": [604,604,604,604,604,604,604,604]},{"kind": 8,"name": "std.pdb.RecordPrefix","src": 635,"pubDecls": [],"privDecls": [],"fields": [598,1713]},{"kind": 8,"name": "std.pdb.LineFragmentHeader","src": 636,"pubDecls": [],"privDecls": [],"fields": [641,598,1718,641]},{"kind": 8,"name": "std.pdb.LineFlags","src": 637,"pubDecls": [],"privDecls": [],"fields": [604,1883]},{"kind": 8,"name": "std.pdb.LineBlockFragmentHeader","src": 638,"pubDecls": [],"privDecls": [],"fields": [641,641,641]},{"kind": 8,"name": "std.pdb.LineNumberEntry","src": 639,"pubDecls": [5076],"privDecls": [],"fields": [641,641]},{"kind": 8,"name": "std.pdb.ColumnNumberEntry","src": 640,"pubDecls": [],"privDecls": [],"fields": [598,598]},{"kind": 8,"name": "std.pdb.FileChecksumEntryHeader","src": 641,"pubDecls": [],"privDecls": [],"fields": [641,676,676]},{"kind": 16,"name": "std.pdb.DebugSubsectionKind","src": 642,"pubDecls": [],"privDecls": [],"fields": [0,241,242,243,244,245,246,247,248,249,250,251,252,253]},{"kind": 8,"name": "std.pdb.DebugSubsectionHeader","src": 643,"pubDecls": [],"privDecls": [],"fields": [1723,641]},{"kind": 8,"name": "std.pdb.PDBStringTableHeader","src": 644,"pubDecls": [],"privDecls": [],"fields": [641,641,641]},{"kind": 18,"name": "fn(anytype,anytype) anytype","generic": true,"args": [null,null]},{"kind": 7,"len": 32,"elem": 676},{"kind": 8,"name": "std.dwarf.TAG","src": 645,"pubDecls": [5077,5078,5079,5080,5081,5082,5083,5084,5085,5086,5087,5088,5089,5090,5091,5092,5093,5094,5095,5096,5097,5098,5099,5100,5101,5102,5103,5104,5105,5106,5107,5108,5109,5110,5111,5112,5113,5114,5115,5116,5117,5118,5119,5120,5121,5122,5123,5124,5125,5126,5127,5128,5129,5130,5131,5132,5133,5134,5135,5136,5137,5138,5139,5140,5141,5142,5143,5144,5145,5146,5147,5148,5149,5150,5151,5152,5153,5154,5155,5156,5157,5158,5159],"privDecls": [],"file": 50},{"kind": 8,"name": "std.dwarf.AT","src": 646,"pubDecls": [5160,5161,5162,5163,5164,5165,5166,5167,5168,5169,5170,5171,5172,5173,5174,5175,5176,5177,5178,5179,5180,5181,5182,5183,5184,5185,5186,5187,5188,5189,5190,5191,5192,5193,5194,5195,5196,5197,5198,5199,5200,5201,5202,5203,5204,5205,5206,5207,5208,5209,5210,5211,5212,5213,5214,5215,5216,5217,5218,5219,5220,5221,5222,5223,5224,5225,5226,5227,5228,5229,5230,5231,5232,5233,5234,5235,5236,5237,5238,5239,5240,5241,5242,5243,5244,5245,5246,5247,5248,5249,5250,5251,5252,5253,5254,5255,5256,5257,5258,5259,5260,5261,5262,5263,5264,5265,5266,5267,5268,5269,5270,5271,5272,5273,5274,5275,5276,5277,5278,5279,5280,5281,5282,5283,5284,5285,5286,5287,5288,5289,5290,5291,5292,5293,5294,5295,5296,5297,5298,5299,5300,5301,5302,5303,5304,5305,5306,5307,5308,5309,5310,5311,5312,5313,5314,5315,5316,5317,5318,5319,5320,5321,5322,5323,5324,5325,5326,5327,5328],"privDecls": [],"file": 51},{"kind": 8,"name": "std.dwarf.FORM","src": 647,"pubDecls": [5329,5330,5331,5332,5333,5334,5335,5336,5337,5338,5339,5340,5341,5342,5343,5344,5345,5346,5347,5348,5349,5350,5351,5352,5353,5354,5355,5356,5357],"privDecls": []},{"kind": 8,"name": "std.dwarf.CHILDREN","src": 648,"pubDecls": [5358,5359],"privDecls": []},{"kind": 8,"name": "std.dwarf.LNS","src": 649,"pubDecls": [5360,5361,5362,5363,5364,5365,5366,5367,5368,5369,5370,5371,5372],"privDecls": []},{"kind": 8,"name": "std.dwarf.LNE","src": 650,"pubDecls": [5373,5374,5375,5376,5377,5378],"privDecls": []},{"kind": 8,"name": "std.leb128","src": 651,"pubDecls": [5379,5380,5381,5382,5383],"privDecls": [5384,5385,5386,5387,5388,5389,5390,5391,5392],"file": 52},{"kind": 18,"name": "fn(anytype,anytype,anytype) anytype","generic": true,"args": [null,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,anytype,anytype) anytype","generic": true,"args": [859,null,null]},{"kind": 18,"name": "fn(anytype,anytype,anytype) anytype","generic": true,"args": [null,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,anytype,anytype) anytype","generic": true,"args": [859,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,anytype,anytype,anytype) anytype","generic": true,"args": [859,null,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,anytype,anytype,anytype,anytype) anytype","generic": true,"args": [859,null,null,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,anytype,anytype,anytype) anytype","generic": true,"args": [859,null,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,anytype,anytype,anytype,anytype) anytype","generic": true,"args": [859,null,null,null,null]},{"kind": 6,"len": 1,"elem": 1333},{"kind": 8,"name": "std.Thread.AutoResetEvent","src": 652,"pubDecls": [5393,5394,5395],"privDecls": [5396,5397,5398,5399,5400,5401,5402,5403,5404,5405],"fields": [602],"file": 53},{"kind": 8,"name": "std.Thread.ResetEvent","src": 653,"pubDecls": [5406,5407,5408,5409,5410,5411,5412,5413,5414,5415,5416],"privDecls": [5417,5418,5419,5420,5421,5422,5423,5424],"fields": [1542],"file": 54},{"kind": 8,"name": "std.Thread.WindowsThreadImpl","src": 654,"pubDecls": [5425],"privDecls": [5426,5427,5428,5429,5430,5431,5432,5433],"fields": [1888]},{"kind": 8,"name": "std.c.windows","src": 655,"pubDecls": [2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396],"privDecls": [5434,5435,5436],"file": 55},{"kind": 4,"u": 0},{"kind": 18,"name": "fn(std.builtin.StackTrace,anytype,anytype,anytype,anytype) anytype","generic": true,"args": [847,null,null,null,null]},{"kind": 18,"name": "fn(anytype,anytype,anytype,anytype) anytype","generic": true,"args": [null,null,null,null]},{"kind": 18,"name": "fn(anytype,anytype,anytype,anytype) anytype","generic": true,"args": [null,null,null,null]},{"kind": 8,"name": "std.debug.TTY","src": 656,"pubDecls": [5437,5438],"privDecls": []},{"kind": 18,"name": "fn(*std.debug.DebugInfo,anytype,anytype,anytype) anytype","generic": true,"args": [863,null,null,null]},{"kind": 13,"child": 1115},{"kind": 6,"const": true,"elem": 1889},{"kind": 6,"const": true,"elem": 1890},{"kind": 18,"name": "fn(anytype,anytype,anytype,anytype,anytype,anytype,anytype) anytype","generic": true,"args": [null,null,null,null,null,null,null]},{"kind": 18,"name": "fn(anytype,anytype) anytype","generic": true,"args": [null,null]},{"kind": 8,"name": "std.debug.MachoSymbol","src": 657,"pubDecls": [],"privDecls": [5439,5440],"fields": [1891,1892,614]},{"kind": 18,"name": "fn(anytype,anytype,anytype) anytype","generic": true,"args": [null,null,null]},{"kind": 18,"name": "fn(anytype,anytype,anytype,anytype,anytype) anytype","generic": true,"args": [null,null,null,null,null]},{"kind": 18,"name": "fn(anytype,anytype,anytype,anytype) anytype","generic": true,"args": [null,null,null,null]},{"kind": 18,"name": "fn([]const u8,[]const u8,anytype,anytype) anytype","generic": true,"args": [648,648,null,null]},{"kind": 18,"name": "fn([]const u8,std.fmt.FormatOptions,anytype) anytype","generic": true,"args": [648,855,null]},{"kind": 18,"name": "fn(anytype,anytype,anytype,anytype,anytype) anytype","generic": true,"args": [null,null,null,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 6,"const": true,"elem": 1893},{"kind": 18,"name": "fn(anytype,anytype,anytype,anytype) anytype","generic": true,"args": [null,null,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype,anytype) anytype","generic": true,"args": [592,null,null,null]},{"kind": 8,"name": "std.heap.PageAllocator","src": 658,"pubDecls": [],"privDecls": [5441,5442]},{"kind": 16,"name": "std.io.Mode","src": 659,"pubDecls": [],"privDecls": [],"fields": [0,1]},{"kind": 8,"name": "std.macho.nlist_64","src": 660,"pubDecls": [],"privDecls": [],"fields": [641,676,676,598,614]},{"kind": 18,"name": "fn(anytype,anytype) anytype","generic": true,"args": [null,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(anytype) anytype","generic": true,"args": [null]},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 18,"name": "fn(type,anytype,anytype) anytype","generic": true,"args": [592,null,null]},{"kind": 18,"name": "fn(anytype,anytype) anytype","generic": true,"args": [null,null]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 18,"name": "fn(anytype,anytype) anytype","generic": true,"args": [null,null]},{"kind": 8,"name": "std.os.iovec","src": 661,"pubDecls": [],"privDecls": [],"fields": [693,602]},{"kind": 8,"name": "std.os.iovec_const","src": 662,"pubDecls": [],"privDecls": [],"fields": [815,602]},{"kind": 15,"name": "std.os.PReadError","errors": [12,13,14,15,16,17,18,19,20,21,11,125]},{"kind": 15,"name": "std.os.PWriteError","errors": [0,1,2,3,4,5,6,7,8,9,10,11,126]},{"kind": 15,"name": "std.os.OpenError","errors": [127,33,34,35,36,128,129,37,38,39,40,41,130,42,43,131,132,44,11]},{"kind": 15,"name": "std.os.FStatError","errors": [45,133,11]},{"kind": 15,"name": "std.os.AccessError","errors": [134,135,136,137,138,139,140,141,142,143,11]},{"kind": 15,"name": "std.os.FlockError","errors": [144,145,146,11]},{"kind": 18,"name": "fn([]const u8) anytype","generic": true,"args": [648]},{"kind": 7,"len": 256,"elem": 676},{"kind": 18,"name": "fn(*std.mem.Allocator,type) anytype","generic": true,"args": [859,592]},{"kind": 18,"name": "fn(*std.mem.Allocator,anytype) anytype","generic": true,"args": [859,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,type,anytype) anytype","generic": true,"args": [859,592,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,type,anytype,anytype) anytype","generic": true,"args": [859,592,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,type,anytype,anytype,anytype,anytype) anytype","generic": true,"args": [859,592,null,null,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,anytype,anytype) anytype","generic": true,"args": [859,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,anytype,anytype) anytype","generic": true,"args": [859,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,anytype,anytype,anytype,anytype,anytype) anytype","generic": true,"args": [859,null,null,null,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,anytype,anytype) anytype","generic": true,"args": [859,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,anytype,anytype,anytype,anytype) anytype","generic": true,"args": [859,null,null,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,anytype) anytype","generic": true,"args": [859,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,type,anytype) anytype","generic": true,"args": [859,592,null]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, u29, u29, usize) std.mem.Allocator.Error![]u8","generic": false,"ret": 903,"args": [859,602,1118,1118,602]},{"kind": 8,"name": "std.coff.DataDirectory","src": 663,"pubDecls": [],"privDecls": [],"fields": [641,641]},{"kind": 7,"len": 16,"elem": 1808},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 8,"name": "std.Thread.StaticResetEvent.WindowsFutex","src": 664,"pubDecls": [5443,5444,5445],"privDecls": [5446,5447,5448]},{"kind": 8,"name": "std.Thread.StaticResetEvent.SpinFutex","src": 665,"pubDecls": [],"privDecls": [5449,5450]},{"kind": 6,"elem": 1848},{"kind": 6,"elem": 1849},{"kind": 6,"elem": 1842},{"kind": 17,"name": "std.os.windows.union:3279:13","src": 666,"pubDecls": [],"privDecls": [],"fields": [840,840]},{"kind": 6,"elem": 1847},{"kind": 7,"len": 2,"elem": 641},{"kind": 6,"elem": 840},{"kind": 7,"len": 60,"elem": 641},{"kind": 7,"len": 32,"elem": 641},{"kind": 8,"name": "std.os.windows.UNICODE_STRING","src": 667,"pubDecls": [],"privDecls": [],"fields": [1894,1894,747]},{"kind": 6,"const": true,"elem": 1844},{"kind": 6,"elem": 1845},{"kind": 6,"elem": 1846},{"kind": 8,"name": "std.os.windows.LIST_ENTRY","src": 668,"pubDecls": [],"privDecls": [],"fields": [1895,1895]},{"kind": 7,"len": 4,"elem": 641},{"kind": 7,"len": 128,"elem": 840},{"kind": 8,"name": "std.os.windows.kernel32","src": 669,"pubDecls": [5451,5452,5453,5454,5455,5456,5457,5458,5459,5460,5461,5462,5463,5464,5465,5466,5467,5468,5469,5470,5471,5472,5473,5474,5475,5476,5477,5478,5479,5480,5481,5482,5483,5484,5485,5486,5487,5488,5489,5490,5491,5492,5493,5494,5495,5496,5497,5498,5499,5500,5501,5502,5503,5504,5505,5506,5507,5508,5509,5510,5511,5512,5513,5514,5515,5516,5517,5518,5519,5520,5521,5522,5523,5524,5525,5526,5527,5528,5529,5530,5531,5532,5533,5534,5535,5536,5537,5538,5539,5540,5541,5542,5543,5544,5545,5546,5547,5548,5549,5550,5551,5552,5553,5554,5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5565,5566,5567,5568,5569,5570,5571,5572,5573,5574,5575,5576,5577,5578,5579,5580,5581,5582,5583,5584,5585,5586,5587,5588,5589],"privDecls": [5590,5591,5592,5593,5594,5595,5596,5597,5598,5599,5600,5601,5602,5603,5604,5605,5606,5607,5608,5609,5610,5611,5612,5613,5614,5615,5616,5617,5618,5619,5620,5621,5622,5623,5624,5625,5626,5627,5628,5629,5630,5631,5632,5633,5634,5635,5636,5637,5638,5639,5640,5641,5642,5643,5644,5645,5646],"file": 56},{"kind": 8,"name": "std.os.windows.ntdll","src": 670,"pubDecls": [5647,5648,5649,5650,5651,5652,5653,5654,5655,5656,5657,5658,5659,5660,5661,5662,5663,5664,5665,5666,5667,5668],"privDecls": [5669,5670,5671,5672,5673,5674,5675,5676,5677,5678,5679,5680,5681,5682,5683,5684,5685,5686,5687,5688,5689,5690,5691],"file": 57},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 4,"u": 32},{"kind": 4,"i": 16},{"kind": 8,"name": "std.os.windows.FILE_NAME_INFO","src": 671,"pubDecls": [],"privDecls": [],"fields": [641,1924]},{"kind": 8,"name": "std.os.windows.SECURITY_ATTRIBUTES","src": 672,"pubDecls": [],"privDecls": [],"fields": [641,1169,838]},{"kind": 8,"name": "std.os.windows.SMALL_RECT","src": 673,"pubDecls": [],"privDecls": [],"fields": [1834,1834,1834,1834]},{"kind": 8,"name": "std.os.windows.COORD","src": 674,"pubDecls": [],"privDecls": [],"fields": [1834,1834]},{"kind": 13,"child": 1925},{"kind": 8,"name": "std.os.windows.CONSOLE_SCREEN_BUFFER_INFO","src": 675,"pubDecls": [],"privDecls": [],"fields": [1838,1838,598,1837,1838]},{"kind": 8,"name": "std.os.windows.RTL_CRITICAL_SECTION_DEBUG","src": 676,"pubDecls": [],"privDecls": [],"fields": [598,598,1815,1826,641,641,641,598,598]},{"kind": 8,"name": "std.os.windows.RTL_CRITICAL_SECTION","src": 677,"pubDecls": [],"privDecls": [],"fields": [1926,834,834,840,840,602]},{"kind": 8,"name": "std.os.windows.OBJECT_ATTRIBUTES","src": 678,"pubDecls": [],"privDecls": [],"fields": [641,1169,1927,641,1169,1169]},{"kind": 20,"name": "std.os.windows.ACTIVATION_CONTEXT_DATA"},{"kind": 20,"name": "std.os.windows.ASSEMBLY_STORAGE_MAP"},{"kind": 20,"name": "std.os.windows.FLS_CALLBACK_INFO"},{"kind": 20,"name": "std.os.windows.RTL_BITMAP"},{"kind": 8,"name": "std.os.windows.PEB_LDR_DATA","src": 679,"pubDecls": [],"privDecls": [],"fields": [641,676,840,1826,1826,1826,840,676,840]},{"kind": 8,"name": "std.os.windows.RTL_USER_PROCESS_PARAMETERS","src": 680,"pubDecls": [],"privDecls": [],"fields": [641,641,641,641,840,641,840,840,840,1852,1822,1822,1822,748,641,641,641,641,641,641,641,641,641,1822,1822,1822,1822,1928]},{"kind": 8,"name": "std.os.windows.RTL_DRIVE_LETTER_CURDIR","src": 681,"pubDecls": [],"privDecls": [],"fields": [1894,1894,641,1822]},{"kind": 18,"name": "fn(*c_void, *std.os.windows.IO_STATUS_BLOCK, u32) callconv(.C) void","generic": false,"ret": 603,"args": [840,1177,641]},{"kind": 8,"name": "std.os.windows.CURDIR","src": 682,"pubDecls": [],"privDecls": [],"fields": [1822,840]},{"kind": 8,"name": "std.os.windows.MODULEINFO","src": 683,"pubDecls": [],"privDecls": [],"fields": [840,641,840]},{"kind": 7,"len": 12,"elem": 840},{"kind": 7,"len": 399,"elem": 840},{"kind": 7,"len": 1952,"elem": 676},{"kind": 7,"len": 64,"elem": 840},{"kind": 7,"len": 26,"elem": 840},{"kind": 7,"len": 4,"elem": 840},{"kind": 6,"elem": 1836},{"kind": 17,"name": "std.os.windows.union:2290:8","src": 684,"pubDecls": [],"privDecls": [],"fields": [1180,1169]},{"kind": 7,"len": 5,"elem": 614},{"kind": 18,"name": "fn(u8,anytype) anytype","generic": true,"args": [676,null]},{"kind": 8,"name": "std.builtin.Range","src": 685,"pubDecls": [5692,5693],"privDecls": [],"fields": [1639,1639]},{"kind": 18,"name": "fn(type) anytype","generic": true,"args": [592]},{"kind": 8,"name": "std.target.Range","src": 686,"pubDecls": [5694,5695],"privDecls": [],"fields": [1646,1646]},{"kind": 13,"child": 756},{"kind": 16,"name": "std.builtin.Modifier","src": 687,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5,6,7]},{"kind": 13,"child": 1929},{"kind": 8,"name": "std.builtin.FnDecl","src": 688,"pubDecls": [],"privDecls": [],"fields": [592,604,604,604,604,990,592,985]},{"kind": 13,"child": 1930},{"kind": 8,"name": "std.event.loop.DelayQueue","src": 689,"pubDecls": [],"privDecls": [5696,5697,5698],"fields": [1208,1931,1335,1744,604]},{"kind": 8,"name": "std.event.loop.OsData","src": 690,"pubDecls": [],"privDecls": [],"fields": [840,602]},{"kind": 6,"len": 2,"elem": 1335},{"kind": 6,"len": 2,"elem": 1307},{"kind": 6,"len": 2,"const": true,"elem": 1785},{"kind": 6,"len": 2,"const": true,"elem": 1786},{"kind": 14,"err": 1788,"payload": 602},{"kind": 14,"err": 1787,"payload": 602},{"kind": 14,"err": 1789,"payload": 840},{"kind": 14,"err": 1791,"payload": 603},{"kind": 17,"name": "std.os.windows.union:2379:21","src": 691,"pubDecls": [],"privDecls": [],"fields": [1932,1169]},{"kind": 4,"u": 15},{"kind": 8,"name": "std.pdb.Flags","src": 692,"pubDecls": [],"privDecls": [],"fields": [1933,1152,604]},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 18,"name": "fn(type,anytype) anytype","generic": true,"args": [592,null]},{"kind": 8,"name": "std.Thread.ThreadCompletion","src": 693,"pubDecls": [],"privDecls": [5699],"fields": [719,840,840,840]},{"kind": 6,"elem": 1887},{"kind": 7,"len": 7,"elem": 676},{"kind": 7,"len": 4,"elem": 676},{"kind": 6,"const": true,"elem": 1772},{"kind": 13,"child": 1891},{"kind": 7,"len": 3,"elem": 676},{"kind": 4,"u": 16},{"kind": 6,"elem": 1826},{"kind": 18,"name": "fn(c_uint) callconv(.C) noreturn","generic": false,"ret": 832,"args": [1833]},{"kind": 18,"name": "fn(*c_void, *u32) callconv(.C) c_int","generic": false,"ret": 838,"args": [840,1018]},{"kind": 18,"name": "fn(*c_void, *std.os.windows.CONSOLE_SCREEN_BUFFER_INFO) callconv(.C) c_int","generic": false,"ret": 838,"args": [840,1934]},{"kind": 18,"name": "fn(u32, ?[*]u16) callconv(.C) u32","generic": false,"ret": 641,"args": [641,1935]},{"kind": 18,"name": "fn() callconv(.C) u32","generic": false,"ret": 641},{"kind": 18,"name": "fn() callconv(.C) *c_void","generic": false,"ret": 840},{"kind": 18,"name": "fn(*c_void, *i64) callconv(.C) c_int","generic": false,"ret": 838,"args": [840,1936]},{"kind": 18,"name": "fn() callconv(.C) std.os.windows.win32error.Win32Error","generic": false,"ret": 1106},{"kind": 18,"name": "fn(*c_void, u32, *c_void, u32) callconv(.C) c_int","generic": false,"ret": 838,"args": [840,641,840,641]},{"kind": 18,"name": "fn([*:0]const u16, u32, ?[*:0]u16, ?*?[*:0]u16) callconv(.C) u32","generic": false,"ret": 641,"args": [796,641,1937,1938]},{"kind": 18,"name": "fn(?*c_void, usize, u32, u32) callconv(.C) ?*c_void","generic": false,"ret": 1169,"args": [1169,602,641,641]},{"kind": 18,"name": "fn(?*c_void, usize, u32) callconv(.C) c_int","generic": false,"ret": 838,"args": [1169,602,641]},{"kind": 18,"name": "fn(*i64) callconv(.C) c_int","generic": false,"ret": 838,"args": [1936]},{"kind": 18,"name": "fn(*c_void, [*]u8, u32, ?*u32, ?*std.os.windows.OVERLAPPED) callconv(.C) c_int","generic": false,"ret": 838,"args": [840,693,641,1179,1939]},{"kind": 18,"name": "fn(*c_void, u16) callconv(.C) c_int","generic": false,"ret": 838,"args": [840,598]},{"kind": 18,"name": "fn(*c_void, i64, ?*i64, u32) callconv(.C) c_int","generic": false,"ret": 838,"args": [840,781,1940,641]},{"kind": 18,"name": "fn() callconv(.C) c_int","generic": false,"ret": 838},{"kind": 18,"name": "fn(*c_void, [*]const u8, u32, ?*u32, ?*std.os.windows.OVERLAPPED) callconv(.C) c_int","generic": false,"ret": 838,"args": [840,815,641,1179,1939]},{"kind": 18,"name": "fn(*c_void, [*]*std.os.windows.HMODULE, u32, *u32) callconv(.C) c_int","generic": false,"ret": 838,"args": [840,1941,641,1018]},{"kind": 18,"name": "fn(*c_void, ?*std.os.windows.HMODULE, [*:0]u16, u32) callconv(.C) u32","generic": false,"ret": 641,"args": [840,777,748,641]},{"kind": 18,"name": "fn(*c_void, *std.os.windows.HMODULE, *std.os.windows.MODULEINFO, u32) callconv(.C) c_int","generic": false,"ret": 838,"args": [840,775,1942,641]},{"kind": 18,"name": "fn(*usize) callconv(.C) void","generic": false,"ret": 603,"args": [1943]},{"kind": 18,"name": "fn(u32, u32, **c_void, ?*u32) callconv(.C) u16","generic": false,"ret": 598,"args": [641,641,1819,1179]},{"kind": 18,"name": "fn(**c_void, u32, *std.os.windows.OBJECT_ATTRIBUTES, *std.os.windows.IO_STATUS_BLOCK, ?*i64, u32, u32, u32, u32, ?*c_void, u32) callconv(.C) std.os.windows.ntstatus.NTSTATUS","generic": false,"ret": 1180,"args": [1819,641,1944,1177,1940,641,641,641,641,1169,641]},{"kind": 18,"name": "fn(*c_void) callconv(.C) std.os.windows.ntstatus.NTSTATUS","generic": false,"ret": 1180,"args": [840]},{"kind": 18,"name": "fn(**c_void, u32, ?*c_void, u32) callconv(.C) std.os.windows.ntstatus.NTSTATUS","generic": false,"ret": 1180,"args": [1819,641,1169,641]},{"kind": 18,"name": "fn(?*c_void, ?*const c_void, u8, ?*const i64) callconv(.C) std.os.windows.ntstatus.NTSTATUS","generic": false,"ret": 1180,"args": [1169,1945,676,1946]},{"kind": 18,"name": "fn(*c_void, ?*c_void, ?*fn(*c_void, *std.os.windows.IO_STATUS_BLOCK, u32) callconv(.C) void, ?*c_void, *std.os.windows.IO_STATUS_BLOCK, *const i64, *const i64, ?*u32, u8, u8) callconv(.C) std.os.windows.ntstatus.NTSTATUS","generic": false,"ret": 1180,"args": [840,1169,1176,1169,1177,1178,1178,1179,676,676]},{"kind": 7,"len": 1,"elem": 598},{"kind": 18,"name": "fn(*c_void, u32, *c_void) callconv(.C) void","generic": false,"ret": 603,"args": [840,641,840]},{"kind": 6,"elem": 1841},{"kind": 6,"elem": 1822},{"kind": 7,"len": 32,"elem": 1850},{"kind": 6,"len": 2,"align": 16,"elem": 676},{"kind": 6,"elem": 1697},{"kind": 8,"name": "std.event.loop.Waiters","src": 694,"pubDecls": [],"privDecls": [5700,5701,5702,5703,5704],"fields": [714]},{"kind": 8,"name": "std.os.windows.struct:2380:26","src": 695,"pubDecls": [],"privDecls": [],"fields": [641,641]},{"kind": 4,"u": 24},{"kind": 6,"elem": 1840},{"kind": 13,"child": 747},{"kind": 6,"elem": 781},{"kind": 13,"child": 748},{"kind": 13,"child": 1947},{"kind": 13,"child": 1948},{"kind": 13,"child": 1936},{"kind": 6,"len": 1,"elem": 775},{"kind": 6,"elem": 1853},{"kind": 6,"elem": 602},{"kind": 6,"elem": 1843},{"kind": 13,"child": 1949},{"kind": 13,"child": 1178},{"kind": 6,"elem": 1937},{"kind": 6,"elem": 1711},{"kind": 6,"const": true,"elem": 1361}],"decls": [{"import": 1230,"src": 2,"name": "featureSet","kind": "const","type": 2,"value": 2},{"import": 1230,"src": 696,"name": "featureSetHas"},{"import": 1230,"src": 697,"name": "featureSetHasAny"},{"import": 1230,"src": 698,"name": "featureSetHasAll"},{"import": 1231,"src": 699,"name": "Error","kind": "const","type": 592,"value": 608},{"import": 1231,"src": 199,"name": "write","kind": "const","type": 344,"value": 360},{"import": 1231,"src": 24,"name": "writeAll","kind": "const","type": 24,"value": 26},{"import": 1231,"src": 13,"name": "print","kind": "const","type": 1232,"value": 741},{"import": 1231,"src": 269,"name": "writeByte","kind": "const","type": 446,"value": 479},{"import": 1231,"src": 209,"name": "writeByteNTimes","kind": "const","type": 355,"value": 371},{"import": 1231,"src": 700,"name": "writeIntNative"},{"import": 1231,"src": 701,"name": "writeIntForeign"},{"import": 1231,"src": 702,"name": "writeIntLittle"},{"import": 1231,"src": 703,"name": "writeIntBig"},{"import": 1231,"src": 704,"name": "writeInt"},{"import": 1231,"src": 705,"name": "writeStruct"},{"import": 1231,"src": 706,"name": "Self","kind": "const","type": 592,"value": 606},{"import": 1233,"src": 707,"name": "Handle","kind": "const","type": 592,"value": 840},{"import": 1233,"src": 708,"name": "Mode"},{"import": 1233,"src": 709,"name": "INode"},{"import": 1233,"src": 710,"name": "Uid"},{"import": 1233,"src": 711,"name": "Gid"},{"import": 1233,"src": 712,"name": "Kind"},{"import": 1233,"src": 713,"name": "default_mode"},{"import": 1233,"src": 714,"name": "OpenError","kind": "const","type": 592,"value": 1234},{"import": 1233,"src": 715,"name": "Lock","kind": "const","type": 592,"value": 1235},{"import": 1233,"src": 716,"name": "OpenFlags","kind": "const","type": 592,"value": 873},{"import": 1233,"src": 717,"name": "CreateFlags"},{"import": 1233,"src": 48,"name": "close","kind": "const","type": 53,"value": 55},{"import": 1233,"src": 222,"name": "isTty","kind": "const","type": 368,"value": 387},{"import": 1233,"src": 221,"name": "supportsAnsiEscapeCodes","kind": "const","type": 368,"value": 386},{"import": 1233,"src": 718,"name": "SetEndPosError"},{"import": 1233,"src": 719,"name": "setEndPos"},{"import": 1233,"src": 720,"name": "SeekError","kind": "const","type": 592,"value": 1236},{"import": 1233,"src": 721,"name": "seekBy"},{"import": 1233,"src": 722,"name": "seekFromEnd"},{"import": 1233,"src": 56,"name": "seekTo","kind": "const","type": 61,"value": 63},{"import": 1233,"src": 723,"name": "GetSeekPosError","kind": "const","type": 592,"value": 1237},{"import": 1233,"src": 62,"name": "getPos","kind": "const","type": 70,"value": 72},{"import": 1233,"src": 132,"name": "getEndPos","kind": "const","type": 70,"value": 209},{"import": 1233,"src": 724,"name": "ModeError"},{"import": 1233,"src": 725,"name": "mode"},{"import": 1233,"src": 726,"name": "Stat"},{"import": 1233,"src": 727,"name": "StatError"},{"import": 1233,"src": 728,"name": "stat"},{"import": 1233,"src": 729,"name": "ChmodError"},{"import": 1233,"src": 730,"name": "chmod"},{"import": 1233,"src": 731,"name": "ChownError"},{"import": 1233,"src": 732,"name": "chown"},{"import": 1233,"src": 733,"name": "UpdateTimesError"},{"import": 1233,"src": 734,"name": "updateTimes"},{"import": 1233,"src": 735,"name": "readToEndAlloc"},{"import": 1233,"src": 736,"name": "readToEndAllocOptions"},{"import": 1233,"src": 737,"name": "ReadError","kind": "const","type": 592,"value": 644},{"import": 1233,"src": 738,"name": "PReadError"},{"import": 1233,"src": 51,"name": "read","kind": "const","type": 56,"value": 58},{"import": 1233,"src": 739,"name": "readAll"},{"import": 1233,"src": 740,"name": "pread"},{"import": 1233,"src": 741,"name": "preadAll"},{"import": 1233,"src": 742,"name": "readv"},{"import": 1233,"src": 743,"name": "readvAll"},{"import": 1233,"src": 744,"name": "preadv"},{"import": 1233,"src": 745,"name": "preadvAll"},{"import": 1233,"src": 746,"name": "WriteError","kind": "const","type": 592,"value": 608},{"import": 1233,"src": 747,"name": "PWriteError"},{"import": 1233,"src": 10,"name": "write","kind": "const","type": 10,"value": 10},{"import": 1233,"src": 748,"name": "writeAll"},{"import": 1233,"src": 749,"name": "pwrite"},{"import": 1233,"src": 750,"name": "pwriteAll"},{"import": 1233,"src": 751,"name": "writev"},{"import": 1233,"src": 752,"name": "writevAll"},{"import": 1233,"src": 753,"name": "pwritev"},{"import": 1233,"src": 754,"name": "pwritevAll"},{"import": 1233,"src": 755,"name": "CopyRangeError"},{"import": 1233,"src": 756,"name": "copyRange"},{"import": 1233,"src": 757,"name": "copyRangeAll"},{"import": 1233,"src": 758,"name": "WriteFileOptions"},{"import": 1233,"src": 759,"name": "WriteFileError"},{"import": 1233,"src": 760,"name": "writeFileAll"},{"import": 1233,"src": 761,"name": "writeFileAllUnseekable"},{"import": 1233,"src": 762,"name": "Reader","kind": "const","type": 592,"value": 643},{"import": 1233,"src": 52,"name": "reader","kind": "const","type": 57,"value": 59},{"import": 1233,"src": 763,"name": "Writer","kind": "const","type": 592,"value": 606},{"import": 1233,"src": 11,"name": "writer","kind": "const","type": 11,"value": 11},{"import": 1233,"src": 764,"name": "SeekableStream"},{"import": 1233,"src": 765,"name": "seekableStream"},{"import": 1233,"src": 766,"name": "LockError"},{"import": 1233,"src": 767,"name": "lock"},{"import": 1233,"src": 768,"name": "unlock"},{"import": 1233,"src": 769,"name": "tryLock"},{"import": 1233,"src": 770,"name": "downgradeLock"},{"import": 1233,"src": 771,"name": "writeFileAllSendfile"},{"import": 1233,"src": 772,"name": "range_off"},{"import": 1233,"src": 773,"name": "range_len"},{"import": 1238,"src": 774,"name": "hash","kind": "const","type": 28,"value": 30},{"import": 1238,"src": 775,"name": "eql","kind": "const","type": 29,"value": 31},{"import": 1238,"src": 776,"name": "Unmanaged","kind": "const","type": 592,"value": 620},{"import": 1238,"src": 777,"name": "Entry"},{"import": 1238,"src": 778,"name": "KV"},{"import": 1238,"src": 779,"name": "Hash"},{"import": 1238,"src": 780,"name": "Iterator"},{"import": 1238,"src": 781,"name": "KeyIterator"},{"import": 1238,"src": 782,"name": "ValueIterator"},{"import": 1238,"src": 783,"name": "Size"},{"import": 1238,"src": 784,"name": "GetOrPutResult"},{"import": 1238,"src": 278,"name": "init","kind": "const","type": 458,"value": 495},{"import": 1238,"src": 785,"name": "initContext"},{"import": 1238,"src": 786,"name": "deinit"},{"import": 1238,"src": 787,"name": "clearRetainingCapacity"},{"import": 1238,"src": 788,"name": "clearAndFree"},{"import": 1238,"src": 789,"name": "count"},{"import": 1238,"src": 790,"name": "iterator"},{"import": 1238,"src": 791,"name": "keyIterator"},{"import": 1238,"src": 792,"name": "valueIterator"},{"import": 1238,"src": 793,"name": "getOrPut"},{"import": 1238,"src": 794,"name": "getOrPutAdapted"},{"import": 1238,"src": 795,"name": "getOrPutAssumeCapacity"},{"import": 1238,"src": 796,"name": "getOrPutAssumeCapacityAdapted"},{"import": 1238,"src": 797,"name": "getOrPutValue"},{"import": 1238,"src": 798,"name": "ensureCapacity"},{"import": 1238,"src": 799,"name": "ensureTotalCapacity"},{"import": 1238,"src": 800,"name": "ensureUnusedCapacity"},{"import": 1238,"src": 801,"name": "capacity"},{"import": 1238,"src": 802,"name": "put"},{"import": 1238,"src": 151,"name": "putNoClobber","kind": "const","type": 275,"value": 286},{"import": 1238,"src": 803,"name": "putAssumeCapacity"},{"import": 1238,"src": 804,"name": "putAssumeCapacityNoClobber"},{"import": 1238,"src": 805,"name": "fetchPut"},{"import": 1238,"src": 806,"name": "fetchPutAssumeCapacity"},{"import": 1238,"src": 807,"name": "fetchRemove"},{"import": 1238,"src": 808,"name": "fetchRemoveAdapted"},{"import": 1238,"src": 42,"name": "get","kind": "const","type": 46,"value": 48},{"import": 1238,"src": 809,"name": "getAdapted"},{"import": 1238,"src": 810,"name": "getPtr"},{"import": 1238,"src": 811,"name": "getPtrAdapted"},{"import": 1238,"src": 812,"name": "getKey"},{"import": 1238,"src": 813,"name": "getKeyAdapted"},{"import": 1238,"src": 814,"name": "getKeyPtr"},{"import": 1238,"src": 815,"name": "getKeyPtrAdapted"},{"import": 1238,"src": 816,"name": "getEntry"},{"import": 1238,"src": 817,"name": "getEntryAdapted"},{"import": 1238,"src": 818,"name": "contains"},{"import": 1238,"src": 819,"name": "containsAdapted"},{"import": 1238,"src": 820,"name": "remove"},{"import": 1238,"src": 821,"name": "removeAdapted"},{"import": 1238,"src": 822,"name": "clone"},{"import": 1238,"src": 823,"name": "cloneWithAllocator"},{"import": 1238,"src": 824,"name": "cloneWithContext"},{"import": 1238,"src": 825,"name": "cloneWithAllocatorAndContext"},{"import": 1238,"src": 826,"name": "Self","kind": "const","type": 592,"value": 616},{"import": 1238,"src": 827,"name": "Size","kind": "const","type": 592,"value": 641},{"import": 1238,"src": 828,"name": "Hash","kind": "const","type": 592,"value": 614},{"import": 1238,"src": 829,"name": "Entry"},{"import": 1238,"src": 830,"name": "KV"},{"import": 1238,"src": 831,"name": "Iterator"},{"import": 1238,"src": 832,"name": "KeyIterator"},{"import": 1238,"src": 833,"name": "ValueIterator"},{"import": 1238,"src": 834,"name": "GetOrPutResult"},{"import": 1238,"src": 835,"name": "Managed"},{"import": 1238,"src": 836,"name": "promote"},{"import": 1238,"src": 837,"name": "promoteContext"},{"import": 1238,"src": 164,"name": "deinit","kind": "const","type": 284,"value": 299},{"import": 1238,"src": 838,"name": "ensureCapacity"},{"import": 1238,"src": 839,"name": "ensureTotalCapacity"},{"import": 1238,"src": 840,"name": "ensureTotalCapacityContext"},{"import": 1238,"src": 841,"name": "ensureUnusedCapacity"},{"import": 1238,"src": 842,"name": "ensureUnusedCapacityContext"},{"import": 1238,"src": 843,"name": "clearRetainingCapacity"},{"import": 1238,"src": 844,"name": "clearAndFree"},{"import": 1238,"src": 845,"name": "count"},{"import": 1238,"src": 159,"name": "capacity","kind": "const","type": 280,"value": 294},{"import": 1238,"src": 846,"name": "iterator"},{"import": 1238,"src": 847,"name": "keyIterator"},{"import": 1238,"src": 848,"name": "valueIterator"},{"import": 1238,"src": 849,"name": "putNoClobber"},{"import": 1238,"src": 152,"name": "putNoClobberContext","kind": "const","type": 276,"value": 287},{"import": 1238,"src": 850,"name": "putAssumeCapacity"},{"import": 1238,"src": 851,"name": "putAssumeCapacityContext"},{"import": 1238,"src": 852,"name": "putAssumeCapacityNoClobber"},{"import": 1238,"src": 169,"name": "putAssumeCapacityNoClobberContext","kind": "const","type": 289,"value": 304},{"import": 1238,"src": 853,"name": "fetchPut"},{"import": 1238,"src": 854,"name": "fetchPutContext"},{"import": 1238,"src": 855,"name": "fetchPutAssumeCapacity"},{"import": 1238,"src": 856,"name": "fetchPutAssumeCapacityContext"},{"import": 1238,"src": 857,"name": "fetchRemove"},{"import": 1238,"src": 858,"name": "fetchRemoveContext"},{"import": 1238,"src": 859,"name": "fetchRemoveAdapted"},{"import": 1238,"src": 860,"name": "getEntry"},{"import": 1238,"src": 861,"name": "getEntryContext"},{"import": 1238,"src": 862,"name": "getEntryAdapted"},{"import": 1238,"src": 863,"name": "put"},{"import": 1238,"src": 864,"name": "putContext"},{"import": 1238,"src": 865,"name": "getKeyPtr"},{"import": 1238,"src": 866,"name": "getKeyPtrContext"},{"import": 1238,"src": 867,"name": "getKeyPtrAdapted"},{"import": 1238,"src": 868,"name": "getKey"},{"import": 1238,"src": 869,"name": "getKeyContext"},{"import": 1238,"src": 870,"name": "getKeyAdapted"},{"import": 1238,"src": 871,"name": "getPtr"},{"import": 1238,"src": 872,"name": "getPtrContext"},{"import": 1238,"src": 873,"name": "getPtrAdapted"},{"import": 1238,"src": 874,"name": "get"},{"import": 1238,"src": 225,"name": "getContext","kind": "const","type": 372,"value": 391},{"import": 1238,"src": 289,"name": "getAdapted","kind": "const","type": 1240,"value": 742},{"import": 1238,"src": 875,"name": "getOrPut"},{"import": 1238,"src": 876,"name": "getOrPutContext"},{"import": 1238,"src": 877,"name": "getOrPutAdapted"},{"import": 1238,"src": 878,"name": "getOrPutContextAdapted"},{"import": 1238,"src": 879,"name": "getOrPutAssumeCapacity"},{"import": 1238,"src": 880,"name": "getOrPutAssumeCapacityContext"},{"import": 1238,"src": 881,"name": "getOrPutAssumeCapacityAdapted"},{"import": 1238,"src": 882,"name": "getOrPutValue"},{"import": 1238,"src": 883,"name": "getOrPutValueContext"},{"import": 1238,"src": 884,"name": "contains"},{"import": 1238,"src": 153,"name": "containsContext","kind": "const","type": 277,"value": 288},{"import": 1238,"src": 259,"name": "containsAdapted","kind": "const","type": 1241,"value": 743},{"import": 1238,"src": 885,"name": "remove"},{"import": 1238,"src": 886,"name": "removeContext"},{"import": 1238,"src": 887,"name": "removeAdapted"},{"import": 1238,"src": 888,"name": "clone"},{"import": 1238,"src": 889,"name": "cloneContext"},{"import": 1238,"src": 890,"name": "Self","kind": "const","type": 592,"value": 620},{"import": 1238,"src": 891,"name": "minimal_capacity","kind": "const","type": 690,"value": null},{"import": 1238,"src": 892,"name": "Header","kind": "const","type": 592,"value": 1242},{"import": 1238,"src": 893,"name": "Metadata","kind": "const","type": 592,"value": 1059},{"import": 1238,"src": 894,"name": "FieldIterator"},{"import": 1238,"src": 895,"name": "isUnderMaxLoadPercentage"},{"import": 1238,"src": 156,"name": "capacityForSize","kind": "const","type": 217,"value": 291},{"import": 1238,"src": 261,"name": "header","kind": "const","type": 438,"value": 468},{"import": 1238,"src": 166,"name": "keys","kind": "const","type": 286,"value": 301},{"import": 1238,"src": 167,"name": "values","kind": "const","type": 287,"value": 302},{"import": 1238,"src": 311,"name": "getIndex","kind": "const","type": 1243,"value": 744},{"import": 1238,"src": 165,"name": "initMetadatas","kind": "const","type": 285,"value": 300},{"import": 1238,"src": 157,"name": "load","kind": "const","type": 280,"value": 292},{"import": 1238,"src": 154,"name": "growIfNeeded","kind": "const","type": 278,"value": 289},{"import": 1238,"src": 155,"name": "grow","kind": "const","type": 279,"value": 290},{"import": 1238,"src": 161,"name": "allocate","kind": "const","type": 282,"value": 296},{"import": 1238,"src": 263,"name": "deallocate","kind": "const","type": 284,"value": 471},{"import": 1245,"src": 896,"name": "Slice","kind": "const","type": 592,"value": 784},{"import": 1245,"src": 78,"name": "init","kind": "const","type": 93,"value": 96},{"import": 1245,"src": 897,"name": "initCapacity"},{"import": 1245,"src": 99,"name": "deinit"},{"import": 1245,"src": 898,"name": "span"},{"import": 1245,"src": 899,"name": "toSlice"},{"import": 1245,"src": 900,"name": "toSliceConst"},{"import": 1245,"src": 901,"name": "at"},{"import": 1245,"src": 902,"name": "ptrAt"},{"import": 1245,"src": 903,"name": "setOrError"},{"import": 1245,"src": 904,"name": "set"},{"import": 1245,"src": 905,"name": "swapRemoveOrError"},{"import": 1245,"src": 906,"name": "fromOwnedSlice"},{"import": 1245,"src": 907,"name": "toUnmanaged"},{"import": 1245,"src": 908,"name": "moveToUnmanaged"},{"import": 1245,"src": 141,"name": "toOwnedSlice"},{"import": 1245,"src": 909,"name": "toOwnedSliceSentinel"},{"import": 1245,"src": 910,"name": "insert"},{"import": 1245,"src": 911,"name": "insertSlice"},{"import": 1245,"src": 912,"name": "replaceRange"},{"import": 1245,"src": 95,"name": "append","kind": "const","type": 120,"value": 126},{"import": 1245,"src": 74,"name": "appendAssumeCapacity"},{"import": 1245,"src": 913,"name": "orderedRemove"},{"import": 1245,"src": 914,"name": "swapRemove"},{"import": 1245,"src": 915,"name": "appendSlice"},{"import": 1245,"src": 916,"name": "appendSliceAssumeCapacity"},{"import": 1245,"src": 917,"name": "Writer"},{"import": 1245,"src": 918,"name": "writer"},{"import": 1245,"src": 919,"name": "appendNTimes"},{"import": 1245,"src": 920,"name": "appendNTimesAssumeCapacity"},{"import": 1245,"src": 105,"name": "resize"},{"import": 1245,"src": 921,"name": "shrinkAndFree"},{"import": 1245,"src": 148,"name": "shrinkRetainingCapacity"},{"import": 1245,"src": 922,"name": "clearRetainingCapacity"},{"import": 1245,"src": 923,"name": "clearAndFree"},{"import": 1245,"src": 924,"name": "ensureCapacity"},{"import": 1245,"src": 101,"name": "ensureTotalCapacity","kind": "const","type": 142,"value": 148},{"import": 1245,"src": 64,"name": "ensureTotalCapacityPrecise","kind": "const","type": 143,"value": 149},{"import": 1245,"src": 925,"name": "ensureUnusedCapacity"},{"import": 1245,"src": 926,"name": "expandToCapacity"},{"import": 1245,"src": 100,"name": "addOne","kind": "const","type": 141,"value": 147},{"import": 1245,"src": 102,"name": "addOneAssumeCapacity","kind": "const","type": 146,"value": 152},{"import": 1245,"src": 927,"name": "addManyAsArray"},{"import": 1245,"src": 928,"name": "addManyAsArrayAssumeCapacity"},{"import": 1245,"src": 929,"name": "pop"},{"import": 1245,"src": 930,"name": "popOrNull"},{"import": 1245,"src": 65,"name": "allocatedSlice","kind": "const","type": 144,"value": 150},{"import": 1245,"src": 931,"name": "unusedCapacitySlice"},{"import": 1245,"src": 932,"name": "Self","kind": "const","type": 592,"value": 623},{"import": 1245,"src": 933,"name": "appendWrite"},{"import": 1245,"src": 896,"name": "Slice","kind": "const","type": 592,"value": 782},{"import": 1245,"src": 78,"name": "init","kind": "const","type": 122,"value": 128},{"import": 1245,"src": 897,"name": "initCapacity"},{"import": 1245,"src": 99,"name": "deinit","kind": "const","type": 125,"value": 131},{"import": 1245,"src": 898,"name": "span"},{"import": 1245,"src": 899,"name": "toSlice"},{"import": 1245,"src": 900,"name": "toSliceConst"},{"import": 1245,"src": 901,"name": "at"},{"import": 1245,"src": 902,"name": "ptrAt"},{"import": 1245,"src": 903,"name": "setOrError"},{"import": 1245,"src": 904,"name": "set"},{"import": 1245,"src": 905,"name": "swapRemoveOrError"},{"import": 1245,"src": 906,"name": "fromOwnedSlice"},{"import": 1245,"src": 907,"name": "toUnmanaged"},{"import": 1245,"src": 908,"name": "moveToUnmanaged"},{"import": 1245,"src": 141,"name": "toOwnedSlice"},{"import": 1245,"src": 909,"name": "toOwnedSliceSentinel"},{"import": 1245,"src": 910,"name": "insert"},{"import": 1245,"src": 911,"name": "insertSlice"},{"import": 1245,"src": 912,"name": "replaceRange"},{"import": 1245,"src": 95,"name": "append","kind": "const","type": 126,"value": 132},{"import": 1245,"src": 74,"name": "appendAssumeCapacity"},{"import": 1245,"src": 913,"name": "orderedRemove"},{"import": 1245,"src": 914,"name": "swapRemove"},{"import": 1245,"src": 915,"name": "appendSlice"},{"import": 1245,"src": 916,"name": "appendSliceAssumeCapacity"},{"import": 1245,"src": 917,"name": "Writer"},{"import": 1245,"src": 918,"name": "writer"},{"import": 1245,"src": 919,"name": "appendNTimes"},{"import": 1245,"src": 920,"name": "appendNTimesAssumeCapacity"},{"import": 1245,"src": 105,"name": "resize"},{"import": 1245,"src": 921,"name": "shrinkAndFree"},{"import": 1245,"src": 148,"name": "shrinkRetainingCapacity"},{"import": 1245,"src": 922,"name": "clearRetainingCapacity"},{"import": 1245,"src": 923,"name": "clearAndFree"},{"import": 1245,"src": 924,"name": "ensureCapacity"},{"import": 1245,"src": 101,"name": "ensureTotalCapacity","kind": "const","type": 129,"value": 135},{"import": 1245,"src": 64,"name": "ensureTotalCapacityPrecise","kind": "const","type": 130,"value": 136},{"import": 1245,"src": 925,"name": "ensureUnusedCapacity"},{"import": 1245,"src": 926,"name": "expandToCapacity"},{"import": 1245,"src": 100,"name": "addOne","kind": "const","type": 128,"value": 134},{"import": 1245,"src": 102,"name": "addOneAssumeCapacity","kind": "const","type": 133,"value": 139},{"import": 1245,"src": 927,"name": "addManyAsArray"},{"import": 1245,"src": 928,"name": "addManyAsArrayAssumeCapacity"},{"import": 1245,"src": 929,"name": "pop"},{"import": 1245,"src": 930,"name": "popOrNull"},{"import": 1245,"src": 65,"name": "allocatedSlice","kind": "const","type": 131,"value": 137},{"import": 1245,"src": 931,"name": "unusedCapacitySlice"},{"import": 1245,"src": 932,"name": "Self","kind": "const","type": 592,"value": 627},{"import": 1245,"src": 933,"name": "appendWrite"},{"import": 1245,"src": 896,"name": "Slice","kind": "const","type": 592,"value": 783},{"import": 1245,"src": 78,"name": "init","kind": "const","type": 127,"value": 133},{"import": 1245,"src": 897,"name": "initCapacity"},{"import": 1245,"src": 99,"name": "deinit"},{"import": 1245,"src": 898,"name": "span"},{"import": 1245,"src": 899,"name": "toSlice"},{"import": 1245,"src": 900,"name": "toSliceConst"},{"import": 1245,"src": 901,"name": "at"},{"import": 1245,"src": 902,"name": "ptrAt"},{"import": 1245,"src": 903,"name": "setOrError"},{"import": 1245,"src": 904,"name": "set"},{"import": 1245,"src": 905,"name": "swapRemoveOrError"},{"import": 1245,"src": 906,"name": "fromOwnedSlice"},{"import": 1245,"src": 907,"name": "toUnmanaged"},{"import": 1245,"src": 908,"name": "moveToUnmanaged"},{"import": 1245,"src": 141,"name": "toOwnedSlice"},{"import": 1245,"src": 909,"name": "toOwnedSliceSentinel"},{"import": 1245,"src": 910,"name": "insert"},{"import": 1245,"src": 911,"name": "insertSlice"},{"import": 1245,"src": 912,"name": "replaceRange"},{"import": 1245,"src": 95,"name": "append","kind": "const","type": 134,"value": 140},{"import": 1245,"src": 74,"name": "appendAssumeCapacity"},{"import": 1245,"src": 913,"name": "orderedRemove"},{"import": 1245,"src": 914,"name": "swapRemove"},{"import": 1245,"src": 915,"name": "appendSlice"},{"import": 1245,"src": 916,"name": "appendSliceAssumeCapacity"},{"import": 1245,"src": 917,"name": "Writer"},{"import": 1245,"src": 918,"name": "writer"},{"import": 1245,"src": 919,"name": "appendNTimes"},{"import": 1245,"src": 920,"name": "appendNTimesAssumeCapacity"},{"import": 1245,"src": 105,"name": "resize"},{"import": 1245,"src": 921,"name": "shrinkAndFree"},{"import": 1245,"src": 148,"name": "shrinkRetainingCapacity"},{"import": 1245,"src": 922,"name": "clearRetainingCapacity"},{"import": 1245,"src": 923,"name": "clearAndFree"},{"import": 1245,"src": 924,"name": "ensureCapacity"},{"import": 1245,"src": 101,"name": "ensureTotalCapacity","kind": "const","type": 136,"value": 142},{"import": 1245,"src": 64,"name": "ensureTotalCapacityPrecise","kind": "const","type": 137,"value": 143},{"import": 1245,"src": 925,"name": "ensureUnusedCapacity"},{"import": 1245,"src": 926,"name": "expandToCapacity"},{"import": 1245,"src": 100,"name": "addOne","kind": "const","type": 135,"value": 141},{"import": 1245,"src": 102,"name": "addOneAssumeCapacity","kind": "const","type": 140,"value": 146},{"import": 1245,"src": 927,"name": "addManyAsArray"},{"import": 1245,"src": 928,"name": "addManyAsArrayAssumeCapacity"},{"import": 1245,"src": 929,"name": "pop"},{"import": 1245,"src": 930,"name": "popOrNull"},{"import": 1245,"src": 65,"name": "allocatedSlice","kind": "const","type": 138,"value": 144},{"import": 1245,"src": 931,"name": "unusedCapacitySlice"},{"import": 1245,"src": 932,"name": "Self","kind": "const","type": 592,"value": 629},{"import": 1245,"src": 933,"name": "appendWrite"},{"import": 1245,"src": 896,"name": "Slice","kind": "const","type": 592,"value": 787},{"import": 1245,"src": 78,"name": "init","kind": "const","type": 94,"value": 97},{"import": 1245,"src": 897,"name": "initCapacity"},{"import": 1245,"src": 99,"name": "deinit"},{"import": 1245,"src": 898,"name": "span"},{"import": 1245,"src": 899,"name": "toSlice"},{"import": 1245,"src": 900,"name": "toSliceConst"},{"import": 1245,"src": 901,"name": "at"},{"import": 1245,"src": 902,"name": "ptrAt"},{"import": 1245,"src": 903,"name": "setOrError"},{"import": 1245,"src": 904,"name": "set"},{"import": 1245,"src": 905,"name": "swapRemoveOrError"},{"import": 1245,"src": 906,"name": "fromOwnedSlice"},{"import": 1245,"src": 907,"name": "toUnmanaged"},{"import": 1245,"src": 908,"name": "moveToUnmanaged"},{"import": 1245,"src": 141,"name": "toOwnedSlice"},{"import": 1245,"src": 909,"name": "toOwnedSliceSentinel"},{"import": 1245,"src": 910,"name": "insert"},{"import": 1245,"src": 911,"name": "insertSlice"},{"import": 1245,"src": 912,"name": "replaceRange"},{"import": 1245,"src": 95,"name": "append","kind": "const","type": 172,"value": 178},{"import": 1245,"src": 74,"name": "appendAssumeCapacity"},{"import": 1245,"src": 913,"name": "orderedRemove"},{"import": 1245,"src": 914,"name": "swapRemove"},{"import": 1245,"src": 915,"name": "appendSlice"},{"import": 1245,"src": 916,"name": "appendSliceAssumeCapacity"},{"import": 1245,"src": 917,"name": "Writer"},{"import": 1245,"src": 918,"name": "writer"},{"import": 1245,"src": 919,"name": "appendNTimes"},{"import": 1245,"src": 920,"name": "appendNTimesAssumeCapacity"},{"import": 1245,"src": 105,"name": "resize"},{"import": 1245,"src": 921,"name": "shrinkAndFree"},{"import": 1245,"src": 148,"name": "shrinkRetainingCapacity"},{"import": 1245,"src": 922,"name": "clearRetainingCapacity"},{"import": 1245,"src": 923,"name": "clearAndFree"},{"import": 1245,"src": 924,"name": "ensureCapacity"},{"import": 1245,"src": 101,"name": "ensureTotalCapacity","kind": "const","type": 174,"value": 180},{"import": 1245,"src": 64,"name": "ensureTotalCapacityPrecise","kind": "const","type": 175,"value": 181},{"import": 1245,"src": 925,"name": "ensureUnusedCapacity"},{"import": 1245,"src": 926,"name": "expandToCapacity"},{"import": 1245,"src": 100,"name": "addOne","kind": "const","type": 173,"value": 179},{"import": 1245,"src": 102,"name": "addOneAssumeCapacity","kind": "const","type": 178,"value": 184},{"import": 1245,"src": 927,"name": "addManyAsArray"},{"import": 1245,"src": 928,"name": "addManyAsArrayAssumeCapacity"},{"import": 1245,"src": 929,"name": "pop"},{"import": 1245,"src": 930,"name": "popOrNull"},{"import": 1245,"src": 65,"name": "allocatedSlice","kind": "const","type": 176,"value": 182},{"import": 1245,"src": 931,"name": "unusedCapacitySlice"},{"import": 1245,"src": 932,"name": "Self","kind": "const","type": 592,"value": 631},{"import": 1245,"src": 933,"name": "appendWrite"},{"import": 1245,"src": 896,"name": "Slice","kind": "const","type": 592,"value": 785},{"import": 1245,"src": 78,"name": "init","kind": "const","type": 149,"value": 155},{"import": 1245,"src": 897,"name": "initCapacity"},{"import": 1245,"src": 99,"name": "deinit","kind": "const","type": 159,"value": 165},{"import": 1245,"src": 898,"name": "span"},{"import": 1245,"src": 899,"name": "toSlice"},{"import": 1245,"src": 900,"name": "toSliceConst"},{"import": 1245,"src": 901,"name": "at"},{"import": 1245,"src": 902,"name": "ptrAt"},{"import": 1245,"src": 903,"name": "setOrError"},{"import": 1245,"src": 904,"name": "set"},{"import": 1245,"src": 905,"name": "swapRemoveOrError"},{"import": 1245,"src": 906,"name": "fromOwnedSlice"},{"import": 1245,"src": 907,"name": "toUnmanaged"},{"import": 1245,"src": 908,"name": "moveToUnmanaged"},{"import": 1245,"src": 141,"name": "toOwnedSlice"},{"import": 1245,"src": 909,"name": "toOwnedSliceSentinel"},{"import": 1245,"src": 910,"name": "insert"},{"import": 1245,"src": 911,"name": "insertSlice"},{"import": 1245,"src": 912,"name": "replaceRange"},{"import": 1245,"src": 95,"name": "append"},{"import": 1245,"src": 74,"name": "appendAssumeCapacity"},{"import": 1245,"src": 913,"name": "orderedRemove"},{"import": 1245,"src": 914,"name": "swapRemove"},{"import": 1245,"src": 915,"name": "appendSlice"},{"import": 1245,"src": 916,"name": "appendSliceAssumeCapacity"},{"import": 1245,"src": 917,"name": "Writer"},{"import": 1245,"src": 918,"name": "writer"},{"import": 1245,"src": 919,"name": "appendNTimes"},{"import": 1245,"src": 920,"name": "appendNTimesAssumeCapacity"},{"import": 1245,"src": 105,"name": "resize","kind": "const","type": 150,"value": 156},{"import": 1245,"src": 921,"name": "shrinkAndFree"},{"import": 1245,"src": 148,"name": "shrinkRetainingCapacity"},{"import": 1245,"src": 922,"name": "clearRetainingCapacity"},{"import": 1245,"src": 923,"name": "clearAndFree"},{"import": 1245,"src": 924,"name": "ensureCapacity"},{"import": 1245,"src": 101,"name": "ensureTotalCapacity","kind": "const","type": 151,"value": 157},{"import": 1245,"src": 64,"name": "ensureTotalCapacityPrecise","kind": "const","type": 152,"value": 158},{"import": 1245,"src": 925,"name": "ensureUnusedCapacity"},{"import": 1245,"src": 926,"name": "expandToCapacity"},{"import": 1245,"src": 100,"name": "addOne"},{"import": 1245,"src": 102,"name": "addOneAssumeCapacity"},{"import": 1245,"src": 927,"name": "addManyAsArray"},{"import": 1245,"src": 928,"name": "addManyAsArrayAssumeCapacity"},{"import": 1245,"src": 929,"name": "pop"},{"import": 1245,"src": 930,"name": "popOrNull"},{"import": 1245,"src": 65,"name": "allocatedSlice","kind": "const","type": 153,"value": 159},{"import": 1245,"src": 931,"name": "unusedCapacitySlice"},{"import": 1245,"src": 932,"name": "Self","kind": "const","type": 592,"value": 633},{"import": 1245,"src": 933,"name": "appendWrite"},{"import": 1245,"src": 896,"name": "Slice","kind": "const","type": 592,"value": 786},{"import": 1245,"src": 78,"name": "init","kind": "const","type": 95,"value": 98},{"import": 1245,"src": 897,"name": "initCapacity"},{"import": 1245,"src": 99,"name": "deinit"},{"import": 1245,"src": 898,"name": "span"},{"import": 1245,"src": 899,"name": "toSlice"},{"import": 1245,"src": 900,"name": "toSliceConst"},{"import": 1245,"src": 901,"name": "at"},{"import": 1245,"src": 902,"name": "ptrAt"},{"import": 1245,"src": 903,"name": "setOrError"},{"import": 1245,"src": 904,"name": "set"},{"import": 1245,"src": 905,"name": "swapRemoveOrError"},{"import": 1245,"src": 906,"name": "fromOwnedSlice"},{"import": 1245,"src": 907,"name": "toUnmanaged"},{"import": 1245,"src": 908,"name": "moveToUnmanaged"},{"import": 1245,"src": 141,"name": "toOwnedSlice"},{"import": 1245,"src": 909,"name": "toOwnedSliceSentinel"},{"import": 1245,"src": 910,"name": "insert"},{"import": 1245,"src": 911,"name": "insertSlice"},{"import": 1245,"src": 912,"name": "replaceRange"},{"import": 1245,"src": 95,"name": "append","kind": "const","type": 163,"value": 169},{"import": 1245,"src": 74,"name": "appendAssumeCapacity"},{"import": 1245,"src": 913,"name": "orderedRemove"},{"import": 1245,"src": 914,"name": "swapRemove"},{"import": 1245,"src": 915,"name": "appendSlice"},{"import": 1245,"src": 916,"name": "appendSliceAssumeCapacity"},{"import": 1245,"src": 917,"name": "Writer"},{"import": 1245,"src": 918,"name": "writer"},{"import": 1245,"src": 919,"name": "appendNTimes"},{"import": 1245,"src": 920,"name": "appendNTimesAssumeCapacity"},{"import": 1245,"src": 105,"name": "resize"},{"import": 1245,"src": 921,"name": "shrinkAndFree"},{"import": 1245,"src": 148,"name": "shrinkRetainingCapacity"},{"import": 1245,"src": 922,"name": "clearRetainingCapacity"},{"import": 1245,"src": 923,"name": "clearAndFree"},{"import": 1245,"src": 924,"name": "ensureCapacity"},{"import": 1245,"src": 101,"name": "ensureTotalCapacity","kind": "const","type": 165,"value": 171},{"import": 1245,"src": 64,"name": "ensureTotalCapacityPrecise","kind": "const","type": 166,"value": 172},{"import": 1245,"src": 925,"name": "ensureUnusedCapacity"},{"import": 1245,"src": 926,"name": "expandToCapacity"},{"import": 1245,"src": 100,"name": "addOne","kind": "const","type": 164,"value": 170},{"import": 1245,"src": 102,"name": "addOneAssumeCapacity","kind": "const","type": 169,"value": 175},{"import": 1245,"src": 927,"name": "addManyAsArray"},{"import": 1245,"src": 928,"name": "addManyAsArrayAssumeCapacity"},{"import": 1245,"src": 929,"name": "pop"},{"import": 1245,"src": 930,"name": "popOrNull"},{"import": 1245,"src": 65,"name": "allocatedSlice","kind": "const","type": 167,"value": 173},{"import": 1245,"src": 931,"name": "unusedCapacitySlice"},{"import": 1245,"src": 932,"name": "Self","kind": "const","type": 592,"value": 635},{"import": 1245,"src": 933,"name": "appendWrite"},{"import": 1245,"src": 896,"name": "Slice","kind": "const","type": 592,"value": 779},{"import": 1245,"src": 78,"name": "init","kind": "const","type": 378,"value": 397},{"import": 1245,"src": 897,"name": "initCapacity"},{"import": 1245,"src": 99,"name": "deinit"},{"import": 1245,"src": 898,"name": "span"},{"import": 1245,"src": 899,"name": "toSlice"},{"import": 1245,"src": 900,"name": "toSliceConst"},{"import": 1245,"src": 901,"name": "at"},{"import": 1245,"src": 902,"name": "ptrAt"},{"import": 1245,"src": 903,"name": "setOrError"},{"import": 1245,"src": 904,"name": "set"},{"import": 1245,"src": 905,"name": "swapRemoveOrError"},{"import": 1245,"src": 906,"name": "fromOwnedSlice"},{"import": 1245,"src": 907,"name": "toUnmanaged"},{"import": 1245,"src": 908,"name": "moveToUnmanaged"},{"import": 1245,"src": 141,"name": "toOwnedSlice"},{"import": 1245,"src": 909,"name": "toOwnedSliceSentinel"},{"import": 1245,"src": 910,"name": "insert"},{"import": 1245,"src": 911,"name": "insertSlice"},{"import": 1245,"src": 912,"name": "replaceRange"},{"import": 1245,"src": 95,"name": "append"},{"import": 1245,"src": 74,"name": "appendAssumeCapacity","kind": "const","type": 84,"value": 87},{"import": 1245,"src": 913,"name": "orderedRemove"},{"import": 1245,"src": 914,"name": "swapRemove"},{"import": 1245,"src": 915,"name": "appendSlice"},{"import": 1245,"src": 916,"name": "appendSliceAssumeCapacity"},{"import": 1245,"src": 917,"name": "Writer"},{"import": 1245,"src": 918,"name": "writer"},{"import": 1245,"src": 919,"name": "appendNTimes"},{"import": 1245,"src": 920,"name": "appendNTimesAssumeCapacity"},{"import": 1245,"src": 105,"name": "resize"},{"import": 1245,"src": 921,"name": "shrinkAndFree"},{"import": 1245,"src": 148,"name": "shrinkRetainingCapacity"},{"import": 1245,"src": 922,"name": "clearRetainingCapacity"},{"import": 1245,"src": 923,"name": "clearAndFree"},{"import": 1245,"src": 924,"name": "ensureCapacity"},{"import": 1245,"src": 101,"name": "ensureTotalCapacity"},{"import": 1245,"src": 64,"name": "ensureTotalCapacityPrecise","kind": "const","type": 75,"value": 77},{"import": 1245,"src": 925,"name": "ensureUnusedCapacity"},{"import": 1245,"src": 926,"name": "expandToCapacity"},{"import": 1245,"src": 100,"name": "addOne"},{"import": 1245,"src": 102,"name": "addOneAssumeCapacity","kind": "const","type": 384,"value": 406},{"import": 1245,"src": 927,"name": "addManyAsArray"},{"import": 1245,"src": 928,"name": "addManyAsArrayAssumeCapacity"},{"import": 1245,"src": 929,"name": "pop"},{"import": 1245,"src": 930,"name": "popOrNull"},{"import": 1245,"src": 65,"name": "allocatedSlice","kind": "const","type": 76,"value": 78},{"import": 1245,"src": 931,"name": "unusedCapacitySlice"},{"import": 1245,"src": 932,"name": "Self","kind": "const","type": 592,"value": 637},{"import": 1245,"src": 933,"name": "appendWrite"},{"import": 1230,"src": 37,"name": "isDarwin","kind": "const","type": 40,"value": 42},{"import": 1230,"src": 934,"name": "isBSD"},{"import": 1230,"src": 935,"name": "dynamicLibSuffix"},{"import": 1230,"src": 936,"name": "defaultVersionRange"},{"import": 1230,"src": 937,"name": "Os","kind": "const","type": 592,"value": 1250},{"import": 1230,"src": 938,"name": "aarch64"},{"import": 1230,"src": 939,"name": "arc"},{"import": 1230,"src": 940,"name": "amdgpu"},{"import": 1230,"src": 941,"name": "arm"},{"import": 1230,"src": 942,"name": "avr"},{"import": 1230,"src": 943,"name": "bpf"},{"import": 1230,"src": 944,"name": "hexagon"},{"import": 1230,"src": 945,"name": "mips"},{"import": 1230,"src": 946,"name": "msp430"},{"import": 1230,"src": 947,"name": "nvptx"},{"import": 1230,"src": 948,"name": "powerpc"},{"import": 1230,"src": 949,"name": "riscv"},{"import": 1230,"src": 950,"name": "sparc"},{"import": 1230,"src": 951,"name": "spirv"},{"import": 1230,"src": 952,"name": "systemz"},{"import": 1230,"src": 953,"name": "ve"},{"import": 1230,"src": 954,"name": "wasm"},{"import": 1230,"src": 955,"name": "x86","kind": "const","type": 592,"value": 1251},{"import": 1230,"src": 956,"name": "Abi","kind": "const","type": 592,"value": 1252},{"import": 1230,"src": 957,"name": "ObjectFormat"},{"import": 1230,"src": 958,"name": "SubSystem"},{"import": 1230,"src": 959,"name": "Cpu","kind": "const","type": 592,"value": 1253},{"import": 1230,"src": 960,"name": "current"},{"import": 1230,"src": 961,"name": "stack_align","kind": "const","type": 690,"value": null},{"import": 1230,"src": 962,"name": "zigTriple"},{"import": 1230,"src": 963,"name": "linuxTripleSimple"},{"import": 1230,"src": 964,"name": "linuxTriple"},{"import": 1230,"src": 965,"name": "exeFileExtSimple"},{"import": 1230,"src": 966,"name": "exeFileExt"},{"import": 1230,"src": 967,"name": "staticLibSuffix_os_abi"},{"import": 1230,"src": 968,"name": "staticLibSuffix"},{"import": 1230,"src": 969,"name": "dynamicLibSuffix"},{"import": 1230,"src": 970,"name": "libPrefix_os_abi"},{"import": 1230,"src": 971,"name": "libPrefix"},{"import": 1230,"src": 972,"name": "getObjectFormatSimple"},{"import": 1230,"src": 973,"name": "getObjectFormat"},{"import": 1230,"src": 974,"name": "isMinGW"},{"import": 1230,"src": 975,"name": "isGnu"},{"import": 1230,"src": 976,"name": "isMusl"},{"import": 1230,"src": 977,"name": "isAndroid"},{"import": 1230,"src": 216,"name": "isWasm","kind": "const","type": 39,"value": 378},{"import": 1230,"src": 36,"name": "isDarwin","kind": "const","type": 39,"value": 41},{"import": 1230,"src": 978,"name": "isBSD"},{"import": 1230,"src": 979,"name": "isGnuLibC_os_tag_abi"},{"import": 1230,"src": 980,"name": "isGnuLibC"},{"import": 1230,"src": 981,"name": "supportsNewStackCall"},{"import": 1230,"src": 982,"name": "FloatAbi"},{"import": 1230,"src": 983,"name": "getFloatAbi"},{"import": 1230,"src": 984,"name": "hasDynamicLinker"},{"import": 1230,"src": 985,"name": "DynamicLinker"},{"import": 1230,"src": 986,"name": "standardDynamicLinkerPath"},{"import": 1230,"src": 987,"name": "canExecBinariesOf"},{"import": 1230,"src": 988,"name": "plan9Ext"},{"import": 1230,"src": 989,"name": "longDoubleIsF128"},{"import": 1254,"src": 990,"name": "Error","kind": "const","type": 592,"value": 644},{"import": 1254,"src": 72,"name": "read","kind": "const","type": 59,"value": 85},{"import": 1254,"src": 54,"name": "readAll","kind": "const","type": 59,"value": 61},{"import": 1254,"src": 53,"name": "readNoEof","kind": "const","type": 58,"value": 60},{"import": 1254,"src": 991,"name": "readAllBuffer"},{"import": 1254,"src": 992,"name": "readAllArrayList"},{"import": 1254,"src": 993,"name": "readAllArrayListAligned"},{"import": 1254,"src": 994,"name": "readAllAlloc"},{"import": 1254,"src": 147,"name": "readUntilDelimiterArrayList"},{"import": 1254,"src": 146,"name": "readUntilDelimiterAlloc"},{"import": 1254,"src": 995,"name": "readUntilDelimiter"},{"import": 1254,"src": 996,"name": "readUntilDelimiterOrEofAlloc"},{"import": 1254,"src": 70,"name": "readUntilDelimiterOrEof","kind": "const","type": 81,"value": 83},{"import": 1254,"src": 997,"name": "skipUntilDelimiterOrEof"},{"import": 1254,"src": 71,"name": "readByte","kind": "const","type": 82,"value": 84},{"import": 1254,"src": 183,"name": "readByteSigned"},{"import": 1254,"src": 58,"name": "readBytesNoEof","kind": "const","type": 1255,"value": 745},{"import": 1254,"src": 998,"name": "readIntNative"},{"import": 1254,"src": 999,"name": "readIntForeign"},{"import": 1254,"src": 57,"name": "readIntLittle","kind": "const","type": 1256,"value": 746},{"import": 1254,"src": 1000,"name": "readIntBig"},{"import": 1254,"src": 91,"name": "readInt"},{"import": 1254,"src": 301,"name": "readVarInt"},{"import": 1254,"src": 1001,"name": "SkipBytesOptions"},{"import": 1254,"src": 1002,"name": "skipBytes"},{"import": 1254,"src": 1003,"name": "isBytes"},{"import": 1254,"src": 115,"name": "readStruct","kind": "const","type": 1257,"value": 747},{"import": 1254,"src": 150,"name": "readEnum"},{"import": 1254,"src": 1004,"name": "Self","kind": "const","type": 592,"value": 643},{"import": 1230,"src": 1005,"name": "isX86"},{"import": 1230,"src": 1006,"name": "isARM"},{"import": 1230,"src": 1007,"name": "isAARCH64"},{"import": 1230,"src": 1008,"name": "isThumb"},{"import": 1230,"src": 217,"name": "isWasm","kind": "const","type": 362,"value": 379},{"import": 1230,"src": 1009,"name": "isRISCV"},{"import": 1230,"src": 1010,"name": "isMIPS"},{"import": 1230,"src": 1011,"name": "isPPC"},{"import": 1230,"src": 1012,"name": "isPPC64"},{"import": 1230,"src": 1013,"name": "isSPARC"},{"import": 1230,"src": 1014,"name": "isSPIRV"},{"import": 1230,"src": 1015,"name": "parseCpuModel"},{"import": 1230,"src": 1016,"name": "toElfMachine"},{"import": 1230,"src": 1017,"name": "toCoffMachine"},{"import": 1230,"src": 59,"name": "endian","kind": "const","type": 64,"value": 66},{"import": 1230,"src": 1018,"name": "ptrBitWidth"},{"import": 1230,"src": 1019,"name": "genericName"},{"import": 1230,"src": 1020,"name": "allFeaturesList"},{"import": 1230,"src": 1021,"name": "allCpuModels"},{"import": 1230,"src": 1022,"name": "allCpusFromDecls"},{"import": 1258,"src": 1023,"name": "ReadError","kind": "const","type": 592,"value": 654},{"import": 1258,"src": 1024,"name": "WriteError"},{"import": 1258,"src": 1025,"name": "SeekError","kind": "const","type": 592,"value": 657},{"import": 1258,"src": 1026,"name": "GetSeekPosError","kind": "const","type": 592,"value": 658},{"import": 1258,"src": 1027,"name": "Reader","kind": "const","type": 592,"value": 652},{"import": 1258,"src": 1028,"name": "Writer"},{"import": 1258,"src": 1029,"name": "SeekableStream","kind": "const","type": 592,"value": 656},{"import": 1258,"src": 82,"name": "reader","kind": "const","type": 99,"value": 102},{"import": 1258,"src": 1030,"name": "writer"},{"import": 1258,"src": 87,"name": "seekableStream","kind": "const","type": 103,"value": 107},{"import": 1258,"src": 81,"name": "read","kind": "const","type": 98,"value": 101},{"import": 1258,"src": 1031,"name": "write"},{"import": 1258,"src": 83,"name": "seekTo","kind": "const","type": 100,"value": 103},{"import": 1258,"src": 84,"name": "seekBy","kind": "const","type": 101,"value": 104},{"import": 1258,"src": 86,"name": "getEndPos","kind": "const","type": 102,"value": 106},{"import": 1258,"src": 85,"name": "getPos","kind": "const","type": 102,"value": 105},{"import": 1258,"src": 1032,"name": "getWritten"},{"import": 1258,"src": 1033,"name": "reset"},{"import": 1258,"src": 1034,"name": "Self","kind": "const","type": 592,"value": 651},{"import": 1254,"src": 990,"name": "Error","kind": "const","type": 592,"value": 654},{"import": 1254,"src": 72,"name": "read","kind": "const","type": 110,"value": 123},{"import": 1254,"src": 54,"name": "readAll","kind": "const","type": 110,"value": 114},{"import": 1254,"src": 53,"name": "readNoEof","kind": "const","type": 109,"value": 113},{"import": 1254,"src": 991,"name": "readAllBuffer"},{"import": 1254,"src": 992,"name": "readAllArrayList"},{"import": 1254,"src": 993,"name": "readAllArrayListAligned"},{"import": 1254,"src": 994,"name": "readAllAlloc"},{"import": 1254,"src": 147,"name": "readUntilDelimiterArrayList","kind": "const","type": 315,"value": 330},{"import": 1254,"src": 146,"name": "readUntilDelimiterAlloc","kind": "const","type": 314,"value": 329},{"import": 1254,"src": 995,"name": "readUntilDelimiter"},{"import": 1254,"src": 996,"name": "readUntilDelimiterOrEofAlloc"},{"import": 1254,"src": 70,"name": "readUntilDelimiterOrEof"},{"import": 1254,"src": 997,"name": "skipUntilDelimiterOrEof"},{"import": 1254,"src": 71,"name": "readByte","kind": "const","type": 118,"value": 122},{"import": 1254,"src": 183,"name": "readByteSigned","kind": "const","type": 305,"value": 320},{"import": 1254,"src": 58,"name": "readBytesNoEof","kind": "const","type": 1259,"value": 748},{"import": 1254,"src": 998,"name": "readIntNative"},{"import": 1254,"src": 999,"name": "readIntForeign"},{"import": 1254,"src": 57,"name": "readIntLittle"},{"import": 1254,"src": 1000,"name": "readIntBig"},{"import": 1254,"src": 91,"name": "readInt","kind": "const","type": 1260,"value": 749},{"import": 1254,"src": 301,"name": "readVarInt","kind": "const","type": 1261,"value": 750},{"import": 1254,"src": 1001,"name": "SkipBytesOptions"},{"import": 1254,"src": 1002,"name": "skipBytes"},{"import": 1254,"src": 1003,"name": "isBytes"},{"import": 1254,"src": 115,"name": "readStruct"},{"import": 1254,"src": 150,"name": "readEnum"},{"import": 1254,"src": 1004,"name": "Self","kind": "const","type": 592,"value": 652},{"import": 1262,"src": 1035,"name": "SeekError","kind": "const","type": 592,"value": 657},{"import": 1262,"src": 1036,"name": "GetSeekPosError","kind": "const","type": 592,"value": 658},{"import": 1262,"src": 89,"name": "seekTo","kind": "const","type": 105,"value": 109},{"import": 1262,"src": 185,"name": "seekBy","kind": "const","type": 327,"value": 342},{"import": 1262,"src": 88,"name": "getEndPos","kind": "const","type": 104,"value": 108},{"import": 1262,"src": 93,"name": "getPos","kind": "const","type": 104,"value": 124},{"import": 1262,"src": 1037,"name": "Self","kind": "const","type": 592,"value": 656},{"import": 1263,"src": 1038,"name": "Int","kind": "const","type": 592,"value": 1264},{"import": 1263,"src": 1039,"name": "Float","kind": "const","type": 592,"value": 1265},{"import": 1263,"src": 1040,"name": "Pointer","kind": "const","type": 592,"value": 1266},{"import": 1263,"src": 1041,"name": "Array","kind": "const","type": 592,"value": 1267},{"import": 1263,"src": 1042,"name": "ContainerLayout","kind": "const","type": 592,"value": 1268},{"import": 1263,"src": 1043,"name": "StructField","kind": "const","type": 592,"value": 1269},{"import": 1263,"src": 1044,"name": "Struct","kind": "const","type": 592,"value": 1270},{"import": 1263,"src": 1045,"name": "Optional","kind": "const","type": 592,"value": 1271},{"import": 1263,"src": 1046,"name": "ErrorUnion","kind": "const","type": 592,"value": 1272},{"import": 1263,"src": 1047,"name": "Error","kind": "const","type": 592,"value": 1273},{"import": 1263,"src": 1048,"name": "ErrorSet","kind": "const","type": 592,"value": 1274},{"import": 1263,"src": 1049,"name": "EnumField","kind": "const","type": 592,"value": 1275},{"import": 1263,"src": 1050,"name": "Enum","kind": "const","type": 592,"value": 1276},{"import": 1263,"src": 1051,"name": "UnionField","kind": "const","type": 592,"value": 1277},{"import": 1263,"src": 1052,"name": "Union","kind": "const","type": 592,"value": 1278},{"import": 1263,"src": 1053,"name": "FnArg","kind": "const","type": 592,"value": 1279},{"import": 1263,"src": 1054,"name": "Fn","kind": "const","type": 592,"value": 1280},{"import": 1263,"src": 1055,"name": "Opaque","kind": "const","type": 592,"value": 1281},{"import": 1263,"src": 1056,"name": "Frame","kind": "const","type": 592,"value": 1282},{"import": 1263,"src": 1057,"name": "AnyFrame","kind": "const","type": 592,"value": 1283},{"import": 1263,"src": 1058,"name": "Vector","kind": "const","type": 592,"value": 1284},{"import": 1263,"src": 1059,"name": "Declaration","kind": "const","type": 592,"value": 1285},{"import": 1286,"src": 124,"name": "next","kind": "const","type": 190,"value": 198},{"import": 1286,"src": 1060,"name": "rest"},{"import": 1286,"src": 1061,"name": "reset"},{"import": 1286,"src": 1062,"name": "Self","kind": "const","type": 592,"value": 679},{"import": 1286,"src": 247,"name": "isSplitByte","kind": "const","type": 412,"value": 440},{"import": 1254,"src": 990,"name": "Error","kind": "const","type": 592,"value": 684},{"import": 1254,"src": 72,"name": "read","kind": "const","type": 208,"value": 254},{"import": 1254,"src": 54,"name": "readAll","kind": "const","type": 208,"value": 218},{"import": 1254,"src": 53,"name": "readNoEof","kind": "const","type": 207,"value": 217},{"import": 1254,"src": 991,"name": "readAllBuffer"},{"import": 1254,"src": 992,"name": "readAllArrayList"},{"import": 1254,"src": 993,"name": "readAllArrayListAligned"},{"import": 1254,"src": 994,"name": "readAllAlloc"},{"import": 1254,"src": 147,"name": "readUntilDelimiterArrayList","kind": "const","type": 241,"value": 251},{"import": 1254,"src": 146,"name": "readUntilDelimiterAlloc","kind": "const","type": 239,"value": 249},{"import": 1254,"src": 995,"name": "readUntilDelimiter"},{"import": 1254,"src": 996,"name": "readUntilDelimiterOrEofAlloc"},{"import": 1254,"src": 70,"name": "readUntilDelimiterOrEof"},{"import": 1254,"src": 997,"name": "skipUntilDelimiterOrEof"},{"import": 1254,"src": 71,"name": "readByte","kind": "const","type": 243,"value": 253},{"import": 1254,"src": 183,"name": "readByteSigned"},{"import": 1254,"src": 58,"name": "readBytesNoEof","kind": "const","type": 1287,"value": 751},{"import": 1254,"src": 998,"name": "readIntNative"},{"import": 1254,"src": 999,"name": "readIntForeign"},{"import": 1254,"src": 57,"name": "readIntLittle","kind": "const","type": 1288,"value": 752},{"import": 1254,"src": 1000,"name": "readIntBig"},{"import": 1254,"src": 91,"name": "readInt","kind": "const","type": 1289,"value": 753},{"import": 1254,"src": 301,"name": "readVarInt"},{"import": 1254,"src": 1001,"name": "SkipBytesOptions"},{"import": 1254,"src": 1002,"name": "skipBytes"},{"import": 1254,"src": 1003,"name": "isBytes"},{"import": 1254,"src": 115,"name": "readStruct","kind": "const","type": 1290,"value": 754},{"import": 1254,"src": 150,"name": "readEnum","kind": "const","type": 1291,"value": 755},{"import": 1254,"src": 1004,"name": "Self","kind": "const","type": 592,"value": 682},{"import": 1245,"src": 896,"name": "Slice","kind": "const","type": 592,"value": 750},{"import": 1245,"src": 78,"name": "init","kind": "const","type": 219,"value": 229},{"import": 1245,"src": 897,"name": "initCapacity"},{"import": 1245,"src": 99,"name": "deinit","kind": "const","type": 220,"value": 230},{"import": 1245,"src": 898,"name": "span"},{"import": 1245,"src": 899,"name": "toSlice"},{"import": 1245,"src": 900,"name": "toSliceConst"},{"import": 1245,"src": 901,"name": "at"},{"import": 1245,"src": 902,"name": "ptrAt"},{"import": 1245,"src": 903,"name": "setOrError"},{"import": 1245,"src": 904,"name": "set"},{"import": 1245,"src": 905,"name": "swapRemoveOrError"},{"import": 1245,"src": 906,"name": "fromOwnedSlice"},{"import": 1245,"src": 907,"name": "toUnmanaged"},{"import": 1245,"src": 908,"name": "moveToUnmanaged"},{"import": 1245,"src": 141,"name": "toOwnedSlice","kind": "const","type": 228,"value": 238},{"import": 1245,"src": 909,"name": "toOwnedSliceSentinel"},{"import": 1245,"src": 910,"name": "insert"},{"import": 1245,"src": 911,"name": "insertSlice"},{"import": 1245,"src": 912,"name": "replaceRange"},{"import": 1245,"src": 95,"name": "append","kind": "const","type": 221,"value": 231},{"import": 1245,"src": 74,"name": "appendAssumeCapacity"},{"import": 1245,"src": 913,"name": "orderedRemove"},{"import": 1245,"src": 914,"name": "swapRemove"},{"import": 1245,"src": 915,"name": "appendSlice"},{"import": 1245,"src": 916,"name": "appendSliceAssumeCapacity"},{"import": 1245,"src": 917,"name": "Writer"},{"import": 1245,"src": 918,"name": "writer"},{"import": 1245,"src": 919,"name": "appendNTimes"},{"import": 1245,"src": 920,"name": "appendNTimesAssumeCapacity"},{"import": 1245,"src": 105,"name": "resize"},{"import": 1245,"src": 921,"name": "shrinkAndFree"},{"import": 1245,"src": 148,"name": "shrinkRetainingCapacity"},{"import": 1245,"src": 922,"name": "clearRetainingCapacity"},{"import": 1245,"src": 923,"name": "clearAndFree"},{"import": 1245,"src": 924,"name": "ensureCapacity"},{"import": 1245,"src": 101,"name": "ensureTotalCapacity","kind": "const","type": 223,"value": 233},{"import": 1245,"src": 64,"name": "ensureTotalCapacityPrecise","kind": "const","type": 224,"value": 234},{"import": 1245,"src": 925,"name": "ensureUnusedCapacity"},{"import": 1245,"src": 926,"name": "expandToCapacity"},{"import": 1245,"src": 100,"name": "addOne","kind": "const","type": 222,"value": 232},{"import": 1245,"src": 102,"name": "addOneAssumeCapacity","kind": "const","type": 227,"value": 237},{"import": 1245,"src": 927,"name": "addManyAsArray"},{"import": 1245,"src": 928,"name": "addManyAsArrayAssumeCapacity"},{"import": 1245,"src": 929,"name": "pop"},{"import": 1245,"src": 930,"name": "popOrNull"},{"import": 1245,"src": 65,"name": "allocatedSlice","kind": "const","type": 225,"value": 235},{"import": 1245,"src": 931,"name": "unusedCapacitySlice"},{"import": 1245,"src": 932,"name": "Self","kind": "const","type": 592,"value": 688},{"import": 1245,"src": 933,"name": "appendWrite"},{"import": 1245,"src": 896,"name": "Slice","kind": "const","type": 592,"value": 790},{"import": 1245,"src": 78,"name": "init","kind": "const","type": 235,"value": 245},{"import": 1245,"src": 897,"name": "initCapacity"},{"import": 1245,"src": 99,"name": "deinit","kind": "const","type": 238,"value": 248},{"import": 1245,"src": 898,"name": "span"},{"import": 1245,"src": 899,"name": "toSlice"},{"import": 1245,"src": 900,"name": "toSliceConst"},{"import": 1245,"src": 901,"name": "at"},{"import": 1245,"src": 902,"name": "ptrAt"},{"import": 1245,"src": 903,"name": "setOrError"},{"import": 1245,"src": 904,"name": "set"},{"import": 1245,"src": 905,"name": "swapRemoveOrError"},{"import": 1245,"src": 906,"name": "fromOwnedSlice"},{"import": 1245,"src": 907,"name": "toUnmanaged"},{"import": 1245,"src": 908,"name": "moveToUnmanaged"},{"import": 1245,"src": 141,"name": "toOwnedSlice","kind": "const","type": 273,"value": 284},{"import": 1245,"src": 909,"name": "toOwnedSliceSentinel"},{"import": 1245,"src": 910,"name": "insert"},{"import": 1245,"src": 911,"name": "insertSlice"},{"import": 1245,"src": 912,"name": "replaceRange"},{"import": 1245,"src": 95,"name": "append","kind": "const","type": 254,"value": 265},{"import": 1245,"src": 74,"name": "appendAssumeCapacity"},{"import": 1245,"src": 913,"name": "orderedRemove"},{"import": 1245,"src": 914,"name": "swapRemove"},{"import": 1245,"src": 915,"name": "appendSlice"},{"import": 1245,"src": 916,"name": "appendSliceAssumeCapacity"},{"import": 1245,"src": 917,"name": "Writer"},{"import": 1245,"src": 918,"name": "writer"},{"import": 1245,"src": 919,"name": "appendNTimes"},{"import": 1245,"src": 920,"name": "appendNTimesAssumeCapacity"},{"import": 1245,"src": 105,"name": "resize"},{"import": 1245,"src": 921,"name": "shrinkAndFree"},{"import": 1245,"src": 148,"name": "shrinkRetainingCapacity"},{"import": 1245,"src": 922,"name": "clearRetainingCapacity"},{"import": 1245,"src": 923,"name": "clearAndFree"},{"import": 1245,"src": 924,"name": "ensureCapacity"},{"import": 1245,"src": 101,"name": "ensureTotalCapacity","kind": "const","type": 256,"value": 267},{"import": 1245,"src": 64,"name": "ensureTotalCapacityPrecise","kind": "const","type": 257,"value": 268},{"import": 1245,"src": 925,"name": "ensureUnusedCapacity"},{"import": 1245,"src": 926,"name": "expandToCapacity"},{"import": 1245,"src": 100,"name": "addOne","kind": "const","type": 255,"value": 266},{"import": 1245,"src": 102,"name": "addOneAssumeCapacity","kind": "const","type": 260,"value": 271},{"import": 1245,"src": 927,"name": "addManyAsArray"},{"import": 1245,"src": 928,"name": "addManyAsArrayAssumeCapacity"},{"import": 1245,"src": 929,"name": "pop"},{"import": 1245,"src": 930,"name": "popOrNull"},{"import": 1245,"src": 65,"name": "allocatedSlice","kind": "const","type": 258,"value": 269},{"import": 1245,"src": 931,"name": "unusedCapacitySlice"},{"import": 1245,"src": 932,"name": "Self","kind": "const","type": 592,"value": 699},{"import": 1245,"src": 933,"name": "appendWrite"},{"import": 1245,"src": 896,"name": "Slice","kind": "const","type": 592,"value": 674},{"import": 1245,"src": 78,"name": "init","kind": "const","type": 240,"value": 250},{"import": 1245,"src": 897,"name": "initCapacity"},{"import": 1245,"src": 99,"name": "deinit","kind": "const","type": 251,"value": 262},{"import": 1245,"src": 898,"name": "span"},{"import": 1245,"src": 899,"name": "toSlice"},{"import": 1245,"src": 900,"name": "toSliceConst"},{"import": 1245,"src": 901,"name": "at"},{"import": 1245,"src": 902,"name": "ptrAt"},{"import": 1245,"src": 903,"name": "setOrError"},{"import": 1245,"src": 904,"name": "set"},{"import": 1245,"src": 905,"name": "swapRemoveOrError"},{"import": 1245,"src": 906,"name": "fromOwnedSlice"},{"import": 1245,"src": 907,"name": "toUnmanaged"},{"import": 1245,"src": 908,"name": "moveToUnmanaged"},{"import": 1245,"src": 141,"name": "toOwnedSlice","kind": "const","type": 252,"value": 263},{"import": 1245,"src": 909,"name": "toOwnedSliceSentinel"},{"import": 1245,"src": 910,"name": "insert"},{"import": 1245,"src": 911,"name": "insertSlice"},{"import": 1245,"src": 912,"name": "replaceRange"},{"import": 1245,"src": 95,"name": "append","kind": "const","type": 244,"value": 255},{"import": 1245,"src": 74,"name": "appendAssumeCapacity"},{"import": 1245,"src": 913,"name": "orderedRemove"},{"import": 1245,"src": 914,"name": "swapRemove"},{"import": 1245,"src": 915,"name": "appendSlice"},{"import": 1245,"src": 916,"name": "appendSliceAssumeCapacity"},{"import": 1245,"src": 917,"name": "Writer"},{"import": 1245,"src": 918,"name": "writer"},{"import": 1245,"src": 919,"name": "appendNTimes"},{"import": 1245,"src": 920,"name": "appendNTimesAssumeCapacity"},{"import": 1245,"src": 105,"name": "resize"},{"import": 1245,"src": 921,"name": "shrinkAndFree"},{"import": 1245,"src": 148,"name": "shrinkRetainingCapacity","kind": "const","type": 242,"value": 252},{"import": 1245,"src": 922,"name": "clearRetainingCapacity"},{"import": 1245,"src": 923,"name": "clearAndFree"},{"import": 1245,"src": 924,"name": "ensureCapacity"},{"import": 1245,"src": 101,"name": "ensureTotalCapacity","kind": "const","type": 246,"value": 257},{"import": 1245,"src": 64,"name": "ensureTotalCapacityPrecise","kind": "const","type": 247,"value": 258},{"import": 1245,"src": 925,"name": "ensureUnusedCapacity"},{"import": 1245,"src": 926,"name": "expandToCapacity"},{"import": 1245,"src": 100,"name": "addOne","kind": "const","type": 245,"value": 256},{"import": 1245,"src": 102,"name": "addOneAssumeCapacity","kind": "const","type": 250,"value": 261},{"import": 1245,"src": 927,"name": "addManyAsArray"},{"import": 1245,"src": 928,"name": "addManyAsArrayAssumeCapacity"},{"import": 1245,"src": 929,"name": "pop"},{"import": 1245,"src": 930,"name": "popOrNull"},{"import": 1245,"src": 65,"name": "allocatedSlice","kind": "const","type": 248,"value": 259},{"import": 1245,"src": 931,"name": "unusedCapacitySlice"},{"import": 1245,"src": 932,"name": "Self","kind": "const","type": 592,"value": 703},{"import": 1245,"src": 933,"name": "appendWrite"},{"import": 1245,"src": 896,"name": "Slice","kind": "const","type": 592,"value": 791},{"import": 1245,"src": 78,"name": "init","kind": "const","type": 261,"value": 272},{"import": 1245,"src": 897,"name": "initCapacity"},{"import": 1245,"src": 99,"name": "deinit","kind": "const","type": 264,"value": 275},{"import": 1245,"src": 898,"name": "span"},{"import": 1245,"src": 899,"name": "toSlice"},{"import": 1245,"src": 900,"name": "toSliceConst"},{"import": 1245,"src": 901,"name": "at"},{"import": 1245,"src": 902,"name": "ptrAt"},{"import": 1245,"src": 903,"name": "setOrError"},{"import": 1245,"src": 904,"name": "set"},{"import": 1245,"src": 905,"name": "swapRemoveOrError"},{"import": 1245,"src": 906,"name": "fromOwnedSlice"},{"import": 1245,"src": 907,"name": "toUnmanaged"},{"import": 1245,"src": 908,"name": "moveToUnmanaged"},{"import": 1245,"src": 141,"name": "toOwnedSlice","kind": "const","type": 274,"value": 285},{"import": 1245,"src": 909,"name": "toOwnedSliceSentinel"},{"import": 1245,"src": 910,"name": "insert"},{"import": 1245,"src": 911,"name": "insertSlice"},{"import": 1245,"src": 912,"name": "replaceRange"},{"import": 1245,"src": 95,"name": "append"},{"import": 1245,"src": 74,"name": "appendAssumeCapacity"},{"import": 1245,"src": 913,"name": "orderedRemove"},{"import": 1245,"src": 914,"name": "swapRemove"},{"import": 1245,"src": 915,"name": "appendSlice"},{"import": 1245,"src": 916,"name": "appendSliceAssumeCapacity"},{"import": 1245,"src": 917,"name": "Writer"},{"import": 1245,"src": 918,"name": "writer"},{"import": 1245,"src": 919,"name": "appendNTimes"},{"import": 1245,"src": 920,"name": "appendNTimesAssumeCapacity"},{"import": 1245,"src": 105,"name": "resize"},{"import": 1245,"src": 921,"name": "shrinkAndFree"},{"import": 1245,"src": 148,"name": "shrinkRetainingCapacity"},{"import": 1245,"src": 922,"name": "clearRetainingCapacity"},{"import": 1245,"src": 923,"name": "clearAndFree"},{"import": 1245,"src": 924,"name": "ensureCapacity"},{"import": 1245,"src": 101,"name": "ensureTotalCapacity","kind": "const","type": 266,"value": 277},{"import": 1245,"src": 64,"name": "ensureTotalCapacityPrecise","kind": "const","type": 267,"value": 278},{"import": 1245,"src": 925,"name": "ensureUnusedCapacity"},{"import": 1245,"src": 926,"name": "expandToCapacity"},{"import": 1245,"src": 100,"name": "addOne","kind": "const","type": 265,"value": 276},{"import": 1245,"src": 102,"name": "addOneAssumeCapacity","kind": "const","type": 270,"value": 281},{"import": 1245,"src": 927,"name": "addManyAsArray"},{"import": 1245,"src": 928,"name": "addManyAsArrayAssumeCapacity"},{"import": 1245,"src": 929,"name": "pop"},{"import": 1245,"src": 930,"name": "popOrNull"},{"import": 1245,"src": 65,"name": "allocatedSlice","kind": "const","type": 268,"value": 279},{"import": 1245,"src": 931,"name": "unusedCapacitySlice"},{"import": 1245,"src": 932,"name": "Self","kind": "const","type": 592,"value": 704},{"import": 1245,"src": 933,"name": "appendWrite"},{"import": 1245,"src": 896,"name": "Slice","kind": "const","type": 592,"value": 793},{"import": 1245,"src": 78,"name": "init","kind": "const","type": 306,"value": 321},{"import": 1245,"src": 897,"name": "initCapacity"},{"import": 1245,"src": 99,"name": "deinit"},{"import": 1245,"src": 898,"name": "span"},{"import": 1245,"src": 899,"name": "toSlice"},{"import": 1245,"src": 900,"name": "toSliceConst"},{"import": 1245,"src": 901,"name": "at"},{"import": 1245,"src": 902,"name": "ptrAt"},{"import": 1245,"src": 903,"name": "setOrError"},{"import": 1245,"src": 904,"name": "set"},{"import": 1245,"src": 905,"name": "swapRemoveOrError"},{"import": 1245,"src": 906,"name": "fromOwnedSlice"},{"import": 1245,"src": 907,"name": "toUnmanaged"},{"import": 1245,"src": 908,"name": "moveToUnmanaged"},{"import": 1245,"src": 141,"name": "toOwnedSlice"},{"import": 1245,"src": 909,"name": "toOwnedSliceSentinel"},{"import": 1245,"src": 910,"name": "insert"},{"import": 1245,"src": 911,"name": "insertSlice"},{"import": 1245,"src": 912,"name": "replaceRange"},{"import": 1245,"src": 95,"name": "append","kind": "const","type": 307,"value": 322},{"import": 1245,"src": 74,"name": "appendAssumeCapacity"},{"import": 1245,"src": 913,"name": "orderedRemove"},{"import": 1245,"src": 914,"name": "swapRemove"},{"import": 1245,"src": 915,"name": "appendSlice"},{"import": 1245,"src": 916,"name": "appendSliceAssumeCapacity"},{"import": 1245,"src": 917,"name": "Writer"},{"import": 1245,"src": 918,"name": "writer"},{"import": 1245,"src": 919,"name": "appendNTimes"},{"import": 1245,"src": 920,"name": "appendNTimesAssumeCapacity"},{"import": 1245,"src": 105,"name": "resize"},{"import": 1245,"src": 921,"name": "shrinkAndFree"},{"import": 1245,"src": 148,"name": "shrinkRetainingCapacity"},{"import": 1245,"src": 922,"name": "clearRetainingCapacity"},{"import": 1245,"src": 923,"name": "clearAndFree"},{"import": 1245,"src": 924,"name": "ensureCapacity"},{"import": 1245,"src": 101,"name": "ensureTotalCapacity","kind": "const","type": 309,"value": 324},{"import": 1245,"src": 64,"name": "ensureTotalCapacityPrecise","kind": "const","type": 310,"value": 325},{"import": 1245,"src": 925,"name": "ensureUnusedCapacity"},{"import": 1245,"src": 926,"name": "expandToCapacity"},{"import": 1245,"src": 100,"name": "addOne","kind": "const","type": 308,"value": 323},{"import": 1245,"src": 102,"name": "addOneAssumeCapacity","kind": "const","type": 313,"value": 328},{"import": 1245,"src": 927,"name": "addManyAsArray"},{"import": 1245,"src": 928,"name": "addManyAsArrayAssumeCapacity"},{"import": 1245,"src": 929,"name": "pop"},{"import": 1245,"src": 930,"name": "popOrNull"},{"import": 1245,"src": 65,"name": "allocatedSlice","kind": "const","type": 311,"value": 326},{"import": 1245,"src": 931,"name": "unusedCapacitySlice"},{"import": 1245,"src": 932,"name": "Self","kind": "const","type": 592,"value": 710},{"import": 1245,"src": 933,"name": "appendWrite"},{"import": 1245,"src": 896,"name": "Slice","kind": "const","type": 592,"value": 794},{"import": 1245,"src": 78,"name": "init","kind": "const","type": 316,"value": 331},{"import": 1245,"src": 897,"name": "initCapacity"},{"import": 1245,"src": 99,"name": "deinit"},{"import": 1245,"src": 898,"name": "span"},{"import": 1245,"src": 899,"name": "toSlice"},{"import": 1245,"src": 900,"name": "toSliceConst"},{"import": 1245,"src": 901,"name": "at"},{"import": 1245,"src": 902,"name": "ptrAt"},{"import": 1245,"src": 903,"name": "setOrError"},{"import": 1245,"src": 904,"name": "set"},{"import": 1245,"src": 905,"name": "swapRemoveOrError"},{"import": 1245,"src": 906,"name": "fromOwnedSlice"},{"import": 1245,"src": 907,"name": "toUnmanaged"},{"import": 1245,"src": 908,"name": "moveToUnmanaged"},{"import": 1245,"src": 141,"name": "toOwnedSlice"},{"import": 1245,"src": 909,"name": "toOwnedSliceSentinel"},{"import": 1245,"src": 910,"name": "insert"},{"import": 1245,"src": 911,"name": "insertSlice"},{"import": 1245,"src": 912,"name": "replaceRange"},{"import": 1245,"src": 95,"name": "append","kind": "const","type": 319,"value": 334},{"import": 1245,"src": 74,"name": "appendAssumeCapacity"},{"import": 1245,"src": 913,"name": "orderedRemove"},{"import": 1245,"src": 914,"name": "swapRemove"},{"import": 1245,"src": 915,"name": "appendSlice"},{"import": 1245,"src": 916,"name": "appendSliceAssumeCapacity"},{"import": 1245,"src": 917,"name": "Writer"},{"import": 1245,"src": 918,"name": "writer"},{"import": 1245,"src": 919,"name": "appendNTimes"},{"import": 1245,"src": 920,"name": "appendNTimesAssumeCapacity"},{"import": 1245,"src": 105,"name": "resize"},{"import": 1245,"src": 921,"name": "shrinkAndFree"},{"import": 1245,"src": 148,"name": "shrinkRetainingCapacity"},{"import": 1245,"src": 922,"name": "clearRetainingCapacity"},{"import": 1245,"src": 923,"name": "clearAndFree"},{"import": 1245,"src": 924,"name": "ensureCapacity"},{"import": 1245,"src": 101,"name": "ensureTotalCapacity","kind": "const","type": 321,"value": 336},{"import": 1245,"src": 64,"name": "ensureTotalCapacityPrecise","kind": "const","type": 322,"value": 337},{"import": 1245,"src": 925,"name": "ensureUnusedCapacity"},{"import": 1245,"src": 926,"name": "expandToCapacity"},{"import": 1245,"src": 100,"name": "addOne","kind": "const","type": 320,"value": 335},{"import": 1245,"src": 102,"name": "addOneAssumeCapacity","kind": "const","type": 325,"value": 340},{"import": 1245,"src": 927,"name": "addManyAsArray"},{"import": 1245,"src": 928,"name": "addManyAsArrayAssumeCapacity"},{"import": 1245,"src": 929,"name": "pop"},{"import": 1245,"src": 930,"name": "popOrNull"},{"import": 1245,"src": 65,"name": "allocatedSlice","kind": "const","type": 323,"value": 338},{"import": 1245,"src": 931,"name": "unusedCapacitySlice"},{"import": 1245,"src": 932,"name": "Self","kind": "const","type": 592,"value": 711},{"import": 1245,"src": 933,"name": "appendWrite"},{"import": 1293,"src": 1063,"name": "Self"},{"import": 1293,"src": 1064,"name": "Node","kind": "const","type": 592,"value": 1294},{"import": 1293,"src": 1065,"name": "init"},{"import": 1293,"src": 1066,"name": "put"},{"import": 1293,"src": 1067,"name": "get"},{"import": 1293,"src": 1068,"name": "unget"},{"import": 1293,"src": 1069,"name": "remove"},{"import": 1293,"src": 1070,"name": "isEmpty"},{"import": 1293,"src": 1071,"name": "dump"},{"import": 1293,"src": 1072,"name": "dumpToStream"},{"import": 1297,"src": 1073,"name": "Node","kind": "const","type": 592,"value": 1294},{"import": 1297,"src": 1074,"name": "insertAfter"},{"import": 1297,"src": 1075,"name": "insertBefore"},{"import": 1297,"src": 1076,"name": "concatByMoving"},{"import": 1297,"src": 1077,"name": "append"},{"import": 1297,"src": 1078,"name": "prepend"},{"import": 1297,"src": 1079,"name": "remove"},{"import": 1297,"src": 1080,"name": "pop"},{"import": 1297,"src": 1081,"name": "popFirst"},{"import": 1297,"src": 1082,"name": "Self"},{"import": 1298,"src": 1083,"name": "init"},{"import": 1298,"src": 1084,"name": "loadUnchecked"},{"import": 1298,"src": 1085,"name": "storeUnchecked"},{"import": 1298,"src": 1086,"name": "load"},{"import": 1298,"src": 1087,"name": "store"},{"import": 1298,"src": 1088,"name": "swap"},{"import": 1298,"src": 1089,"name": "compareAndSwap"},{"import": 1298,"src": 1090,"name": "tryCompareAndSwap"},{"import": 1298,"src": 1091,"name": "Self"},{"import": 1298,"src": 1092,"name": "cmpxchg"},{"import": 1298,"src": 1093,"name": "rmw"},{"import": 1298,"src": 408,"name": "exportWhen","kind": "const","type": 823,"value": 739},{"import": 1293,"src": 1063,"name": "Self"},{"import": 1293,"src": 1064,"name": "Node","kind": "const","type": 592,"value": 1299},{"import": 1293,"src": 1065,"name": "init"},{"import": 1293,"src": 1066,"name": "put"},{"import": 1293,"src": 1067,"name": "get"},{"import": 1293,"src": 1068,"name": "unget"},{"import": 1293,"src": 1069,"name": "remove"},{"import": 1293,"src": 1070,"name": "isEmpty"},{"import": 1293,"src": 1071,"name": "dump"},{"import": 1293,"src": 1072,"name": "dumpToStream"},{"import": 1301,"src": 1094,"name": "Node","kind": "const","type": 592,"value": 1299},{"import": 1301,"src": 1095,"name": "Finish","kind": "const","type": 592,"value": 1302},{"import": 1301,"src": 1096,"name": "Msg","kind": "const","type": 592,"value": 1303},{"import": 1297,"src": 1073,"name": "Node","kind": "const","type": 592,"value": 1299},{"import": 1297,"src": 1074,"name": "insertAfter"},{"import": 1297,"src": 1075,"name": "insertBefore"},{"import": 1297,"src": 1076,"name": "concatByMoving"},{"import": 1297,"src": 1077,"name": "append"},{"import": 1297,"src": 1078,"name": "prepend"},{"import": 1297,"src": 1079,"name": "remove"},{"import": 1297,"src": 1080,"name": "pop"},{"import": 1297,"src": 1081,"name": "popFirst"},{"import": 1297,"src": 1082,"name": "Self"},{"import": 1297,"src": 1097,"name": "Node","kind": "const","type": 592,"value": 1304},{"import": 1297,"src": 327,"name": "prepend","kind": "const","type": 559,"value": 612},{"import": 1297,"src": 1098,"name": "remove"},{"import": 1297,"src": 1099,"name": "popFirst"},{"import": 1297,"src": 1100,"name": "len"},{"import": 1297,"src": 1101,"name": "Self","kind": "const","type": 592,"value": 725},{"import": 1306,"src": 1102,"name": "Self"},{"import": 1306,"src": 1103,"name": "Node","kind": "const","type": 592,"value": 1307},{"import": 1306,"src": 1104,"name": "init"},{"import": 1306,"src": 1105,"name": "pushFirst"},{"import": 1306,"src": 1106,"name": "push"},{"import": 1306,"src": 1107,"name": "pop"},{"import": 1306,"src": 1108,"name": "isEmpty"},{"import": 1306,"src": 1109,"name": "lock_init","kind": "const","type": 604,"value": "false"},{"import": 1310,"src": 1110,"name": "file_magic","kind": "const","type": 1311,"value": null},{"import": 1310,"src": 139,"name": "maxLoad","kind": "const","type": 217,"value": 227},{"import": 1238,"src": 355,"name": "hash","kind": "const","type": 589,"value": 679},{"import": 1238,"src": 356,"name": "eql","kind": "const","type": 590,"value": 680},{"import": 1238,"src": 776,"name": "Unmanaged","kind": "const","type": 592,"value": 821},{"import": 1238,"src": 777,"name": "Entry"},{"import": 1238,"src": 778,"name": "KV"},{"import": 1238,"src": 779,"name": "Hash"},{"import": 1238,"src": 780,"name": "Iterator"},{"import": 1238,"src": 781,"name": "KeyIterator"},{"import": 1238,"src": 782,"name": "ValueIterator"},{"import": 1238,"src": 783,"name": "Size"},{"import": 1238,"src": 784,"name": "GetOrPutResult"},{"import": 1238,"src": 278,"name": "init"},{"import": 1238,"src": 785,"name": "initContext"},{"import": 1238,"src": 786,"name": "deinit"},{"import": 1238,"src": 787,"name": "clearRetainingCapacity"},{"import": 1238,"src": 788,"name": "clearAndFree"},{"import": 1238,"src": 789,"name": "count"},{"import": 1238,"src": 790,"name": "iterator"},{"import": 1238,"src": 791,"name": "keyIterator"},{"import": 1238,"src": 792,"name": "valueIterator"},{"import": 1238,"src": 793,"name": "getOrPut"},{"import": 1238,"src": 794,"name": "getOrPutAdapted"},{"import": 1238,"src": 795,"name": "getOrPutAssumeCapacity"},{"import": 1238,"src": 796,"name": "getOrPutAssumeCapacityAdapted"},{"import": 1238,"src": 797,"name": "getOrPutValue"},{"import": 1238,"src": 798,"name": "ensureCapacity"},{"import": 1238,"src": 799,"name": "ensureTotalCapacity"},{"import": 1238,"src": 800,"name": "ensureUnusedCapacity"},{"import": 1238,"src": 801,"name": "capacity"},{"import": 1238,"src": 802,"name": "put"},{"import": 1238,"src": 151,"name": "putNoClobber"},{"import": 1238,"src": 803,"name": "putAssumeCapacity"},{"import": 1238,"src": 804,"name": "putAssumeCapacityNoClobber"},{"import": 1238,"src": 805,"name": "fetchPut"},{"import": 1238,"src": 806,"name": "fetchPutAssumeCapacity"},{"import": 1238,"src": 807,"name": "fetchRemove"},{"import": 1238,"src": 808,"name": "fetchRemoveAdapted"},{"import": 1238,"src": 42,"name": "get"},{"import": 1238,"src": 809,"name": "getAdapted"},{"import": 1238,"src": 810,"name": "getPtr"},{"import": 1238,"src": 811,"name": "getPtrAdapted"},{"import": 1238,"src": 812,"name": "getKey"},{"import": 1238,"src": 813,"name": "getKeyAdapted"},{"import": 1238,"src": 814,"name": "getKeyPtr"},{"import": 1238,"src": 815,"name": "getKeyPtrAdapted"},{"import": 1238,"src": 816,"name": "getEntry"},{"import": 1238,"src": 817,"name": "getEntryAdapted"},{"import": 1238,"src": 818,"name": "contains"},{"import": 1238,"src": 819,"name": "containsAdapted"},{"import": 1238,"src": 820,"name": "remove"},{"import": 1238,"src": 821,"name": "removeAdapted"},{"import": 1238,"src": 822,"name": "clone"},{"import": 1238,"src": 823,"name": "cloneWithAllocator"},{"import": 1238,"src": 824,"name": "cloneWithContext"},{"import": 1238,"src": 825,"name": "cloneWithAllocatorAndContext"},{"import": 1238,"src": 826,"name": "Self"},{"import": 1331,"src": 97,"name": "allocator","kind": "const","type": 123,"value": 129},{"import": 1331,"src": 181,"name": "getSymbolName","kind": "const","type": 303,"value": 318},{"import": 1331,"src": 179,"name": "findCompileUnit","kind": "const","type": 299,"value": 314},{"import": 1331,"src": 182,"name": "getLineNumberInfo","kind": "const","type": 304,"value": 319},{"import": 1331,"src": 79,"name": "scanAllFunctions","kind": "const","type": 96,"value": 99},{"import": 1331,"src": 113,"name": "scanAllCompileUnits","kind": "const","type": 170,"value": 176},{"import": 1331,"src": 94,"name": "getAbbrevTable","kind": "const","type": 119,"value": 125},{"import": 1331,"src": 96,"name": "parseAbbrevTable","kind": "const","type": 121,"value": 127},{"import": 1331,"src": 103,"name": "parseDie","kind": "const","type": 1332,"value": 756},{"import": 1331,"src": 109,"name": "getString","kind": "const","type": 158,"value": 164},{"import": 1238,"src": 827,"name": "Size","kind": "const","type": 592,"value": 641},{"import": 1238,"src": 828,"name": "Hash"},{"import": 1238,"src": 829,"name": "Entry"},{"import": 1238,"src": 830,"name": "KV"},{"import": 1238,"src": 831,"name": "Iterator"},{"import": 1238,"src": 832,"name": "KeyIterator"},{"import": 1238,"src": 833,"name": "ValueIterator"},{"import": 1238,"src": 834,"name": "GetOrPutResult"},{"import": 1238,"src": 835,"name": "Managed"},{"import": 1238,"src": 836,"name": "promote"},{"import": 1238,"src": 837,"name": "promoteContext"},{"import": 1238,"src": 164,"name": "deinit"},{"import": 1238,"src": 838,"name": "ensureCapacity"},{"import": 1238,"src": 839,"name": "ensureTotalCapacity"},{"import": 1238,"src": 840,"name": "ensureTotalCapacityContext"},{"import": 1238,"src": 841,"name": "ensureUnusedCapacity"},{"import": 1238,"src": 842,"name": "ensureUnusedCapacityContext"},{"import": 1238,"src": 843,"name": "clearRetainingCapacity"},{"import": 1238,"src": 844,"name": "clearAndFree"},{"import": 1238,"src": 845,"name": "count"},{"import": 1238,"src": 159,"name": "capacity"},{"import": 1238,"src": 846,"name": "iterator"},{"import": 1238,"src": 847,"name": "keyIterator"},{"import": 1238,"src": 848,"name": "valueIterator"},{"import": 1238,"src": 849,"name": "putNoClobber"},{"import": 1238,"src": 152,"name": "putNoClobberContext"},{"import": 1238,"src": 850,"name": "putAssumeCapacity"},{"import": 1238,"src": 851,"name": "putAssumeCapacityContext"},{"import": 1238,"src": 852,"name": "putAssumeCapacityNoClobber"},{"import": 1238,"src": 169,"name": "putAssumeCapacityNoClobberContext"},{"import": 1238,"src": 853,"name": "fetchPut"},{"import": 1238,"src": 854,"name": "fetchPutContext"},{"import": 1238,"src": 855,"name": "fetchPutAssumeCapacity"},{"import": 1238,"src": 856,"name": "fetchPutAssumeCapacityContext"},{"import": 1238,"src": 857,"name": "fetchRemove"},{"import": 1238,"src": 858,"name": "fetchRemoveContext"},{"import": 1238,"src": 859,"name": "fetchRemoveAdapted"},{"import": 1238,"src": 860,"name": "getEntry"},{"import": 1238,"src": 861,"name": "getEntryContext"},{"import": 1238,"src": 862,"name": "getEntryAdapted"},{"import": 1238,"src": 863,"name": "put"},{"import": 1238,"src": 864,"name": "putContext"},{"import": 1238,"src": 865,"name": "getKeyPtr"},{"import": 1238,"src": 866,"name": "getKeyPtrContext"},{"import": 1238,"src": 867,"name": "getKeyPtrAdapted"},{"import": 1238,"src": 868,"name": "getKey"},{"import": 1238,"src": 869,"name": "getKeyContext"},{"import": 1238,"src": 870,"name": "getKeyAdapted"},{"import": 1238,"src": 871,"name": "getPtr"},{"import": 1238,"src": 872,"name": "getPtrContext"},{"import": 1238,"src": 873,"name": "getPtrAdapted"},{"import": 1238,"src": 874,"name": "get"},{"import": 1238,"src": 225,"name": "getContext"},{"import": 1238,"src": 289,"name": "getAdapted"},{"import": 1238,"src": 875,"name": "getOrPut"},{"import": 1238,"src": 876,"name": "getOrPutContext"},{"import": 1238,"src": 877,"name": "getOrPutAdapted"},{"import": 1238,"src": 878,"name": "getOrPutContextAdapted"},{"import": 1238,"src": 879,"name": "getOrPutAssumeCapacity"},{"import": 1238,"src": 880,"name": "getOrPutAssumeCapacityContext"},{"import": 1238,"src": 881,"name": "getOrPutAssumeCapacityAdapted"},{"import": 1238,"src": 882,"name": "getOrPutValue"},{"import": 1238,"src": 883,"name": "getOrPutValueContext"},{"import": 1238,"src": 884,"name": "contains"},{"import": 1238,"src": 153,"name": "containsContext"},{"import": 1238,"src": 259,"name": "containsAdapted"},{"import": 1238,"src": 885,"name": "remove"},{"import": 1238,"src": 886,"name": "removeContext"},{"import": 1238,"src": 887,"name": "removeAdapted"},{"import": 1238,"src": 888,"name": "clone"},{"import": 1238,"src": 889,"name": "cloneContext"},{"import": 1238,"src": 890,"name": "Self"},{"import": 1238,"src": 891,"name": "minimal_capacity"},{"import": 1238,"src": 892,"name": "Header"},{"import": 1238,"src": 893,"name": "Metadata","kind": "const","type": 592,"value": 1333},{"import": 1238,"src": 894,"name": "FieldIterator"},{"import": 1238,"src": 895,"name": "isUnderMaxLoadPercentage"},{"import": 1238,"src": 156,"name": "capacityForSize"},{"import": 1238,"src": 261,"name": "header"},{"import": 1238,"src": 166,"name": "keys"},{"import": 1238,"src": 167,"name": "values"},{"import": 1238,"src": 311,"name": "getIndex"},{"import": 1238,"src": 165,"name": "initMetadatas"},{"import": 1238,"src": 157,"name": "load"},{"import": 1238,"src": 154,"name": "growIfNeeded"},{"import": 1238,"src": 155,"name": "grow"},{"import": 1238,"src": 161,"name": "allocate"},{"import": 1238,"src": 263,"name": "deallocate"},{"import": 1298,"src": 1111,"name": "fetchAnd"},{"import": 1298,"src": 1112,"name": "fetchNand"},{"import": 1298,"src": 1113,"name": "fetchOr"},{"import": 1298,"src": 1114,"name": "fetchXor"},{"import": 1298,"src": 1115,"name": "bitSet"},{"import": 1298,"src": 1116,"name": "bitReset"},{"import": 1298,"src": 1117,"name": "bitToggle"},{"import": 1298,"src": 1118,"name": "Bit"},{"import": 1298,"src": 1119,"name": "BitRmwOp"},{"import": 1298,"src": 1120,"name": "bitRmw"},{"import": 1298,"src": 1121,"name": "fetchAdd"},{"import": 1298,"src": 1122,"name": "fetchSub"},{"import": 1298,"src": 1123,"name": "fetchMin"},{"import": 1298,"src": 1124,"name": "fetchMax"},{"import": 829,"src": 1,"name": "add","kind": "const","type": 1,"value": 1},{"import": 829,"src": 1125,"name": "std"},{"import": 829,"src": 1126,"name": "testing"},{"import": 830,"src": 1127,"name": "ArrayHashMap"},{"import": 830,"src": 1128,"name": "ArrayHashMapUnmanaged"},{"import": 830,"src": 1129,"name": "ArrayList","kind": "const","type": 626,"value": 696},{"import": 830,"src": 1130,"name": "ArrayListAligned"},{"import": 830,"src": 1131,"name": "ArrayListAlignedUnmanaged"},{"import": 830,"src": 1132,"name": "ArrayListUnmanaged"},{"import": 830,"src": 1133,"name": "AutoArrayHashMap"},{"import": 830,"src": 1134,"name": "AutoArrayHashMapUnmanaged"},{"import": 830,"src": 1135,"name": "AutoHashMap","kind": "const","type": 618,"value": 692},{"import": 830,"src": 1136,"name": "AutoHashMapUnmanaged"},{"import": 830,"src": 1137,"name": "BoundedArray"},{"import": 830,"src": 1138,"name": "BufMap"},{"import": 830,"src": 1139,"name": "BufSet"},{"import": 830,"src": 1140,"name": "ChildProcess"},{"import": 830,"src": 1141,"name": "ComptimeStringMap"},{"import": 830,"src": 1142,"name": "DynLib"},{"import": 830,"src": 1143,"name": "DynamicBitSet"},{"import": 830,"src": 1144,"name": "DynamicBitSetUnmanaged"},{"import": 830,"src": 1145,"name": "EnumArray"},{"import": 830,"src": 1146,"name": "EnumMap"},{"import": 830,"src": 1147,"name": "EnumSet"},{"import": 830,"src": 1148,"name": "HashMap"},{"import": 830,"src": 1149,"name": "HashMapUnmanaged"},{"import": 830,"src": 1150,"name": "MultiArrayList"},{"import": 830,"src": 1151,"name": "PackedIntArray"},{"import": 830,"src": 1152,"name": "PackedIntArrayEndian"},{"import": 830,"src": 1153,"name": "PackedIntSlice"},{"import": 830,"src": 1154,"name": "PackedIntSliceEndian"},{"import": 830,"src": 1155,"name": "PriorityQueue"},{"import": 830,"src": 1156,"name": "PriorityDequeue"},{"import": 830,"src": 1157,"name": "Progress"},{"import": 830,"src": 1158,"name": "SemanticVersion"},{"import": 830,"src": 1159,"name": "SinglyLinkedList","kind": "const","type": 724,"value": 721},{"import": 830,"src": 1160,"name": "StaticBitSet"},{"import": 830,"src": 1161,"name": "StringHashMap","kind": "const","type": 820,"value": 737},{"import": 830,"src": 1162,"name": "StringHashMapUnmanaged"},{"import": 830,"src": 1163,"name": "StringArrayHashMap"},{"import": 830,"src": 1164,"name": "StringArrayHashMapUnmanaged"},{"import": 830,"src": 1165,"name": "TailQueue","kind": "const","type": 716,"value": 719},{"import": 830,"src": 1166,"name": "Target","kind": "const","type": 592,"value": 640},{"import": 830,"src": 1167,"name": "Thread","kind": "const","type": 592,"value": 1335},{"import": 830,"src": 1168,"name": "array_hash_map"},{"import": 830,"src": 1169,"name": "atomic","kind": "const","type": 592,"value": 1336},{"import": 830,"src": 1170,"name": "base64"},{"import": 830,"src": 1171,"name": "bit_set"},{"import": 830,"src": 1172,"name": "build"},{"import": 830,"src": 1173,"name": "builtin","kind": "const","type": 592,"value": 1263},{"import": 830,"src": 1174,"name": "c","kind": "const","type": 592,"value": 1337},{"import": 830,"src": 1175,"name": "coff","kind": "const","type": 592,"value": 1338},{"import": 830,"src": 1176,"name": "compress"},{"import": 830,"src": 1177,"name": "crypto"},{"import": 830,"src": 1178,"name": "cstr"},{"import": 830,"src": 1179,"name": "debug","kind": "const","type": 592,"value": 1339},{"import": 830,"src": 1180,"name": "dwarf","kind": "const","type": 592,"value": 1331},{"import": 830,"src": 1181,"name": "elf"},{"import": 830,"src": 1182,"name": "enums"},{"import": 830,"src": 1183,"name": "event","kind": "const","type": 592,"value": 1340},{"import": 830,"src": 1184,"name": "fifo"},{"import": 830,"src": 1185,"name": "fmt","kind": "const","type": 592,"value": 1341},{"import": 830,"src": 1186,"name": "fs","kind": "const","type": 592,"value": 1342},{"import": 830,"src": 1187,"name": "hash","kind": "const","type": 592,"value": 1343},{"import": 830,"src": 1188,"name": "hash_map","kind": "const","type": 592,"value": 1238},{"import": 830,"src": 1189,"name": "heap","kind": "const","type": 592,"value": 1344},{"import": 830,"src": 1190,"name": "io","kind": "const","type": 592,"value": 1345},{"import": 830,"src": 1191,"name": "json"},{"import": 830,"src": 1192,"name": "leb"},{"import": 830,"src": 1193,"name": "log"},{"import": 830,"src": 1194,"name": "macho","kind": "const","type": 592,"value": 1346},{"import": 830,"src": 1195,"name": "math","kind": "const","type": 592,"value": 1347},{"import": 830,"src": 1196,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 830,"src": 1197,"name": "meta","kind": "const","type": 592,"value": 1348},{"import": 830,"src": 1198,"name": "net"},{"import": 830,"src": 1199,"name": "os","kind": "const","type": 592,"value": 1349},{"import": 830,"src": 1200,"name": "once"},{"import": 830,"src": 1201,"name": "packed_int_array"},{"import": 830,"src": 1202,"name": "pdb","kind": "const","type": 592,"value": 1310},{"import": 830,"src": 1203,"name": "process","kind": "const","type": 592,"value": 1350},{"import": 830,"src": 1204,"name": "rand"},{"import": 830,"src": 1205,"name": "sort"},{"import": 830,"src": 1206,"name": "ascii","kind": "const","type": 592,"value": 1351},{"import": 830,"src": 1207,"name": "testing"},{"import": 830,"src": 1208,"name": "time","kind": "const","type": 592,"value": 1352},{"import": 830,"src": 1209,"name": "unicode","kind": "const","type": 592,"value": 1353},{"import": 830,"src": 1210,"name": "valgrind"},{"import": 830,"src": 1211,"name": "wasm"},{"import": 830,"src": 1212,"name": "x"},{"import": 830,"src": 1213,"name": "zig"},{"import": 830,"src": 1214,"name": "start","kind": "const","type": 592,"value": 1354},{"import": 831,"src": 1215,"name": "zig_version"},{"import": 831,"src": 1216,"name": "zig_is_stage2","kind": "const","type": 604,"value": "false"},{"import": 831,"src": 1217,"name": "stage2_arch"},{"import": 831,"src": 1218,"name": "stage2_x86_cx16"},{"import": 831,"src": 1219,"name": "output_mode","kind": "const","type": 1355,"value": null},{"import": 831,"src": 1220,"name": "link_mode","kind": "const","type": 1356,"value": null},{"import": 831,"src": 1221,"name": "is_test"},{"import": 831,"src": 1222,"name": "single_threaded","kind": "const","type": 604,"value": "false"},{"import": 831,"src": 1223,"name": "abi","kind": "const","type": 1252,"value": null},{"import": 831,"src": 1224,"name": "cpu","kind": "const","type": 1253,"value": null},{"import": 831,"src": 1225,"name": "os","kind": "const","type": 1250,"value": null},{"import": 831,"src": 1226,"name": "target","kind": "const","type": 640,"value": null},{"import": 831,"src": 1227,"name": "object_format"},{"import": 831,"src": 1228,"name": "mode","kind": "const","type": 1357,"value": null},{"import": 831,"src": 1229,"name": "link_libc","kind": "const","type": 604,"value": "false"},{"import": 831,"src": 1230,"name": "link_libcpp"},{"import": 831,"src": 1231,"name": "have_error_return_tracing"},{"import": 831,"src": 1232,"name": "valgrind_support"},{"import": 831,"src": 1233,"name": "position_independent_code"},{"import": 831,"src": 1234,"name": "position_independent_executable"},{"import": 831,"src": 1235,"name": "strip_debug_info","kind": "const","type": 604,"value": "false"},{"import": 831,"src": 1236,"name": "code_model"},{"import": 831,"src": 1237,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1230,"src": 1238,"name": "needed_bit_count","kind": "const","type": 690,"value": null},{"import": 1230,"src": 1239,"name": "byte_count","kind": "const","type": 690,"value": null},{"import": 1230,"src": 1240,"name": "usize_count","kind": "const","type": 690,"value": null},{"import": 1230,"src": 1241,"name": "Index","kind": "const","type": 592,"value": 599},{"import": 1230,"src": 1242,"name": "ShiftInt","kind": "const","type": 592,"value": 601},{"import": 1230,"src": 1243,"name": "empty"},{"import": 1230,"src": 3,"name": "empty_workaround","kind": "const","type": 3,"value": 3},{"import": 1230,"src": 1244,"name": "isEmpty"},{"import": 1230,"src": 1245,"name": "isEnabled"},{"import": 1230,"src": 4,"name": "addFeature","kind": "const","type": 4,"value": 4},{"import": 1230,"src": 1246,"name": "addFeatureSet"},{"import": 1230,"src": 1247,"name": "removeFeature"},{"import": 1230,"src": 1248,"name": "removeFeatureSet"},{"import": 1230,"src": 1249,"name": "populateDependencies"},{"import": 1230,"src": 1250,"name": "asBytes"},{"import": 1230,"src": 1251,"name": "eql"},{"import": 1230,"src": 1252,"name": "isSuperSetOf"},{"import": 1263,"src": 1253,"name": "format"},{"import": 1339,"src": 267,"name": "setColor","kind": "const","type": 1373,"value": 757},{"import": 1338,"src": 49,"name": "init","kind": "const","type": 54,"value": 56},{"import": 1338,"src": 50,"name": "loadHeader","kind": "const","type": 55,"value": 57},{"import": 1338,"src": 114,"name": "getPdbPath","kind": "const","type": 179,"value": 185},{"import": 1338,"src": 63,"name": "loadSections","kind": "const","type": 74,"value": 76},{"import": 1338,"src": 75,"name": "getSection","kind": "const","type": 1381,"value": 758},{"import": 1338,"src": 76,"name": "getSectionData","kind": "const","type": 1382,"value": 759},{"import": 1338,"src": 69,"name": "readStringFromTable","kind": "const","type": 80,"value": 82},{"import": 1338,"src": 61,"name": "loadOptionalHeader","kind": "const","type": 69,"value": 71},{"import": 1462,"src": 1254,"name": "Kind","kind": "const","type": 592,"value": 989},{"import": 1342,"src": 1255,"name": "Entry"},{"import": 1342,"src": 1256,"name": "Iterator"},{"import": 1342,"src": 1257,"name": "iterate"},{"import": 1342,"src": 1258,"name": "Walker"},{"import": 1342,"src": 1259,"name": "walk"},{"import": 1342,"src": 1260,"name": "OpenError"},{"import": 1342,"src": 1261,"name": "close"},{"import": 1342,"src": 130,"name": "openFile","kind": "const","type": 197,"value": 205},{"import": 1342,"src": 1262,"name": "openFileWasi"},{"import": 1342,"src": 1263,"name": "openFileC"},{"import": 1342,"src": 1264,"name": "openFileZ"},{"import": 1342,"src": 227,"name": "openFileW","kind": "const","type": 375,"value": 394},{"import": 1342,"src": 1265,"name": "createFile"},{"import": 1342,"src": 1266,"name": "createFileC"},{"import": 1342,"src": 1267,"name": "createFileWasi"},{"import": 1342,"src": 1268,"name": "createFileZ"},{"import": 1342,"src": 1269,"name": "createFileW"},{"import": 1342,"src": 1270,"name": "openRead"},{"import": 1342,"src": 1271,"name": "openReadC"},{"import": 1342,"src": 1272,"name": "openReadW"},{"import": 1342,"src": 1273,"name": "makeDir"},{"import": 1342,"src": 1274,"name": "makeDirZ"},{"import": 1342,"src": 1275,"name": "makeDirW"},{"import": 1342,"src": 1276,"name": "makePath"},{"import": 1342,"src": 1277,"name": "makeOpenPath"},{"import": 1342,"src": 1278,"name": "realpath"},{"import": 1342,"src": 1279,"name": "realpathZ"},{"import": 1342,"src": 1280,"name": "realpathW"},{"import": 1342,"src": 1281,"name": "realpathAlloc"},{"import": 1342,"src": 1282,"name": "setAsCwd"},{"import": 1342,"src": 1283,"name": "OpenDirOptions"},{"import": 1342,"src": 1284,"name": "openDir"},{"import": 1342,"src": 1285,"name": "openDirC"},{"import": 1342,"src": 1286,"name": "openDirWasi"},{"import": 1342,"src": 1287,"name": "openDirZ"},{"import": 1342,"src": 1288,"name": "openDirW"},{"import": 1342,"src": 1289,"name": "DeleteFileError"},{"import": 1342,"src": 1290,"name": "deleteFile"},{"import": 1342,"src": 1291,"name": "deleteFileC"},{"import": 1342,"src": 1292,"name": "deleteFileZ"},{"import": 1342,"src": 1293,"name": "deleteFileW"},{"import": 1342,"src": 1294,"name": "DeleteDirError"},{"import": 1342,"src": 1295,"name": "deleteDir"},{"import": 1342,"src": 1296,"name": "deleteDirZ"},{"import": 1342,"src": 1297,"name": "deleteDirW"},{"import": 1342,"src": 1298,"name": "RenameError"},{"import": 1342,"src": 1299,"name": "rename"},{"import": 1342,"src": 1300,"name": "renameZ"},{"import": 1342,"src": 1301,"name": "renameW"},{"import": 1342,"src": 1302,"name": "symLink"},{"import": 1342,"src": 1303,"name": "symLinkWasi"},{"import": 1342,"src": 1304,"name": "symLinkZ"},{"import": 1342,"src": 1305,"name": "symLinkW"},{"import": 1342,"src": 1306,"name": "readLink"},{"import": 1342,"src": 1307,"name": "readLinkC"},{"import": 1342,"src": 1308,"name": "readLinkWasi"},{"import": 1342,"src": 1309,"name": "readLinkZ"},{"import": 1342,"src": 1310,"name": "readLinkW"},{"import": 1342,"src": 1311,"name": "readFile"},{"import": 1342,"src": 1312,"name": "readFileAlloc"},{"import": 1342,"src": 1313,"name": "readFileAllocOptions"},{"import": 1342,"src": 1314,"name": "DeleteTreeError"},{"import": 1342,"src": 1315,"name": "deleteTree"},{"import": 1342,"src": 1316,"name": "writeFile"},{"import": 1342,"src": 1317,"name": "AccessError"},{"import": 1342,"src": 1318,"name": "access"},{"import": 1342,"src": 1319,"name": "accessZ"},{"import": 1342,"src": 1320,"name": "accessW"},{"import": 1342,"src": 1321,"name": "updateFile"},{"import": 1342,"src": 1322,"name": "copyFile"},{"import": 1342,"src": 1323,"name": "AtomicFileOptions"},{"import": 1342,"src": 1324,"name": "atomicFile"},{"import": 1342,"src": 1325,"name": "Stat"},{"import": 1342,"src": 1326,"name": "StatError"},{"import": 1342,"src": 1327,"name": "stat"},{"import": 1342,"src": 1328,"name": "ChmodError"},{"import": 1342,"src": 1329,"name": "chmod"},{"import": 1342,"src": 1330,"name": "chown"},{"import": 1342,"src": 1331,"name": "ChownError"},{"import": 1342,"src": 1332,"name": "IteratorError"},{"import": 1342,"src": 1333,"name": "openDirFlagsZ"},{"import": 1342,"src": 1334,"name": "openDirAccessMaskW"},{"import": 1310,"src": 1335,"name": "Error","kind": "const","type": 592,"value": 684},{"import": 1310,"src": 149,"name": "seekBy","kind": "const","type": 253,"value": 264},{"import": 1310,"src": 178,"name": "seekTo","kind": "const","type": 298,"value": 313},{"import": 1310,"src": 136,"name": "reader","kind": "const","type": 204,"value": 214},{"import": 1310,"src": 134,"name": "init","kind": "const","type": 202,"value": 212},{"import": 1310,"src": 135,"name": "read","kind": "const","type": 203,"value": 213},{"import": 1310,"src": 1336,"name": "getSize"},{"import": 1310,"src": 1337,"name": "getFilePos"},{"import": 1238,"src": 168,"name": "isUsed","kind": "const","type": 288,"value": 303},{"import": 1238,"src": 264,"name": "isTombstone","kind": "const","type": 288,"value": 472},{"import": 1238,"src": 265,"name": "takeFingerprint","kind": "const","type": 440,"value": 473},{"import": 1238,"src": 266,"name": "fill","kind": "const","type": 441,"value": 474},{"import": 1238,"src": 1338,"name": "remove"},{"import": 1238,"src": 1339,"name": "FingerPrint","kind": "const","type": 592,"value": 1152},{"import": 1238,"src": 1340,"name": "free"},{"import": 1238,"src": 1341,"name": "tombstone","kind": "const","type": 1152,"value": 1},{"import": 1331,"src": 190,"name": "reset","kind": "const","type": 332,"value": 347},{"import": 1331,"src": 184,"name": "init","kind": "const","type": 317,"value": 332},{"import": 1331,"src": 186,"name": "checkLineMatch","kind": "const","type": 328,"value": 343},{"import": 1339,"src": 192,"name": "deinit","kind": "const","type": 334,"value": 349},{"import": 1339,"src": 214,"name": "init","kind": "const","type": 360,"value": 376},{"import": 1339,"src": 1342,"name": "deinit"},{"import": 1339,"src": 35,"name": "getModuleForAddress","kind": "const","type": 38,"value": 40},{"import": 1339,"src": 1343,"name": "lookupModuleDyld"},{"import": 1339,"src": 38,"name": "lookupModuleWin32","kind": "const","type": 41,"value": 43},{"import": 1339,"src": 1344,"name": "lookupModuleDl"},{"import": 1339,"src": 1345,"name": "lookupModuleHaiku"},{"import": 1552,"src": 1346,"name": "State","kind": "const","type": 592,"value": 1167},{"import": 1552,"src": 215,"name": "init","kind": "const","type": 361,"value": 377},{"import": 1552,"src": 1347,"name": "deinit"},{"import": 1552,"src": 1348,"name": "BufNode","kind": "const","type": 592,"value": 1304},{"import": 1552,"src": 326,"name": "createNode","kind": "const","type": 558,"value": 611},{"import": 1552,"src": 325,"name": "alloc","kind": "const","type": 557,"value": 610},{"import": 1552,"src": 329,"name": "resize","kind": "const","type": 364,"value": 614},{"import": 1578,"src": 256,"name": "span","kind": "const","type": 422,"value": 451},{"import": 1339,"src": 271,"name": "deinit","kind": "const","type": 449,"value": 484},{"import": 1552,"src": 279,"name": "promote","kind": "const","type": 459,"value": 496},{"import": 1599,"src": 1349,"name": "WAIT_0","kind": "const","type": 1180,"value": null},{"import": 1599,"src": 1350,"name": "ABANDONED_WAIT_0"},{"import": 1599,"src": 1351,"name": "FWP_TOO_MANY_BOOTTIME_FILTERS"},{"import": 1353,"src": 303,"name": "init","kind": "const","type": 512,"value": 555},{"import": 1353,"src": 304,"name": "nextCodepoint","kind": "const","type": 513,"value": 556},{"import": 1352,"src": 1352,"name": "Error","kind": "const","type": 592,"value": 1621},{"import": 1352,"src": 318,"name": "start","kind": "const","type": 550,"value": 603},{"import": 1352,"src": 321,"name": "read","kind": "const","type": 553,"value": 606},{"import": 1352,"src": 1353,"name": "reset"},{"import": 1352,"src": 1354,"name": "lap"},{"import": 1352,"src": 1355,"name": "monotonic_clock_id"},{"import": 1352,"src": 337,"name": "clockNative","kind": "const","type": 12,"value": 654},{"import": 1352,"src": 338,"name": "nativeDurationToNanos","kind": "const","type": 580,"value": 655},{"import": 1623,"src": 322,"name": "init","kind": "const","type": 554,"value": 607},{"import": 1623,"src": 323,"name": "update","kind": "const","type": 555,"value": 608},{"import": 1623,"src": 324,"name": "final","kind": "const","type": 556,"value": 609},{"import": 1623,"src": 277,"name": "hash","kind": "const","type": 357,"value": 494},{"import": 1623,"src": 339,"name": "round","kind": "const","type": 555,"value": 656},{"import": 1230,"src": 1356,"name": "Target","kind": "const","type": 592,"value": 640},{"import": 1230,"src": 1357,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1230,"src": 1358,"name": "mem"},{"import": 1230,"src": 1359,"name": "Version","kind": "const","type": 592,"value": 1639},{"import": 1231,"src": 362,"name": "Writer","kind": "const","type": 605,"value": 686},{"import": 1231,"src": 1360,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1231,"src": 1361,"name": "assert"},{"import": 1231,"src": 1362,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1233,"src": 1363,"name": "File","kind": "const","type": 592,"value": 607},{"import": 1233,"src": 1364,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1233,"src": 1365,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1233,"src": 1366,"name": "os","kind": "const","type": 592,"value": 1349},{"import": 1233,"src": 1367,"name": "io","kind": "const","type": 592,"value": 1345},{"import": 1233,"src": 1368,"name": "mem"},{"import": 1233,"src": 1369,"name": "math"},{"import": 1233,"src": 1370,"name": "assert"},{"import": 1233,"src": 1371,"name": "windows","kind": "const","type": 592,"value": 1578},{"import": 1233,"src": 1372,"name": "Os"},{"import": 1233,"src": 1373,"name": "maxInt"},{"import": 1233,"src": 1374,"name": "is_windows","kind": "const","type": 604,"value": "true"},{"import": 1238,"src": 364,"name": "getAutoHashFn","kind": "const","type": 611,"value": 688},{"import": 1238,"src": 365,"name": "getAutoEqlFn","kind": "const","type": 612,"value": 689},{"import": 1238,"src": 368,"name": "AutoHashMap","kind": "const","type": 618,"value": 692},{"import": 1238,"src": 1375,"name": "AutoHashMapUnmanaged"},{"import": 1238,"src": 363,"name": "AutoContext","kind": "const","type": 609,"value": 687},{"import": 1238,"src": 406,"name": "StringHashMap","kind": "const","type": 820,"value": 737},{"import": 1238,"src": 1376,"name": "StringHashMapUnmanaged"},{"import": 1238,"src": 1377,"name": "StringContext","kind": "const","type": 592,"value": 817},{"import": 1238,"src": 358,"name": "eqlString","kind": "const","type": 60,"value": 682},{"import": 1238,"src": 357,"name": "hashString","kind": "const","type": 582,"value": 681},{"import": 1238,"src": 1378,"name": "StringIndexContext"},{"import": 1238,"src": 1379,"name": "StringIndexAdapter"},{"import": 1238,"src": 1380,"name": "DefaultMaxLoadPercentage"},{"import": 1238,"src": 1381,"name": "default_max_load_percentage","kind": "const","type": 690,"value": null},{"import": 1238,"src": 366,"name": "verifyContext","kind": "const","type": 613,"value": 690},{"import": 1238,"src": 367,"name": "HashMap","kind": "const","type": 615,"value": 691},{"import": 1238,"src": 369,"name": "HashMapUnmanaged","kind": "const","type": 619,"value": 693},{"import": 1238,"src": 1382,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1238,"src": 1383,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1238,"src": 1384,"name": "autoHash"},{"import": 1238,"src": 1385,"name": "debug","kind": "const","type": 592,"value": 1339},{"import": 1238,"src": 1386,"name": "warn"},{"import": 1238,"src": 1387,"name": "math","kind": "const","type": 592,"value": 1347},{"import": 1238,"src": 1388,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1238,"src": 1389,"name": "meta","kind": "const","type": 592,"value": 1348},{"import": 1238,"src": 1390,"name": "trait","kind": "const","type": 592,"value": 1640},{"import": 1238,"src": 1391,"name": "Allocator","kind": "const","type": 592,"value": 1372},{"import": 1238,"src": 1392,"name": "Wyhash","kind": "const","type": 592,"value": 1641},{"import": 1238,"src": 1393,"name": "testing"},{"import": 1238,"src": 1394,"name": "expect"},{"import": 1238,"src": 1395,"name": "expectEqual"},{"import": 1339,"src": 1396,"name": "allocator"},{"import": 1339,"src": 172,"name": "getSymbolAtAddress","kind": "const","type": 292,"value": 307},{"import": 1245,"src": 372,"name": "ArrayList","kind": "const","type": 626,"value": 696},{"import": 1245,"src": 371,"name": "ArrayListAligned","kind": "const","type": 622,"value": 695},{"import": 1245,"src": 1397,"name": "ArrayListUnmanaged"},{"import": 1245,"src": 1398,"name": "ArrayListAlignedUnmanaged"},{"import": 1245,"src": 1399,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1245,"src": 1400,"name": "debug","kind": "const","type": 592,"value": 1339},{"import": 1245,"src": 1401,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1245,"src": 1402,"name": "testing"},{"import": 1245,"src": 1403,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1245,"src": 1404,"name": "Allocator","kind": "const","type": 592,"value": 1372},{"import": 1245,"src": 1405,"name": "Item"},{"import": 1245,"src": 1406,"name": "ItemUnmanaged"},{"import": 1338,"src": 1407,"name": "Misc","kind": "const","type": 592,"value": 1645},{"import": 1230,"src": 1408,"name": "Tag","kind": "const","type": 592,"value": 639},{"import": 1230,"src": 1409,"name": "WindowsVersion","kind": "const","type": 592,"value": 1646},{"import": 1230,"src": 1410,"name": "LinuxVersionRange","kind": "const","type": 592,"value": 1647},{"import": 1230,"src": 1411,"name": "VersionRange","kind": "const","type": 592,"value": 1648},{"import": 1230,"src": 1412,"name": "TaggedVersionRange"},{"import": 1230,"src": 1413,"name": "getVersionRange"},{"import": 1230,"src": 1414,"name": "isAtLeast"},{"import": 1230,"src": 1415,"name": "requiresLibC"},{"import": 1251,"src": 1416,"name": "Feature","kind": "const","type": 592,"value": 594},{"import": 1251,"src": 1417,"name": "featureSet","kind": "const","type": 2,"value": 2},{"import": 1251,"src": 1418,"name": "featureSetHas"},{"import": 1251,"src": 1419,"name": "featureSetHasAny"},{"import": 1251,"src": 1420,"name": "featureSetHasAll"},{"import": 1251,"src": 1421,"name": "all_features"},{"import": 1251,"src": 1422,"name": "cpu","kind": "const","type": 592,"value": 1649},{"import": 1251,"src": 1423,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1251,"src": 1424,"name": "CpuFeature","kind": "const","type": 592,"value": 1650},{"import": 1251,"src": 1425,"name": "CpuModel","kind": "const","type": 592,"value": 1651},{"import": 1230,"src": 1426,"name": "default"},{"import": 1230,"src": 1427,"name": "isGnu"},{"import": 1230,"src": 1428,"name": "isMusl"},{"import": 1230,"src": 1429,"name": "floatAbi"},{"import": 1230,"src": 1430,"name": "Feature","kind": "const","type": 592,"value": 1650},{"import": 1230,"src": 1431,"name": "Arch","kind": "const","type": 592,"value": 646},{"import": 1230,"src": 1432,"name": "Model","kind": "const","type": 592,"value": 1651},{"import": 1230,"src": 1433,"name": "baseline"},{"import": 1254,"src": 373,"name": "Reader","kind": "const","type": 642,"value": 697},{"import": 1254,"src": 1434,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1254,"src": 1435,"name": "math"},{"import": 1254,"src": 1436,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1254,"src": 1437,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1254,"src": 1438,"name": "testing"},{"import": 1258,"src": 376,"name": "FixedBufferStream","kind": "const","type": 650,"value": 700},{"import": 1258,"src": 80,"name": "fixedBufferStream","kind": "const","type": 1653,"value": 760},{"import": 1258,"src": 1439,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1258,"src": 1440,"name": "io","kind": "const","type": 592,"value": 1345},{"import": 1258,"src": 1441,"name": "testing"},{"import": 1258,"src": 1442,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1258,"src": 1443,"name": "assert"},{"import": 1258,"src": 375,"name": "NonSentinelSpan","kind": "const","type": 649,"value": 699},{"import": 1262,"src": 377,"name": "SeekableStream","kind": "const","type": 655,"value": 701},{"import": 1262,"src": 1444,"name": "std"},{"import": 1263,"src": 1445,"name": "zig_version"},{"import": 1263,"src": 1446,"name": "zig_is_stage2"},{"import": 1263,"src": 1447,"name": "output_mode"},{"import": 1263,"src": 1448,"name": "link_mode"},{"import": 1263,"src": 1449,"name": "is_test"},{"import": 1263,"src": 1450,"name": "single_threaded"},{"import": 1263,"src": 1451,"name": "abi"},{"import": 1263,"src": 1452,"name": "cpu"},{"import": 1263,"src": 1453,"name": "os"},{"import": 1263,"src": 1454,"name": "target"},{"import": 1263,"src": 1455,"name": "object_format"},{"import": 1263,"src": 1456,"name": "mode"},{"import": 1263,"src": 1457,"name": "link_libc"},{"import": 1263,"src": 1458,"name": "link_libcpp"},{"import": 1263,"src": 1459,"name": "have_error_return_tracing"},{"import": 1263,"src": 1460,"name": "valgrind_support"},{"import": 1263,"src": 1461,"name": "position_independent_code"},{"import": 1263,"src": 1462,"name": "position_independent_executable"},{"import": 1263,"src": 1463,"name": "strip_debug_info"},{"import": 1263,"src": 1464,"name": "code_model"},{"import": 1263,"src": 1465,"name": "subsystem"},{"import": 1263,"src": 1466,"name": "StackTrace","kind": "const","type": 592,"value": 847},{"import": 1263,"src": 1467,"name": "GlobalLinkage","kind": "const","type": 592,"value": 1654},{"import": 1263,"src": 1468,"name": "AtomicOrder","kind": "const","type": 592,"value": 1655},{"import": 1263,"src": 1469,"name": "ReduceOp"},{"import": 1263,"src": 1470,"name": "AtomicRmwOp","kind": "const","type": 592,"value": 1656},{"import": 1263,"src": 1471,"name": "CodeModel"},{"import": 1263,"src": 1472,"name": "Mode","kind": "const","type": 592,"value": 1357},{"import": 1263,"src": 1473,"name": "CallingConvention","kind": "const","type": 592,"value": 1657},{"import": 1263,"src": 1474,"name": "AddressSpace","kind": "const","type": 592,"value": 1658},{"import": 1263,"src": 1475,"name": "SourceLocation"},{"import": 1263,"src": 1476,"name": "TypeId","kind": "const","type": 592,"value": 660},{"import": 1263,"src": 1477,"name": "TypeInfo","kind": "const","type": 592,"value": 661},{"import": 1263,"src": 1478,"name": "FloatMode"},{"import": 1263,"src": 1479,"name": "Endian","kind": "const","type": 592,"value": 645},{"import": 1263,"src": 1480,"name": "Signedness","kind": "const","type": 592,"value": 597},{"import": 1263,"src": 1481,"name": "OutputMode","kind": "const","type": 592,"value": 1355},{"import": 1263,"src": 1482,"name": "LinkMode","kind": "const","type": 592,"value": 1356},{"import": 1263,"src": 1483,"name": "WasiExecModel"},{"import": 1263,"src": 1484,"name": "Version","kind": "const","type": 592,"value": 1639},{"import": 1263,"src": 1485,"name": "testVersionParse"},{"import": 1263,"src": 1486,"name": "CallOptions","kind": "const","type": 592,"value": 1659},{"import": 1263,"src": 1487,"name": "ExportOptions","kind": "const","type": 592,"value": 1660},{"import": 1263,"src": 1488,"name": "ExternOptions"},{"import": 1263,"src": 1489,"name": "TestFn"},{"import": 1263,"src": 1490,"name": "PanicFn","kind": "const","type": 592,"value": 0},{"import": 1263,"src": 1491,"name": "panic","kind": "const","type": 0,"value": 0},{"import": 1263,"src": 0,"name": "default_panic","kind": "const","type": 0,"value": 0},{"import": 1263,"src": 1492,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1263,"src": 1493,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1263,"src": 1494,"name": "root","kind": "const","type": 592,"value": 829},{"import": 1263,"src": 1495,"name": "Size","kind": "const","type": 592,"value": 675},{"import": 1263,"src": 1496,"name": "Data","kind": "const","type": 592,"value": 1669},{"import": 1286,"src": 1497,"name": "page_size","kind": "const","type": 690,"value": null},{"import": 1286,"src": 1498,"name": "byte_size_in_bits"},{"import": 1286,"src": 1499,"name": "Allocator","kind": "const","type": 592,"value": 1372},{"import": 1286,"src": 1500,"name": "ValidationAllocator"},{"import": 1286,"src": 1501,"name": "validationWrap"},{"import": 1286,"src": 331,"name": "alignAllocLen","kind": "const","type": 461,"value": 616},{"import": 1286,"src": 43,"name": "copy","kind": "const","type": 1670,"value": 761},{"import": 1286,"src": 1502,"name": "copyBackwards"},{"import": 1286,"src": 73,"name": "set","kind": "const","type": 1671,"value": 762},{"import": 1286,"src": 1503,"name": "zeroes"},{"import": 1286,"src": 1504,"name": "zeroInit"},{"import": 1286,"src": 1505,"name": "order"},{"import": 1286,"src": 1506,"name": "lessThan"},{"import": 1286,"src": 55,"name": "eql","kind": "const","type": 729,"value": 723},{"import": 1286,"src": 1507,"name": "indexOfDiff"},{"import": 1286,"src": 1508,"name": "toSliceConst"},{"import": 1286,"src": 1509,"name": "toSlice"},{"import": 1286,"src": 374,"name": "Span","kind": "const","type": 647,"value": 698},{"import": 1286,"src": 235,"name": "span","kind": "const","type": 1672,"value": 763},{"import": 1286,"src": 143,"name": "spanZ","kind": "const","type": 1673,"value": 764},{"import": 1286,"src": 1510,"name": "sliceTo"},{"import": 1286,"src": 300,"name": "len","kind": "const","type": 1674,"value": 765},{"import": 1286,"src": 258,"name": "lenZ","kind": "const","type": 1675,"value": 766},{"import": 1286,"src": 310,"name": "indexOfSentinel","kind": "const","type": 1676,"value": 767},{"import": 1286,"src": 1511,"name": "allEqual"},{"import": 1286,"src": 1512,"name": "dupe"},{"import": 1286,"src": 1513,"name": "dupeZ"},{"import": 1286,"src": 1514,"name": "trimLeft"},{"import": 1286,"src": 1515,"name": "trimRight"},{"import": 1286,"src": 1516,"name": "trim"},{"import": 1286,"src": 67,"name": "indexOfScalar","kind": "const","type": 736,"value": 728},{"import": 1286,"src": 1517,"name": "lastIndexOfScalar"},{"import": 1286,"src": 233,"name": "indexOfScalarPos","kind": "const","type": 734,"value": 727},{"import": 1286,"src": 1518,"name": "indexOfAny"},{"import": 1286,"src": 1519,"name": "lastIndexOfAny"},{"import": 1286,"src": 1520,"name": "indexOfAnyPos"},{"import": 1286,"src": 333,"name": "indexOf","kind": "const","type": 1677,"value": 768},{"import": 1286,"src": 1521,"name": "lastIndexOfLinear"},{"import": 1286,"src": 353,"name": "indexOfPosLinear","kind": "const","type": 1678,"value": 769},{"import": 1286,"src": 1522,"name": "lastIndexOf"},{"import": 1286,"src": 347,"name": "indexOfPos","kind": "const","type": 1679,"value": 770},{"import": 1286,"src": 1523,"name": "count"},{"import": 1286,"src": 1524,"name": "containsAtLeast"},{"import": 1286,"src": 302,"name": "readVarInt","kind": "const","type": 1680,"value": 771},{"import": 1286,"src": 60,"name": "readIntNative","kind": "const","type": 1681,"value": 772},{"import": 1286,"src": 237,"name": "readIntForeign","kind": "const","type": 1682,"value": 773},{"import": 1286,"src": 1525,"name": "readIntLittle","kind": "const","type": 1681,"value": 772},{"import": 1286,"src": 1526,"name": "readIntBig"},{"import": 1286,"src": 1527,"name": "readIntSliceNative"},{"import": 1286,"src": 1528,"name": "readIntSliceForeign"},{"import": 1286,"src": 1529,"name": "readIntSliceLittle"},{"import": 1286,"src": 1530,"name": "readIntSliceBig"},{"import": 1286,"src": 92,"name": "readInt","kind": "const","type": 1683,"value": 774},{"import": 1286,"src": 1531,"name": "readIntSlice"},{"import": 1286,"src": 1532,"name": "writeIntNative"},{"import": 1286,"src": 1533,"name": "writeIntForeign"},{"import": 1286,"src": 1534,"name": "writeIntLittle"},{"import": 1286,"src": 1535,"name": "writeIntBig"},{"import": 1286,"src": 1536,"name": "writeInt"},{"import": 1286,"src": 1537,"name": "writeIntSliceLittle"},{"import": 1286,"src": 1538,"name": "writeIntSliceBig"},{"import": 1286,"src": 1539,"name": "writeIntSliceNative"},{"import": 1286,"src": 1540,"name": "writeIntSliceForeign"},{"import": 1286,"src": 1541,"name": "writeIntSlice"},{"import": 1286,"src": 1542,"name": "bswapAllFields"},{"import": 1286,"src": 123,"name": "tokenize","kind": "const","type": 1684,"value": 775},{"import": 1286,"src": 1543,"name": "split"},{"import": 1286,"src": 1544,"name": "separate"},{"import": 1286,"src": 245,"name": "startsWith","kind": "const","type": 1685,"value": 776},{"import": 1286,"src": 1545,"name": "endsWith"},{"import": 1286,"src": 388,"name": "TokenIterator","kind": "const","type": 678,"value": 712},{"import": 1286,"src": 1546,"name": "SplitIterator"},{"import": 1286,"src": 1547,"name": "join"},{"import": 1286,"src": 1548,"name": "joinZ"},{"import": 1286,"src": 1549,"name": "concat"},{"import": 1286,"src": 1550,"name": "min"},{"import": 1286,"src": 1551,"name": "max"},{"import": 1286,"src": 170,"name": "swap","kind": "const","type": 1686,"value": 777},{"import": 1286,"src": 1552,"name": "reverse"},{"import": 1286,"src": 1553,"name": "rotate"},{"import": 1286,"src": 1554,"name": "replace"},{"import": 1286,"src": 307,"name": "replaceScalar","kind": "const","type": 1687,"value": 778},{"import": 1286,"src": 308,"name": "collapseRepeatsLen","kind": "const","type": 1688,"value": 779},{"import": 1286,"src": 1555,"name": "collapseRepeats"},{"import": 1286,"src": 1556,"name": "replacementSize"},{"import": 1286,"src": 1557,"name": "replaceOwned"},{"import": 1286,"src": 1558,"name": "littleToNative"},{"import": 1286,"src": 1559,"name": "bigToNative"},{"import": 1286,"src": 1560,"name": "toNative"},{"import": 1286,"src": 1561,"name": "nativeTo"},{"import": 1286,"src": 253,"name": "nativeToLittle","kind": "const","type": 770,"value": 733},{"import": 1286,"src": 1562,"name": "nativeToBig"},{"import": 1286,"src": 1563,"name": "alignPointerOffset"},{"import": 1286,"src": 1564,"name": "alignPointer"},{"import": 1286,"src": 212,"name": "asBytes","kind": "const","type": 1689,"value": 780},{"import": 1286,"src": 1565,"name": "toBytes"},{"import": 1286,"src": 1566,"name": "bytesAsValue"},{"import": 1286,"src": 1567,"name": "bytesToValue"},{"import": 1286,"src": 297,"name": "bytesAsSlice","kind": "const","type": 1690,"value": 781},{"import": 1286,"src": 116,"name": "sliceAsBytes","kind": "const","type": 1691,"value": 782},{"import": 1286,"src": 162,"name": "alignForward","kind": "const","type": 36,"value": 297},{"import": 1286,"src": 262,"name": "alignForwardGeneric","kind": "const","type": 1692,"value": 783},{"import": 1286,"src": 1568,"name": "doNotOptimizeAway"},{"import": 1286,"src": 345,"name": "alignBackwardAnyAlign","kind": "const","type": 36,"value": 665},{"import": 1286,"src": 350,"name": "alignBackward","kind": "const","type": 36,"value": 672},{"import": 1286,"src": 313,"name": "alignBackwardGeneric","kind": "const","type": 1693,"value": 784},{"import": 1286,"src": 1569,"name": "isValidAlign"},{"import": 1286,"src": 1570,"name": "isAlignedAnyAlign"},{"import": 1286,"src": 281,"name": "isAligned","kind": "const","type": 359,"value": 498},{"import": 1286,"src": 330,"name": "isAlignedGeneric","kind": "const","type": 1694,"value": 785},{"import": 1286,"src": 1571,"name": "alignInBytes"},{"import": 1286,"src": 1572,"name": "alignInSlice"},{"import": 1286,"src": 1573,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1286,"src": 1574,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1286,"src": 1575,"name": "debug","kind": "const","type": 592,"value": 1339},{"import": 1286,"src": 1576,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1286,"src": 1577,"name": "math","kind": "const","type": 592,"value": 1347},{"import": 1286,"src": 1578,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1286,"src": 1579,"name": "meta","kind": "const","type": 592,"value": 1348},{"import": 1286,"src": 1580,"name": "trait","kind": "const","type": 592,"value": 1640},{"import": 1286,"src": 1581,"name": "testing"},{"import": 1286,"src": 1582,"name": "Endian","kind": "const","type": 592,"value": 645},{"import": 1286,"src": 1583,"name": "native_endian","kind": "const","type": 645,"value": null},{"import": 1286,"src": 1584,"name": "failAllocator"},{"import": 1286,"src": 1585,"name": "failAllocatorAlloc"},{"import": 1286,"src": 1586,"name": "SliceTo"},{"import": 1286,"src": 1587,"name": "lenSliceTo"},{"import": 1286,"src": 1588,"name": "boyerMooreHorspoolPreprocessReverse"},{"import": 1286,"src": 354,"name": "boyerMooreHorspoolPreprocess","kind": "const","type": 588,"value": 677},{"import": 1286,"src": 1589,"name": "joinMaybeZ"},{"import": 1286,"src": 1590,"name": "testReadIntImpl"},{"import": 1286,"src": 1591,"name": "testWriteIntImpl"},{"import": 1286,"src": 1592,"name": "testCollapseRepeats"},{"import": 1286,"src": 386,"name": "CopyPtrAttrs","kind": "const","type": 673,"value": 710},{"import": 1286,"src": 401,"name": "AsBytesReturnType","kind": "const","type": 742,"value": 731},{"import": 1286,"src": 1593,"name": "BytesAsValueReturnType"},{"import": 1286,"src": 405,"name": "BytesAsSliceReturnType","kind": "const","type": 780,"value": 736},{"import": 1286,"src": 387,"name": "SliceAsBytesReturnType","kind": "const","type": 677,"value": 711},{"import": 1286,"src": 1594,"name": "AlignedSlice"},{"import": 1293,"src": 393,"name": "Queue","kind": "const","type": 713,"value": 718},{"import": 1293,"src": 1595,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1293,"src": 1596,"name": "builtin"},{"import": 1293,"src": 1597,"name": "assert"},{"import": 1293,"src": 1598,"name": "expect"},{"import": 1293,"src": 1599,"name": "Context"},{"import": 1293,"src": 1600,"name": "puts_per_thread"},{"import": 1293,"src": 1601,"name": "put_thread_count"},{"import": 1293,"src": 1602,"name": "startPuts"},{"import": 1293,"src": 1603,"name": "startGets"},{"import": 1296,"src": 1604,"name": "tryLock"},{"import": 1296,"src": 8,"name": "lock","kind": "const","type": 8,"value": 8},{"import": 1296,"src": 17,"name": "unlock","kind": "const","type": 8,"value": 18},{"import": 1296,"src": 1605,"name": "AtomicMutex"},{"import": 1296,"src": 1606,"name": "PthreadMutex"},{"import": 1296,"src": 1607,"name": "Dummy"},{"import": 1296,"src": 1608,"name": "WindowsMutex","kind": "const","type": 592,"value": 1365},{"import": 1296,"src": 1609,"name": "Mutex","kind": "const","type": 592,"value": 1296},{"import": 1296,"src": 1610,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1296,"src": 1611,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1296,"src": 1612,"name": "os","kind": "const","type": 592,"value": 1349},{"import": 1296,"src": 1613,"name": "assert"},{"import": 1296,"src": 1614,"name": "windows","kind": "const","type": 592,"value": 1578},{"import": 1296,"src": 1615,"name": "linux"},{"import": 1296,"src": 1616,"name": "testing"},{"import": 1296,"src": 1617,"name": "StaticResetEvent"},{"import": 1296,"src": 1618,"name": "Impl","kind": "const","type": 592,"value": 1365},{"import": 1296,"src": 1619,"name": "TestContext"},{"import": 1296,"src": 1620,"name": "worker"},{"import": 1297,"src": 396,"name": "SinglyLinkedList","kind": "const","type": 724,"value": 721},{"import": 1297,"src": 394,"name": "TailQueue","kind": "const","type": 716,"value": 719},{"import": 1297,"src": 1621,"name": "std"},{"import": 1297,"src": 1622,"name": "debug"},{"import": 1297,"src": 1623,"name": "assert"},{"import": 1297,"src": 1624,"name": "testing"},{"import": 1297,"src": 1625,"name": "mem"},{"import": 1297,"src": 1626,"name": "Allocator"},{"import": 1298,"src": 395,"name": "Atomic","kind": "const","type": 718,"value": 720},{"import": 1298,"src": 1627,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1298,"src": 1628,"name": "testing"},{"import": 1298,"src": 1629,"name": "target"},{"import": 1298,"src": 1630,"name": "Ordering"},{"import": 1298,"src": 1631,"name": "atomicIntTypes"},{"import": 1298,"src": 1632,"name": "atomic_rmw_orderings"},{"import": 1298,"src": 1633,"name": "atomic_cmpxchg_orderings"},{"import": 1301,"src": 1634,"name": "Loop","kind": "const","type": 592,"value": 1697},{"import": 1301,"src": 1635,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1301,"src": 1636,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1301,"src": 1637,"name": "root","kind": "const","type": 592,"value": 829},{"import": 1301,"src": 1638,"name": "assert"},{"import": 1301,"src": 1639,"name": "testing"},{"import": 1301,"src": 1640,"name": "mem"},{"import": 1301,"src": 1641,"name": "os","kind": "const","type": 592,"value": 1349},{"import": 1301,"src": 1642,"name": "windows","kind": "const","type": 592,"value": 1578},{"import": 1301,"src": 1643,"name": "maxInt"},{"import": 1301,"src": 1644,"name": "Thread","kind": "const","type": 592,"value": 1335},{"import": 1301,"src": 1645,"name": "is_windows"},{"import": 1301,"src": 1646,"name": "testEventLoop"},{"import": 1301,"src": 1647,"name": "testEventLoop2"},{"import": 1301,"src": 1648,"name": "testRunDetachedData"},{"import": 1301,"src": 1649,"name": "testRunDetached"},{"import": 1301,"src": 1650,"name": "testSleep"},{"import": 1301,"src": 1651,"name": "Read","kind": "const","type": 592,"value": 1698},{"import": 1301,"src": 1652,"name": "ReadV","kind": "const","type": 592,"value": 1699},{"import": 1301,"src": 1653,"name": "Write","kind": "const","type": 592,"value": 1700},{"import": 1301,"src": 1654,"name": "WriteV","kind": "const","type": 592,"value": 1701},{"import": 1301,"src": 1655,"name": "PWrite","kind": "const","type": 592,"value": 1702},{"import": 1301,"src": 1656,"name": "PWriteV","kind": "const","type": 592,"value": 1703},{"import": 1301,"src": 1657,"name": "PRead","kind": "const","type": 592,"value": 1704},{"import": 1301,"src": 1658,"name": "PReadV","kind": "const","type": 592,"value": 1705},{"import": 1301,"src": 1659,"name": "Open","kind": "const","type": 592,"value": 1706},{"import": 1301,"src": 1660,"name": "OpenAt","kind": "const","type": 592,"value": 1707},{"import": 1301,"src": 1661,"name": "Close","kind": "const","type": 592,"value": 1708},{"import": 1301,"src": 1662,"name": "FAccessAt","kind": "const","type": 592,"value": 1709},{"import": 1297,"src": 1663,"name": "Data"},{"import": 1297,"src": 1664,"name": "insertAfter"},{"import": 1297,"src": 1665,"name": "removeNext"},{"import": 1297,"src": 1666,"name": "findLast"},{"import": 1297,"src": 1667,"name": "countChildren"},{"import": 1306,"src": 397,"name": "Stack","kind": "const","type": 726,"value": 722},{"import": 1306,"src": 1668,"name": "std"},{"import": 1306,"src": 1669,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1306,"src": 1670,"name": "assert"},{"import": 1306,"src": 1671,"name": "expect"},{"import": 1306,"src": 1672,"name": "Context"},{"import": 1306,"src": 1673,"name": "puts_per_thread"},{"import": 1306,"src": 1674,"name": "put_thread_count"},{"import": 1306,"src": 1675,"name": "startPuts"},{"import": 1306,"src": 1676,"name": "startGets"},{"import": 1301,"src": 1677,"name": "overlapped_init","kind": "const","type": 1711,"value": null},{"import": 1301,"src": 1678,"name": "Overlapped","kind": "const","type": 592,"value": 1711},{"import": 1301,"src": 1679,"name": "Id","kind": "const","type": 592,"value": 1712},{"import": 1301,"src": 1680,"name": "EventFd","kind": "const","type": 592,"value": 728},{"import": 1301,"src": 1681,"name": "Basic"},{"import": 1301,"src": 1682,"name": "KEventFd"},{"import": 1301,"src": 1683,"name": "KEventBasic"},{"import": 1310,"src": 1684,"name": "DbiStreamHeader","kind": "const","type": 592,"value": 753},{"import": 1310,"src": 1685,"name": "SectionContribEntry","kind": "const","type": 592,"value": 705},{"import": 1310,"src": 1686,"name": "ModInfo","kind": "const","type": 592,"value": 754},{"import": 1310,"src": 1687,"name": "SectionMapHeader"},{"import": 1310,"src": 1688,"name": "SectionMapEntry"},{"import": 1310,"src": 1689,"name": "StreamType","kind": "const","type": 592,"value": 1008},{"import": 1310,"src": 1690,"name": "SymbolKind","kind": "const","type": 592,"value": 1713},{"import": 1310,"src": 1691,"name": "TypeIndex","kind": "const","type": 592,"value": 641},{"import": 1310,"src": 1692,"name": "ProcSym","kind": "const","type": 592,"value": 1714},{"import": 1310,"src": 1693,"name": "ProcSymFlags","kind": "const","type": 592,"value": 1715},{"import": 1310,"src": 1694,"name": "SectionContrSubstreamVersion","kind": "const","type": 592,"value": 1498},{"import": 1310,"src": 1695,"name": "RecordPrefix","kind": "const","type": 592,"value": 1716},{"import": 1310,"src": 1696,"name": "LineFragmentHeader","kind": "const","type": 592,"value": 1717},{"import": 1310,"src": 1697,"name": "LineFlags","kind": "const","type": 592,"value": 1718},{"import": 1310,"src": 1698,"name": "LineBlockFragmentHeader","kind": "const","type": 592,"value": 1719},{"import": 1310,"src": 1699,"name": "LineNumberEntry","kind": "const","type": 592,"value": 1720},{"import": 1310,"src": 1700,"name": "ColumnNumberEntry","kind": "const","type": 592,"value": 1721},{"import": 1310,"src": 1701,"name": "FileChecksumEntryHeader","kind": "const","type": 592,"value": 1722},{"import": 1310,"src": 1702,"name": "DebugSubsectionKind","kind": "const","type": 592,"value": 1723},{"import": 1310,"src": 1703,"name": "DebugSubsectionHeader","kind": "const","type": 592,"value": 1724},{"import": 1310,"src": 1704,"name": "PDBStringTableHeader","kind": "const","type": 592,"value": 1725},{"import": 1310,"src": 1705,"name": "Pdb","kind": "const","type": 592,"value": 1466},{"import": 1310,"src": 1706,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1310,"src": 1707,"name": "io"},{"import": 1310,"src": 1708,"name": "math","kind": "const","type": 592,"value": 1347},{"import": 1310,"src": 1709,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1310,"src": 1710,"name": "os"},{"import": 1310,"src": 1711,"name": "warn"},{"import": 1310,"src": 1712,"name": "coff"},{"import": 1310,"src": 1713,"name": "fs","kind": "const","type": 592,"value": 1342},{"import": 1310,"src": 1714,"name": "File","kind": "const","type": 592,"value": 607},{"import": 1310,"src": 1715,"name": "debug","kind": "const","type": 592,"value": 1339},{"import": 1310,"src": 1716,"name": "ArrayList","kind": "const","type": 626,"value": 696},{"import": 1310,"src": 140,"name": "readSparseBitVector","kind": "const","type": 1726,"value": 786},{"import": 1310,"src": 1717,"name": "Msf","kind": "const","type": 592,"value": 1468},{"import": 1310,"src": 133,"name": "blockCountFromSize","kind": "const","type": 45,"value": 210},{"import": 1310,"src": 1718,"name": "SuperBlock","kind": "const","type": 592,"value": 749},{"import": 1310,"src": 1719,"name": "MsfStream","kind": "const","type": 592,"value": 999},{"import": 1331,"src": 1720,"name": "TAG","kind": "const","type": 592,"value": 1728},{"import": 1331,"src": 1721,"name": "AT","kind": "const","type": 592,"value": 1729},{"import": 1331,"src": 1722,"name": "OP"},{"import": 1331,"src": 1723,"name": "FORM","kind": "const","type": 592,"value": 1730},{"import": 1331,"src": 1724,"name": "ATE"},{"import": 1331,"src": 1725,"name": "CFA"},{"import": 1331,"src": 1726,"name": "CHILDREN","kind": "const","type": 592,"value": 1731},{"import": 1331,"src": 1727,"name": "LNS","kind": "const","type": 592,"value": 1732},{"import": 1331,"src": 1728,"name": "LNE","kind": "const","type": 592,"value": 1733},{"import": 1331,"src": 1729,"name": "LANG"},{"import": 1331,"src": 1730,"name": "UT"},{"import": 1331,"src": 1731,"name": "LNCT"},{"import": 1331,"src": 1732,"name": "DwarfInfo","kind": "const","type": 592,"value": 819},{"import": 1331,"src": 77,"name": "openDwarfDebugInfo","kind": "const","type": 92,"value": 95},{"import": 1331,"src": 1733,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1331,"src": 1734,"name": "debug","kind": "const","type": 592,"value": 1339},{"import": 1331,"src": 1735,"name": "fs","kind": "const","type": 592,"value": 1342},{"import": 1331,"src": 1736,"name": "io","kind": "const","type": 592,"value": 1345},{"import": 1331,"src": 1737,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1331,"src": 1738,"name": "math","kind": "const","type": 592,"value": 1347},{"import": 1331,"src": 1739,"name": "leb","kind": "const","type": 592,"value": 1734},{"import": 1331,"src": 1740,"name": "ArrayList","kind": "const","type": 626,"value": 696},{"import": 1331,"src": 1741,"name": "PcRange","kind": "const","type": 592,"value": 1644},{"import": 1331,"src": 1742,"name": "Func","kind": "const","type": 592,"value": 636},{"import": 1331,"src": 1743,"name": "CompileUnit","kind": "const","type": 592,"value": 632},{"import": 1331,"src": 1744,"name": "AbbrevTable","kind": "const","type": 592,"value": 627},{"import": 1331,"src": 1745,"name": "AbbrevTableHeader","kind": "const","type": 592,"value": 624},{"import": 1331,"src": 1746,"name": "AbbrevTableEntry","kind": "const","type": 592,"value": 628},{"import": 1331,"src": 1747,"name": "AbbrevAttr","kind": "const","type": 592,"value": 630},{"import": 1331,"src": 1748,"name": "FormValue","kind": "const","type": 592,"value": 1248},{"import": 1331,"src": 1749,"name": "Constant","kind": "const","type": 592,"value": 1447},{"import": 1331,"src": 1750,"name": "Die","kind": "const","type": 592,"value": 1441},{"import": 1331,"src": 1751,"name": "FileEntry","kind": "const","type": 592,"value": 712},{"import": 1331,"src": 1752,"name": "LineNumberProgram","kind": "const","type": 592,"value": 1081},{"import": 1331,"src": 90,"name": "readUnitLength","kind": "const","type": 1735,"value": 787},{"import": 1331,"src": 242,"name": "readAllocBytes","kind": "const","type": 1736,"value": 788},{"import": 1331,"src": 238,"name": "readAddress","kind": "const","type": 1737,"value": 789},{"import": 1331,"src": 240,"name": "parseFormValueBlockLen","kind": "const","type": 1738,"value": 790},{"import": 1331,"src": 239,"name": "parseFormValueBlock","kind": "const","type": 1739,"value": 791},{"import": 1331,"src": 241,"name": "parseFormValueConstant","kind": "const","type": 1740,"value": 792},{"import": 1331,"src": 243,"name": "parseFormValueRef","kind": "const","type": 1741,"value": 793},{"import": 1331,"src": 106,"name": "parseFormValue","kind": "const","type": 1742,"value": 794},{"import": 1331,"src": 104,"name": "getAbbrevTableEntry","kind": "const","type": 148,"value": 154},{"import": 1238,"src": 168,"name": "isUsed"},{"import": 1238,"src": 264,"name": "isTombstone"},{"import": 1238,"src": 265,"name": "takeFingerprint"},{"import": 1238,"src": 266,"name": "fill"},{"import": 1238,"src": 1338,"name": "remove"},{"import": 1238,"src": 1339,"name": "FingerPrint","kind": "const","type": 592,"value": 1152},{"import": 1238,"src": 1340,"name": "free"},{"import": 1238,"src": 1341,"name": "tombstone"},{"import": 1335,"src": 1753,"name": "AutoResetEvent","kind": "const","type": 592,"value": 1744},{"import": 1335,"src": 1754,"name": "Futex"},{"import": 1335,"src": 1755,"name": "ResetEvent","kind": "const","type": 592,"value": 1745},{"import": 1335,"src": 1756,"name": "StaticResetEvent","kind": "const","type": 592,"value": 1364},{"import": 1335,"src": 1757,"name": "Mutex","kind": "const","type": 592,"value": 1296},{"import": 1335,"src": 1758,"name": "Semaphore"},{"import": 1335,"src": 1759,"name": "Condition"},{"import": 1335,"src": 1760,"name": "spinLoopHint"},{"import": 1335,"src": 1761,"name": "use_pthreads","kind": "const","type": 604,"value": "false"},{"import": 1335,"src": 1762,"name": "max_name_len"},{"import": 1335,"src": 1763,"name": "SetNameError"},{"import": 1335,"src": 1764,"name": "setName"},{"import": 1335,"src": 1765,"name": "GetNameError"},{"import": 1335,"src": 1766,"name": "getName"},{"import": 1335,"src": 1767,"name": "Id","kind": "const","type": 592,"value": 614},{"import": 1335,"src": 12,"name": "getCurrentId","kind": "const","type": 12,"value": 12},{"import": 1335,"src": 1768,"name": "CpuCountError"},{"import": 1335,"src": 1769,"name": "getCpuCount"},{"import": 1335,"src": 1770,"name": "SpawnConfig"},{"import": 1335,"src": 1771,"name": "SpawnError"},{"import": 1335,"src": 1772,"name": "spawn"},{"import": 1335,"src": 1773,"name": "Handle"},{"import": 1335,"src": 1774,"name": "getHandle"},{"import": 1335,"src": 1775,"name": "detach"},{"import": 1335,"src": 1776,"name": "join"},{"import": 1335,"src": 1777,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1335,"src": 1778,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1335,"src": 1779,"name": "os","kind": "const","type": 592,"value": 1349},{"import": 1335,"src": 1780,"name": "assert"},{"import": 1335,"src": 1781,"name": "target","kind": "const","type": 640,"value": null},{"import": 1335,"src": 1782,"name": "Atomic","kind": "const","type": 718,"value": 720},{"import": 1335,"src": 1783,"name": "is_gnu"},{"import": 1335,"src": 1784,"name": "Thread"},{"import": 1335,"src": 1785,"name": "Impl","kind": "const","type": 592,"value": 1746},{"import": 1335,"src": 1786,"name": "Completion","kind": "const","type": 592,"value": 719},{"import": 1335,"src": 1787,"name": "callFn"},{"import": 1335,"src": 1788,"name": "UnsupportedImpl"},{"import": 1335,"src": 1789,"name": "WindowsThreadImpl","kind": "const","type": 592,"value": 1746},{"import": 1335,"src": 1790,"name": "PosixThreadImpl"},{"import": 1335,"src": 1791,"name": "LinuxThreadImpl"},{"import": 1335,"src": 1792,"name": "testThreadName"},{"import": 1335,"src": 1793,"name": "testIncrementNotify"},{"import": 1336,"src": 1794,"name": "Ordering"},{"import": 1336,"src": 1795,"name": "Stack","kind": "const","type": 726,"value": 722},{"import": 1336,"src": 1796,"name": "Queue","kind": "const","type": 713,"value": 718},{"import": 1336,"src": 1797,"name": "Atomic","kind": "const","type": 718,"value": 720},{"import": 1336,"src": 1798,"name": "fence"},{"import": 1336,"src": 1799,"name": "compilerFence"},{"import": 1336,"src": 320,"name": "spinLoopHint","kind": "const","type": 552,"value": 605},{"import": 1336,"src": 1800,"name": "std"},{"import": 1336,"src": 1801,"name": "target","kind": "const","type": 640,"value": null},{"import": 1337,"src": 1802,"name": "tokenizer"},{"import": 1337,"src": 1803,"name": "Token"},{"import": 1337,"src": 1804,"name": "Tokenizer"},{"import": 1337,"src": 1805,"name": "versionCheck"},{"import": 1337,"src": 1806,"name": "whence_t"},{"import": 1337,"src": 1807,"name": "getErrno"},{"import": 1337,"src": 1808,"name": "environ"},{"import": 1337,"src": 1809,"name": "fopen"},{"import": 1337,"src": 1810,"name": "fclose"},{"import": 1337,"src": 1811,"name": "fwrite"},{"import": 1337,"src": 1812,"name": "fread"},{"import": 1337,"src": 1813,"name": "printf"},{"import": 1337,"src": 1814,"name": "abort"},{"import": 1337,"src": 1815,"name": "exit"},{"import": 1337,"src": 1816,"name": "_exit"},{"import": 1337,"src": 1817,"name": "isatty"},{"import": 1337,"src": 1818,"name": "close"},{"import": 1337,"src": 1819,"name": "lseek"},{"import": 1337,"src": 1820,"name": "open"},{"import": 1337,"src": 1821,"name": "openat"},{"import": 1337,"src": 1822,"name": "ftruncate"},{"import": 1337,"src": 1823,"name": "raise"},{"import": 1337,"src": 1824,"name": "read"},{"import": 1337,"src": 1825,"name": "readv"},{"import": 1337,"src": 1826,"name": "pread"},{"import": 1337,"src": 1827,"name": "preadv"},{"import": 1337,"src": 1828,"name": "writev"},{"import": 1337,"src": 1829,"name": "pwritev"},{"import": 1337,"src": 1830,"name": "write"},{"import": 1337,"src": 1831,"name": "pwrite"},{"import": 1337,"src": 1832,"name": "mmap"},{"import": 1337,"src": 1833,"name": "munmap"},{"import": 1337,"src": 1834,"name": "mprotect"},{"import": 1337,"src": 1835,"name": "link"},{"import": 1337,"src": 1836,"name": "linkat"},{"import": 1337,"src": 1837,"name": "unlink"},{"import": 1337,"src": 1838,"name": "unlinkat"},{"import": 1337,"src": 1839,"name": "getcwd"},{"import": 1337,"src": 1840,"name": "waitpid"},{"import": 1337,"src": 1841,"name": "fork"},{"import": 1337,"src": 1842,"name": "access"},{"import": 1337,"src": 1843,"name": "faccessat"},{"import": 1337,"src": 1844,"name": "pipe"},{"import": 1337,"src": 1845,"name": "mkdir"},{"import": 1337,"src": 1846,"name": "mkdirat"},{"import": 1337,"src": 1847,"name": "symlink"},{"import": 1337,"src": 1848,"name": "symlinkat"},{"import": 1337,"src": 1849,"name": "rename"},{"import": 1337,"src": 1850,"name": "renameat"},{"import": 1337,"src": 1851,"name": "chdir"},{"import": 1337,"src": 1852,"name": "fchdir"},{"import": 1337,"src": 1853,"name": "execve"},{"import": 1337,"src": 1854,"name": "dup"},{"import": 1337,"src": 1855,"name": "dup2"},{"import": 1337,"src": 1856,"name": "readlink"},{"import": 1337,"src": 1857,"name": "readlinkat"},{"import": 1337,"src": 1858,"name": "fchmod"},{"import": 1337,"src": 1859,"name": "fchown"},{"import": 1337,"src": 1860,"name": "rmdir"},{"import": 1337,"src": 1861,"name": "getenv"},{"import": 1337,"src": 1862,"name": "sysctl"},{"import": 1337,"src": 1863,"name": "sysctlbyname"},{"import": 1337,"src": 1864,"name": "sysctlnametomib"},{"import": 1337,"src": 1865,"name": "tcgetattr"},{"import": 1337,"src": 1866,"name": "tcsetattr"},{"import": 1337,"src": 1867,"name": "fcntl"},{"import": 1337,"src": 1868,"name": "flock"},{"import": 1337,"src": 1869,"name": "ioctl"},{"import": 1337,"src": 1870,"name": "uname"},{"import": 1337,"src": 1871,"name": "gethostname"},{"import": 1337,"src": 1872,"name": "shutdown"},{"import": 1337,"src": 1873,"name": "bind"},{"import": 1337,"src": 1874,"name": "socketpair"},{"import": 1337,"src": 1875,"name": "listen"},{"import": 1337,"src": 1876,"name": "getsockname"},{"import": 1337,"src": 1877,"name": "getpeername"},{"import": 1337,"src": 1878,"name": "connect"},{"import": 1337,"src": 1879,"name": "accept"},{"import": 1337,"src": 1880,"name": "accept4"},{"import": 1337,"src": 1881,"name": "getsockopt"},{"import": 1337,"src": 1882,"name": "setsockopt"},{"import": 1337,"src": 1883,"name": "send"},{"import": 1337,"src": 1884,"name": "sendto"},{"import": 1337,"src": 1885,"name": "sendmsg"},{"import": 1337,"src": 1886,"name": "recv"},{"import": 1337,"src": 1887,"name": "recvfrom"},{"import": 1337,"src": 1888,"name": "recvmsg"},{"import": 1337,"src": 1889,"name": "kill"},{"import": 1337,"src": 1890,"name": "getdirentries"},{"import": 1337,"src": 1891,"name": "setuid"},{"import": 1337,"src": 1892,"name": "setgid"},{"import": 1337,"src": 1893,"name": "seteuid"},{"import": 1337,"src": 1894,"name": "setegid"},{"import": 1337,"src": 1895,"name": "setreuid"},{"import": 1337,"src": 1896,"name": "setregid"},{"import": 1337,"src": 1897,"name": "setresuid"},{"import": 1337,"src": 1898,"name": "setresgid"},{"import": 1337,"src": 1899,"name": "malloc"},{"import": 1337,"src": 1900,"name": "realloc"},{"import": 1337,"src": 1901,"name": "free"},{"import": 1337,"src": 1902,"name": "futimes"},{"import": 1337,"src": 1903,"name": "utimes"},{"import": 1337,"src": 1904,"name": "utimensat"},{"import": 1337,"src": 1905,"name": "futimens"},{"import": 1337,"src": 1906,"name": "pthread_create"},{"import": 1337,"src": 1907,"name": "pthread_attr_init"},{"import": 1337,"src": 1908,"name": "pthread_attr_setstack"},{"import": 1337,"src": 1909,"name": "pthread_attr_setstacksize"},{"import": 1337,"src": 1910,"name": "pthread_attr_setguardsize"},{"import": 1337,"src": 1911,"name": "pthread_attr_destroy"},{"import": 1337,"src": 1912,"name": "pthread_self"},{"import": 1337,"src": 1913,"name": "pthread_join"},{"import": 1337,"src": 1914,"name": "pthread_detach"},{"import": 1337,"src": 1915,"name": "pthread_atfork"},{"import": 1337,"src": 1916,"name": "pthread_key_create"},{"import": 1337,"src": 1917,"name": "pthread_key_delete"},{"import": 1337,"src": 1918,"name": "pthread_getspecific"},{"import": 1337,"src": 1919,"name": "pthread_setspecific"},{"import": 1337,"src": 1920,"name": "sem_init"},{"import": 1337,"src": 1921,"name": "sem_destroy"},{"import": 1337,"src": 1922,"name": "sem_post"},{"import": 1337,"src": 1923,"name": "sem_wait"},{"import": 1337,"src": 1924,"name": "sem_trywait"},{"import": 1337,"src": 1925,"name": "sem_timedwait"},{"import": 1337,"src": 1926,"name": "sem_getvalue"},{"import": 1337,"src": 1927,"name": "kqueue"},{"import": 1337,"src": 1928,"name": "kevent"},{"import": 1337,"src": 1929,"name": "port_create"},{"import": 1337,"src": 1930,"name": "port_associate"},{"import": 1337,"src": 1931,"name": "port_dissociate"},{"import": 1337,"src": 1932,"name": "port_send"},{"import": 1337,"src": 1933,"name": "port_sendn"},{"import": 1337,"src": 1934,"name": "port_get"},{"import": 1337,"src": 1935,"name": "port_getn"},{"import": 1337,"src": 1936,"name": "port_alert"},{"import": 1337,"src": 1937,"name": "getaddrinfo"},{"import": 1337,"src": 1938,"name": "freeaddrinfo"},{"import": 1337,"src": 1939,"name": "getnameinfo"},{"import": 1337,"src": 1940,"name": "gai_strerror"},{"import": 1337,"src": 1941,"name": "poll"},{"import": 1337,"src": 1942,"name": "ppoll"},{"import": 1337,"src": 1943,"name": "dn_expand"},{"import": 1337,"src": 1944,"name": "PTHREAD_MUTEX_INITIALIZER"},{"import": 1337,"src": 1945,"name": "pthread_mutex_lock"},{"import": 1337,"src": 1946,"name": "pthread_mutex_unlock"},{"import": 1337,"src": 1947,"name": "pthread_mutex_trylock"},{"import": 1337,"src": 1948,"name": "pthread_mutex_destroy"},{"import": 1337,"src": 1949,"name": "PTHREAD_COND_INITIALIZER"},{"import": 1337,"src": 1950,"name": "pthread_cond_wait"},{"import": 1337,"src": 1951,"name": "pthread_cond_timedwait"},{"import": 1337,"src": 1952,"name": "pthread_cond_signal"},{"import": 1337,"src": 1953,"name": "pthread_cond_broadcast"},{"import": 1337,"src": 1954,"name": "pthread_cond_destroy"},{"import": 1337,"src": 1955,"name": "pthread_rwlock_destroy"},{"import": 1337,"src": 1956,"name": "pthread_rwlock_rdlock"},{"import": 1337,"src": 1957,"name": "pthread_rwlock_wrlock"},{"import": 1337,"src": 1958,"name": "pthread_rwlock_tryrdlock"},{"import": 1337,"src": 1959,"name": "pthread_rwlock_trywrlock"},{"import": 1337,"src": 1960,"name": "pthread_rwlock_unlock"},{"import": 1337,"src": 1961,"name": "pthread_t"},{"import": 1337,"src": 1962,"name": "FILE"},{"import": 1337,"src": 1963,"name": "dlopen"},{"import": 1337,"src": 1964,"name": "dlclose"},{"import": 1337,"src": 1965,"name": "dlsym"},{"import": 1337,"src": 1966,"name": "sync"},{"import": 1337,"src": 1967,"name": "syncfs"},{"import": 1337,"src": 1968,"name": "fsync"},{"import": 1337,"src": 1969,"name": "fdatasync"},{"import": 1337,"src": 1970,"name": "prctl"},{"import": 1337,"src": 1971,"name": "getrlimit"},{"import": 1337,"src": 1972,"name": "setrlimit"},{"import": 1337,"src": 1973,"name": "fmemopen"},{"import": 1337,"src": 1974,"name": "syslog"},{"import": 1337,"src": 1975,"name": "openlog"},{"import": 1337,"src": 1976,"name": "closelog"},{"import": 1337,"src": 1977,"name": "setlogmask"},{"import": 1337,"src": 1978,"name": "max_align_t"},{"import": 1337,"src": 1979,"name": "realpath"},{"import": 1337,"src": 1980,"name": "fstatat"},{"import": 1747,"src": 1981,"name": "_errno"},{"import": 1747,"src": 1982,"name": "_msize"},{"import": 1747,"src": 1983,"name": "clock_getres"},{"import": 1747,"src": 1984,"name": "clock_gettime"},{"import": 1747,"src": 1985,"name": "fstat"},{"import": 1747,"src": 1986,"name": "getrusage"},{"import": 1747,"src": 1987,"name": "gettimeofday"},{"import": 1747,"src": 1988,"name": "nanosleep"},{"import": 1747,"src": 1989,"name": "sched_yield"},{"import": 1747,"src": 1990,"name": "sigaction"},{"import": 1747,"src": 1991,"name": "sigprocmask"},{"import": 1747,"src": 1992,"name": "stat"},{"import": 1747,"src": 1993,"name": "sigfillset"},{"import": 1747,"src": 1994,"name": "alarm"},{"import": 1747,"src": 1995,"name": "sigwait"},{"import": 1747,"src": 1996,"name": "fd_t","kind": "const","type": 592,"value": 840},{"import": 1747,"src": 1997,"name": "ino_t"},{"import": 1747,"src": 1998,"name": "pid_t"},{"import": 1747,"src": 1999,"name": "mode_t","kind": "const","type": 592,"value": 1748},{"import": 1747,"src": 2000,"name": "PATH_MAX"},{"import": 1747,"src": 2001,"name": "time_t"},{"import": 1747,"src": 2002,"name": "timespec"},{"import": 1747,"src": 2003,"name": "timeval"},{"import": 1747,"src": 2004,"name": "Stat"},{"import": 1747,"src": 2005,"name": "sig_atomic_t"},{"import": 1747,"src": 2006,"name": "sigset_t"},{"import": 1747,"src": 2007,"name": "Sigaction"},{"import": 1747,"src": 2008,"name": "timezone"},{"import": 1747,"src": 2009,"name": "rusage"},{"import": 1747,"src": 2010,"name": "NSIG"},{"import": 1747,"src": 2011,"name": "SIG"},{"import": 1747,"src": 2012,"name": "SEEK"},{"import": 1747,"src": 2013,"name": "E"},{"import": 1747,"src": 2014,"name": "STRUNCATE"},{"import": 1747,"src": 2015,"name": "F_OK"},{"import": 1747,"src": 2016,"name": "AT"},{"import": 1747,"src": 2017,"name": "in_port_t"},{"import": 1747,"src": 2018,"name": "sa_family_t"},{"import": 1747,"src": 2019,"name": "socklen_t"},{"import": 1747,"src": 2020,"name": "sockaddr"},{"import": 1747,"src": 2021,"name": "in6_addr"},{"import": 1747,"src": 2022,"name": "in_addr"},{"import": 1747,"src": 2023,"name": "addrinfo"},{"import": 1747,"src": 2024,"name": "AF"},{"import": 1747,"src": 2025,"name": "MSG"},{"import": 1747,"src": 2026,"name": "SOCK"},{"import": 1747,"src": 2027,"name": "TCP"},{"import": 1747,"src": 2028,"name": "IPPROTO"},{"import": 1747,"src": 2029,"name": "BTHPROTO_RFCOMM"},{"import": 1747,"src": 2030,"name": "nfds_t"},{"import": 1747,"src": 2031,"name": "pollfd"},{"import": 1747,"src": 2032,"name": "POLL"},{"import": 1747,"src": 2033,"name": "SOL"},{"import": 1747,"src": 2034,"name": "SO"},{"import": 1747,"src": 2035,"name": "PVD_CONFIG"},{"import": 1747,"src": 2036,"name": "O"},{"import": 1747,"src": 2037,"name": "IFNAMESIZE"},{"import": 1337,"src": 2038,"name": "std"},{"import": 1337,"src": 2039,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1337,"src": 2040,"name": "c"},{"import": 1337,"src": 2041,"name": "page_size"},{"import": 1337,"src": 2042,"name": "iovec"},{"import": 1337,"src": 2043,"name": "iovec_const"},{"import": 1338,"src": 2044,"name": "MachineType"},{"import": 1338,"src": 2045,"name": "IMAGE_FILE_RELOCS_STRIPPED"},{"import": 1338,"src": 2046,"name": "IMAGE_FILE_DEBUG_STRIPPED"},{"import": 1338,"src": 2047,"name": "IMAGE_FILE_EXECUTABLE_IMAGE"},{"import": 1338,"src": 2048,"name": "IMAGE_FILE_32BIT_MACHINE"},{"import": 1338,"src": 2049,"name": "IMAGE_FILE_LARGE_ADDRESS_AWARE"},{"import": 1338,"src": 2050,"name": "IMAGE_SCN_CNT_INITIALIZED_DATA"},{"import": 1338,"src": 2051,"name": "IMAGE_SCN_MEM_READ"},{"import": 1338,"src": 2052,"name": "IMAGE_SCN_CNT_CODE"},{"import": 1338,"src": 2053,"name": "IMAGE_SCN_MEM_EXECUTE"},{"import": 1338,"src": 2054,"name": "IMAGE_SCN_MEM_WRITE"},{"import": 1338,"src": 2055,"name": "CoffError"},{"import": 1338,"src": 2056,"name": "Coff","kind": "const","type": 592,"value": 876},{"import": 1338,"src": 2057,"name": "Section","kind": "const","type": 592,"value": 638},{"import": 1338,"src": 2058,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1338,"src": 2059,"name": "io"},{"import": 1338,"src": 2060,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1338,"src": 2061,"name": "os"},{"import": 1338,"src": 2062,"name": "File","kind": "const","type": 592,"value": 607},{"import": 1338,"src": 2063,"name": "ArrayList","kind": "const","type": 626,"value": 696},{"import": 1338,"src": 2064,"name": "IMAGE_FILE_MACHINE_I386","kind": "const","type": 690,"value": null},{"import": 1338,"src": 2065,"name": "IMAGE_FILE_MACHINE_IA64","kind": "const","type": 690,"value": null},{"import": 1338,"src": 2066,"name": "IMAGE_FILE_MACHINE_AMD64","kind": "const","type": 690,"value": null},{"import": 1338,"src": 2067,"name": "IMAGE_NT_OPTIONAL_HDR32_MAGIC","kind": "const","type": 690,"value": null},{"import": 1338,"src": 2068,"name": "IMAGE_NT_OPTIONAL_HDR64_MAGIC","kind": "const","type": 690,"value": null},{"import": 1338,"src": 2069,"name": "IMAGE_NUMBEROF_DIRECTORY_ENTRIES","kind": "const","type": 690,"value": null},{"import": 1338,"src": 2070,"name": "IMAGE_DEBUG_TYPE_CODEVIEW","kind": "const","type": 690,"value": null},{"import": 1338,"src": 2071,"name": "DEBUG_DIRECTORY","kind": "const","type": 690,"value": null},{"import": 1338,"src": 2072,"name": "CoffHeader","kind": "const","type": 592,"value": 1383},{"import": 1338,"src": 2073,"name": "OptionalHeader","kind": "const","type": 592,"value": 1384},{"import": 1338,"src": 2074,"name": "DebugDirectoryEntry","kind": "const","type": 592,"value": 746},{"import": 1338,"src": 2075,"name": "SectionHeader","kind": "const","type": 592,"value": 1249},{"import": 1339,"src": 2076,"name": "runtime_safety","kind": "const","type": 604,"value": "false"},{"import": 1339,"src": 2077,"name": "LineInfo","kind": "const","type": 592,"value": 1158},{"import": 1339,"src": 2078,"name": "SymbolInfo","kind": "const","type": 592,"value": 1096},{"import": 1339,"src": 2079,"name": "warn"},{"import": 1339,"src": 2080,"name": "print"},{"import": 1339,"src": 2081,"name": "getStderrMutex"},{"import": 1339,"src": 28,"name": "getSelfDebugInfo","kind": "const","type": 30,"value": 32},{"import": 1339,"src": 31,"name": "detectTTYConfig","kind": "const","type": 34,"value": 36},{"import": 1339,"src": 16,"name": "dumpCurrentStackTrace","kind": "const","type": 17,"value": 17},{"import": 1339,"src": 2082,"name": "dumpStackTraceFromBase"},{"import": 1339,"src": 2083,"name": "captureStackTrace"},{"import": 1339,"src": 15,"name": "dumpStackTrace","kind": "const","type": 16,"value": 16},{"import": 1339,"src": 6,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1339,"src": 2084,"name": "panic"},{"import": 1339,"src": 2085,"name": "panicExtra"},{"import": 1339,"src": 7,"name": "panicImpl","kind": "const","type": 7,"value": 7},{"import": 1339,"src": 32,"name": "writeStackTrace","kind": "const","type": 1749,"value": 795},{"import": 1339,"src": 2086,"name": "StackIterator"},{"import": 1339,"src": 193,"name": "writeCurrentStackTrace","kind": "const","type": 1750,"value": 796},{"import": 1339,"src": 194,"name": "writeCurrentStackTraceWindows","kind": "const","type": 1751,"value": 797},{"import": 1339,"src": 2087,"name": "TTY","kind": "const","type": 592,"value": 1752},{"import": 1339,"src": 34,"name": "printSourceAtAddress","kind": "const","type": 1753,"value": 798},{"import": 1339,"src": 2088,"name": "OpenSelfDebugInfoError"},{"import": 1339,"src": 29,"name": "openSelfDebugInfo","kind": "const","type": 31,"value": 33},{"import": 1339,"src": 2089,"name": "readElfDebugInfo"},{"import": 1339,"src": 2090,"name": "DebugInfo","kind": "const","type": 592,"value": 1115},{"import": 1339,"src": 2091,"name": "ModuleDebugInfo","kind": "const","type": 592,"value": 1239},{"import": 1339,"src": 2092,"name": "have_segfault_handling_support"},{"import": 1339,"src": 2093,"name": "enable_segfault_handler","kind": "const","type": 604,"value": "false"},{"import": 1339,"src": 2094,"name": "maybeEnableSegfaultHandler"},{"import": 1339,"src": 2095,"name": "attachSegfaultHandler"},{"import": 1339,"src": 2096,"name": "dumpStackPointerAddr"},{"import": 1339,"src": 2097,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1339,"src": 2098,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1339,"src": 2099,"name": "math","kind": "const","type": 592,"value": 1347},{"import": 1339,"src": 2100,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1339,"src": 2101,"name": "io","kind": "const","type": 592,"value": 1345},{"import": 1339,"src": 2102,"name": "os","kind": "const","type": 592,"value": 1349},{"import": 1339,"src": 2103,"name": "fs","kind": "const","type": 592,"value": 1342},{"import": 1339,"src": 2104,"name": "process","kind": "const","type": 592,"value": 1350},{"import": 1339,"src": 2105,"name": "elf"},{"import": 1339,"src": 2106,"name": "DW","kind": "const","type": 592,"value": 1331},{"import": 1339,"src": 2107,"name": "macho","kind": "const","type": 592,"value": 1346},{"import": 1339,"src": 2108,"name": "coff","kind": "const","type": 592,"value": 1338},{"import": 1339,"src": 2109,"name": "pdb","kind": "const","type": 592,"value": 1310},{"import": 1339,"src": 2110,"name": "ArrayList"},{"import": 1339,"src": 2111,"name": "root","kind": "const","type": 592,"value": 829},{"import": 1339,"src": 2112,"name": "maxInt"},{"import": 1339,"src": 2113,"name": "File","kind": "const","type": 592,"value": 607},{"import": 1339,"src": 2114,"name": "windows","kind": "const","type": 592,"value": 1578},{"import": 1339,"src": 2115,"name": "native_arch","kind": "const","type": 646,"value": null},{"import": 1339,"src": 2116,"name": "native_os","kind": "const","type": 639,"value": null},{"import": 1339,"src": 2117,"name": "native_endian","kind": "const","type": 645,"value": null},{"import": 1339,"src": 2118,"name": "PdbOrDwarf","kind": "const","type": 592,"value": 1642},{"import": 1339,"src": 2119,"name": "stderr_mutex"},{"import": 1339,"src": 2120,"name": "self_debug_info","kind": "var","type": 1754,"value": "null"},{"import": 1339,"src": 2121,"name": "panicking","kind": "var","type": 676,"value": 0},{"import": 1339,"src": 2122,"name": "panic_mutex","kind": "var","type": 1296,"value": null},{"import": 1339,"src": 2123,"name": "panic_stage","kind": "var","threadlocal": true,"type": 602,"value": 0},{"import": 1339,"src": 2124,"name": "RED","kind": "const","type": 1755,"value": null},{"import": 1339,"src": 2125,"name": "GREEN","kind": "const","type": 1755,"value": null},{"import": 1339,"src": 2126,"name": "CYAN","kind": "const","type": 1755,"value": null},{"import": 1339,"src": 2127,"name": "WHITE","kind": "const","type": 1755,"value": null},{"import": 1339,"src": 2128,"name": "BOLD","kind": "const","type": 1756,"value": null},{"import": 1339,"src": 2129,"name": "DIM","kind": "const","type": 1756,"value": null},{"import": 1339,"src": 2130,"name": "RESET","kind": "const","type": 1756,"value": null},{"import": 1339,"src": 2131,"name": "machoSearchSymbols"},{"import": 1339,"src": 171,"name": "printLineInfo","kind": "const","type": 1757,"value": 799},{"import": 1339,"src": 47,"name": "readCoffDebugInfo","kind": "const","type": 51,"value": 53},{"import": 1339,"src": 2132,"name": "chopSlice"},{"import": 1339,"src": 2133,"name": "readMachODebugInfo"},{"import": 1339,"src": 268,"name": "printLineFromFileAnyOs","kind": "const","type": 1758,"value": 800},{"import": 1339,"src": 2134,"name": "MachoSymbol","kind": "const","type": 592,"value": 1759},{"import": 1339,"src": 2135,"name": "mapWholeFile"},{"import": 1339,"src": 173,"name": "getSymbolFromDwarf","kind": "const","type": 293,"value": 308},{"import": 1339,"src": 2136,"name": "debug_info_allocator","kind": "var","type": 1583,"value": "null"},{"import": 1339,"src": 2137,"name": "debug_info_arena_allocator","kind": "var","type": 1116,"value": "undefined"},{"import": 1339,"src": 30,"name": "getDebugInfoAllocator","kind": "const","type": 32,"value": 34},{"import": 1339,"src": 2138,"name": "windows_segfault_handle"},{"import": 1339,"src": 2139,"name": "resetSegfaultHandler"},{"import": 1339,"src": 2140,"name": "handleSegfaultLinux"},{"import": 1339,"src": 2141,"name": "handleSegfaultWindows"},{"import": 1339,"src": 2142,"name": "handleSegfaultWindowsExtra"},{"import": 1340,"src": 2143,"name": "Channel"},{"import": 1340,"src": 2144,"name": "Future"},{"import": 1340,"src": 2145,"name": "Group"},{"import": 1340,"src": 2146,"name": "Batch"},{"import": 1340,"src": 2147,"name": "Lock"},{"import": 1340,"src": 2148,"name": "Locked"},{"import": 1340,"src": 2149,"name": "RwLock"},{"import": 1340,"src": 2150,"name": "RwLocked"},{"import": 1340,"src": 2151,"name": "Loop","kind": "const","type": 592,"value": 1697},{"import": 1340,"src": 2152,"name": "WaitGroup"},{"import": 1341,"src": 2153,"name": "default_max_depth","kind": "const","type": 690,"value": null},{"import": 1341,"src": 2154,"name": "Alignment","kind": "const","type": 592,"value": 1368},{"import": 1341,"src": 2155,"name": "FormatOptions","kind": "const","type": 592,"value": 855},{"import": 1341,"src": 23,"name": "format","kind": "const","type": 1760,"value": 801},{"import": 1341,"src": 2156,"name": "formatAddress"},{"import": 1341,"src": 25,"name": "formatType","kind": "const","type": 1761,"value": 802},{"import": 1341,"src": 201,"name": "formatIntValue","kind": "const","type": 1762,"value": 803},{"import": 1341,"src": 2157,"name": "Case","kind": "const","type": 592,"value": 1110},{"import": 1341,"src": 2158,"name": "fmtSliceHexLower"},{"import": 1341,"src": 2159,"name": "fmtSliceHexUpper"},{"import": 1341,"src": 2160,"name": "fmtSliceEscapeLower"},{"import": 1341,"src": 2161,"name": "fmtSliceEscapeUpper"},{"import": 1341,"src": 2162,"name": "fmtIntSizeDec"},{"import": 1341,"src": 2163,"name": "fmtIntSizeBin"},{"import": 1341,"src": 210,"name": "formatText","kind": "const","type": 1763,"value": 804},{"import": 1341,"src": 2164,"name": "formatAsciiChar"},{"import": 1341,"src": 2165,"name": "formatUnicodeCodepoint"},{"import": 1341,"src": 205,"name": "formatBuf","kind": "const","type": 1764,"value": 805},{"import": 1341,"src": 2166,"name": "formatFloatScientific"},{"import": 1341,"src": 2167,"name": "formatFloatHexadecimal"},{"import": 1341,"src": 2168,"name": "formatFloatDecimal"},{"import": 1341,"src": 202,"name": "formatInt","kind": "const","type": 1765,"value": 806},{"import": 1341,"src": 2169,"name": "formatIntBuf"},{"import": 1341,"src": 2170,"name": "fmtDuration"},{"import": 1341,"src": 2171,"name": "fmtDurationSigned"},{"import": 1341,"src": 2172,"name": "ParseIntError","kind": "const","type": 592,"value": 1398},{"import": 1341,"src": 2173,"name": "Formatter"},{"import": 1341,"src": 68,"name": "parseInt","kind": "const","type": 1766,"value": 807},{"import": 1341,"src": 2174,"name": "parseUnsigned"},{"import": 1341,"src": 2175,"name": "parseFloat"},{"import": 1341,"src": 2176,"name": "ParseFloatError"},{"import": 1341,"src": 2177,"name": "parseHexFloat"},{"import": 1341,"src": 298,"name": "charToDigit","kind": "const","type": 479,"value": 520},{"import": 1341,"src": 204,"name": "digitToChar","kind": "const","type": 349,"value": 365},{"import": 1341,"src": 2178,"name": "BufPrintError"},{"import": 1341,"src": 2179,"name": "bufPrint"},{"import": 1341,"src": 2180,"name": "bufPrintZ"},{"import": 1341,"src": 2181,"name": "count"},{"import": 1341,"src": 2182,"name": "AllocPrintError"},{"import": 1341,"src": 2183,"name": "allocPrint"},{"import": 1341,"src": 2184,"name": "allocPrint0"},{"import": 1341,"src": 2185,"name": "allocPrintZ"},{"import": 1341,"src": 2186,"name": "bufPrintIntToSlice"},{"import": 1341,"src": 2187,"name": "comptimePrint"},{"import": 1341,"src": 2188,"name": "trim"},{"import": 1341,"src": 2189,"name": "isWhiteSpace"},{"import": 1341,"src": 2190,"name": "hexToBytes"},{"import": 1341,"src": 2191,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1341,"src": 2192,"name": "math","kind": "const","type": 592,"value": 1347},{"import": 1341,"src": 2193,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1341,"src": 2194,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1341,"src": 2195,"name": "unicode","kind": "const","type": 592,"value": 1353},{"import": 1341,"src": 2196,"name": "meta","kind": "const","type": 592,"value": 1348},{"import": 1341,"src": 2197,"name": "builtin"},{"import": 1341,"src": 2198,"name": "errol"},{"import": 1341,"src": 2199,"name": "lossyCast"},{"import": 1341,"src": 2200,"name": "expectFmt"},{"import": 1341,"src": 2201,"name": "ANY","kind": "const","type": 1767,"value": null},{"import": 1341,"src": 2202,"name": "defaultSpec"},{"import": 1341,"src": 200,"name": "formatValue","kind": "const","type": 1768,"value": 808},{"import": 1341,"src": 2203,"name": "formatFloatValue"},{"import": 1341,"src": 2204,"name": "formatSliceHexImpl"},{"import": 1341,"src": 2205,"name": "formatSliceHexLower"},{"import": 1341,"src": 2206,"name": "formatSliceHexUpper"},{"import": 1341,"src": 2207,"name": "formatSliceEscapeImpl"},{"import": 1341,"src": 2208,"name": "formatSliceEscapeLower"},{"import": 1341,"src": 2209,"name": "formatSliceEscapeUpper"},{"import": 1341,"src": 2210,"name": "formatSizeImpl"},{"import": 1341,"src": 2211,"name": "formatSizeDec"},{"import": 1341,"src": 2212,"name": "formatSizeBin"},{"import": 1341,"src": 2213,"name": "formatDuration"},{"import": 1341,"src": 2214,"name": "formatDurationSigned"},{"import": 1341,"src": 234,"name": "parseWithSign","kind": "const","type": 1769,"value": 809},{"import": 1342,"src": 2215,"name": "path","kind": "const","type": 592,"value": 1462},{"import": 1342,"src": 2216,"name": "File","kind": "const","type": 592,"value": 607},{"import": 1342,"src": 2217,"name": "wasi"},{"import": 1342,"src": 2218,"name": "realpath"},{"import": 1342,"src": 2219,"name": "realpathZ"},{"import": 1342,"src": 2220,"name": "realpathC"},{"import": 1342,"src": 2221,"name": "realpathW"},{"import": 1342,"src": 2222,"name": "getAppDataDir"},{"import": 1342,"src": 2223,"name": "GetAppDataDirError"},{"import": 1342,"src": 2224,"name": "Watch"},{"import": 1342,"src": 2225,"name": "MAX_PATH_BYTES","kind": "const","type": 690,"value": null},{"import": 1342,"src": 2226,"name": "base64_alphabet"},{"import": 1342,"src": 2227,"name": "base64_encoder"},{"import": 1342,"src": 2228,"name": "base64_decoder"},{"import": 1342,"src": 2229,"name": "need_async_thread"},{"import": 1342,"src": 2230,"name": "atomicSymLink"},{"import": 1342,"src": 2231,"name": "PrevStatus"},{"import": 1342,"src": 2232,"name": "CopyFileOptions"},{"import": 1342,"src": 2233,"name": "updateFileAbsolute"},{"import": 1342,"src": 2234,"name": "copyFileAbsolute"},{"import": 1342,"src": 2235,"name": "AtomicFile"},{"import": 1342,"src": 2236,"name": "makeDirAbsolute"},{"import": 1342,"src": 2237,"name": "makeDirAbsoluteZ"},{"import": 1342,"src": 2238,"name": "makeDirAbsoluteW"},{"import": 1342,"src": 2239,"name": "deleteDir"},{"import": 1342,"src": 2240,"name": "deleteDirC"},{"import": 1342,"src": 2241,"name": "deleteDirW"},{"import": 1342,"src": 2242,"name": "deleteDirAbsolute"},{"import": 1342,"src": 2243,"name": "deleteDirAbsoluteZ"},{"import": 1342,"src": 2244,"name": "deleteDirAbsoluteW"},{"import": 1342,"src": 2245,"name": "renameC"},{"import": 1342,"src": 2246,"name": "renameAbsolute"},{"import": 1342,"src": 2247,"name": "renameAbsoluteZ"},{"import": 1342,"src": 2248,"name": "renameAbsoluteW"},{"import": 1342,"src": 2249,"name": "rename"},{"import": 1342,"src": 2250,"name": "renameZ"},{"import": 1342,"src": 2251,"name": "renameW"},{"import": 1342,"src": 2252,"name": "Dir","kind": "const","type": 592,"value": 995},{"import": 1342,"src": 129,"name": "cwd","kind": "const","type": 196,"value": 204},{"import": 1342,"src": 2253,"name": "openDirAbsolute"},{"import": 1342,"src": 2254,"name": "openDirAbsoluteZ"},{"import": 1342,"src": 2255,"name": "openDirAbsoluteW"},{"import": 1342,"src": 2256,"name": "openFileAbsolute"},{"import": 1342,"src": 2257,"name": "openFileAbsoluteC"},{"import": 1342,"src": 2258,"name": "openFileAbsoluteZ"},{"import": 1342,"src": 45,"name": "openFileAbsoluteW","kind": "const","type": 49,"value": 51},{"import": 1342,"src": 2259,"name": "accessAbsolute"},{"import": 1342,"src": 2260,"name": "accessAbsoluteZ"},{"import": 1342,"src": 2261,"name": "accessAbsoluteW"},{"import": 1342,"src": 2262,"name": "createFileAbsolute"},{"import": 1342,"src": 2263,"name": "createFileAbsoluteC"},{"import": 1342,"src": 2264,"name": "createFileAbsoluteZ"},{"import": 1342,"src": 2265,"name": "createFileAbsoluteW"},{"import": 1342,"src": 2266,"name": "deleteFileAbsolute"},{"import": 1342,"src": 2267,"name": "deleteFileAbsoluteC"},{"import": 1342,"src": 2268,"name": "deleteFileAbsoluteZ"},{"import": 1342,"src": 2269,"name": "deleteFileAbsoluteW"},{"import": 1342,"src": 2270,"name": "deleteTreeAbsolute"},{"import": 1342,"src": 2271,"name": "readLinkAbsolute"},{"import": 1342,"src": 2272,"name": "readlinkAbsoluteW"},{"import": 1342,"src": 2273,"name": "readLinkAbsoluteZ"},{"import": 1342,"src": 2274,"name": "readLink"},{"import": 1342,"src": 2275,"name": "readLinkC"},{"import": 1342,"src": 2276,"name": "SymLinkFlags"},{"import": 1342,"src": 2277,"name": "symLinkAbsolute"},{"import": 1342,"src": 2278,"name": "symLinkAbsoluteW"},{"import": 1342,"src": 2279,"name": "symLinkAbsoluteZ"},{"import": 1342,"src": 2280,"name": "symLink"},{"import": 1342,"src": 2281,"name": "symLinkC"},{"import": 1342,"src": 2282,"name": "walkPath"},{"import": 1342,"src": 2283,"name": "OpenSelfExeError"},{"import": 1342,"src": 2284,"name": "openSelfExe"},{"import": 1342,"src": 2285,"name": "SelfExePathError"},{"import": 1342,"src": 2286,"name": "selfExePathAlloc"},{"import": 1342,"src": 2287,"name": "selfExePath"},{"import": 1342,"src": 2288,"name": "selfExePathW"},{"import": 1342,"src": 2289,"name": "selfExeDirPathAlloc"},{"import": 1342,"src": 2290,"name": "selfExeDirPath"},{"import": 1342,"src": 2291,"name": "realpathAlloc"},{"import": 1342,"src": 2292,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1342,"src": 2293,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1342,"src": 2294,"name": "root"},{"import": 1342,"src": 2295,"name": "os","kind": "const","type": 592,"value": 1349},{"import": 1342,"src": 2296,"name": "mem"},{"import": 1342,"src": 2297,"name": "base64"},{"import": 1342,"src": 2298,"name": "crypto"},{"import": 1342,"src": 2299,"name": "Allocator"},{"import": 1342,"src": 2300,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1342,"src": 2301,"name": "math"},{"import": 1342,"src": 2302,"name": "is_darwin"},{"import": 1342,"src": 2303,"name": "default_new_dir_mode"},{"import": 1342,"src": 2304,"name": "CopyFileError"},{"import": 1342,"src": 2305,"name": "copy_file"},{"import": 1343,"src": 2306,"name": "Adler32"},{"import": 1343,"src": 2307,"name": "autoHash"},{"import": 1343,"src": 2308,"name": "autoHashStrat"},{"import": 1343,"src": 2309,"name": "Strategy"},{"import": 1343,"src": 2310,"name": "crc"},{"import": 1343,"src": 2311,"name": "Crc32"},{"import": 1343,"src": 2312,"name": "Fnv1a_32"},{"import": 1343,"src": 2313,"name": "Fnv1a_64"},{"import": 1343,"src": 2314,"name": "Fnv1a_128"},{"import": 1343,"src": 2315,"name": "SipHash64"},{"import": 1343,"src": 2316,"name": "SipHash128"},{"import": 1343,"src": 2317,"name": "murmur"},{"import": 1343,"src": 2318,"name": "Murmur2_32"},{"import": 1343,"src": 2319,"name": "Murmur2_64"},{"import": 1343,"src": 2320,"name": "Murmur3_32"},{"import": 1343,"src": 2321,"name": "cityhash"},{"import": 1343,"src": 2322,"name": "CityHash32"},{"import": 1343,"src": 2323,"name": "CityHash64"},{"import": 1343,"src": 2324,"name": "Wyhash","kind": "const","type": 592,"value": 1641},{"import": 1343,"src": 2325,"name": "adler"},{"import": 1343,"src": 2326,"name": "auto_hash"},{"import": 1343,"src": 2327,"name": "fnv"},{"import": 1343,"src": 2328,"name": "siphash"},{"import": 1343,"src": 2329,"name": "wyhash","kind": "const","type": 592,"value": 1623},{"import": 1344,"src": 2330,"name": "LoggingAllocator"},{"import": 1344,"src": 2331,"name": "loggingAllocator"},{"import": 1344,"src": 2332,"name": "ScopedLoggingAllocator"},{"import": 1344,"src": 2333,"name": "LogToWriterAllocator"},{"import": 1344,"src": 2334,"name": "logToWriterAllocator"},{"import": 1344,"src": 2335,"name": "ArenaAllocator","kind": "const","type": 592,"value": 1116},{"import": 1344,"src": 2336,"name": "GeneralPurposeAllocator"},{"import": 1344,"src": 2337,"name": "c_allocator"},{"import": 1344,"src": 2338,"name": "raw_c_allocator"},{"import": 1344,"src": 2339,"name": "page_allocator","kind": "const","type": 859,"value": null},{"import": 1344,"src": 282,"name": "alignPageAllocLen","kind": "const","type": 461,"value": 499},{"import": 1344,"src": 2340,"name": "next_mmap_addr_hint"},{"import": 1344,"src": 2341,"name": "HeapAllocator"},{"import": 1344,"src": 2342,"name": "FixedBufferAllocator"},{"import": 1344,"src": 2343,"name": "ThreadSafeFixedBufferAllocator"},{"import": 1344,"src": 2344,"name": "stackFallback"},{"import": 1344,"src": 2345,"name": "StackFallbackAllocator"},{"import": 1344,"src": 2346,"name": "testAllocator"},{"import": 1344,"src": 2347,"name": "testAllocatorAligned"},{"import": 1344,"src": 2348,"name": "testAllocatorLargeAlignment"},{"import": 1344,"src": 2349,"name": "testAllocatorAlignedShrink"},{"import": 1344,"src": 2350,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1344,"src": 2351,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1344,"src": 2352,"name": "root"},{"import": 1344,"src": 2353,"name": "debug","kind": "const","type": 592,"value": 1339},{"import": 1344,"src": 2354,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1344,"src": 2355,"name": "testing"},{"import": 1344,"src": 2356,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1344,"src": 2357,"name": "os","kind": "const","type": 592,"value": 1349},{"import": 1344,"src": 2358,"name": "c"},{"import": 1344,"src": 2359,"name": "maxInt"},{"import": 1344,"src": 2360,"name": "Allocator","kind": "const","type": 592,"value": 1372},{"import": 1344,"src": 2361,"name": "CAllocator"},{"import": 1344,"src": 2362,"name": "c_allocator_state"},{"import": 1344,"src": 2363,"name": "raw_c_allocator_state"},{"import": 1344,"src": 2364,"name": "rawCAlloc"},{"import": 1344,"src": 2365,"name": "rawCResize"},{"import": 1344,"src": 2366,"name": "page_allocator_state","kind": "var","type": 1372,"value": null},{"import": 1344,"src": 2367,"name": "wasm_page_allocator_state"},{"import": 1344,"src": 2368,"name": "PageAllocator","kind": "const","type": 592,"value": 1770},{"import": 1344,"src": 2369,"name": "WasmPageAllocator"},{"import": 1344,"src": 2370,"name": "sliceContainsPtr"},{"import": 1344,"src": 2371,"name": "sliceContainsSlice"},{"import": 1344,"src": 2372,"name": "test_fixed_buffer_allocator_memory"},{"import": 1345,"src": 2373,"name": "Mode","kind": "const","type": 592,"value": 1771},{"import": 1345,"src": 2374,"name": "mode","kind": "const","type": 1771,"value": null},{"import": 1345,"src": 2375,"name": "is_async","kind": "const","type": 604,"value": "false"},{"import": 1345,"src": 2376,"name": "ModeOverride","kind": "const","type": 592,"value": 853},{"import": 1345,"src": 2377,"name": "default_mode","kind": "const","type": 853,"value": "undefined"},{"import": 1345,"src": 2378,"name": "getStdOut"},{"import": 1345,"src": 9,"name": "getStdErr","kind": "const","type": 9,"value": 9},{"import": 1345,"src": 2379,"name": "getStdIn"},{"import": 1345,"src": 2380,"name": "Reader","kind": "const","type": 642,"value": 697},{"import": 1345,"src": 2381,"name": "Writer","kind": "const","type": 605,"value": 686},{"import": 1345,"src": 2382,"name": "SeekableStream","kind": "const","type": 655,"value": 701},{"import": 1345,"src": 2383,"name": "BufferedWriter"},{"import": 1345,"src": 2384,"name": "bufferedWriter"},{"import": 1345,"src": 2385,"name": "BufferedReader"},{"import": 1345,"src": 2386,"name": "bufferedReader"},{"import": 1345,"src": 2387,"name": "PeekStream"},{"import": 1345,"src": 2388,"name": "peekStream"},{"import": 1345,"src": 2389,"name": "FixedBufferStream"},{"import": 1345,"src": 2390,"name": "fixedBufferStream","kind": "const","type": 1653,"value": 760},{"import": 1345,"src": 2391,"name": "CWriter"},{"import": 1345,"src": 2392,"name": "cWriter"},{"import": 1345,"src": 2393,"name": "LimitedReader"},{"import": 1345,"src": 2394,"name": "limitedReader"},{"import": 1345,"src": 2395,"name": "CountingWriter"},{"import": 1345,"src": 2396,"name": "countingWriter"},{"import": 1345,"src": 2397,"name": "CountingReader"},{"import": 1345,"src": 2398,"name": "countingReader"},{"import": 1345,"src": 2399,"name": "MultiWriter"},{"import": 1345,"src": 2400,"name": "multiWriter"},{"import": 1345,"src": 2401,"name": "BitReader"},{"import": 1345,"src": 2402,"name": "bitReader"},{"import": 1345,"src": 2403,"name": "BitWriter"},{"import": 1345,"src": 2404,"name": "bitWriter"},{"import": 1345,"src": 2405,"name": "ChangeDetectionStream"},{"import": 1345,"src": 2406,"name": "changeDetectionStream"},{"import": 1345,"src": 2407,"name": "FindByteWriter"},{"import": 1345,"src": 2408,"name": "findByteWriter"},{"import": 1345,"src": 2409,"name": "FindByteOutStream"},{"import": 1345,"src": 2410,"name": "findByteOutStream"},{"import": 1345,"src": 2411,"name": "BufferedAtomicFile"},{"import": 1345,"src": 2412,"name": "StreamSource"},{"import": 1345,"src": 2413,"name": "null_writer"},{"import": 1345,"src": 2414,"name": "writeFile"},{"import": 1345,"src": 2415,"name": "readFileAlloc"},{"import": 1345,"src": 2416,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1345,"src": 2417,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1345,"src": 2418,"name": "root","kind": "const","type": 592,"value": 829},{"import": 1345,"src": 2419,"name": "c"},{"import": 1345,"src": 2420,"name": "math"},{"import": 1345,"src": 2421,"name": "assert"},{"import": 1345,"src": 2422,"name": "os","kind": "const","type": 592,"value": 1349},{"import": 1345,"src": 2423,"name": "fs"},{"import": 1345,"src": 2424,"name": "mem"},{"import": 1345,"src": 2425,"name": "meta"},{"import": 1345,"src": 2426,"name": "trait"},{"import": 1345,"src": 2427,"name": "File","kind": "const","type": 592,"value": 607},{"import": 1345,"src": 2428,"name": "getStdOutHandle"},{"import": 1345,"src": 20,"name": "getStdErrHandle","kind": "const","type": 21,"value": 22},{"import": 1345,"src": 2429,"name": "getStdInHandle"},{"import": 1345,"src": 2430,"name": "NullWriter"},{"import": 1345,"src": 2431,"name": "dummyWrite"},{"import": 1346,"src": 2432,"name": "mach_header"},{"import": 1346,"src": 2433,"name": "mach_header_64"},{"import": 1346,"src": 2434,"name": "fat_header"},{"import": 1346,"src": 2435,"name": "fat_arch"},{"import": 1346,"src": 2436,"name": "load_command"},{"import": 1346,"src": 2437,"name": "uuid_command"},{"import": 1346,"src": 2438,"name": "version_min_command"},{"import": 1346,"src": 2439,"name": "source_version_command"},{"import": 1346,"src": 2440,"name": "build_version_command"},{"import": 1346,"src": 2441,"name": "build_tool_version"},{"import": 1346,"src": 2442,"name": "PLATFORM_MACOS"},{"import": 1346,"src": 2443,"name": "PLATFORM_IOS"},{"import": 1346,"src": 2444,"name": "PLATFORM_TVOS"},{"import": 1346,"src": 2445,"name": "PLATFORM_WATCHOS"},{"import": 1346,"src": 2446,"name": "PLATFORM_BRIDGEOS"},{"import": 1346,"src": 2447,"name": "PLATFORM_MACCATALYST"},{"import": 1346,"src": 2448,"name": "PLATFORM_IOSSIMULATOR"},{"import": 1346,"src": 2449,"name": "PLATFORM_TVOSSIMULATOR"},{"import": 1346,"src": 2450,"name": "PLATFORM_WATCHOSSIMULATOR"},{"import": 1346,"src": 2451,"name": "PLATFORM_DRIVERKIT"},{"import": 1346,"src": 2452,"name": "TOOL_CLANG"},{"import": 1346,"src": 2453,"name": "TOOL_SWIFT"},{"import": 1346,"src": 2454,"name": "TOOL_LD"},{"import": 1346,"src": 2455,"name": "entry_point_command"},{"import": 1346,"src": 2456,"name": "symtab_command"},{"import": 1346,"src": 2457,"name": "dysymtab_command"},{"import": 1346,"src": 2458,"name": "linkedit_data_command"},{"import": 1346,"src": 2459,"name": "dyld_info_command"},{"import": 1346,"src": 2460,"name": "dylinker_command"},{"import": 1346,"src": 2461,"name": "dylib_command"},{"import": 1346,"src": 2462,"name": "dylib"},{"import": 1346,"src": 2463,"name": "rpath_command"},{"import": 1346,"src": 2464,"name": "segment_command"},{"import": 1346,"src": 2465,"name": "segment_command_64"},{"import": 1346,"src": 2466,"name": "section"},{"import": 1346,"src": 2467,"name": "section_64"},{"import": 1346,"src": 2468,"name": "nlist"},{"import": 1346,"src": 2469,"name": "nlist_64","kind": "const","type": 592,"value": 1772},{"import": 1346,"src": 2470,"name": "relocation_info"},{"import": 1346,"src": 2471,"name": "LC_REQ_DYLD"},{"import": 1346,"src": 2472,"name": "LC_SEGMENT"},{"import": 1346,"src": 2473,"name": "LC_SYMTAB"},{"import": 1346,"src": 2474,"name": "LC_SYMSEG"},{"import": 1346,"src": 2475,"name": "LC_THREAD"},{"import": 1346,"src": 2476,"name": "LC_UNIXTHREAD"},{"import": 1346,"src": 2477,"name": "LC_LOADFVMLIB"},{"import": 1346,"src": 2478,"name": "LC_IDFVMLIB"},{"import": 1346,"src": 2479,"name": "LC_IDENT"},{"import": 1346,"src": 2480,"name": "LC_FVMFILE"},{"import": 1346,"src": 2481,"name": "LC_PREPAGE"},{"import": 1346,"src": 2482,"name": "LC_DYSYMTAB"},{"import": 1346,"src": 2483,"name": "LC_LOAD_DYLIB"},{"import": 1346,"src": 2484,"name": "LC_ID_DYLIB"},{"import": 1346,"src": 2485,"name": "LC_LOAD_DYLINKER"},{"import": 1346,"src": 2486,"name": "LC_ID_DYLINKER"},{"import": 1346,"src": 2487,"name": "LC_PREBOUND_DYLIB"},{"import": 1346,"src": 2488,"name": "LC_ROUTINES"},{"import": 1346,"src": 2489,"name": "LC_SUB_FRAMEWORK"},{"import": 1346,"src": 2490,"name": "LC_SUB_UMBRELLA"},{"import": 1346,"src": 2491,"name": "LC_SUB_CLIENT"},{"import": 1346,"src": 2492,"name": "LC_SUB_LIBRARY"},{"import": 1346,"src": 2493,"name": "LC_TWOLEVEL_HINTS"},{"import": 1346,"src": 2494,"name": "LC_PREBIND_CKSUM"},{"import": 1346,"src": 2495,"name": "LC_LOAD_WEAK_DYLIB"},{"import": 1346,"src": 2496,"name": "LC_SEGMENT_64"},{"import": 1346,"src": 2497,"name": "LC_ROUTINES_64"},{"import": 1346,"src": 2498,"name": "LC_UUID"},{"import": 1346,"src": 2499,"name": "LC_RPATH"},{"import": 1346,"src": 2500,"name": "LC_CODE_SIGNATURE"},{"import": 1346,"src": 2501,"name": "LC_SEGMENT_SPLIT_INFO"},{"import": 1346,"src": 2502,"name": "LC_REEXPORT_DYLIB"},{"import": 1346,"src": 2503,"name": "LC_LAZY_LOAD_DYLIB"},{"import": 1346,"src": 2504,"name": "LC_ENCRYPTION_INFO"},{"import": 1346,"src": 2505,"name": "LC_DYLD_INFO"},{"import": 1346,"src": 2506,"name": "LC_DYLD_INFO_ONLY"},{"import": 1346,"src": 2507,"name": "LC_LOAD_UPWARD_DYLIB"},{"import": 1346,"src": 2508,"name": "LC_VERSION_MIN_MACOSX"},{"import": 1346,"src": 2509,"name": "LC_VERSION_MIN_IPHONEOS"},{"import": 1346,"src": 2510,"name": "LC_FUNCTION_STARTS"},{"import": 1346,"src": 2511,"name": "LC_DYLD_ENVIRONMENT"},{"import": 1346,"src": 2512,"name": "LC_MAIN"},{"import": 1346,"src": 2513,"name": "LC_DATA_IN_CODE"},{"import": 1346,"src": 2514,"name": "LC_SOURCE_VERSION"},{"import": 1346,"src": 2515,"name": "LC_DYLIB_CODE_SIGN_DRS"},{"import": 1346,"src": 2516,"name": "LC_ENCRYPTION_INFO_64"},{"import": 1346,"src": 2517,"name": "LC_LINKER_OPTION"},{"import": 1346,"src": 2518,"name": "LC_LINKER_OPTIMIZATION_HINT"},{"import": 1346,"src": 2519,"name": "LC_VERSION_MIN_TVOS"},{"import": 1346,"src": 2520,"name": "LC_VERSION_MIN_WATCHOS"},{"import": 1346,"src": 2521,"name": "LC_NOTE"},{"import": 1346,"src": 2522,"name": "LC_BUILD_VERSION"},{"import": 1346,"src": 2523,"name": "MH_MAGIC"},{"import": 1346,"src": 2524,"name": "MH_CIGAM"},{"import": 1346,"src": 2525,"name": "MH_MAGIC_64"},{"import": 1346,"src": 2526,"name": "MH_CIGAM_64"},{"import": 1346,"src": 2527,"name": "MH_OBJECT"},{"import": 1346,"src": 2528,"name": "MH_EXECUTE"},{"import": 1346,"src": 2529,"name": "MH_FVMLIB"},{"import": 1346,"src": 2530,"name": "MH_CORE"},{"import": 1346,"src": 2531,"name": "MH_PRELOAD"},{"import": 1346,"src": 2532,"name": "MH_DYLIB"},{"import": 1346,"src": 2533,"name": "MH_DYLINKER"},{"import": 1346,"src": 2534,"name": "MH_BUNDLE"},{"import": 1346,"src": 2535,"name": "MH_DYLIB_STUB"},{"import": 1346,"src": 2536,"name": "MH_DSYM"},{"import": 1346,"src": 2537,"name": "MH_KEXT_BUNDLE"},{"import": 1346,"src": 2538,"name": "MH_NOUNDEFS"},{"import": 1346,"src": 2539,"name": "MH_INCRLINK"},{"import": 1346,"src": 2540,"name": "MH_DYLDLINK"},{"import": 1346,"src": 2541,"name": "MH_BINDATLOAD"},{"import": 1346,"src": 2542,"name": "MH_PREBOUND"},{"import": 1346,"src": 2543,"name": "MH_SPLIT_SEGS"},{"import": 1346,"src": 2544,"name": "MH_LAZY_INIT"},{"import": 1346,"src": 2545,"name": "MH_TWOLEVEL"},{"import": 1346,"src": 2546,"name": "MH_FORCE_FLAT"},{"import": 1346,"src": 2547,"name": "MH_NOMULTIDEFS"},{"import": 1346,"src": 2548,"name": "MH_NOFIXPREBINDING"},{"import": 1346,"src": 2549,"name": "MH_PREBINDABLE"},{"import": 1346,"src": 2550,"name": "MH_ALLMODSBOUND"},{"import": 1346,"src": 2551,"name": "MH_SUBSECTIONS_VIA_SYMBOLS"},{"import": 1346,"src": 2552,"name": "MH_CANONICAL"},{"import": 1346,"src": 2553,"name": "MH_WEAK_DEFINES"},{"import": 1346,"src": 2554,"name": "MH_BINDS_TO_WEAK"},{"import": 1346,"src": 2555,"name": "MH_ALLOW_STACK_EXECUTION"},{"import": 1346,"src": 2556,"name": "MH_ROOT_SAFE"},{"import": 1346,"src": 2557,"name": "MH_SETUID_SAFE"},{"import": 1346,"src": 2558,"name": "MH_NO_REEXPORTED_DYLIBS"},{"import": 1346,"src": 2559,"name": "MH_PIE"},{"import": 1346,"src": 2560,"name": "MH_DEAD_STRIPPABLE_DYLIB"},{"import": 1346,"src": 2561,"name": "MH_HAS_TLV_DESCRIPTORS"},{"import": 1346,"src": 2562,"name": "MH_NO_HEAP_EXECUTION"},{"import": 1346,"src": 2563,"name": "MH_APP_EXTENSION_SAFE"},{"import": 1346,"src": 2564,"name": "MH_NLIST_OUTOFSYNC_WITH_DYLDINFO"},{"import": 1346,"src": 2565,"name": "FAT_MAGIC"},{"import": 1346,"src": 2566,"name": "FAT_CIGAM"},{"import": 1346,"src": 2567,"name": "FAT_MAGIC_64"},{"import": 1346,"src": 2568,"name": "FAT_CIGAM_64"},{"import": 1346,"src": 2569,"name": "SECTION_TYPE"},{"import": 1346,"src": 2570,"name": "SECTION_ATTRIBUTES"},{"import": 1346,"src": 2571,"name": "S_REGULAR"},{"import": 1346,"src": 2572,"name": "S_ZEROFILL"},{"import": 1346,"src": 2573,"name": "S_CSTRING_LITERALS"},{"import": 1346,"src": 2574,"name": "S_4BYTE_LITERALS"},{"import": 1346,"src": 2575,"name": "S_8BYTE_LITERALS"},{"import": 1346,"src": 2576,"name": "S_LITERAL_POINTERS"},{"import": 1346,"src": 2577,"name": "N_STAB"},{"import": 1346,"src": 2578,"name": "N_PEXT"},{"import": 1346,"src": 2579,"name": "N_TYPE"},{"import": 1346,"src": 2580,"name": "N_EXT"},{"import": 1346,"src": 2581,"name": "N_UNDF"},{"import": 1346,"src": 2582,"name": "N_ABS"},{"import": 1346,"src": 2583,"name": "N_SECT"},{"import": 1346,"src": 2584,"name": "N_PBUD"},{"import": 1346,"src": 2585,"name": "N_INDR"},{"import": 1346,"src": 2586,"name": "N_GSYM"},{"import": 1346,"src": 2587,"name": "N_FNAME"},{"import": 1346,"src": 2588,"name": "N_FUN"},{"import": 1346,"src": 2589,"name": "N_STSYM"},{"import": 1346,"src": 2590,"name": "N_LCSYM"},{"import": 1346,"src": 2591,"name": "N_BNSYM"},{"import": 1346,"src": 2592,"name": "N_AST"},{"import": 1346,"src": 2593,"name": "N_OPT"},{"import": 1346,"src": 2594,"name": "N_RSYM"},{"import": 1346,"src": 2595,"name": "N_SLINE"},{"import": 1346,"src": 2596,"name": "N_ENSYM"},{"import": 1346,"src": 2597,"name": "N_SSYM"},{"import": 1346,"src": 2598,"name": "N_SO"},{"import": 1346,"src": 2599,"name": "N_OSO"},{"import": 1346,"src": 2600,"name": "N_LSYM"},{"import": 1346,"src": 2601,"name": "N_BINCL"},{"import": 1346,"src": 2602,"name": "N_SOL"},{"import": 1346,"src": 2603,"name": "N_PARAMS"},{"import": 1346,"src": 2604,"name": "N_VERSION"},{"import": 1346,"src": 2605,"name": "N_OLEVEL"},{"import": 1346,"src": 2606,"name": "N_PSYM"},{"import": 1346,"src": 2607,"name": "N_EINCL"},{"import": 1346,"src": 2608,"name": "N_ENTRY"},{"import": 1346,"src": 2609,"name": "N_LBRAC"},{"import": 1346,"src": 2610,"name": "N_EXCL"},{"import": 1346,"src": 2611,"name": "N_RBRAC"},{"import": 1346,"src": 2612,"name": "N_BCOMM"},{"import": 1346,"src": 2613,"name": "N_ECOMM"},{"import": 1346,"src": 2614,"name": "N_ECOML"},{"import": 1346,"src": 2615,"name": "N_LENG"},{"import": 1346,"src": 2616,"name": "S_NON_LAZY_SYMBOL_POINTERS"},{"import": 1346,"src": 2617,"name": "S_LAZY_SYMBOL_POINTERS"},{"import": 1346,"src": 2618,"name": "S_SYMBOL_STUBS"},{"import": 1346,"src": 2619,"name": "S_MOD_INIT_FUNC_POINTERS"},{"import": 1346,"src": 2620,"name": "S_MOD_TERM_FUNC_POINTERS"},{"import": 1346,"src": 2621,"name": "S_COALESCED"},{"import": 1346,"src": 2622,"name": "S_GB_ZEROFILL"},{"import": 1346,"src": 2623,"name": "S_INTERPOSING"},{"import": 1346,"src": 2624,"name": "S_16BYTE_LITERALS"},{"import": 1346,"src": 2625,"name": "S_DTRACE_DOF"},{"import": 1346,"src": 2626,"name": "S_LAZY_DYLIB_SYMBOL_POINTERS"},{"import": 1346,"src": 2627,"name": "S_ATTR_DEBUG"},{"import": 1346,"src": 2628,"name": "S_ATTR_PURE_INSTRUCTIONS"},{"import": 1346,"src": 2629,"name": "S_ATTR_NO_TOC"},{"import": 1346,"src": 2630,"name": "S_ATTR_STRIP_STATIC_SYMS"},{"import": 1346,"src": 2631,"name": "S_ATTR_NO_DEAD_STRIP"},{"import": 1346,"src": 2632,"name": "S_ATTR_LIVE_SUPPORT"},{"import": 1346,"src": 2633,"name": "S_ATTR_SELF_MODIFYING_CODE"},{"import": 1346,"src": 2634,"name": "S_ATTR_SOME_INSTRUCTIONS"},{"import": 1346,"src": 2635,"name": "S_ATTR_EXT_RELOC"},{"import": 1346,"src": 2636,"name": "S_ATTR_LOC_RELOC"},{"import": 1346,"src": 2637,"name": "S_THREAD_LOCAL_REGULAR"},{"import": 1346,"src": 2638,"name": "S_THREAD_LOCAL_ZEROFILL"},{"import": 1346,"src": 2639,"name": "S_THREAD_LOCAL_VARIABLES"},{"import": 1346,"src": 2640,"name": "S_THREAD_LOCAL_VARIABLE_POINTERS"},{"import": 1346,"src": 2641,"name": "S_THREAD_LOCAL_INIT_FUNCTION_POINTERS"},{"import": 1346,"src": 2642,"name": "S_INIT_FUNC_OFFSETS"},{"import": 1346,"src": 2643,"name": "cpu_type_t"},{"import": 1346,"src": 2644,"name": "cpu_subtype_t"},{"import": 1346,"src": 2645,"name": "integer_t"},{"import": 1346,"src": 2646,"name": "vm_prot_t"},{"import": 1346,"src": 2647,"name": "CPU_TYPE_X86_64"},{"import": 1346,"src": 2648,"name": "CPU_TYPE_ARM64"},{"import": 1346,"src": 2649,"name": "CPU_SUBTYPE_X86_64_ALL"},{"import": 1346,"src": 2650,"name": "CPU_SUBTYPE_ARM_ALL"},{"import": 1346,"src": 2651,"name": "VM_PROT_NONE"},{"import": 1346,"src": 2652,"name": "VM_PROT_READ"},{"import": 1346,"src": 2653,"name": "VM_PROT_WRITE"},{"import": 1346,"src": 2654,"name": "VM_PROT_EXECUTE"},{"import": 1346,"src": 2655,"name": "REBASE_TYPE_POINTER"},{"import": 1346,"src": 2656,"name": "REBASE_TYPE_TEXT_ABSOLUTE32"},{"import": 1346,"src": 2657,"name": "REBASE_TYPE_TEXT_PCREL32"},{"import": 1346,"src": 2658,"name": "REBASE_OPCODE_MASK"},{"import": 1346,"src": 2659,"name": "REBASE_IMMEDIATE_MASK"},{"import": 1346,"src": 2660,"name": "REBASE_OPCODE_DONE"},{"import": 1346,"src": 2661,"name": "REBASE_OPCODE_SET_TYPE_IMM"},{"import": 1346,"src": 2662,"name": "REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB"},{"import": 1346,"src": 2663,"name": "REBASE_OPCODE_ADD_ADDR_ULEB"},{"import": 1346,"src": 2664,"name": "REBASE_OPCODE_ADD_ADDR_IMM_SCALED"},{"import": 1346,"src": 2665,"name": "REBASE_OPCODE_DO_REBASE_IMM_TIMES"},{"import": 1346,"src": 2666,"name": "REBASE_OPCODE_DO_REBASE_ULEB_TIMES"},{"import": 1346,"src": 2667,"name": "REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB"},{"import": 1346,"src": 2668,"name": "REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB"},{"import": 1346,"src": 2669,"name": "BIND_TYPE_POINTER"},{"import": 1346,"src": 2670,"name": "BIND_TYPE_TEXT_ABSOLUTE32"},{"import": 1346,"src": 2671,"name": "BIND_TYPE_TEXT_PCREL32"},{"import": 1346,"src": 2672,"name": "BIND_SPECIAL_DYLIB_SELF"},{"import": 1346,"src": 2673,"name": "BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE"},{"import": 1346,"src": 2674,"name": "BIND_SPECIAL_DYLIB_FLAT_LOOKUP"},{"import": 1346,"src": 2675,"name": "BIND_SYMBOL_FLAGS_WEAK_IMPORT"},{"import": 1346,"src": 2676,"name": "BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION"},{"import": 1346,"src": 2677,"name": "BIND_OPCODE_MASK"},{"import": 1346,"src": 2678,"name": "BIND_IMMEDIATE_MASK"},{"import": 1346,"src": 2679,"name": "BIND_OPCODE_DONE"},{"import": 1346,"src": 2680,"name": "BIND_OPCODE_SET_DYLIB_ORDINAL_IMM"},{"import": 1346,"src": 2681,"name": "BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB"},{"import": 1346,"src": 2682,"name": "BIND_OPCODE_SET_DYLIB_SPECIAL_IMM"},{"import": 1346,"src": 2683,"name": "BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM"},{"import": 1346,"src": 2684,"name": "BIND_OPCODE_SET_TYPE_IMM"},{"import": 1346,"src": 2685,"name": "BIND_OPCODE_SET_ADDEND_SLEB"},{"import": 1346,"src": 2686,"name": "BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB"},{"import": 1346,"src": 2687,"name": "BIND_OPCODE_ADD_ADDR_ULEB"},{"import": 1346,"src": 2688,"name": "BIND_OPCODE_DO_BIND"},{"import": 1346,"src": 2689,"name": "BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB"},{"import": 1346,"src": 2690,"name": "BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED"},{"import": 1346,"src": 2691,"name": "BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB"},{"import": 1346,"src": 2692,"name": "reloc_type_x86_64"},{"import": 1346,"src": 2693,"name": "reloc_type_arm64"},{"import": 1346,"src": 2694,"name": "REFERENCE_FLAG_UNDEFINED_NON_LAZY"},{"import": 1346,"src": 2695,"name": "REFERENCE_FLAG_UNDEFINED_LAZY"},{"import": 1346,"src": 2696,"name": "REFERENCE_FLAG_DEFINED"},{"import": 1346,"src": 2697,"name": "REFERENCE_FLAG_PRIVATE_DEFINED"},{"import": 1346,"src": 2698,"name": "REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY"},{"import": 1346,"src": 2699,"name": "REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY"},{"import": 1346,"src": 2700,"name": "REFERENCED_DYNAMICALLY"},{"import": 1346,"src": 2701,"name": "N_DESC_DISCARDED"},{"import": 1346,"src": 2702,"name": "N_WEAK_REF"},{"import": 1346,"src": 2703,"name": "N_WEAK_DEF"},{"import": 1346,"src": 2704,"name": "N_SYMBOL_RESOLVER"},{"import": 1346,"src": 2705,"name": "EXPORT_SYMBOL_FLAGS_KIND_MASK"},{"import": 1346,"src": 2706,"name": "EXPORT_SYMBOL_FLAGS_KIND_REGULAR"},{"import": 1346,"src": 2707,"name": "EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL"},{"import": 1346,"src": 2708,"name": "EXPORT_SYMBOL_FLAGS_KIND_ABSOLUTE"},{"import": 1346,"src": 2709,"name": "EXPORT_SYMBOL_FLAGS_KIND_WEAK_DEFINITION"},{"import": 1346,"src": 2710,"name": "EXPORT_SYMBOL_FLAGS_REEXPORT"},{"import": 1346,"src": 2711,"name": "EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER"},{"import": 1346,"src": 2712,"name": "INDIRECT_SYMBOL_LOCAL"},{"import": 1346,"src": 2713,"name": "INDIRECT_SYMBOL_ABS"},{"import": 1346,"src": 2714,"name": "CSMAGIC_REQUIREMENT"},{"import": 1346,"src": 2715,"name": "CSMAGIC_REQUIREMENTS"},{"import": 1346,"src": 2716,"name": "CSMAGIC_CODEDIRECTORY"},{"import": 1346,"src": 2717,"name": "CSMAGIC_EMBEDDED_SIGNATURE"},{"import": 1346,"src": 2718,"name": "CSMAGIC_EMBEDDED_SIGNATURE_OLD"},{"import": 1346,"src": 2719,"name": "CSMAGIC_EMBEDDED_ENTITLEMENTS"},{"import": 1346,"src": 2720,"name": "CSMAGIC_DETACHED_SIGNATURE"},{"import": 1346,"src": 2721,"name": "CSMAGIC_BLOBWRAPPER"},{"import": 1346,"src": 2722,"name": "CS_SUPPORTSSCATTER"},{"import": 1346,"src": 2723,"name": "CS_SUPPORTSTEAMID"},{"import": 1346,"src": 2724,"name": "CS_SUPPORTSCODELIMIT64"},{"import": 1346,"src": 2725,"name": "CS_SUPPORTSEXECSEG"},{"import": 1346,"src": 2726,"name": "CSSLOT_CODEDIRECTORY"},{"import": 1346,"src": 2727,"name": "CSSLOT_INFOSLOT"},{"import": 1346,"src": 2728,"name": "CSSLOT_REQUIREMENTS"},{"import": 1346,"src": 2729,"name": "CSSLOT_RESOURCEDIR"},{"import": 1346,"src": 2730,"name": "CSSLOT_APPLICATION"},{"import": 1346,"src": 2731,"name": "CSSLOT_ENTITLEMENTS"},{"import": 1346,"src": 2732,"name": "CSSLOT_ALTERNATE_CODEDIRECTORIES"},{"import": 1346,"src": 2733,"name": "CSSLOT_ALTERNATE_CODEDIRECTORY_MAX"},{"import": 1346,"src": 2734,"name": "CSSLOT_ALTERNATE_CODEDIRECTORY_LIMIT"},{"import": 1346,"src": 2735,"name": "CSSLOT_SIGNATURESLOT"},{"import": 1346,"src": 2736,"name": "CSSLOT_IDENTIFICATIONSLOT"},{"import": 1346,"src": 2737,"name": "CSSLOT_TICKETSLOT"},{"import": 1346,"src": 2738,"name": "CSTYPE_INDEX_REQUIREMENTS"},{"import": 1346,"src": 2739,"name": "CSTYPE_INDEX_ENTITLEMENTS"},{"import": 1346,"src": 2740,"name": "CS_HASHTYPE_SHA1"},{"import": 1346,"src": 2741,"name": "CS_HASHTYPE_SHA256"},{"import": 1346,"src": 2742,"name": "CS_HASHTYPE_SHA256_TRUNCATED"},{"import": 1346,"src": 2743,"name": "CS_HASHTYPE_SHA384"},{"import": 1346,"src": 2744,"name": "CS_SHA1_LEN"},{"import": 1346,"src": 2745,"name": "CS_SHA256_LEN"},{"import": 1346,"src": 2746,"name": "CS_SHA256_TRUNCATED_LEN"},{"import": 1346,"src": 2747,"name": "CS_CDHASH_LEN"},{"import": 1346,"src": 2748,"name": "CS_HASH_MAX_SIZE"},{"import": 1346,"src": 2749,"name": "CS_SIGNER_TYPE_UNKNOWN"},{"import": 1346,"src": 2750,"name": "CS_SIGNER_TYPE_LEGACYVPN"},{"import": 1346,"src": 2751,"name": "CS_SIGNER_TYPE_MAC_APP_STORE"},{"import": 1346,"src": 2752,"name": "CS_ADHOC"},{"import": 1346,"src": 2753,"name": "CS_EXECSEG_MAIN_BINARY"},{"import": 1346,"src": 2754,"name": "CodeDirectory"},{"import": 1346,"src": 2755,"name": "BlobIndex"},{"import": 1346,"src": 2756,"name": "SuperBlob"},{"import": 1346,"src": 2757,"name": "GenericBlob"},{"import": 1346,"src": 2758,"name": "data_in_code_entry"},{"import": 1347,"src": 2759,"name": "e"},{"import": 1347,"src": 2760,"name": "pi"},{"import": 1347,"src": 2761,"name": "phi"},{"import": 1347,"src": 2762,"name": "tau"},{"import": 1347,"src": 2763,"name": "log2e"},{"import": 1347,"src": 2764,"name": "log10e"},{"import": 1347,"src": 2765,"name": "ln2"},{"import": 1347,"src": 2766,"name": "ln10"},{"import": 1347,"src": 2767,"name": "two_sqrtpi"},{"import": 1347,"src": 2768,"name": "sqrt2"},{"import": 1347,"src": 2769,"name": "sqrt1_2"},{"import": 1347,"src": 2770,"name": "f128_true_min"},{"import": 1347,"src": 2771,"name": "f128_min"},{"import": 1347,"src": 2772,"name": "f128_max"},{"import": 1347,"src": 2773,"name": "f128_epsilon"},{"import": 1347,"src": 2774,"name": "f128_toint"},{"import": 1347,"src": 2775,"name": "f64_true_min"},{"import": 1347,"src": 2776,"name": "f64_min"},{"import": 1347,"src": 2777,"name": "f64_max"},{"import": 1347,"src": 2778,"name": "f64_epsilon"},{"import": 1347,"src": 2779,"name": "f64_toint"},{"import": 1347,"src": 2780,"name": "f32_true_min"},{"import": 1347,"src": 2781,"name": "f32_min"},{"import": 1347,"src": 2782,"name": "f32_max"},{"import": 1347,"src": 2783,"name": "f32_epsilon"},{"import": 1347,"src": 2784,"name": "f32_toint"},{"import": 1347,"src": 2785,"name": "f16_true_min"},{"import": 1347,"src": 2786,"name": "f16_min"},{"import": 1347,"src": 2787,"name": "f16_max"},{"import": 1347,"src": 2788,"name": "f16_epsilon"},{"import": 1347,"src": 2789,"name": "f16_toint"},{"import": 1347,"src": 2790,"name": "epsilon"},{"import": 1347,"src": 2791,"name": "nan_u16"},{"import": 1347,"src": 2792,"name": "nan_f16"},{"import": 1347,"src": 2793,"name": "qnan_u16"},{"import": 1347,"src": 2794,"name": "qnan_f16"},{"import": 1347,"src": 2795,"name": "inf_u16"},{"import": 1347,"src": 2796,"name": "inf_f16"},{"import": 1347,"src": 2797,"name": "nan_u32"},{"import": 1347,"src": 2798,"name": "nan_f32"},{"import": 1347,"src": 2799,"name": "qnan_u32"},{"import": 1347,"src": 2800,"name": "qnan_f32"},{"import": 1347,"src": 2801,"name": "inf_u32"},{"import": 1347,"src": 2802,"name": "inf_f32"},{"import": 1347,"src": 2803,"name": "nan_u64"},{"import": 1347,"src": 2804,"name": "nan_f64"},{"import": 1347,"src": 2805,"name": "qnan_u64"},{"import": 1347,"src": 2806,"name": "qnan_f64"},{"import": 1347,"src": 2807,"name": "inf_u64"},{"import": 1347,"src": 2808,"name": "inf_f64"},{"import": 1347,"src": 2809,"name": "nan_u128"},{"import": 1347,"src": 2810,"name": "nan_f128"},{"import": 1347,"src": 2811,"name": "qnan_u128"},{"import": 1347,"src": 2812,"name": "qnan_f128"},{"import": 1347,"src": 2813,"name": "inf_u128"},{"import": 1347,"src": 2814,"name": "inf_f128"},{"import": 1347,"src": 2815,"name": "nan"},{"import": 1347,"src": 2816,"name": "snan"},{"import": 1347,"src": 2817,"name": "inf"},{"import": 1347,"src": 2818,"name": "approxEqAbs"},{"import": 1347,"src": 2819,"name": "approxEqRel"},{"import": 1347,"src": 2820,"name": "approxEq"},{"import": 1347,"src": 2821,"name": "doNotOptimizeAway"},{"import": 1347,"src": 2822,"name": "raiseInvalid"},{"import": 1347,"src": 2823,"name": "raiseUnderflow"},{"import": 1347,"src": 2824,"name": "raiseOverflow"},{"import": 1347,"src": 2825,"name": "raiseInexact"},{"import": 1347,"src": 2826,"name": "raiseDivByZero"},{"import": 1347,"src": 2827,"name": "isNan"},{"import": 1347,"src": 2828,"name": "isSignalNan"},{"import": 1347,"src": 2829,"name": "fabs"},{"import": 1347,"src": 2830,"name": "ceil"},{"import": 1347,"src": 2831,"name": "floor"},{"import": 1347,"src": 2832,"name": "trunc"},{"import": 1347,"src": 2833,"name": "round"},{"import": 1347,"src": 2834,"name": "frexp"},{"import": 1347,"src": 2835,"name": "Frexp"},{"import": 1347,"src": 2836,"name": "modf"},{"import": 1347,"src": 2837,"name": "modf32_result"},{"import": 1347,"src": 2838,"name": "modf64_result"},{"import": 1347,"src": 2839,"name": "copysign"},{"import": 1347,"src": 2840,"name": "isFinite"},{"import": 1347,"src": 2841,"name": "isInf"},{"import": 1347,"src": 2842,"name": "isPositiveInf"},{"import": 1347,"src": 2843,"name": "isNegativeInf"},{"import": 1347,"src": 2844,"name": "isNormal"},{"import": 1347,"src": 2845,"name": "signbit"},{"import": 1347,"src": 2846,"name": "scalbn"},{"import": 1347,"src": 2847,"name": "ldexp"},{"import": 1347,"src": 2848,"name": "pow"},{"import": 1347,"src": 2849,"name": "powi"},{"import": 1347,"src": 2850,"name": "sqrt"},{"import": 1347,"src": 2851,"name": "cbrt"},{"import": 1347,"src": 2852,"name": "acos"},{"import": 1347,"src": 2853,"name": "asin"},{"import": 1347,"src": 2854,"name": "atan"},{"import": 1347,"src": 2855,"name": "atan2"},{"import": 1347,"src": 2856,"name": "hypot"},{"import": 1347,"src": 2857,"name": "exp"},{"import": 1347,"src": 2858,"name": "exp2"},{"import": 1347,"src": 2859,"name": "expm1"},{"import": 1347,"src": 2860,"name": "ilogb"},{"import": 1347,"src": 2861,"name": "ln"},{"import": 1347,"src": 2862,"name": "log"},{"import": 1347,"src": 2863,"name": "log2"},{"import": 1347,"src": 2864,"name": "log10"},{"import": 1347,"src": 2865,"name": "log1p"},{"import": 1347,"src": 2866,"name": "fma"},{"import": 1347,"src": 2867,"name": "asinh"},{"import": 1347,"src": 2868,"name": "acosh"},{"import": 1347,"src": 2869,"name": "atanh"},{"import": 1347,"src": 2870,"name": "sinh"},{"import": 1347,"src": 2871,"name": "cosh"},{"import": 1347,"src": 2872,"name": "tanh"},{"import": 1347,"src": 2873,"name": "cos"},{"import": 1347,"src": 2874,"name": "sin"},{"import": 1347,"src": 2875,"name": "tan"},{"import": 1347,"src": 2876,"name": "complex"},{"import": 1347,"src": 2877,"name": "Complex"},{"import": 1347,"src": 2878,"name": "big"},{"import": 1347,"src": 2879,"name": "floatMantissaBits"},{"import": 1347,"src": 2880,"name": "floatExponentBits"},{"import": 1347,"src": 370,"name": "Min","kind": "const","type": 621,"value": 694},{"import": 1347,"src": 33,"name": "min","kind": "const","type": 1773,"value": 810},{"import": 1347,"src": 2881,"name": "min3"},{"import": 1347,"src": 158,"name": "max","kind": "const","type": 708,"value": 716},{"import": 1347,"src": 392,"name": "max3","kind": "const","type": 709,"value": 717},{"import": 1347,"src": 2882,"name": "clamp"},{"import": 1347,"src": 288,"name": "mul","kind": "const","type": 1774,"value": 811},{"import": 1347,"src": 236,"name": "add","kind": "const","type": 1775,"value": 812},{"import": 1347,"src": 299,"name": "sub","kind": "const","type": 1776,"value": 813},{"import": 1347,"src": 2883,"name": "negate"},{"import": 1347,"src": 2884,"name": "shlExact"},{"import": 1347,"src": 2885,"name": "shl"},{"import": 1347,"src": 2886,"name": "shr"},{"import": 1347,"src": 2887,"name": "rotr"},{"import": 1347,"src": 2888,"name": "rotl"},{"import": 1347,"src": 361,"name": "Log2Int","kind": "const","type": 600,"value": 685},{"import": 1347,"src": 2889,"name": "Log2IntCeil"},{"import": 1347,"src": 2890,"name": "IntFittingRange"},{"import": 1347,"src": 2891,"name": "absInt"},{"import": 1347,"src": 2892,"name": "absFloat"},{"import": 1347,"src": 2893,"name": "divTrunc"},{"import": 1347,"src": 2894,"name": "divFloor"},{"import": 1347,"src": 2895,"name": "divCeil"},{"import": 1347,"src": 2896,"name": "divExact"},{"import": 1347,"src": 2897,"name": "mod"},{"import": 1347,"src": 2898,"name": "rem"},{"import": 1347,"src": 203,"name": "absCast","kind": "const","type": 1777,"value": 814},{"import": 1347,"src": 2899,"name": "negateCast"},{"import": 1347,"src": 40,"name": "cast","kind": "const","type": 1778,"value": 815},{"import": 1347,"src": 2900,"name": "AlignCastError"},{"import": 1347,"src": 2901,"name": "alignCast"},{"import": 1347,"src": 160,"name": "isPowerOfTwo","kind": "const","type": 737,"value": 729},{"import": 1347,"src": 2902,"name": "floorPowerOfTwo"},{"import": 1347,"src": 312,"name": "ceilPowerOfTwoPromote","kind": "const","type": 1779,"value": 816},{"import": 1347,"src": 260,"name": "ceilPowerOfTwo","kind": "const","type": 1780,"value": 817},{"import": 1347,"src": 2903,"name": "ceilPowerOfTwoAssert"},{"import": 1347,"src": 2904,"name": "log2_int"},{"import": 1347,"src": 2905,"name": "log2_int_ceil"},{"import": 1347,"src": 2906,"name": "lossyCast"},{"import": 1347,"src": 389,"name": "maxInt","kind": "const","type": 689,"value": 713},{"import": 1347,"src": 402,"name": "minInt","kind": "const","type": 743,"value": 732},{"import": 1347,"src": 349,"name": "mulWide","kind": "const","type": 1781,"value": 818},{"import": 1347,"src": 2907,"name": "Order"},{"import": 1347,"src": 2908,"name": "order"},{"import": 1347,"src": 2909,"name": "CompareOperator"},{"import": 1347,"src": 2910,"name": "compare"},{"import": 1347,"src": 2911,"name": "boolMask"},{"import": 1347,"src": 2912,"name": "comptimeMod"},{"import": 1347,"src": 2913,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1347,"src": 2914,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1347,"src": 2915,"name": "mem"},{"import": 1347,"src": 2916,"name": "testing"},{"import": 1347,"src": 2917,"name": "testOverflow"},{"import": 1347,"src": 2918,"name": "testAbsInt"},{"import": 1347,"src": 2919,"name": "testAbsFloat"},{"import": 1347,"src": 2920,"name": "testDivTrunc"},{"import": 1347,"src": 2921,"name": "testDivFloor"},{"import": 1347,"src": 2922,"name": "testDivCeil"},{"import": 1347,"src": 2923,"name": "testDivExact"},{"import": 1347,"src": 2924,"name": "testMod"},{"import": 1347,"src": 2925,"name": "testRem"},{"import": 1347,"src": 2926,"name": "testFloorPowerOfTwo"},{"import": 1347,"src": 2927,"name": "testCeilPowerOfTwoPromote"},{"import": 1347,"src": 2928,"name": "testCeilPowerOfTwo"},{"import": 1348,"src": 2929,"name": "trait","kind": "const","type": 592,"value": 1640},{"import": 1348,"src": 2930,"name": "TrailerFlags"},{"import": 1348,"src": 2931,"name": "tagName"},{"import": 1348,"src": 2932,"name": "stringToEnum"},{"import": 1348,"src": 2933,"name": "bitCount"},{"import": 1348,"src": 2934,"name": "alignment"},{"import": 1348,"src": 385,"name": "Child","kind": "const","type": 671,"value": 709},{"import": 1348,"src": 390,"name": "Elem","kind": "const","type": 692,"value": 714},{"import": 1348,"src": 404,"name": "sentinel","kind": "const","type": 776,"value": 735},{"import": 1348,"src": 391,"name": "Sentinel","kind": "const","type": 694,"value": 715},{"import": 1348,"src": 142,"name": "assumeSentinel","kind": "const","type": 1782,"value": 819},{"import": 1348,"src": 2935,"name": "containerLayout"},{"import": 1348,"src": 2936,"name": "declarations"},{"import": 1348,"src": 2937,"name": "declarationInfo"},{"import": 1348,"src": 2938,"name": "fields","kind": "const","type": 1783,"value": 820},{"import": 1348,"src": 2939,"name": "fieldInfo"},{"import": 1348,"src": 2940,"name": "fieldNames"},{"import": 1348,"src": 2941,"name": "FieldEnum"},{"import": 1348,"src": 2942,"name": "TagType"},{"import": 1348,"src": 378,"name": "Tag","kind": "const","type": 659,"value": 702},{"import": 1348,"src": 2943,"name": "activeTag"},{"import": 1348,"src": 2944,"name": "TagPayload"},{"import": 1348,"src": 213,"name": "eql","kind": "const","type": 1784,"value": 821},{"import": 1348,"src": 2945,"name": "IntToEnumError"},{"import": 1348,"src": 2946,"name": "intToEnum"},{"import": 1348,"src": 2947,"name": "fieldIndex"},{"import": 1348,"src": 2948,"name": "refAllDecls"},{"import": 1348,"src": 2949,"name": "declList"},{"import": 1348,"src": 2950,"name": "IntType"},{"import": 1348,"src": 360,"name": "Int","kind": "const","type": 595,"value": 684},{"import": 1348,"src": 2951,"name": "Float"},{"import": 1348,"src": 2952,"name": "Vector"},{"import": 1348,"src": 2953,"name": "ArgsTuple"},{"import": 1348,"src": 2954,"name": "Tuple"},{"import": 1348,"src": 2955,"name": "globalOption"},{"import": 1348,"src": 2956,"name": "isError"},{"import": 1348,"src": 2957,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1348,"src": 2958,"name": "debug"},{"import": 1348,"src": 2959,"name": "mem"},{"import": 1348,"src": 2960,"name": "math"},{"import": 1348,"src": 2961,"name": "testing"},{"import": 1348,"src": 2962,"name": "root"},{"import": 1348,"src": 2963,"name": "TypeInfo","kind": "const","type": 592,"value": 661},{"import": 1348,"src": 2964,"name": "testSentinel"},{"import": 1348,"src": 2965,"name": "expectEqualEnum"},{"import": 1348,"src": 2966,"name": "TagPayloadType"},{"import": 1348,"src": 2967,"name": "TupleTester"},{"import": 1349,"src": 2968,"name": "darwin"},{"import": 1349,"src": 2969,"name": "dragonfly"},{"import": 1349,"src": 2970,"name": "freebsd"},{"import": 1349,"src": 2971,"name": "haiku"},{"import": 1349,"src": 2972,"name": "netbsd"},{"import": 1349,"src": 2973,"name": "openbsd"},{"import": 1349,"src": 2974,"name": "solaris"},{"import": 1349,"src": 2975,"name": "linux"},{"import": 1349,"src": 2976,"name": "plan9"},{"import": 1349,"src": 2977,"name": "uefi"},{"import": 1349,"src": 2978,"name": "wasi"},{"import": 1349,"src": 2979,"name": "windows","kind": "const","type": 592,"value": 1578},{"import": 1349,"src": 2980,"name": "system","kind": "const","type": 592,"value": 1337},{"import": 1349,"src": 2981,"name": "AF"},{"import": 1349,"src": 2982,"name": "AF_SUN"},{"import": 1349,"src": 2983,"name": "ARCH"},{"import": 1349,"src": 2984,"name": "AT"},{"import": 1349,"src": 2985,"name": "AT_SUN"},{"import": 1349,"src": 2986,"name": "CLOCK"},{"import": 1349,"src": 2987,"name": "CPU_COUNT"},{"import": 1349,"src": 2988,"name": "CTL"},{"import": 1349,"src": 2989,"name": "DT"},{"import": 1349,"src": 2990,"name": "E"},{"import": 1349,"src": 2991,"name": "Elf_Symndx"},{"import": 1349,"src": 2992,"name": "F"},{"import": 1349,"src": 2993,"name": "FD_CLOEXEC"},{"import": 1349,"src": 2994,"name": "Flock"},{"import": 1349,"src": 2995,"name": "HOST_NAME_MAX"},{"import": 1349,"src": 2996,"name": "IFNAMESIZE"},{"import": 1349,"src": 2997,"name": "IOV_MAX"},{"import": 1349,"src": 2998,"name": "IPPROTO"},{"import": 1349,"src": 2999,"name": "KERN"},{"import": 1349,"src": 3000,"name": "Kevent"},{"import": 1349,"src": 3001,"name": "LOCK"},{"import": 1349,"src": 3002,"name": "MADV"},{"import": 1349,"src": 3003,"name": "MAP"},{"import": 1349,"src": 3004,"name": "MAX_ADDR_LEN"},{"import": 1349,"src": 3005,"name": "MMAP2_UNIT"},{"import": 1349,"src": 3006,"name": "MSG"},{"import": 1349,"src": 3007,"name": "NAME_MAX"},{"import": 1349,"src": 3008,"name": "O"},{"import": 1349,"src": 3009,"name": "PATH_MAX"},{"import": 1349,"src": 3010,"name": "POLL"},{"import": 1349,"src": 3011,"name": "POSIX_FADV"},{"import": 1349,"src": 3012,"name": "PR"},{"import": 1349,"src": 3013,"name": "PROT"},{"import": 1349,"src": 3014,"name": "REG"},{"import": 1349,"src": 3015,"name": "RIGHT"},{"import": 1349,"src": 3016,"name": "RLIM"},{"import": 1349,"src": 3017,"name": "RR"},{"import": 1349,"src": 3018,"name": "S"},{"import": 1349,"src": 3019,"name": "SA"},{"import": 1349,"src": 3020,"name": "SC"},{"import": 1349,"src": 3021,"name": "_SC"},{"import": 1349,"src": 3022,"name": "SEEK"},{"import": 1349,"src": 3023,"name": "SHUT"},{"import": 1349,"src": 3024,"name": "SIG"},{"import": 1349,"src": 3025,"name": "SIOCGIFINDEX"},{"import": 1349,"src": 3026,"name": "SO"},{"import": 1349,"src": 3027,"name": "SOCK"},{"import": 1349,"src": 3028,"name": "SOL"},{"import": 1349,"src": 3029,"name": "STDERR_FILENO"},{"import": 1349,"src": 3030,"name": "STDIN_FILENO"},{"import": 1349,"src": 3031,"name": "STDOUT_FILENO"},{"import": 1349,"src": 3032,"name": "SYS"},{"import": 1349,"src": 3033,"name": "Sigaction"},{"import": 1349,"src": 3034,"name": "Stat"},{"import": 1349,"src": 3035,"name": "TCSA"},{"import": 1349,"src": 3036,"name": "TCP"},{"import": 1349,"src": 3037,"name": "VDSO"},{"import": 1349,"src": 3038,"name": "W"},{"import": 1349,"src": 3039,"name": "addrinfo"},{"import": 1349,"src": 3040,"name": "blkcnt_t"},{"import": 1349,"src": 3041,"name": "blksize_t"},{"import": 1349,"src": 3042,"name": "clock_t"},{"import": 1349,"src": 3043,"name": "cpu_set_t"},{"import": 1349,"src": 3044,"name": "dev_t"},{"import": 1349,"src": 3045,"name": "dl_phdr_info"},{"import": 1349,"src": 3046,"name": "empty_sigset"},{"import": 1349,"src": 3047,"name": "fd_t","kind": "const","type": 592,"value": 840},{"import": 1349,"src": 3048,"name": "fdflags_t"},{"import": 1349,"src": 3049,"name": "fdstat_t"},{"import": 1349,"src": 3050,"name": "gid_t"},{"import": 1349,"src": 3051,"name": "ifreq"},{"import": 1349,"src": 3052,"name": "ino_t"},{"import": 1349,"src": 3053,"name": "lookupflags_t"},{"import": 1349,"src": 3054,"name": "mcontext_t"},{"import": 1349,"src": 3055,"name": "mode_t","kind": "const","type": 592,"value": 1748},{"import": 1349,"src": 3056,"name": "msghdr"},{"import": 1349,"src": 3057,"name": "msghdr_const"},{"import": 1349,"src": 3058,"name": "nfds_t"},{"import": 1349,"src": 3059,"name": "nlink_t"},{"import": 1349,"src": 3060,"name": "off_t"},{"import": 1349,"src": 3061,"name": "oflags_t"},{"import": 1349,"src": 3062,"name": "pid_t"},{"import": 1349,"src": 3063,"name": "pollfd"},{"import": 1349,"src": 3064,"name": "port_t"},{"import": 1349,"src": 3065,"name": "port_event"},{"import": 1349,"src": 3066,"name": "port_notify"},{"import": 1349,"src": 3067,"name": "file_obj"},{"import": 1349,"src": 3068,"name": "rights_t"},{"import": 1349,"src": 3069,"name": "rlim_t"},{"import": 1349,"src": 3070,"name": "rlimit"},{"import": 1349,"src": 3071,"name": "rlimit_resource"},{"import": 1349,"src": 3072,"name": "rusage"},{"import": 1349,"src": 3073,"name": "sa_family_t"},{"import": 1349,"src": 3074,"name": "siginfo_t"},{"import": 1349,"src": 3075,"name": "sigset_t"},{"import": 1349,"src": 3076,"name": "sockaddr"},{"import": 1349,"src": 3077,"name": "socklen_t"},{"import": 1349,"src": 3078,"name": "stack_t"},{"import": 1349,"src": 3079,"name": "termios"},{"import": 1349,"src": 3080,"name": "time_t"},{"import": 1349,"src": 3081,"name": "timespec"},{"import": 1349,"src": 3082,"name": "timestamp_t"},{"import": 1349,"src": 3083,"name": "timeval"},{"import": 1349,"src": 3084,"name": "timezone"},{"import": 1349,"src": 3085,"name": "ucontext_t"},{"import": 1349,"src": 3086,"name": "uid_t"},{"import": 1349,"src": 3087,"name": "user_desc"},{"import": 1349,"src": 3088,"name": "utsname"},{"import": 1349,"src": 3089,"name": "F_OK"},{"import": 1349,"src": 3090,"name": "R_OK"},{"import": 1349,"src": 3091,"name": "W_OK"},{"import": 1349,"src": 3092,"name": "X_OK"},{"import": 1349,"src": 3093,"name": "iovec","kind": "const","type": 592,"value": 1785},{"import": 1349,"src": 3094,"name": "iovec_const","kind": "const","type": 592,"value": 1786},{"import": 1349,"src": 3095,"name": "LOG"},{"import": 1349,"src": 3096,"name": "socket_t"},{"import": 1349,"src": 3097,"name": "environ"},{"import": 1349,"src": 3098,"name": "argv"},{"import": 1349,"src": 3099,"name": "errno"},{"import": 1349,"src": 3100,"name": "close"},{"import": 1349,"src": 3101,"name": "FChmodError"},{"import": 1349,"src": 3102,"name": "fchmod"},{"import": 1349,"src": 3103,"name": "FChownError"},{"import": 1349,"src": 3104,"name": "fchown"},{"import": 1349,"src": 3105,"name": "GetRandomError"},{"import": 1349,"src": 3106,"name": "getrandom"},{"import": 1349,"src": 14,"name": "abort","kind": "const","type": 14,"value": 14},{"import": 1349,"src": 3107,"name": "RaiseError"},{"import": 1349,"src": 3108,"name": "raise"},{"import": 1349,"src": 3109,"name": "KillError"},{"import": 1349,"src": 3110,"name": "kill"},{"import": 1349,"src": 3111,"name": "exit"},{"import": 1349,"src": 3112,"name": "ReadError","kind": "const","type": 592,"value": 644},{"import": 1349,"src": 3113,"name": "read"},{"import": 1349,"src": 3114,"name": "readv"},{"import": 1349,"src": 3115,"name": "PReadError","kind": "const","type": 592,"value": 1787},{"import": 1349,"src": 3116,"name": "pread"},{"import": 1349,"src": 3117,"name": "TruncateError"},{"import": 1349,"src": 3118,"name": "ftruncate"},{"import": 1349,"src": 3119,"name": "preadv"},{"import": 1349,"src": 3120,"name": "WriteError","kind": "const","type": 592,"value": 608},{"import": 1349,"src": 3121,"name": "write"},{"import": 1349,"src": 3122,"name": "writev"},{"import": 1349,"src": 3123,"name": "PWriteError","kind": "const","type": 592,"value": 1788},{"import": 1349,"src": 3124,"name": "pwrite"},{"import": 1349,"src": 3125,"name": "pwritev"},{"import": 1349,"src": 3126,"name": "OpenError","kind": "const","type": 592,"value": 1789},{"import": 1349,"src": 3127,"name": "open"},{"import": 1349,"src": 3128,"name": "openC"},{"import": 1349,"src": 3129,"name": "openZ"},{"import": 1349,"src": 3130,"name": "openW"},{"import": 1349,"src": 3131,"name": "openat"},{"import": 1349,"src": 3132,"name": "openatWasi"},{"import": 1349,"src": 3133,"name": "openatC"},{"import": 1349,"src": 3134,"name": "openatZ"},{"import": 1349,"src": 3135,"name": "openatW"},{"import": 1349,"src": 3136,"name": "dup"},{"import": 1349,"src": 3137,"name": "dup2"},{"import": 1349,"src": 3138,"name": "ExecveError"},{"import": 1349,"src": 3139,"name": "execveC"},{"import": 1349,"src": 3140,"name": "execveZ"},{"import": 1349,"src": 3141,"name": "execvpeC"},{"import": 1349,"src": 3142,"name": "Arg0Expand"},{"import": 1349,"src": 3143,"name": "execvpeZ_expandArg0"},{"import": 1349,"src": 3144,"name": "execvpeZ"},{"import": 1349,"src": 3145,"name": "getenv"},{"import": 1349,"src": 3146,"name": "getenvC"},{"import": 1349,"src": 3147,"name": "getenvZ"},{"import": 1349,"src": 285,"name": "getenvW","kind": "const","type": 465,"value": 503},{"import": 1349,"src": 3148,"name": "GetCwdError","kind": "const","type": 592,"value": 1463},{"import": 1349,"src": 125,"name": "getcwd","kind": "const","type": 191,"value": 199},{"import": 1349,"src": 3149,"name": "SymLinkError"},{"import": 1349,"src": 3150,"name": "symlink"},{"import": 1349,"src": 3151,"name": "symlinkC"},{"import": 1349,"src": 3152,"name": "symlinkZ"},{"import": 1349,"src": 3153,"name": "symlinkat"},{"import": 1349,"src": 3154,"name": "symlinkatC"},{"import": 1349,"src": 3155,"name": "symlinkatWasi"},{"import": 1349,"src": 3156,"name": "symlinkatZ"},{"import": 1349,"src": 3157,"name": "LinkError"},{"import": 1349,"src": 3158,"name": "linkZ"},{"import": 1349,"src": 3159,"name": "link"},{"import": 1349,"src": 3160,"name": "LinkatError"},{"import": 1349,"src": 3161,"name": "linkatZ"},{"import": 1349,"src": 3162,"name": "linkat"},{"import": 1349,"src": 3163,"name": "UnlinkError"},{"import": 1349,"src": 3164,"name": "unlink"},{"import": 1349,"src": 3165,"name": "unlinkC"},{"import": 1349,"src": 3166,"name": "unlinkZ"},{"import": 1349,"src": 3167,"name": "unlinkW"},{"import": 1349,"src": 3168,"name": "UnlinkatError"},{"import": 1349,"src": 3169,"name": "unlinkat"},{"import": 1349,"src": 3170,"name": "unlinkatC"},{"import": 1349,"src": 3171,"name": "unlinkatWasi"},{"import": 1349,"src": 3172,"name": "unlinkatZ"},{"import": 1349,"src": 3173,"name": "unlinkatW"},{"import": 1349,"src": 3174,"name": "RenameError"},{"import": 1349,"src": 3175,"name": "rename"},{"import": 1349,"src": 3176,"name": "renameC"},{"import": 1349,"src": 3177,"name": "renameZ"},{"import": 1349,"src": 3178,"name": "renameW"},{"import": 1349,"src": 3179,"name": "renameat"},{"import": 1349,"src": 3180,"name": "renameatWasi"},{"import": 1349,"src": 3181,"name": "renameatZ"},{"import": 1349,"src": 3182,"name": "renameatW"},{"import": 1349,"src": 3183,"name": "mkdirat"},{"import": 1349,"src": 3184,"name": "mkdiratC"},{"import": 1349,"src": 3185,"name": "mkdiratWasi"},{"import": 1349,"src": 3186,"name": "mkdiratZ"},{"import": 1349,"src": 3187,"name": "mkdiratW"},{"import": 1349,"src": 3188,"name": "MakeDirError"},{"import": 1349,"src": 3189,"name": "mkdir"},{"import": 1349,"src": 3190,"name": "mkdirZ"},{"import": 1349,"src": 3191,"name": "mkdirW"},{"import": 1349,"src": 3192,"name": "DeleteDirError"},{"import": 1349,"src": 3193,"name": "rmdir"},{"import": 1349,"src": 3194,"name": "rmdirC"},{"import": 1349,"src": 3195,"name": "rmdirZ"},{"import": 1349,"src": 3196,"name": "rmdirW"},{"import": 1349,"src": 3197,"name": "ChangeCurDirError"},{"import": 1349,"src": 3198,"name": "chdir"},{"import": 1349,"src": 3199,"name": "chdirC"},{"import": 1349,"src": 3200,"name": "chdirZ"},{"import": 1349,"src": 3201,"name": "chdirW"},{"import": 1349,"src": 3202,"name": "FchdirError"},{"import": 1349,"src": 3203,"name": "fchdir"},{"import": 1349,"src": 3204,"name": "ReadLinkError"},{"import": 1349,"src": 3205,"name": "readlink"},{"import": 1349,"src": 3206,"name": "readlinkC"},{"import": 1349,"src": 3207,"name": "readlinkW"},{"import": 1349,"src": 3208,"name": "readlinkZ"},{"import": 1349,"src": 3209,"name": "readlinkat"},{"import": 1349,"src": 3210,"name": "readlinkatC"},{"import": 1349,"src": 3211,"name": "readlinkatWasi"},{"import": 1349,"src": 3212,"name": "readlinkatW"},{"import": 1349,"src": 3213,"name": "readlinkatZ"},{"import": 1349,"src": 3214,"name": "SetEidError"},{"import": 1349,"src": 3215,"name": "SetIdError"},{"import": 1349,"src": 3216,"name": "setuid"},{"import": 1349,"src": 3217,"name": "seteuid"},{"import": 1349,"src": 3218,"name": "setreuid"},{"import": 1349,"src": 3219,"name": "setgid"},{"import": 1349,"src": 3220,"name": "setegid"},{"import": 1349,"src": 3221,"name": "setregid"},{"import": 1349,"src": 287,"name": "isatty","kind": "const","type": 466,"value": 505},{"import": 1349,"src": 286,"name": "isCygwinPty","kind": "const","type": 466,"value": 504},{"import": 1349,"src": 3222,"name": "SocketError"},{"import": 1349,"src": 3223,"name": "socket"},{"import": 1349,"src": 3224,"name": "ShutdownError"},{"import": 1349,"src": 3225,"name": "ShutdownHow"},{"import": 1349,"src": 3226,"name": "shutdown"},{"import": 1349,"src": 3227,"name": "closeSocket"},{"import": 1349,"src": 3228,"name": "BindError"},{"import": 1349,"src": 3229,"name": "bind"},{"import": 1349,"src": 3230,"name": "ListenError"},{"import": 1349,"src": 3231,"name": "listen"},{"import": 1349,"src": 3232,"name": "AcceptError"},{"import": 1349,"src": 3233,"name": "accept"},{"import": 1349,"src": 3234,"name": "EpollCreateError"},{"import": 1349,"src": 3235,"name": "epoll_create1"},{"import": 1349,"src": 3236,"name": "EpollCtlError"},{"import": 1349,"src": 3237,"name": "epoll_ctl"},{"import": 1349,"src": 3238,"name": "epoll_wait"},{"import": 1349,"src": 3239,"name": "EventFdError"},{"import": 1349,"src": 3240,"name": "eventfd"},{"import": 1349,"src": 3241,"name": "GetSockNameError"},{"import": 1349,"src": 3242,"name": "getsockname"},{"import": 1349,"src": 3243,"name": "getpeername"},{"import": 1349,"src": 3244,"name": "ConnectError"},{"import": 1349,"src": 3245,"name": "connect"},{"import": 1349,"src": 3246,"name": "getsockoptError"},{"import": 1349,"src": 3247,"name": "WaitPidResult"},{"import": 1349,"src": 3248,"name": "waitpid"},{"import": 1349,"src": 3249,"name": "FStatError","kind": "const","type": 592,"value": 1790},{"import": 1349,"src": 3250,"name": "fstat"},{"import": 1349,"src": 3251,"name": "FStatAtError"},{"import": 1349,"src": 3252,"name": "fstatat"},{"import": 1349,"src": 3253,"name": "fstatatC"},{"import": 1349,"src": 3254,"name": "fstatatWasi"},{"import": 1349,"src": 3255,"name": "fstatatZ"},{"import": 1349,"src": 3256,"name": "KQueueError"},{"import": 1349,"src": 3257,"name": "kqueue"},{"import": 1349,"src": 3258,"name": "KEventError"},{"import": 1349,"src": 3259,"name": "kevent"},{"import": 1349,"src": 3260,"name": "INotifyInitError"},{"import": 1349,"src": 3261,"name": "inotify_init1"},{"import": 1349,"src": 3262,"name": "INotifyAddWatchError"},{"import": 1349,"src": 3263,"name": "inotify_add_watch"},{"import": 1349,"src": 3264,"name": "inotify_add_watchC"},{"import": 1349,"src": 3265,"name": "inotify_add_watchZ"},{"import": 1349,"src": 3266,"name": "inotify_rm_watch"},{"import": 1349,"src": 3267,"name": "MProtectError"},{"import": 1349,"src": 3268,"name": "mprotect"},{"import": 1349,"src": 3269,"name": "ForkError"},{"import": 1349,"src": 3270,"name": "fork"},{"import": 1349,"src": 3271,"name": "MMapError"},{"import": 1349,"src": 3272,"name": "mmap"},{"import": 1349,"src": 3273,"name": "munmap"},{"import": 1349,"src": 3274,"name": "AccessError","kind": "const","type": 592,"value": 1791},{"import": 1349,"src": 3275,"name": "access"},{"import": 1349,"src": 3276,"name": "accessC"},{"import": 1349,"src": 3277,"name": "accessZ"},{"import": 1349,"src": 3278,"name": "accessW"},{"import": 1349,"src": 3279,"name": "faccessat"},{"import": 1349,"src": 3280,"name": "faccessatZ"},{"import": 1349,"src": 3281,"name": "faccessatW"},{"import": 1349,"src": 3282,"name": "PipeError"},{"import": 1349,"src": 3283,"name": "pipe"},{"import": 1349,"src": 3284,"name": "pipe2"},{"import": 1349,"src": 3285,"name": "SysCtlError"},{"import": 1349,"src": 3286,"name": "sysctl"},{"import": 1349,"src": 3287,"name": "sysctlbynameC"},{"import": 1349,"src": 3288,"name": "sysctlbynameZ"},{"import": 1349,"src": 3289,"name": "gettimeofday"},{"import": 1349,"src": 3290,"name": "SeekError","kind": "const","type": 592,"value": 1236},{"import": 1349,"src": 230,"name": "lseek_SET","kind": "const","type": 380,"value": 399},{"import": 1349,"src": 3291,"name": "lseek_CUR"},{"import": 1349,"src": 3292,"name": "lseek_END"},{"import": 1349,"src": 231,"name": "lseek_CUR_get","kind": "const","type": 381,"value": 400},{"import": 1349,"src": 3293,"name": "FcntlError"},{"import": 1349,"src": 3294,"name": "fcntl"},{"import": 1349,"src": 3295,"name": "FlockError","kind": "const","type": 592,"value": 1792},{"import": 1349,"src": 3296,"name": "flock"},{"import": 1349,"src": 3297,"name": "RealPathError"},{"import": 1349,"src": 3298,"name": "realpath"},{"import": 1349,"src": 3299,"name": "realpathC"},{"import": 1349,"src": 3300,"name": "realpathZ"},{"import": 1349,"src": 3301,"name": "realpathW"},{"import": 1349,"src": 3302,"name": "getFdPath"},{"import": 1349,"src": 3303,"name": "nanosleep"},{"import": 1349,"src": 3304,"name": "dl_iterate_phdr"},{"import": 1349,"src": 3305,"name": "ClockGetTimeError"},{"import": 1349,"src": 3306,"name": "clock_gettime"},{"import": 1349,"src": 3307,"name": "clock_getres"},{"import": 1349,"src": 3308,"name": "SchedGetAffinityError"},{"import": 1349,"src": 3309,"name": "sched_getaffinity"},{"import": 1349,"src": 3310,"name": "toPosixPath"},{"import": 1349,"src": 3311,"name": "unexpected_error_tracing","kind": "const","type": 604,"value": "false"},{"import": 1349,"src": 3312,"name": "UnexpectedError","kind": "const","type": 592,"value": 1105},{"import": 1349,"src": 3313,"name": "unexpectedErrno"},{"import": 1349,"src": 3314,"name": "SigaltstackError"},{"import": 1349,"src": 3315,"name": "sigaltstack"},{"import": 1349,"src": 3316,"name": "sigaction"},{"import": 1349,"src": 3317,"name": "FutimensError"},{"import": 1349,"src": 3318,"name": "futimens"},{"import": 1349,"src": 3319,"name": "GetHostNameError"},{"import": 1349,"src": 3320,"name": "gethostname"},{"import": 1349,"src": 3321,"name": "uname"},{"import": 1349,"src": 3322,"name": "res_mkquery"},{"import": 1349,"src": 3323,"name": "SendError"},{"import": 1349,"src": 3324,"name": "SendMsgError"},{"import": 1349,"src": 3325,"name": "sendmsg"},{"import": 1349,"src": 3326,"name": "SendToError"},{"import": 1349,"src": 3327,"name": "sendto"},{"import": 1349,"src": 3328,"name": "send"},{"import": 1349,"src": 3329,"name": "SendFileError"},{"import": 1349,"src": 3330,"name": "sendfile"},{"import": 1349,"src": 3331,"name": "CopyFileRangeError"},{"import": 1349,"src": 3332,"name": "copy_file_range"},{"import": 1349,"src": 3333,"name": "PollError"},{"import": 1349,"src": 3334,"name": "poll"},{"import": 1349,"src": 3335,"name": "PPollError"},{"import": 1349,"src": 3336,"name": "ppoll"},{"import": 1349,"src": 3337,"name": "RecvFromError"},{"import": 1349,"src": 3338,"name": "recv"},{"import": 1349,"src": 3339,"name": "recvfrom"},{"import": 1349,"src": 3340,"name": "DnExpandError"},{"import": 1349,"src": 3341,"name": "dn_expand"},{"import": 1349,"src": 3342,"name": "SchedYieldError","kind": "const","type": 592,"value": 1622},{"import": 1349,"src": 319,"name": "sched_yield","kind": "const","type": 551,"value": 604},{"import": 1349,"src": 3343,"name": "SetSockOptError"},{"import": 1349,"src": 3344,"name": "setsockopt"},{"import": 1349,"src": 3345,"name": "MemFdCreateError"},{"import": 1349,"src": 3346,"name": "memfd_createC"},{"import": 1349,"src": 3347,"name": "memfd_createZ"},{"import": 1349,"src": 3348,"name": "MFD_NAME_PREFIX"},{"import": 1349,"src": 3349,"name": "MFD_MAX_NAME_LEN"},{"import": 1349,"src": 3350,"name": "memfd_create"},{"import": 1349,"src": 3351,"name": "getrusage"},{"import": 1349,"src": 3352,"name": "TermiosGetError"},{"import": 1349,"src": 3353,"name": "tcgetattr"},{"import": 1349,"src": 3354,"name": "TermiosSetError"},{"import": 1349,"src": 3355,"name": "tcsetattr"},{"import": 1349,"src": 3356,"name": "IoCtl_SIOCGIFINDEX_Error"},{"import": 1349,"src": 3357,"name": "ioctl_SIOCGIFINDEX"},{"import": 1349,"src": 3358,"name": "signalfd"},{"import": 1349,"src": 3359,"name": "SyncError"},{"import": 1349,"src": 3360,"name": "sync"},{"import": 1349,"src": 3361,"name": "syncfs"},{"import": 1349,"src": 3362,"name": "fsync"},{"import": 1349,"src": 3363,"name": "fdatasync"},{"import": 1349,"src": 3364,"name": "PrctlError"},{"import": 1349,"src": 3365,"name": "prctl"},{"import": 1349,"src": 3366,"name": "GetrlimitError"},{"import": 1349,"src": 3367,"name": "getrlimit"},{"import": 1349,"src": 3368,"name": "SetrlimitError"},{"import": 1349,"src": 3369,"name": "setrlimit"},{"import": 1349,"src": 3370,"name": "MadviseError"},{"import": 1349,"src": 3371,"name": "madvise"},{"import": 1349,"src": 3372,"name": "PerfEventOpenError"},{"import": 1349,"src": 3373,"name": "perf_event_open"},{"import": 1349,"src": 3374,"name": "root","kind": "const","type": 592,"value": 829},{"import": 1349,"src": 3375,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1349,"src": 3376,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1349,"src": 3377,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1349,"src": 3378,"name": "math","kind": "const","type": 592,"value": 1347},{"import": 1349,"src": 3379,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1349,"src": 3380,"name": "elf"},{"import": 1349,"src": 3381,"name": "dl"},{"import": 1349,"src": 3382,"name": "MAX_PATH_BYTES"},{"import": 1349,"src": 3383,"name": "is_windows","kind": "const","type": 604,"value": "true"},{"import": 1349,"src": 3384,"name": "getRandomBytesDevURandom"},{"import": 1349,"src": 3385,"name": "openOptionsFromFlags"},{"import": 1349,"src": 3386,"name": "setSockFlags"},{"import": 1349,"src": 3387,"name": "count_iovec_bytes"},{"import": 1349,"src": 3388,"name": "has_copy_file_range_syscall"},{"import": 1349,"src": 3389,"name": "toMemFdPath"},{"import": 1350,"src": 3390,"name": "abort"},{"import": 1350,"src": 3391,"name": "exit"},{"import": 1350,"src": 3392,"name": "changeCurDir"},{"import": 1350,"src": 3393,"name": "changeCurDirC"},{"import": 1350,"src": 3394,"name": "getCwd"},{"import": 1350,"src": 119,"name": "getCwdAlloc","kind": "const","type": 184,"value": 192},{"import": 1350,"src": 3395,"name": "getEnvMap"},{"import": 1350,"src": 3396,"name": "GetEnvVarOwnedError"},{"import": 1350,"src": 3397,"name": "getEnvVarOwned"},{"import": 1350,"src": 220,"name": "hasEnvVarConstant","kind": "const","type": 1793,"value": 822},{"import": 1350,"src": 3398,"name": "hasEnvVar"},{"import": 1350,"src": 3399,"name": "ArgIteratorPosix"},{"import": 1350,"src": 3400,"name": "ArgIteratorWasi"},{"import": 1350,"src": 3401,"name": "ArgIteratorWindows"},{"import": 1350,"src": 3402,"name": "ArgIterator"},{"import": 1350,"src": 3403,"name": "args"},{"import": 1350,"src": 3404,"name": "argsWithAllocator"},{"import": 1350,"src": 3405,"name": "argsAlloc"},{"import": 1350,"src": 3406,"name": "argsFree"},{"import": 1350,"src": 3407,"name": "UserInfo"},{"import": 1350,"src": 3408,"name": "getUserInfo"},{"import": 1350,"src": 3409,"name": "posixGetUserInfo"},{"import": 1350,"src": 3410,"name": "getBaseAddress"},{"import": 1350,"src": 3411,"name": "getSelfExeSharedLibPaths"},{"import": 1350,"src": 3412,"name": "can_execv"},{"import": 1350,"src": 3413,"name": "ExecvError"},{"import": 1350,"src": 3414,"name": "execv"},{"import": 1350,"src": 3415,"name": "execve"},{"import": 1350,"src": 3416,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1350,"src": 3417,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1350,"src": 3418,"name": "os","kind": "const","type": 592,"value": 1349},{"import": 1350,"src": 3419,"name": "fs","kind": "const","type": 592,"value": 1342},{"import": 1350,"src": 3420,"name": "BufMap"},{"import": 1350,"src": 3421,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1350,"src": 3422,"name": "math"},{"import": 1350,"src": 3423,"name": "Allocator","kind": "const","type": 592,"value": 1372},{"import": 1350,"src": 3424,"name": "assert"},{"import": 1350,"src": 3425,"name": "testing"},{"import": 1350,"src": 3426,"name": "child_process"},{"import": 1350,"src": 3427,"name": "testWindowsCmdLine"},{"import": 1351,"src": 3428,"name": "control_code"},{"import": 1351,"src": 3429,"name": "isAlNum"},{"import": 1351,"src": 3430,"name": "isAlpha"},{"import": 1351,"src": 3431,"name": "isCntrl"},{"import": 1351,"src": 3432,"name": "isDigit"},{"import": 1351,"src": 3433,"name": "isGraph"},{"import": 1351,"src": 3434,"name": "isLower"},{"import": 1351,"src": 3435,"name": "isPrint"},{"import": 1351,"src": 3436,"name": "isPunct"},{"import": 1351,"src": 3437,"name": "isSpace"},{"import": 1351,"src": 3438,"name": "spaces"},{"import": 1351,"src": 346,"name": "isUpper","kind": "const","type": 331,"value": 667},{"import": 1351,"src": 3439,"name": "isXDigit"},{"import": 1351,"src": 3440,"name": "isASCII"},{"import": 1351,"src": 3441,"name": "isBlank"},{"import": 1351,"src": 3442,"name": "toUpper"},{"import": 1351,"src": 332,"name": "toLower","kind": "const","type": 186,"value": 620},{"import": 1351,"src": 3443,"name": "lowerString"},{"import": 1351,"src": 3444,"name": "allocLowerString"},{"import": 1351,"src": 3445,"name": "upperString"},{"import": 1351,"src": 3446,"name": "allocUpperString"},{"import": 1351,"src": 3447,"name": "eqlIgnoreCase"},{"import": 1351,"src": 3448,"name": "startsWithIgnoreCase"},{"import": 1351,"src": 3449,"name": "endsWithIgnoreCase"},{"import": 1351,"src": 3450,"name": "indexOfIgnoreCasePos"},{"import": 1351,"src": 3451,"name": "indexOfIgnoreCase"},{"import": 1351,"src": 3452,"name": "orderIgnoreCase"},{"import": 1351,"src": 3453,"name": "lessThanIgnoreCase"},{"import": 1351,"src": 3454,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1351,"src": 3455,"name": "tIndex","kind": "const","type": 592,"value": 1228},{"import": 1351,"src": 3456,"name": "combinedTable","kind": "const","type": 1794,"value": null},{"import": 1351,"src": 351,"name": "inTable","kind": "const","type": 587,"value": 674},{"import": 1352,"src": 3457,"name": "epoch"},{"import": 1352,"src": 3458,"name": "sleep"},{"import": 1352,"src": 3459,"name": "timestamp"},{"import": 1352,"src": 3460,"name": "milliTimestamp"},{"import": 1352,"src": 3461,"name": "nanoTimestamp"},{"import": 1352,"src": 3462,"name": "ns_per_us","kind": "const","type": 690,"value": null},{"import": 1352,"src": 3463,"name": "ns_per_ms","kind": "const","type": 690,"value": null},{"import": 1352,"src": 3464,"name": "ns_per_s","kind": "const","type": 690,"value": null},{"import": 1352,"src": 3465,"name": "ns_per_min"},{"import": 1352,"src": 3466,"name": "ns_per_hour"},{"import": 1352,"src": 3467,"name": "ns_per_day"},{"import": 1352,"src": 3468,"name": "ns_per_week"},{"import": 1352,"src": 3469,"name": "us_per_ms"},{"import": 1352,"src": 3470,"name": "us_per_s"},{"import": 1352,"src": 3471,"name": "us_per_min"},{"import": 1352,"src": 3472,"name": "us_per_hour"},{"import": 1352,"src": 3473,"name": "us_per_day"},{"import": 1352,"src": 3474,"name": "us_per_week"},{"import": 1352,"src": 3475,"name": "ms_per_s"},{"import": 1352,"src": 3476,"name": "ms_per_min"},{"import": 1352,"src": 3477,"name": "ms_per_hour"},{"import": 1352,"src": 3478,"name": "ms_per_day"},{"import": 1352,"src": 3479,"name": "ms_per_week"},{"import": 1352,"src": 3480,"name": "s_per_min"},{"import": 1352,"src": 3481,"name": "s_per_hour"},{"import": 1352,"src": 3482,"name": "s_per_day"},{"import": 1352,"src": 3483,"name": "s_per_week"},{"import": 1352,"src": 3484,"name": "Timer","kind": "const","type": 592,"value": 1208},{"import": 1352,"src": 3485,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1352,"src": 3486,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1352,"src": 3487,"name": "assert"},{"import": 1352,"src": 3488,"name": "testing"},{"import": 1352,"src": 3489,"name": "os","kind": "const","type": 592,"value": 1349},{"import": 1352,"src": 3490,"name": "math"},{"import": 1352,"src": 3491,"name": "is_windows","kind": "const","type": 604,"value": "true"},{"import": 1352,"src": 348,"name": "safeMulDiv","kind": "const","type": 581,"value": 669},{"import": 1353,"src": 305,"name": "utf8CodepointSequenceLength","kind": "const","type": 514,"value": 557},{"import": 1353,"src": 207,"name": "utf8ByteSequenceLength","kind": "const","type": 353,"value": 369},{"import": 1353,"src": 306,"name": "utf8Encode","kind": "const","type": 515,"value": 558},{"import": 1353,"src": 208,"name": "utf8Decode","kind": "const","type": 354,"value": 370},{"import": 1353,"src": 274,"name": "utf8Decode2","kind": "const","type": 455,"value": 491},{"import": 1353,"src": 275,"name": "utf8Decode3","kind": "const","type": 456,"value": 492},{"import": 1353,"src": 276,"name": "utf8Decode4","kind": "const","type": 457,"value": 493},{"import": 1353,"src": 3492,"name": "utf8ValidCodepoint"},{"import": 1353,"src": 206,"name": "utf8CountCodepoints","kind": "const","type": 351,"value": 367},{"import": 1353,"src": 3493,"name": "utf8ValidateSlice"},{"import": 1353,"src": 3494,"name": "Utf8View"},{"import": 1353,"src": 3495,"name": "Utf8Iterator"},{"import": 1353,"src": 3496,"name": "Utf16LeIterator","kind": "const","type": 592,"value": 1193},{"import": 1353,"src": 3497,"name": "utf16leToUtf8Alloc"},{"import": 1353,"src": 3498,"name": "utf16leToUtf8AllocZ"},{"import": 1353,"src": 3499,"name": "utf16leToUtf8"},{"import": 1353,"src": 3500,"name": "utf8ToUtf16LeWithNull"},{"import": 1353,"src": 252,"name": "utf8ToUtf16Le","kind": "const","type": 417,"value": 446},{"import": 1353,"src": 403,"name": "utf8ToUtf16LeStringLiteral","kind": "const","type": 771,"value": 734},{"import": 1353,"src": 3501,"name": "fmtUtf16le"},{"import": 1353,"src": 3502,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1353,"src": 3503,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1353,"src": 3504,"name": "testing"},{"import": 1353,"src": 3505,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1353,"src": 3506,"name": "Utf8DecodeError","kind": "const","type": 592,"value": 1315},{"import": 1353,"src": 3507,"name": "Utf8Decode2Error","kind": "const","type": 592,"value": 1588},{"import": 1353,"src": 3508,"name": "Utf8Decode3Error","kind": "const","type": 592,"value": 1589},{"import": 1353,"src": 3509,"name": "Utf8Decode4Error","kind": "const","type": 592,"value": 1590},{"import": 1353,"src": 3510,"name": "testUtf8Encode"},{"import": 1353,"src": 3511,"name": "testUtf8EncodeError"},{"import": 1353,"src": 3512,"name": "testErrorEncode"},{"import": 1353,"src": 3513,"name": "testUtf8IteratorOnAscii"},{"import": 1353,"src": 3514,"name": "testUtf8ViewBad"},{"import": 1353,"src": 3515,"name": "testUtf8ViewOk"},{"import": 1353,"src": 3516,"name": "testBadUtf8Slice"},{"import": 1353,"src": 3517,"name": "testValidUtf8"},{"import": 1353,"src": 3518,"name": "testInvalidUtf8ContinuationBytes"},{"import": 1353,"src": 3519,"name": "testOverlongUtf8Codepoint"},{"import": 1353,"src": 3520,"name": "testMiscInvalidUtf8"},{"import": 1353,"src": 3521,"name": "testUtf8Peeking"},{"import": 1353,"src": 3522,"name": "testError"},{"import": 1353,"src": 3523,"name": "testValid"},{"import": 1353,"src": 3524,"name": "testDecode"},{"import": 1353,"src": 284,"name": "calcUtf16LeLen","kind": "const","type": 464,"value": 502},{"import": 1353,"src": 3525,"name": "formatUtf16le"},{"import": 1353,"src": 3526,"name": "testUtf8CountCodepoints"},{"import": 1353,"src": 3527,"name": "testUtf8ValidCodepoint"},{"import": 1354,"src": 3528,"name": "callMain"},{"import": 1354,"src": 3529,"name": "call_wWinMain"},{"import": 1354,"src": 3530,"name": "root","kind": "const","type": 592,"value": 829},{"import": 1354,"src": 3531,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1354,"src": 3532,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1354,"src": 3533,"name": "assert"},{"import": 1354,"src": 3534,"name": "uefi"},{"import": 1354,"src": 3535,"name": "elf"},{"import": 1354,"src": 3536,"name": "tlcsprng"},{"import": 1354,"src": 3537,"name": "native_arch"},{"import": 1354,"src": 3538,"name": "native_os","kind": "const","type": 639,"value": null},{"import": 1354,"src": 3539,"name": "argc_argv_ptr"},{"import": 1354,"src": 3540,"name": "start_sym_name"},{"import": 1354,"src": 3541,"name": "main2"},{"import": 1354,"src": 3542,"name": "_start2"},{"import": 1354,"src": 3543,"name": "callMain2"},{"import": 1354,"src": 3544,"name": "wWinMainCRTStartup2"},{"import": 1354,"src": 3545,"name": "exit2"},{"import": 1354,"src": 3546,"name": "ExitProcess"},{"import": 1354,"src": 5,"name": "_DllMainCRTStartup","kind": "const","type": 5,"value": 5},{"import": 1354,"src": 3547,"name": "wasm_freestanding_start"},{"import": 1354,"src": 3548,"name": "wasi_start"},{"import": 1354,"src": 3549,"name": "EfiMain"},{"import": 1354,"src": 3550,"name": "_start"},{"import": 1354,"src": 3551,"name": "WinStartup"},{"import": 1354,"src": 3552,"name": "wWinMainCRTStartup"},{"import": 1354,"src": 3553,"name": "posixCallMainAndExit"},{"import": 1354,"src": 3554,"name": "expandStackSize"},{"import": 1354,"src": 3555,"name": "callMainWithArgs"},{"import": 1354,"src": 3556,"name": "main"},{"import": 1354,"src": 3557,"name": "mainWithoutEnv"},{"import": 1354,"src": 3558,"name": "bad_main_ret"},{"import": 1354,"src": 3559,"name": "initEventLoopAndCallMain"},{"import": 1354,"src": 3560,"name": "initEventLoopAndCallWinMain"},{"import": 1354,"src": 3561,"name": "callMainAsync"},{"import": 1364,"src": 3562,"name": "Impl","kind": "const","type": 592,"value": 1542},{"import": 1364,"src": 3563,"name": "set"},{"import": 1364,"src": 18,"name": "wait","kind": "const","type": 18,"value": 19},{"import": 1364,"src": 3564,"name": "reset"},{"import": 1364,"src": 3565,"name": "TimedWaitResult","kind": "const","type": 592,"value": 1162},{"import": 1364,"src": 3566,"name": "timedWait"},{"import": 1364,"src": 3567,"name": "DebugEvent"},{"import": 1364,"src": 3568,"name": "AtomicEvent","kind": "const","type": 592,"value": 1542},{"import": 1364,"src": 3569,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1364,"src": 3570,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1364,"src": 3571,"name": "StaticResetEvent","kind": "const","type": 592,"value": 1364},{"import": 1364,"src": 3572,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1364,"src": 3573,"name": "os"},{"import": 1364,"src": 3574,"name": "time","kind": "const","type": 592,"value": 1352},{"import": 1364,"src": 3575,"name": "linux"},{"import": 1364,"src": 3576,"name": "windows","kind": "const","type": 592,"value": 1578},{"import": 1364,"src": 3577,"name": "testing"},{"import": 1296,"src": 3578,"name": "tryLock"},{"import": 1296,"src": 19,"name": "lock","kind": "const","type": 20,"value": 21},{"import": 1296,"src": 195,"name": "unlock","kind": "const","type": 20,"value": 355},{"import": 1372,"src": 3579,"name": "Error","kind": "const","type": 592,"value": 1378},{"import": 1372,"src": 3580,"name": "noResize"},{"import": 1372,"src": 296,"name": "reallocBytes","kind": "const","type": 477,"value": 518},{"import": 1372,"src": 44,"name": "create","kind": "const","type": 1795,"value": 823},{"import": 1372,"src": 46,"name": "destroy","kind": "const","type": 1796,"value": 824},{"import": 1372,"src": 39,"name": "alloc","kind": "const","type": 1797,"value": 825},{"import": 1372,"src": 3581,"name": "allocWithOptions"},{"import": 1372,"src": 3582,"name": "allocWithOptionsRetAddr"},{"import": 1372,"src": 3583,"name": "allocSentinel"},{"import": 1372,"src": 163,"name": "alignedAlloc","kind": "const","type": 1798,"value": 826},{"import": 1372,"src": 3584,"name": "allocAdvanced"},{"import": 1372,"src": 3585,"name": "Exact","kind": "const","type": 592,"value": 1121},{"import": 1372,"src": 223,"name": "allocAdvancedWithRetAddr","kind": "const","type": 1799,"value": 827},{"import": 1372,"src": 328,"name": "resize","kind": "const","type": 1800,"value": 828},{"import": 1372,"src": 3586,"name": "realloc"},{"import": 1372,"src": 66,"name": "reallocAtLeast","kind": "const","type": 1801,"value": 829},{"import": 1372,"src": 3587,"name": "reallocAdvanced"},{"import": 1372,"src": 232,"name": "reallocAdvancedWithRetAddr","kind": "const","type": 1802,"value": 830},{"import": 1372,"src": 127,"name": "shrink","kind": "const","type": 1803,"value": 831},{"import": 1372,"src": 3588,"name": "alignedShrink"},{"import": 1372,"src": 249,"name": "alignedShrinkWithRetAddr","kind": "const","type": 1804,"value": 832},{"import": 1372,"src": 41,"name": "free","kind": "const","type": 1805,"value": 833},{"import": 1372,"src": 126,"name": "dupe","kind": "const","type": 1806,"value": 834},{"import": 1372,"src": 3589,"name": "dupeZ"},{"import": 1372,"src": 224,"name": "shrinkBytes","kind": "const","type": 371,"value": 390},{"import": 1372,"src": 3590,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1372,"src": 3591,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1372,"src": 3592,"name": "math","kind": "const","type": 592,"value": 1347},{"import": 1372,"src": 3593,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1372,"src": 3594,"name": "Allocator","kind": "const","type": 592,"value": 1372},{"import": 1372,"src": 334,"name": "moveBytes","kind": "const","type": 477,"value": 625},{"import": 1372,"src": 3595,"name": "AllocWithOptionsPayload"},{"import": 1338,"src": 3596,"name": "DataDirectory","kind": "const","type": 592,"value": 1808},{"import": 1331,"src": 108,"name": "getAttrString","kind": "const","type": 157,"value": 163},{"import": 1331,"src": 3597,"name": "Attr","kind": "const","type": 592,"value": 634},{"import": 1331,"src": 107,"name": "getAttr","kind": "const","type": 156,"value": 162},{"import": 1331,"src": 111,"name": "getAttrAddr","kind": "const","type": 161,"value": 167},{"import": 1331,"src": 180,"name": "getAttrSecOffset","kind": "const","type": 300,"value": 315},{"import": 1331,"src": 3598,"name": "getAttrUnsignedLe"},{"import": 1331,"src": 110,"name": "getAttrRef","kind": "const","type": 160,"value": 166},{"import": 1331,"src": 112,"name": "asUnsignedLe","kind": "const","type": 162,"value": 168},{"import": 1462,"src": 3599,"name": "sep_windows","kind": "const","type": 690,"value": null},{"import": 1462,"src": 3600,"name": "sep_posix"},{"import": 1462,"src": 3601,"name": "sep","kind": "const","type": 690,"value": null},{"import": 1462,"src": 3602,"name": "sep_str_windows"},{"import": 1462,"src": 3603,"name": "sep_str_posix"},{"import": 1462,"src": 3604,"name": "sep_str"},{"import": 1462,"src": 3605,"name": "delimiter_windows"},{"import": 1462,"src": 3606,"name": "delimiter_posix"},{"import": 1462,"src": 3607,"name": "delimiter"},{"import": 1462,"src": 189,"name": "isSep","kind": "const","type": 331,"value": 346},{"import": 1462,"src": 187,"name": "join","kind": "const","type": 329,"value": 344},{"import": 1462,"src": 3608,"name": "joinZ"},{"import": 1462,"src": 3609,"name": "isAbsoluteC"},{"import": 1462,"src": 3610,"name": "isAbsoluteZ"},{"import": 1462,"src": 251,"name": "isAbsolute","kind": "const","type": 411,"value": 445},{"import": 1462,"src": 244,"name": "isAbsoluteWindows","kind": "const","type": 411,"value": 437},{"import": 1462,"src": 3611,"name": "isAbsoluteWindowsW"},{"import": 1462,"src": 226,"name": "isAbsoluteWindowsWTF16","kind": "const","type": 374,"value": 393},{"import": 1462,"src": 3612,"name": "isAbsoluteWindowsC"},{"import": 1462,"src": 3613,"name": "isAbsoluteWindowsZ"},{"import": 1462,"src": 3614,"name": "isAbsolutePosix"},{"import": 1462,"src": 3615,"name": "isAbsolutePosixC"},{"import": 1462,"src": 3616,"name": "isAbsolutePosixZ"},{"import": 1462,"src": 3617,"name": "WindowsPath","kind": "const","type": 592,"value": 988},{"import": 1462,"src": 120,"name": "windowsParsePath","kind": "const","type": 185,"value": 193},{"import": 1462,"src": 3618,"name": "diskDesignator"},{"import": 1462,"src": 3619,"name": "diskDesignatorWindows"},{"import": 1462,"src": 117,"name": "resolve","kind": "const","type": 182,"value": 190},{"import": 1462,"src": 118,"name": "resolveWindows","kind": "const","type": 183,"value": 191},{"import": 1462,"src": 3620,"name": "resolvePosix"},{"import": 1462,"src": 3621,"name": "dirname"},{"import": 1462,"src": 3622,"name": "dirnameWindows"},{"import": 1462,"src": 3623,"name": "dirnamePosix"},{"import": 1462,"src": 175,"name": "basename","kind": "const","type": 295,"value": 310},{"import": 1462,"src": 3624,"name": "basenamePosix"},{"import": 1462,"src": 270,"name": "basenameWindows","kind": "const","type": 295,"value": 480},{"import": 1462,"src": 3625,"name": "relative"},{"import": 1462,"src": 3626,"name": "relativeWindows"},{"import": 1462,"src": 3627,"name": "relativePosix"},{"import": 1462,"src": 3628,"name": "extension"},{"import": 1462,"src": 3629,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1462,"src": 3630,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1462,"src": 3631,"name": "debug","kind": "const","type": 592,"value": 1339},{"import": 1462,"src": 3632,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1462,"src": 3633,"name": "testing"},{"import": 1462,"src": 3634,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1462,"src": 3635,"name": "fmt"},{"import": 1462,"src": 3636,"name": "Allocator","kind": "const","type": 592,"value": 1372},{"import": 1462,"src": 3637,"name": "math"},{"import": 1462,"src": 3638,"name": "windows"},{"import": 1462,"src": 3639,"name": "fs"},{"import": 1462,"src": 3640,"name": "process","kind": "const","type": 592,"value": 1350},{"import": 1462,"src": 3641,"name": "native_os","kind": "const","type": 639,"value": null},{"import": 1462,"src": 188,"name": "joinSepMaybeZ","kind": "const","type": 330,"value": 345},{"import": 1462,"src": 3642,"name": "testJoinMaybeZWindows"},{"import": 1462,"src": 3643,"name": "testJoinMaybeZPosix"},{"import": 1462,"src": 290,"name": "isAbsoluteWindowsImpl","kind": "const","type": 1810,"value": 835},{"import": 1462,"src": 3644,"name": "testIsAbsoluteWindows"},{"import": 1462,"src": 3645,"name": "testIsAbsolutePosix"},{"import": 1462,"src": 3646,"name": "networkShareServersEql"},{"import": 1462,"src": 122,"name": "compareDiskDesignators","kind": "const","type": 187,"value": 195},{"import": 1462,"src": 121,"name": "asciiUpper","kind": "const","type": 186,"value": 194},{"import": 1462,"src": 246,"name": "asciiEqlIgnoreCase","kind": "const","type": 60,"value": 439},{"import": 1462,"src": 3647,"name": "testResolveWindows"},{"import": 1462,"src": 3648,"name": "testResolvePosix"},{"import": 1462,"src": 3649,"name": "testDirnamePosix"},{"import": 1462,"src": 3650,"name": "testDirnameWindows"},{"import": 1462,"src": 3651,"name": "testBasename"},{"import": 1462,"src": 3652,"name": "testBasenamePosix"},{"import": 1462,"src": 3653,"name": "testBasenameWindows"},{"import": 1462,"src": 3654,"name": "testRelativePosix"},{"import": 1462,"src": 3655,"name": "testRelativeWindows"},{"import": 1462,"src": 3656,"name": "testExtension"},{"import": 1310,"src": 3657,"name": "Module","kind": "const","type": 592,"value": 700},{"import": 1310,"src": 128,"name": "init","kind": "const","type": 195,"value": 203},{"import": 1310,"src": 3658,"name": "deinit"},{"import": 1310,"src": 145,"name": "parseDbiStream","kind": "const","type": 232,"value": 242},{"import": 1310,"src": 137,"name": "parseInfoStream","kind": "const","type": 212,"value": 222},{"import": 1310,"src": 176,"name": "getSymbolName","kind": "const","type": 296,"value": 311},{"import": 1310,"src": 177,"name": "getLineNumberInfo","kind": "const","type": 297,"value": 312},{"import": 1310,"src": 174,"name": "getModule","kind": "const","type": 294,"value": 309},{"import": 1310,"src": 144,"name": "getStreamById","kind": "const","type": 231,"value": 241},{"import": 1310,"src": 138,"name": "getStream","kind": "const","type": 213,"value": 223},{"import": 1310,"src": 131,"name": "init","kind": "const","type": 198,"value": 206},{"import": 1364,"src": 3659,"name": "init"},{"import": 1364,"src": 3660,"name": "deinit"},{"import": 1364,"src": 3661,"name": "set"},{"import": 1364,"src": 196,"name": "wait","kind": "const","type": 340,"value": 356},{"import": 1364,"src": 272,"name": "timedWait","kind": "const","type": 453,"value": 489},{"import": 1364,"src": 3662,"name": "reset"},{"import": 1364,"src": 3663,"name": "Futex","kind": "const","type": 592,"value": 1811},{"import": 1364,"src": 3664,"name": "SpinFutex","kind": "const","type": 592,"value": 1812},{"import": 1364,"src": 3665,"name": "LinuxFutex"},{"import": 1364,"src": 3666,"name": "WindowsFutex","kind": "const","type": 592,"value": 1811},{"import": 1364,"src": 3667,"name": "WAKE","kind": "const","type": 690,"value": null},{"import": 1364,"src": 3668,"name": "WAIT","kind": "const","type": 690,"value": null},{"import": 1552,"src": 3669,"name": "ArenaAllocator","kind": "const","type": 592,"value": 1116},{"import": 1552,"src": 3670,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1552,"src": 3671,"name": "assert"},{"import": 1552,"src": 3672,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1552,"src": 3673,"name": "Allocator","kind": "const","type": 592,"value": 1372},{"import": 1578,"src": 3674,"name": "advapi32"},{"import": 1578,"src": 3675,"name": "kernel32","kind": "const","type": 592,"value": 1829},{"import": 1578,"src": 3676,"name": "ntdll","kind": "const","type": 592,"value": 1830},{"import": 1578,"src": 3677,"name": "ole32"},{"import": 1578,"src": 3678,"name": "psapi"},{"import": 1578,"src": 3679,"name": "shell32"},{"import": 1578,"src": 3680,"name": "user32"},{"import": 1578,"src": 3681,"name": "ws2_32"},{"import": 1578,"src": 3682,"name": "gdi32"},{"import": 1578,"src": 3683,"name": "winmm"},{"import": 1578,"src": 3684,"name": "self_process_handle"},{"import": 1578,"src": 3685,"name": "OpenError","kind": "const","type": 592,"value": 1594},{"import": 1578,"src": 3686,"name": "OpenFileOptions","kind": "const","type": 592,"value": 1174},{"import": 1578,"src": 291,"name": "OpenFile","kind": "const","type": 468,"value": 509},{"import": 1578,"src": 3687,"name": "CreatePipeError"},{"import": 1578,"src": 3688,"name": "CreatePipe"},{"import": 1578,"src": 3689,"name": "CreateEventEx"},{"import": 1578,"src": 3690,"name": "CreateEventExW"},{"import": 1578,"src": 3691,"name": "DeviceIoControlError"},{"import": 1578,"src": 3692,"name": "DeviceIoControl"},{"import": 1578,"src": 3693,"name": "GetOverlappedResult"},{"import": 1578,"src": 3694,"name": "SetHandleInformationError"},{"import": 1578,"src": 3695,"name": "SetHandleInformation"},{"import": 1578,"src": 3696,"name": "RtlGenRandomError"},{"import": 1578,"src": 3697,"name": "RtlGenRandom"},{"import": 1578,"src": 3698,"name": "WaitForSingleObjectError"},{"import": 1578,"src": 3699,"name": "WaitForSingleObject"},{"import": 1578,"src": 3700,"name": "WaitForSingleObjectEx"},{"import": 1578,"src": 3701,"name": "WaitForMultipleObjectsEx"},{"import": 1578,"src": 3702,"name": "CreateIoCompletionPortError"},{"import": 1578,"src": 3703,"name": "CreateIoCompletionPort"},{"import": 1578,"src": 3704,"name": "PostQueuedCompletionStatusError"},{"import": 1578,"src": 3705,"name": "PostQueuedCompletionStatus"},{"import": 1578,"src": 3706,"name": "GetQueuedCompletionStatusResult"},{"import": 1578,"src": 3707,"name": "GetQueuedCompletionStatus"},{"import": 1578,"src": 3708,"name": "GetQueuedCompletionStatusError"},{"import": 1578,"src": 3709,"name": "GetQueuedCompletionStatusEx"},{"import": 1578,"src": 228,"name": "CloseHandle","kind": "const","type": 377,"value": 396},{"import": 1578,"src": 3710,"name": "FindClose"},{"import": 1578,"src": 3711,"name": "ReadFileError","kind": "const","type": 592,"value": 1557},{"import": 1578,"src": 229,"name": "ReadFile","kind": "const","type": 379,"value": 398},{"import": 1578,"src": 3712,"name": "WriteFileError","kind": "const","type": 592,"value": 1366},{"import": 1578,"src": 21,"name": "WriteFile","kind": "const","type": 22,"value": 23},{"import": 1578,"src": 3713,"name": "SetCurrentDirectoryError"},{"import": 1578,"src": 3714,"name": "SetCurrentDirectory"},{"import": 1578,"src": 3715,"name": "GetCurrentDirectoryError","kind": "const","type": 592,"value": 1573},{"import": 1578,"src": 248,"name": "GetCurrentDirectory","kind": "const","type": 413,"value": 441},{"import": 1578,"src": 3716,"name": "CreateSymbolicLinkError"},{"import": 1578,"src": 3717,"name": "CreateSymbolicLink"},{"import": 1578,"src": 3718,"name": "ReadLinkError"},{"import": 1578,"src": 3719,"name": "ReadLink"},{"import": 1578,"src": 3720,"name": "DeleteFileError"},{"import": 1578,"src": 3721,"name": "DeleteFileOptions"},{"import": 1578,"src": 3722,"name": "DeleteFile"},{"import": 1578,"src": 3723,"name": "MoveFileError"},{"import": 1578,"src": 3724,"name": "MoveFileEx"},{"import": 1578,"src": 3725,"name": "MoveFileExW"},{"import": 1578,"src": 3726,"name": "GetStdHandleError"},{"import": 1578,"src": 3727,"name": "GetStdHandle"},{"import": 1578,"src": 3728,"name": "SetFilePointerError","kind": "const","type": 592,"value": 1600},{"import": 1578,"src": 294,"name": "SetFilePointerEx_BEGIN","kind": "const","type": 472,"value": 513},{"import": 1578,"src": 3729,"name": "SetFilePointerEx_CURRENT"},{"import": 1578,"src": 3730,"name": "SetFilePointerEx_END"},{"import": 1578,"src": 295,"name": "SetFilePointerEx_CURRENT_get","kind": "const","type": 473,"value": 514},{"import": 1578,"src": 3731,"name": "QueryObjectName"},{"import": 1578,"src": 3732,"name": "GetFinalPathNameByHandleError"},{"import": 1578,"src": 3733,"name": "GetFinalPathNameByHandleFormat"},{"import": 1578,"src": 3734,"name": "GetFinalPathNameByHandle"},{"import": 1578,"src": 3735,"name": "QueryInformationFileError"},{"import": 1578,"src": 3736,"name": "QueryInformationFile"},{"import": 1578,"src": 3737,"name": "GetFileSizeError","kind": "const","type": 592,"value": 1580},{"import": 1578,"src": 257,"name": "GetFileSizeEx","kind": "const","type": 423,"value": 452},{"import": 1578,"src": 3738,"name": "GetFileAttributesError"},{"import": 1578,"src": 3739,"name": "GetFileAttributes"},{"import": 1578,"src": 3740,"name": "GetFileAttributesW"},{"import": 1578,"src": 3741,"name": "WSAStartup"},{"import": 1578,"src": 3742,"name": "WSACleanup"},{"import": 1578,"src": 3743,"name": "WSASocketW"},{"import": 1578,"src": 3744,"name": "bind"},{"import": 1578,"src": 3745,"name": "listen"},{"import": 1578,"src": 3746,"name": "closesocket"},{"import": 1578,"src": 3747,"name": "accept"},{"import": 1578,"src": 3748,"name": "getsockname"},{"import": 1578,"src": 3749,"name": "getpeername"},{"import": 1578,"src": 3750,"name": "sendmsg"},{"import": 1578,"src": 3751,"name": "sendto"},{"import": 1578,"src": 3752,"name": "recvfrom"},{"import": 1578,"src": 3753,"name": "poll"},{"import": 1578,"src": 3754,"name": "WSAIoctl"},{"import": 1578,"src": 3755,"name": "GetModuleFileNameW"},{"import": 1578,"src": 3756,"name": "TerminateProcessError"},{"import": 1578,"src": 3757,"name": "TerminateProcess"},{"import": 1578,"src": 3758,"name": "VirtualAllocError","kind": "const","type": 592,"value": 1591},{"import": 1578,"src": 280,"name": "VirtualAlloc","kind": "const","type": 460,"value": 497},{"import": 1578,"src": 283,"name": "VirtualFree","kind": "const","type": 462,"value": 500},{"import": 1578,"src": 3759,"name": "SetConsoleTextAttributeError","kind": "const","type": 592,"value": 1615},{"import": 1578,"src": 314,"name": "SetConsoleTextAttribute","kind": "const","type": 533,"value": 581},{"import": 1578,"src": 3760,"name": "SetConsoleCtrlHandler"},{"import": 1578,"src": 3761,"name": "SetFileCompletionNotificationModes"},{"import": 1578,"src": 3762,"name": "GetEnvironmentStringsError"},{"import": 1578,"src": 3763,"name": "GetEnvironmentStringsW"},{"import": 1578,"src": 3764,"name": "FreeEnvironmentStringsW"},{"import": 1578,"src": 3765,"name": "GetEnvironmentVariableError"},{"import": 1578,"src": 3766,"name": "GetEnvironmentVariableW"},{"import": 1578,"src": 3767,"name": "CreateProcessError"},{"import": 1578,"src": 3768,"name": "CreateProcessW"},{"import": 1578,"src": 3769,"name": "LoadLibraryError"},{"import": 1578,"src": 3770,"name": "LoadLibraryW"},{"import": 1578,"src": 3771,"name": "FreeLibrary"},{"import": 1578,"src": 335,"name": "QueryPerformanceFrequency","kind": "const","type": 12,"value": 652},{"import": 1578,"src": 336,"name": "QueryPerformanceCounter","kind": "const","type": 12,"value": 653},{"import": 1578,"src": 3772,"name": "InitOnceExecuteOnce"},{"import": 1578,"src": 3773,"name": "HeapFree"},{"import": 1578,"src": 3774,"name": "HeapDestroy"},{"import": 1578,"src": 3775,"name": "LocalFree"},{"import": 1578,"src": 3776,"name": "GetFileInformationByHandleError"},{"import": 1578,"src": 3777,"name": "GetFileInformationByHandle"},{"import": 1578,"src": 3778,"name": "SetFileTimeError"},{"import": 1578,"src": 3779,"name": "SetFileTime"},{"import": 1578,"src": 3780,"name": "LockFileError"},{"import": 1578,"src": 292,"name": "LockFile","kind": "const","type": 469,"value": 510},{"import": 1578,"src": 3781,"name": "UnlockFileError"},{"import": 1578,"src": 3782,"name": "UnlockFile"},{"import": 1578,"src": 273,"name": "teb","kind": "const","type": 454,"value": 490},{"import": 1578,"src": 197,"name": "peb","kind": "const","type": 342,"value": 358},{"import": 1578,"src": 3783,"name": "fromSysTime"},{"import": 1578,"src": 3784,"name": "toSysTime"},{"import": 1578,"src": 3785,"name": "fileTimeToNanoSeconds"},{"import": 1578,"src": 3786,"name": "nanoSecondsToFileTime"},{"import": 1578,"src": 3787,"name": "PathSpace","kind": "const","type": 592,"value": 1148},{"import": 1578,"src": 3788,"name": "RemoveDotDirsError","kind": "const","type": 592,"value": 1576},{"import": 1578,"src": 309,"name": "removeDotDirsSanitized","kind": "const","type": 1831,"value": 836},{"import": 1578,"src": 254,"name": "normalizePath","kind": "const","type": 1832,"value": 837},{"import": 1578,"src": 3789,"name": "cStrToPrefixedFileW"},{"import": 1578,"src": 250,"name": "sliceToPrefixedFileW","kind": "const","type": 416,"value": 444},{"import": 1578,"src": 3790,"name": "wToPrefixedFileW"},{"import": 1578,"src": 3791,"name": "loadWinsockExtensionFunction"},{"import": 1578,"src": 198,"name": "unexpectedError","kind": "const","type": 343,"value": 359},{"import": 1578,"src": 3792,"name": "unexpectedWSAError"},{"import": 1578,"src": 293,"name": "unexpectedStatus","kind": "const","type": 470,"value": 511},{"import": 1578,"src": 3793,"name": "SetThreadDescription"},{"import": 1578,"src": 3794,"name": "GetThreadDescription"},{"import": 1578,"src": 3795,"name": "Win32Error","kind": "const","type": 592,"value": 1106},{"import": 1578,"src": 3796,"name": "NTSTATUS","kind": "const","type": 592,"value": 1180},{"import": 1578,"src": 3797,"name": "LANG"},{"import": 1578,"src": 3798,"name": "SUBLANG"},{"import": 1578,"src": 3799,"name": "STD_INPUT_HANDLE"},{"import": 1578,"src": 3800,"name": "STD_OUTPUT_HANDLE"},{"import": 1578,"src": 3801,"name": "STD_ERROR_HANDLE"},{"import": 1578,"src": 3802,"name": "WINAPI","kind": "const","type": 1657,"value": null},{"import": 1578,"src": 3803,"name": "BOOL","kind": "const","type": 592,"value": 838},{"import": 1578,"src": 3804,"name": "BOOLEAN","kind": "const","type": 592,"value": 676},{"import": 1578,"src": 3805,"name": "BYTE","kind": "const","type": 592,"value": 676},{"import": 1578,"src": 3806,"name": "CHAR"},{"import": 1578,"src": 3807,"name": "UCHAR","kind": "const","type": 592,"value": 676},{"import": 1578,"src": 3808,"name": "FLOAT"},{"import": 1578,"src": 3809,"name": "HANDLE","kind": "const","type": 592,"value": 840},{"import": 1578,"src": 3810,"name": "HCRYPTPROV"},{"import": 1578,"src": 3811,"name": "ATOM"},{"import": 1578,"src": 3812,"name": "HBRUSH"},{"import": 1578,"src": 3813,"name": "HCURSOR"},{"import": 1578,"src": 3814,"name": "HICON"},{"import": 1578,"src": 3815,"name": "HINSTANCE","kind": "const","type": 592,"value": 839},{"import": 1578,"src": 3816,"name": "HMENU"},{"import": 1578,"src": 3817,"name": "HMODULE","kind": "const","type": 592,"value": 775},{"import": 1578,"src": 3818,"name": "HWND"},{"import": 1578,"src": 3819,"name": "HDC"},{"import": 1578,"src": 3820,"name": "HGLRC"},{"import": 1578,"src": 3821,"name": "FARPROC"},{"import": 1578,"src": 3822,"name": "INT"},{"import": 1578,"src": 3823,"name": "LPCSTR"},{"import": 1578,"src": 3824,"name": "LPCVOID"},{"import": 1578,"src": 3825,"name": "LPSTR"},{"import": 1578,"src": 3826,"name": "LPVOID","kind": "const","type": 592,"value": 840},{"import": 1578,"src": 3827,"name": "LPWSTR","kind": "const","type": 592,"value": 748},{"import": 1578,"src": 3828,"name": "LPCWSTR"},{"import": 1578,"src": 3829,"name": "PVOID","kind": "const","type": 592,"value": 840},{"import": 1578,"src": 3830,"name": "PWSTR"},{"import": 1578,"src": 3831,"name": "SIZE_T","kind": "const","type": 592,"value": 602},{"import": 1578,"src": 3832,"name": "UINT","kind": "const","type": 592,"value": 1833},{"import": 1578,"src": 3833,"name": "ULONG_PTR","kind": "const","type": 592,"value": 602},{"import": 1578,"src": 3834,"name": "LONG_PTR"},{"import": 1578,"src": 3835,"name": "DWORD_PTR"},{"import": 1578,"src": 3836,"name": "WCHAR","kind": "const","type": 592,"value": 598},{"import": 1578,"src": 3837,"name": "WORD","kind": "const","type": 592,"value": 598},{"import": 1578,"src": 3838,"name": "DWORD","kind": "const","type": 592,"value": 641},{"import": 1578,"src": 3839,"name": "DWORD64"},{"import": 1578,"src": 3840,"name": "LARGE_INTEGER","kind": "const","type": 592,"value": 781},{"import": 1578,"src": 3841,"name": "ULARGE_INTEGER","kind": "const","type": 592,"value": 614},{"import": 1578,"src": 3842,"name": "USHORT","kind": "const","type": 592,"value": 598},{"import": 1578,"src": 3843,"name": "SHORT","kind": "const","type": 592,"value": 1834},{"import": 1578,"src": 3844,"name": "ULONG","kind": "const","type": 592,"value": 641},{"import": 1578,"src": 3845,"name": "LONG","kind": "const","type": 592,"value": 834},{"import": 1578,"src": 3846,"name": "ULONGLONG","kind": "const","type": 592,"value": 614},{"import": 1578,"src": 3847,"name": "LONGLONG"},{"import": 1578,"src": 3848,"name": "HLOCAL"},{"import": 1578,"src": 3849,"name": "LANGID"},{"import": 1578,"src": 3850,"name": "WPARAM"},{"import": 1578,"src": 3851,"name": "LPARAM"},{"import": 1578,"src": 3852,"name": "LRESULT"},{"import": 1578,"src": 3853,"name": "va_list"},{"import": 1578,"src": 3854,"name": "TRUE","kind": "const","type": 690,"value": null},{"import": 1578,"src": 3855,"name": "FALSE","kind": "const","type": 690,"value": null},{"import": 1578,"src": 3856,"name": "DEVICE_TYPE"},{"import": 1578,"src": 3857,"name": "FILE_DEVICE_BEEP"},{"import": 1578,"src": 3858,"name": "FILE_DEVICE_CD_ROM"},{"import": 1578,"src": 3859,"name": "FILE_DEVICE_CD_ROM_FILE_SYSTEM"},{"import": 1578,"src": 3860,"name": "FILE_DEVICE_CONTROLLER"},{"import": 1578,"src": 3861,"name": "FILE_DEVICE_DATALINK"},{"import": 1578,"src": 3862,"name": "FILE_DEVICE_DFS"},{"import": 1578,"src": 3863,"name": "FILE_DEVICE_DISK"},{"import": 1578,"src": 3864,"name": "FILE_DEVICE_DISK_FILE_SYSTEM"},{"import": 1578,"src": 3865,"name": "FILE_DEVICE_FILE_SYSTEM"},{"import": 1578,"src": 3866,"name": "FILE_DEVICE_INPORT_PORT"},{"import": 1578,"src": 3867,"name": "FILE_DEVICE_KEYBOARD"},{"import": 1578,"src": 3868,"name": "FILE_DEVICE_MAILSLOT"},{"import": 1578,"src": 3869,"name": "FILE_DEVICE_MIDI_IN"},{"import": 1578,"src": 3870,"name": "FILE_DEVICE_MIDI_OUT"},{"import": 1578,"src": 3871,"name": "FILE_DEVICE_MOUSE"},{"import": 1578,"src": 3872,"name": "FILE_DEVICE_MULTI_UNC_PROVIDER"},{"import": 1578,"src": 3873,"name": "FILE_DEVICE_NAMED_PIPE"},{"import": 1578,"src": 3874,"name": "FILE_DEVICE_NETWORK"},{"import": 1578,"src": 3875,"name": "FILE_DEVICE_NETWORK_BROWSER"},{"import": 1578,"src": 3876,"name": "FILE_DEVICE_NETWORK_FILE_SYSTEM"},{"import": 1578,"src": 3877,"name": "FILE_DEVICE_NULL"},{"import": 1578,"src": 3878,"name": "FILE_DEVICE_PARALLEL_PORT"},{"import": 1578,"src": 3879,"name": "FILE_DEVICE_PHYSICAL_NETCARD"},{"import": 1578,"src": 3880,"name": "FILE_DEVICE_PRINTER"},{"import": 1578,"src": 3881,"name": "FILE_DEVICE_SCANNER"},{"import": 1578,"src": 3882,"name": "FILE_DEVICE_SERIAL_MOUSE_PORT"},{"import": 1578,"src": 3883,"name": "FILE_DEVICE_SERIAL_PORT"},{"import": 1578,"src": 3884,"name": "FILE_DEVICE_SCREEN"},{"import": 1578,"src": 3885,"name": "FILE_DEVICE_SOUND"},{"import": 1578,"src": 3886,"name": "FILE_DEVICE_STREAMS"},{"import": 1578,"src": 3887,"name": "FILE_DEVICE_TAPE"},{"import": 1578,"src": 3888,"name": "FILE_DEVICE_TAPE_FILE_SYSTEM"},{"import": 1578,"src": 3889,"name": "FILE_DEVICE_TRANSPORT"},{"import": 1578,"src": 3890,"name": "FILE_DEVICE_UNKNOWN"},{"import": 1578,"src": 3891,"name": "FILE_DEVICE_VIDEO"},{"import": 1578,"src": 3892,"name": "FILE_DEVICE_VIRTUAL_DISK"},{"import": 1578,"src": 3893,"name": "FILE_DEVICE_WAVE_IN"},{"import": 1578,"src": 3894,"name": "FILE_DEVICE_WAVE_OUT"},{"import": 1578,"src": 3895,"name": "FILE_DEVICE_8042_PORT"},{"import": 1578,"src": 3896,"name": "FILE_DEVICE_NETWORK_REDIRECTOR"},{"import": 1578,"src": 3897,"name": "FILE_DEVICE_BATTERY"},{"import": 1578,"src": 3898,"name": "FILE_DEVICE_BUS_EXTENDER"},{"import": 1578,"src": 3899,"name": "FILE_DEVICE_MODEM"},{"import": 1578,"src": 3900,"name": "FILE_DEVICE_VDM"},{"import": 1578,"src": 3901,"name": "FILE_DEVICE_MASS_STORAGE"},{"import": 1578,"src": 3902,"name": "FILE_DEVICE_SMB"},{"import": 1578,"src": 3903,"name": "FILE_DEVICE_KS"},{"import": 1578,"src": 3904,"name": "FILE_DEVICE_CHANGER"},{"import": 1578,"src": 3905,"name": "FILE_DEVICE_SMARTCARD"},{"import": 1578,"src": 3906,"name": "FILE_DEVICE_ACPI"},{"import": 1578,"src": 3907,"name": "FILE_DEVICE_DVD"},{"import": 1578,"src": 3908,"name": "FILE_DEVICE_FULLSCREEN_VIDEO"},{"import": 1578,"src": 3909,"name": "FILE_DEVICE_DFS_FILE_SYSTEM"},{"import": 1578,"src": 3910,"name": "FILE_DEVICE_DFS_VOLUME"},{"import": 1578,"src": 3911,"name": "FILE_DEVICE_SERENUM"},{"import": 1578,"src": 3912,"name": "FILE_DEVICE_TERMSRV"},{"import": 1578,"src": 3913,"name": "FILE_DEVICE_KSEC"},{"import": 1578,"src": 3914,"name": "FILE_DEVICE_FIPS"},{"import": 1578,"src": 3915,"name": "FILE_DEVICE_INFINIBAND"},{"import": 1578,"src": 3916,"name": "FILE_DEVICE_VMBUS"},{"import": 1578,"src": 3917,"name": "FILE_DEVICE_CRYPT_PROVIDER"},{"import": 1578,"src": 3918,"name": "FILE_DEVICE_WPD"},{"import": 1578,"src": 3919,"name": "FILE_DEVICE_BLUETOOTH"},{"import": 1578,"src": 3920,"name": "FILE_DEVICE_MT_COMPOSITE"},{"import": 1578,"src": 3921,"name": "FILE_DEVICE_MT_TRANSPORT"},{"import": 1578,"src": 3922,"name": "FILE_DEVICE_BIOMETRIC"},{"import": 1578,"src": 3923,"name": "FILE_DEVICE_PMI"},{"import": 1578,"src": 3924,"name": "FILE_DEVICE_EHSTOR"},{"import": 1578,"src": 3925,"name": "FILE_DEVICE_DEVAPI"},{"import": 1578,"src": 3926,"name": "FILE_DEVICE_GPIO"},{"import": 1578,"src": 3927,"name": "FILE_DEVICE_USBEX"},{"import": 1578,"src": 3928,"name": "FILE_DEVICE_CONSOLE"},{"import": 1578,"src": 3929,"name": "FILE_DEVICE_NFP"},{"import": 1578,"src": 3930,"name": "FILE_DEVICE_SYSENV"},{"import": 1578,"src": 3931,"name": "FILE_DEVICE_VIRTUAL_BLOCK"},{"import": 1578,"src": 3932,"name": "FILE_DEVICE_POINT_OF_SERVICE"},{"import": 1578,"src": 3933,"name": "FILE_DEVICE_STORAGE_REPLICATION"},{"import": 1578,"src": 3934,"name": "FILE_DEVICE_TRUST_ENV"},{"import": 1578,"src": 3935,"name": "FILE_DEVICE_UCM"},{"import": 1578,"src": 3936,"name": "FILE_DEVICE_UCMTCPCI"},{"import": 1578,"src": 3937,"name": "FILE_DEVICE_PERSISTENT_MEMORY"},{"import": 1578,"src": 3938,"name": "FILE_DEVICE_NVDIMM"},{"import": 1578,"src": 3939,"name": "FILE_DEVICE_HOLOGRAPHIC"},{"import": 1578,"src": 3940,"name": "FILE_DEVICE_SDFXHCI"},{"import": 1578,"src": 3941,"name": "TransferType"},{"import": 1578,"src": 3942,"name": "FILE_ANY_ACCESS"},{"import": 1578,"src": 3943,"name": "FILE_READ_ACCESS"},{"import": 1578,"src": 3944,"name": "FILE_WRITE_ACCESS"},{"import": 1578,"src": 3945,"name": "CTL_CODE"},{"import": 1578,"src": 3946,"name": "INVALID_HANDLE_VALUE"},{"import": 1578,"src": 3947,"name": "INVALID_FILE_ATTRIBUTES"},{"import": 1578,"src": 3948,"name": "FILE_ALL_INFORMATION"},{"import": 1578,"src": 3949,"name": "FILE_BASIC_INFORMATION"},{"import": 1578,"src": 3950,"name": "FILE_STANDARD_INFORMATION"},{"import": 1578,"src": 3951,"name": "FILE_INTERNAL_INFORMATION"},{"import": 1578,"src": 3952,"name": "FILE_EA_INFORMATION"},{"import": 1578,"src": 3953,"name": "FILE_ACCESS_INFORMATION"},{"import": 1578,"src": 3954,"name": "FILE_POSITION_INFORMATION"},{"import": 1578,"src": 3955,"name": "FILE_END_OF_FILE_INFORMATION"},{"import": 1578,"src": 3956,"name": "FILE_MODE_INFORMATION"},{"import": 1578,"src": 3957,"name": "FILE_ALIGNMENT_INFORMATION"},{"import": 1578,"src": 3958,"name": "FILE_NAME_INFORMATION"},{"import": 1578,"src": 3959,"name": "FILE_RENAME_INFORMATION"},{"import": 1578,"src": 3960,"name": "IO_STATUS_BLOCK","kind": "const","type": 592,"value": 1598},{"import": 1578,"src": 3961,"name": "FILE_INFORMATION_CLASS"},{"import": 1578,"src": 3962,"name": "OVERLAPPED","kind": "const","type": 592,"value": 1711},{"import": 1578,"src": 3963,"name": "OVERLAPPED_ENTRY"},{"import": 1578,"src": 3964,"name": "MAX_PATH","kind": "const","type": 690,"value": null},{"import": 1578,"src": 3965,"name": "FILE_INFO_BY_HANDLE_CLASS","kind": "const","type": 592,"value": 641},{"import": 1578,"src": 3966,"name": "FileBasicInfo"},{"import": 1578,"src": 3967,"name": "FileStandardInfo"},{"import": 1578,"src": 3968,"name": "FileNameInfo","kind": "const","type": 690,"value": null},{"import": 1578,"src": 3969,"name": "FileRenameInfo"},{"import": 1578,"src": 3970,"name": "FileDispositionInfo"},{"import": 1578,"src": 3971,"name": "FileAllocationInfo"},{"import": 1578,"src": 3972,"name": "FileEndOfFileInfo"},{"import": 1578,"src": 3973,"name": "FileStreamInfo"},{"import": 1578,"src": 3974,"name": "FileCompressionInfo"},{"import": 1578,"src": 3975,"name": "FileAttributeTagInfo"},{"import": 1578,"src": 3976,"name": "FileIdBothDirectoryInfo"},{"import": 1578,"src": 3977,"name": "FileIdBothDirectoryRestartInfo"},{"import": 1578,"src": 3978,"name": "FileIoPriorityHintInfo"},{"import": 1578,"src": 3979,"name": "FileRemoteProtocolInfo"},{"import": 1578,"src": 3980,"name": "FileFullDirectoryInfo"},{"import": 1578,"src": 3981,"name": "FileFullDirectoryRestartInfo"},{"import": 1578,"src": 3982,"name": "FileStorageInfo"},{"import": 1578,"src": 3983,"name": "FileAlignmentInfo"},{"import": 1578,"src": 3984,"name": "FileIdInfo"},{"import": 1578,"src": 3985,"name": "FileIdExtdDirectoryInfo"},{"import": 1578,"src": 3986,"name": "FileIdExtdDirectoryRestartInfo"},{"import": 1578,"src": 3987,"name": "BY_HANDLE_FILE_INFORMATION"},{"import": 1578,"src": 3988,"name": "FILE_NAME_INFO","kind": "const","type": 592,"value": 1835},{"import": 1578,"src": 3989,"name": "FILE_NAME_NORMALIZED"},{"import": 1578,"src": 3990,"name": "FILE_NAME_OPENED"},{"import": 1578,"src": 3991,"name": "VOLUME_NAME_DOS"},{"import": 1578,"src": 3992,"name": "VOLUME_NAME_GUID"},{"import": 1578,"src": 3993,"name": "VOLUME_NAME_NONE"},{"import": 1578,"src": 3994,"name": "VOLUME_NAME_NT"},{"import": 1578,"src": 3995,"name": "SECURITY_ATTRIBUTES","kind": "const","type": 592,"value": 1836},{"import": 1578,"src": 3996,"name": "PIPE_ACCESS_INBOUND"},{"import": 1578,"src": 3997,"name": "PIPE_ACCESS_OUTBOUND"},{"import": 1578,"src": 3998,"name": "PIPE_ACCESS_DUPLEX"},{"import": 1578,"src": 3999,"name": "PIPE_TYPE_BYTE"},{"import": 1578,"src": 4000,"name": "PIPE_TYPE_MESSAGE"},{"import": 1578,"src": 4001,"name": "PIPE_READMODE_BYTE"},{"import": 1578,"src": 4002,"name": "PIPE_READMODE_MESSAGE"},{"import": 1578,"src": 4003,"name": "PIPE_WAIT"},{"import": 1578,"src": 4004,"name": "PIPE_NOWAIT"},{"import": 1578,"src": 4005,"name": "GENERIC_READ","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4006,"name": "GENERIC_WRITE","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4007,"name": "GENERIC_EXECUTE"},{"import": 1578,"src": 4008,"name": "GENERIC_ALL"},{"import": 1578,"src": 4009,"name": "FILE_SHARE_DELETE","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4010,"name": "FILE_SHARE_READ","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4011,"name": "FILE_SHARE_WRITE","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4012,"name": "DELETE"},{"import": 1578,"src": 4013,"name": "READ_CONTROL"},{"import": 1578,"src": 4014,"name": "WRITE_DAC"},{"import": 1578,"src": 4015,"name": "WRITE_OWNER"},{"import": 1578,"src": 4016,"name": "SYNCHRONIZE","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4017,"name": "STANDARD_RIGHTS_READ"},{"import": 1578,"src": 4018,"name": "STANDARD_RIGHTS_WRITE"},{"import": 1578,"src": 4019,"name": "STANDARD_RIGHTS_EXECUTE"},{"import": 1578,"src": 4020,"name": "STANDARD_RIGHTS_REQUIRED"},{"import": 1578,"src": 4021,"name": "FILE_SUPERSEDE"},{"import": 1578,"src": 4022,"name": "FILE_OPEN","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4023,"name": "FILE_CREATE"},{"import": 1578,"src": 4024,"name": "FILE_OPEN_IF"},{"import": 1578,"src": 4025,"name": "FILE_OVERWRITE"},{"import": 1578,"src": 4026,"name": "FILE_OVERWRITE_IF"},{"import": 1578,"src": 4027,"name": "FILE_MAXIMUM_DISPOSITION"},{"import": 1578,"src": 4028,"name": "FILE_READ_DATA"},{"import": 1578,"src": 4029,"name": "FILE_LIST_DIRECTORY"},{"import": 1578,"src": 4030,"name": "FILE_WRITE_DATA"},{"import": 1578,"src": 4031,"name": "FILE_ADD_FILE"},{"import": 1578,"src": 4032,"name": "FILE_APPEND_DATA"},{"import": 1578,"src": 4033,"name": "FILE_ADD_SUBDIRECTORY"},{"import": 1578,"src": 4034,"name": "FILE_CREATE_PIPE_INSTANCE"},{"import": 1578,"src": 4035,"name": "FILE_READ_EA"},{"import": 1578,"src": 4036,"name": "FILE_WRITE_EA"},{"import": 1578,"src": 4037,"name": "FILE_EXECUTE"},{"import": 1578,"src": 4038,"name": "FILE_TRAVERSE"},{"import": 1578,"src": 4039,"name": "FILE_DELETE_CHILD"},{"import": 1578,"src": 4040,"name": "FILE_READ_ATTRIBUTES"},{"import": 1578,"src": 4041,"name": "FILE_WRITE_ATTRIBUTES"},{"import": 1578,"src": 4042,"name": "FILE_DIRECTORY_FILE","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4043,"name": "FILE_WRITE_THROUGH"},{"import": 1578,"src": 4044,"name": "FILE_SEQUENTIAL_ONLY"},{"import": 1578,"src": 4045,"name": "FILE_NO_INTERMEDIATE_BUFFERING"},{"import": 1578,"src": 4046,"name": "FILE_SYNCHRONOUS_IO_ALERT"},{"import": 1578,"src": 4047,"name": "FILE_SYNCHRONOUS_IO_NONALERT","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4048,"name": "FILE_NON_DIRECTORY_FILE","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4049,"name": "FILE_CREATE_TREE_CONNECTION"},{"import": 1578,"src": 4050,"name": "FILE_COMPLETE_IF_OPLOCKED"},{"import": 1578,"src": 4051,"name": "FILE_NO_EA_KNOWLEDGE"},{"import": 1578,"src": 4052,"name": "FILE_OPEN_FOR_RECOVERY"},{"import": 1578,"src": 4053,"name": "FILE_RANDOM_ACCESS"},{"import": 1578,"src": 4054,"name": "FILE_DELETE_ON_CLOSE"},{"import": 1578,"src": 4055,"name": "FILE_OPEN_BY_FILE_ID"},{"import": 1578,"src": 4056,"name": "FILE_OPEN_FOR_BACKUP_INTENT"},{"import": 1578,"src": 4057,"name": "FILE_NO_COMPRESSION"},{"import": 1578,"src": 4058,"name": "FILE_RESERVE_OPFILTER"},{"import": 1578,"src": 4059,"name": "FILE_OPEN_REPARSE_POINT","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4060,"name": "FILE_OPEN_OFFLINE_FILE"},{"import": 1578,"src": 4061,"name": "FILE_OPEN_FOR_FREE_SPACE_QUERY"},{"import": 1578,"src": 4062,"name": "CREATE_ALWAYS"},{"import": 1578,"src": 4063,"name": "CREATE_NEW"},{"import": 1578,"src": 4064,"name": "OPEN_ALWAYS"},{"import": 1578,"src": 4065,"name": "OPEN_EXISTING"},{"import": 1578,"src": 4066,"name": "TRUNCATE_EXISTING"},{"import": 1578,"src": 4067,"name": "FILE_ATTRIBUTE_ARCHIVE"},{"import": 1578,"src": 4068,"name": "FILE_ATTRIBUTE_COMPRESSED"},{"import": 1578,"src": 4069,"name": "FILE_ATTRIBUTE_DEVICE"},{"import": 1578,"src": 4070,"name": "FILE_ATTRIBUTE_DIRECTORY"},{"import": 1578,"src": 4071,"name": "FILE_ATTRIBUTE_ENCRYPTED"},{"import": 1578,"src": 4072,"name": "FILE_ATTRIBUTE_HIDDEN"},{"import": 1578,"src": 4073,"name": "FILE_ATTRIBUTE_INTEGRITY_STREAM"},{"import": 1578,"src": 4074,"name": "FILE_ATTRIBUTE_NORMAL","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4075,"name": "FILE_ATTRIBUTE_NOT_CONTENT_INDEXED"},{"import": 1578,"src": 4076,"name": "FILE_ATTRIBUTE_NO_SCRUB_DATA"},{"import": 1578,"src": 4077,"name": "FILE_ATTRIBUTE_OFFLINE"},{"import": 1578,"src": 4078,"name": "FILE_ATTRIBUTE_READONLY"},{"import": 1578,"src": 4079,"name": "FILE_ATTRIBUTE_RECALL_ON_DATA_ACCESS"},{"import": 1578,"src": 4080,"name": "FILE_ATTRIBUTE_RECALL_ON_OPEN"},{"import": 1578,"src": 4081,"name": "FILE_ATTRIBUTE_REPARSE_POINT"},{"import": 1578,"src": 4082,"name": "FILE_ATTRIBUTE_SPARSE_FILE"},{"import": 1578,"src": 4083,"name": "FILE_ATTRIBUTE_SYSTEM"},{"import": 1578,"src": 4084,"name": "FILE_ATTRIBUTE_TEMPORARY"},{"import": 1578,"src": 4085,"name": "FILE_ATTRIBUTE_VIRTUAL"},{"import": 1578,"src": 4086,"name": "CREATE_EVENT_INITIAL_SET"},{"import": 1578,"src": 4087,"name": "CREATE_EVENT_MANUAL_RESET"},{"import": 1578,"src": 4088,"name": "EVENT_ALL_ACCESS"},{"import": 1578,"src": 4089,"name": "EVENT_MODIFY_STATE"},{"import": 1578,"src": 4090,"name": "PROCESS_INFORMATION"},{"import": 1578,"src": 4091,"name": "STARTUPINFOW"},{"import": 1578,"src": 4092,"name": "STARTF_FORCEONFEEDBACK"},{"import": 1578,"src": 4093,"name": "STARTF_FORCEOFFFEEDBACK"},{"import": 1578,"src": 4094,"name": "STARTF_PREVENTPINNING"},{"import": 1578,"src": 4095,"name": "STARTF_RUNFULLSCREEN"},{"import": 1578,"src": 4096,"name": "STARTF_TITLEISAPPID"},{"import": 1578,"src": 4097,"name": "STARTF_TITLEISLINKNAME"},{"import": 1578,"src": 4098,"name": "STARTF_UNTRUSTEDSOURCE"},{"import": 1578,"src": 4099,"name": "STARTF_USECOUNTCHARS"},{"import": 1578,"src": 4100,"name": "STARTF_USEFILLATTRIBUTE"},{"import": 1578,"src": 4101,"name": "STARTF_USEHOTKEY"},{"import": 1578,"src": 4102,"name": "STARTF_USEPOSITION"},{"import": 1578,"src": 4103,"name": "STARTF_USESHOWWINDOW"},{"import": 1578,"src": 4104,"name": "STARTF_USESIZE"},{"import": 1578,"src": 4105,"name": "STARTF_USESTDHANDLES"},{"import": 1578,"src": 4106,"name": "INFINITE"},{"import": 1578,"src": 4107,"name": "MAXIMUM_WAIT_OBJECTS"},{"import": 1578,"src": 4108,"name": "WAIT_ABANDONED"},{"import": 1578,"src": 4109,"name": "WAIT_ABANDONED_0"},{"import": 1578,"src": 4110,"name": "WAIT_OBJECT_0"},{"import": 1578,"src": 4111,"name": "WAIT_TIMEOUT"},{"import": 1578,"src": 4112,"name": "WAIT_FAILED"},{"import": 1578,"src": 4113,"name": "HANDLE_FLAG_INHERIT"},{"import": 1578,"src": 4114,"name": "HANDLE_FLAG_PROTECT_FROM_CLOSE"},{"import": 1578,"src": 4115,"name": "MOVEFILE_COPY_ALLOWED"},{"import": 1578,"src": 4116,"name": "MOVEFILE_CREATE_HARDLINK"},{"import": 1578,"src": 4117,"name": "MOVEFILE_DELAY_UNTIL_REBOOT"},{"import": 1578,"src": 4118,"name": "MOVEFILE_FAIL_IF_NOT_TRACKABLE"},{"import": 1578,"src": 4119,"name": "MOVEFILE_REPLACE_EXISTING"},{"import": 1578,"src": 4120,"name": "MOVEFILE_WRITE_THROUGH"},{"import": 1578,"src": 4121,"name": "FILE_BEGIN","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4122,"name": "FILE_CURRENT","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4123,"name": "FILE_END"},{"import": 1578,"src": 4124,"name": "HEAP_CREATE_ENABLE_EXECUTE"},{"import": 1578,"src": 4125,"name": "HEAP_REALLOC_IN_PLACE_ONLY"},{"import": 1578,"src": 4126,"name": "HEAP_GENERATE_EXCEPTIONS"},{"import": 1578,"src": 4127,"name": "HEAP_NO_SERIALIZE"},{"import": 1578,"src": 4128,"name": "MEM_COMMIT","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4129,"name": "MEM_RESERVE","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4130,"name": "MEM_RESET"},{"import": 1578,"src": 4131,"name": "MEM_RESET_UNDO"},{"import": 1578,"src": 4132,"name": "MEM_LARGE_PAGES"},{"import": 1578,"src": 4133,"name": "MEM_PHYSICAL"},{"import": 1578,"src": 4134,"name": "MEM_TOP_DOWN"},{"import": 1578,"src": 4135,"name": "MEM_WRITE_WATCH"},{"import": 1578,"src": 4136,"name": "PAGE_EXECUTE"},{"import": 1578,"src": 4137,"name": "PAGE_EXECUTE_READ"},{"import": 1578,"src": 4138,"name": "PAGE_EXECUTE_READWRITE"},{"import": 1578,"src": 4139,"name": "PAGE_EXECUTE_WRITECOPY"},{"import": 1578,"src": 4140,"name": "PAGE_NOACCESS","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4141,"name": "PAGE_READONLY"},{"import": 1578,"src": 4142,"name": "PAGE_READWRITE","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4143,"name": "PAGE_WRITECOPY"},{"import": 1578,"src": 4144,"name": "PAGE_TARGETS_INVALID"},{"import": 1578,"src": 4145,"name": "PAGE_TARGETS_NO_UPDATE"},{"import": 1578,"src": 4146,"name": "PAGE_GUARD"},{"import": 1578,"src": 4147,"name": "PAGE_NOCACHE"},{"import": 1578,"src": 4148,"name": "PAGE_WRITECOMBINE"},{"import": 1578,"src": 4149,"name": "MEM_COALESCE_PLACEHOLDERS"},{"import": 1578,"src": 4150,"name": "MEM_RESERVE_PLACEHOLDERS"},{"import": 1578,"src": 4151,"name": "MEM_DECOMMIT","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4152,"name": "MEM_RELEASE","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4153,"name": "PTHREAD_START_ROUTINE"},{"import": 1578,"src": 4154,"name": "LPTHREAD_START_ROUTINE"},{"import": 1578,"src": 4155,"name": "WIN32_FIND_DATAW"},{"import": 1578,"src": 4156,"name": "FILETIME"},{"import": 1578,"src": 4157,"name": "SYSTEM_INFO"},{"import": 1578,"src": 4158,"name": "HRESULT"},{"import": 1578,"src": 4159,"name": "KNOWNFOLDERID"},{"import": 1578,"src": 4160,"name": "GUID"},{"import": 1578,"src": 4161,"name": "FOLDERID_LocalAppData"},{"import": 1578,"src": 4162,"name": "KF_FLAG_DEFAULT"},{"import": 1578,"src": 4163,"name": "KF_FLAG_NO_APPCONTAINER_REDIRECTION"},{"import": 1578,"src": 4164,"name": "KF_FLAG_CREATE"},{"import": 1578,"src": 4165,"name": "KF_FLAG_DONT_VERIFY"},{"import": 1578,"src": 4166,"name": "KF_FLAG_DONT_UNEXPAND"},{"import": 1578,"src": 4167,"name": "KF_FLAG_NO_ALIAS"},{"import": 1578,"src": 4168,"name": "KF_FLAG_INIT"},{"import": 1578,"src": 4169,"name": "KF_FLAG_DEFAULT_PATH"},{"import": 1578,"src": 4170,"name": "KF_FLAG_NOT_PARENT_RELATIVE"},{"import": 1578,"src": 4171,"name": "KF_FLAG_SIMPLE_IDLIST"},{"import": 1578,"src": 4172,"name": "KF_FLAG_ALIAS_ONLY"},{"import": 1578,"src": 4173,"name": "S_OK"},{"import": 1578,"src": 4174,"name": "E_NOTIMPL"},{"import": 1578,"src": 4175,"name": "E_NOINTERFACE"},{"import": 1578,"src": 4176,"name": "E_POINTER"},{"import": 1578,"src": 4177,"name": "E_ABORT"},{"import": 1578,"src": 4178,"name": "E_FAIL"},{"import": 1578,"src": 4179,"name": "E_UNEXPECTED"},{"import": 1578,"src": 4180,"name": "E_ACCESSDENIED"},{"import": 1578,"src": 4181,"name": "E_HANDLE"},{"import": 1578,"src": 4182,"name": "E_OUTOFMEMORY"},{"import": 1578,"src": 4183,"name": "E_INVALIDARG"},{"import": 1578,"src": 4184,"name": "FILE_FLAG_BACKUP_SEMANTICS"},{"import": 1578,"src": 4185,"name": "FILE_FLAG_DELETE_ON_CLOSE"},{"import": 1578,"src": 4186,"name": "FILE_FLAG_NO_BUFFERING"},{"import": 1578,"src": 4187,"name": "FILE_FLAG_OPEN_NO_RECALL"},{"import": 1578,"src": 4188,"name": "FILE_FLAG_OPEN_REPARSE_POINT"},{"import": 1578,"src": 4189,"name": "FILE_FLAG_OVERLAPPED"},{"import": 1578,"src": 4190,"name": "FILE_FLAG_POSIX_SEMANTICS"},{"import": 1578,"src": 4191,"name": "FILE_FLAG_RANDOM_ACCESS"},{"import": 1578,"src": 4192,"name": "FILE_FLAG_SESSION_AWARE"},{"import": 1578,"src": 4193,"name": "FILE_FLAG_SEQUENTIAL_SCAN"},{"import": 1578,"src": 4194,"name": "FILE_FLAG_WRITE_THROUGH"},{"import": 1578,"src": 4195,"name": "RECT"},{"import": 1578,"src": 4196,"name": "SMALL_RECT","kind": "const","type": 592,"value": 1837},{"import": 1578,"src": 4197,"name": "POINT"},{"import": 1578,"src": 4198,"name": "COORD","kind": "const","type": 592,"value": 1838},{"import": 1578,"src": 4199,"name": "CREATE_UNICODE_ENVIRONMENT"},{"import": 1578,"src": 4200,"name": "TLS_OUT_OF_INDEXES","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4201,"name": "IMAGE_TLS_DIRECTORY"},{"import": 1578,"src": 4202,"name": "IMAGE_TLS_DIRECTORY64"},{"import": 1578,"src": 4203,"name": "IMAGE_TLS_DIRECTORY32"},{"import": 1578,"src": 4204,"name": "PIMAGE_TLS_CALLBACK","kind": "const","type": 592,"value": 1839},{"import": 1578,"src": 4205,"name": "PROV_RSA_FULL"},{"import": 1578,"src": 4206,"name": "REGSAM"},{"import": 1578,"src": 4207,"name": "ACCESS_MASK","kind": "const","type": 592,"value": 641},{"import": 1578,"src": 4208,"name": "HKEY"},{"import": 1578,"src": 4209,"name": "HKEY__"},{"import": 1578,"src": 4210,"name": "LSTATUS"},{"import": 1578,"src": 4211,"name": "FILE_NOTIFY_INFORMATION"},{"import": 1578,"src": 4212,"name": "FILE_ACTION_ADDED"},{"import": 1578,"src": 4213,"name": "FILE_ACTION_REMOVED"},{"import": 1578,"src": 4214,"name": "FILE_ACTION_MODIFIED"},{"import": 1578,"src": 4215,"name": "FILE_ACTION_RENAMED_OLD_NAME"},{"import": 1578,"src": 4216,"name": "FILE_ACTION_RENAMED_NEW_NAME"},{"import": 1578,"src": 4217,"name": "LPOVERLAPPED_COMPLETION_ROUTINE"},{"import": 1578,"src": 4218,"name": "FILE_NOTIFY_CHANGE_CREATION"},{"import": 1578,"src": 4219,"name": "FILE_NOTIFY_CHANGE_SIZE"},{"import": 1578,"src": 4220,"name": "FILE_NOTIFY_CHANGE_SECURITY"},{"import": 1578,"src": 4221,"name": "FILE_NOTIFY_CHANGE_LAST_ACCESS"},{"import": 1578,"src": 4222,"name": "FILE_NOTIFY_CHANGE_LAST_WRITE"},{"import": 1578,"src": 4223,"name": "FILE_NOTIFY_CHANGE_DIR_NAME"},{"import": 1578,"src": 4224,"name": "FILE_NOTIFY_CHANGE_FILE_NAME"},{"import": 1578,"src": 4225,"name": "FILE_NOTIFY_CHANGE_ATTRIBUTES"},{"import": 1578,"src": 4226,"name": "CONSOLE_SCREEN_BUFFER_INFO","kind": "const","type": 592,"value": 1840},{"import": 1578,"src": 4227,"name": "FOREGROUND_BLUE","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4228,"name": "FOREGROUND_GREEN","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4229,"name": "FOREGROUND_RED","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4230,"name": "FOREGROUND_INTENSITY","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4231,"name": "LIST_ENTRY","kind": "const","type": 592,"value": 1826},{"import": 1578,"src": 4232,"name": "RTL_CRITICAL_SECTION_DEBUG","kind": "const","type": 592,"value": 1841},{"import": 1578,"src": 4233,"name": "RTL_CRITICAL_SECTION","kind": "const","type": 592,"value": 1842},{"import": 1578,"src": 4234,"name": "CRITICAL_SECTION"},{"import": 1578,"src": 4235,"name": "INIT_ONCE"},{"import": 1578,"src": 4236,"name": "INIT_ONCE_STATIC_INIT"},{"import": 1578,"src": 4237,"name": "INIT_ONCE_FN"},{"import": 1578,"src": 4238,"name": "RTL_RUN_ONCE"},{"import": 1578,"src": 4239,"name": "RTL_RUN_ONCE_INIT"},{"import": 1578,"src": 4240,"name": "COINIT_APARTMENTTHREADED"},{"import": 1578,"src": 4241,"name": "COINIT_MULTITHREADED"},{"import": 1578,"src": 4242,"name": "COINIT_DISABLE_OLE1DDE"},{"import": 1578,"src": 4243,"name": "COINIT_SPEED_OVER_MEMORY"},{"import": 1578,"src": 4244,"name": "COINIT"},{"import": 1578,"src": 4245,"name": "PATH_MAX_WIDE","kind": "const","type": 690,"value": null},{"import": 1578,"src": 4246,"name": "FORMAT_MESSAGE_ALLOCATE_BUFFER"},{"import": 1578,"src": 4247,"name": "FORMAT_MESSAGE_ARGUMENT_ARRAY"},{"import": 1578,"src": 4248,"name": "FORMAT_MESSAGE_FROM_HMODULE"},{"import": 1578,"src": 4249,"name": "FORMAT_MESSAGE_FROM_STRING"},{"import": 1578,"src": 4250,"name": "FORMAT_MESSAGE_FROM_SYSTEM"},{"import": 1578,"src": 4251,"name": "FORMAT_MESSAGE_IGNORE_INSERTS"},{"import": 1578,"src": 4252,"name": "FORMAT_MESSAGE_MAX_WIDTH_MASK"},{"import": 1578,"src": 4253,"name": "EXCEPTION_DATATYPE_MISALIGNMENT"},{"import": 1578,"src": 4254,"name": "EXCEPTION_ACCESS_VIOLATION"},{"import": 1578,"src": 4255,"name": "EXCEPTION_ILLEGAL_INSTRUCTION"},{"import": 1578,"src": 4256,"name": "EXCEPTION_STACK_OVERFLOW"},{"import": 1578,"src": 4257,"name": "EXCEPTION_CONTINUE_SEARCH"},{"import": 1578,"src": 4258,"name": "EXCEPTION_RECORD"},{"import": 1578,"src": 4259,"name": "EXCEPTION_POINTERS"},{"import": 1578,"src": 4260,"name": "VECTORED_EXCEPTION_HANDLER"},{"import": 1578,"src": 4261,"name": "OBJECT_ATTRIBUTES","kind": "const","type": 592,"value": 1843},{"import": 1578,"src": 4262,"name": "OBJ_INHERIT"},{"import": 1578,"src": 4263,"name": "OBJ_PERMANENT"},{"import": 1578,"src": 4264,"name": "OBJ_EXCLUSIVE"},{"import": 1578,"src": 4265,"name": "OBJ_CASE_INSENSITIVE"},{"import": 1578,"src": 4266,"name": "OBJ_OPENIF"},{"import": 1578,"src": 4267,"name": "OBJ_OPENLINK"},{"import": 1578,"src": 4268,"name": "OBJ_KERNEL_HANDLE"},{"import": 1578,"src": 4269,"name": "OBJ_VALID_ATTRIBUTES"},{"import": 1578,"src": 4270,"name": "UNICODE_STRING","kind": "const","type": 592,"value": 1822},{"import": 1578,"src": 4271,"name": "ACTIVATION_CONTEXT_DATA","kind": "const","type": 592,"value": 1844},{"import": 1578,"src": 4272,"name": "ASSEMBLY_STORAGE_MAP","kind": "const","type": 592,"value": 1845},{"import": 1578,"src": 4273,"name": "FLS_CALLBACK_INFO","kind": "const","type": 592,"value": 1846},{"import": 1578,"src": 4274,"name": "RTL_BITMAP","kind": "const","type": 592,"value": 1847},{"import": 1578,"src": 4275,"name": "KAFFINITY","kind": "const","type": 592,"value": 602},{"import": 1578,"src": 4276,"name": "TEB","kind": "const","type": 592,"value": 1587},{"import": 1578,"src": 4277,"name": "PEB","kind": "const","type": 592,"value": 1544},{"import": 1578,"src": 4278,"name": "PEB_LDR_DATA","kind": "const","type": 592,"value": 1848},{"import": 1578,"src": 4279,"name": "RTL_USER_PROCESS_PARAMETERS","kind": "const","type": 592,"value": 1849},{"import": 1578,"src": 4280,"name": "RTL_DRIVE_LETTER_CURDIR","kind": "const","type": 592,"value": 1850},{"import": 1578,"src": 4281,"name": "PPS_POST_PROCESS_INIT_ROUTINE"},{"import": 1578,"src": 4282,"name": "FILE_BOTH_DIR_INFORMATION"},{"import": 1578,"src": 4283,"name": "FILE_BOTH_DIRECTORY_INFORMATION"},{"import": 1578,"src": 4284,"name": "IO_APC_ROUTINE","kind": "const","type": 592,"value": 1851},{"import": 1578,"src": 4285,"name": "CURDIR","kind": "const","type": 592,"value": 1852},{"import": 1578,"src": 4286,"name": "DUPLICATE_SAME_ACCESS"},{"import": 1578,"src": 4287,"name": "MODULEINFO","kind": "const","type": 592,"value": 1853},{"import": 1578,"src": 4288,"name": "PSAPI_WS_WATCH_INFORMATION"},{"import": 1578,"src": 4289,"name": "PROCESS_MEMORY_COUNTERS"},{"import": 1578,"src": 4290,"name": "PROCESS_MEMORY_COUNTERS_EX"},{"import": 1578,"src": 4291,"name": "PERFORMANCE_INFORMATION"},{"import": 1578,"src": 4292,"name": "ENUM_PAGE_FILE_INFORMATION"},{"import": 1578,"src": 4293,"name": "PENUM_PAGE_FILE_CALLBACKW"},{"import": 1578,"src": 4294,"name": "PENUM_PAGE_FILE_CALLBACKA"},{"import": 1578,"src": 4295,"name": "PSAPI_WS_WATCH_INFORMATION_EX"},{"import": 1578,"src": 4296,"name": "OSVERSIONINFOW"},{"import": 1578,"src": 4297,"name": "RTL_OSVERSIONINFOW"},{"import": 1578,"src": 4298,"name": "REPARSE_DATA_BUFFER"},{"import": 1578,"src": 4299,"name": "SYMBOLIC_LINK_REPARSE_BUFFER"},{"import": 1578,"src": 4300,"name": "MOUNT_POINT_REPARSE_BUFFER"},{"import": 1578,"src": 4301,"name": "MAXIMUM_REPARSE_DATA_BUFFER_SIZE"},{"import": 1578,"src": 4302,"name": "FSCTL_SET_REPARSE_POINT"},{"import": 1578,"src": 4303,"name": "FSCTL_GET_REPARSE_POINT"},{"import": 1578,"src": 4304,"name": "IO_REPARSE_TAG_SYMLINK"},{"import": 1578,"src": 4305,"name": "IO_REPARSE_TAG_MOUNT_POINT"},{"import": 1578,"src": 4306,"name": "SYMLINK_FLAG_RELATIVE"},{"import": 1578,"src": 4307,"name": "SYMBOLIC_LINK_FLAG_DIRECTORY"},{"import": 1578,"src": 4308,"name": "SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE"},{"import": 1578,"src": 4309,"name": "MOUNTMGR_MOUNT_POINT"},{"import": 1578,"src": 4310,"name": "MOUNTMGR_MOUNT_POINTS"},{"import": 1578,"src": 4311,"name": "IOCTL_MOUNTMGR_QUERY_POINTS"},{"import": 1578,"src": 4312,"name": "OBJECT_INFORMATION_CLASS"},{"import": 1578,"src": 4313,"name": "OBJECT_NAME_INFORMATION"},{"import": 1578,"src": 4314,"name": "SRWLOCK","kind": "const","type": 592,"value": 602},{"import": 1578,"src": 4315,"name": "SRWLOCK_INIT","kind": "const","type": 602,"value": 0},{"import": 1578,"src": 4316,"name": "CONDITION_VARIABLE"},{"import": 1578,"src": 4317,"name": "CONDITION_VARIABLE_INIT"},{"import": 1578,"src": 4318,"name": "FILE_SKIP_COMPLETION_PORT_ON_SUCCESS"},{"import": 1578,"src": 4319,"name": "FILE_SKIP_SET_EVENT_ON_HANDLE"},{"import": 1578,"src": 4320,"name": "CTRL_C_EVENT"},{"import": 1578,"src": 4321,"name": "CTRL_BREAK_EVENT"},{"import": 1578,"src": 4322,"name": "CTRL_CLOSE_EVENT"},{"import": 1578,"src": 4323,"name": "CTRL_LOGOFF_EVENT"},{"import": 1578,"src": 4324,"name": "CTRL_SHUTDOWN_EVENT"},{"import": 1578,"src": 4325,"name": "HANDLER_ROUTINE"},{"import": 1578,"src": 4326,"name": "M128A"},{"import": 1578,"src": 4327,"name": "XMM_SAVE_AREA32"},{"import": 1578,"src": 4328,"name": "CONTEXT"},{"import": 1578,"src": 4329,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1578,"src": 4330,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1578,"src": 4331,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1578,"src": 4332,"name": "assert","kind": "const","type": 6,"value": 6},{"import": 1578,"src": 4333,"name": "math","kind": "const","type": 592,"value": 1347},{"import": 1578,"src": 4334,"name": "maxInt","kind": "const","type": 689,"value": 713},{"import": 1578,"src": 4335,"name": "native_arch","kind": "const","type": 646,"value": null},{"import": 1578,"src": 4336,"name": "parseReadlinkPath"},{"import": 1578,"src": 4337,"name": "wsa_startup_mutex"},{"import": 1578,"src": 4338,"name": "GetModuleFileNameError"},{"import": 1578,"src": 255,"name": "getFullPathNameW","kind": "const","type": 420,"value": 449},{"import": 1578,"src": 4339,"name": "MAKELANGID"},{"import": 1599,"src": 4340,"name": "NTSTATUS","kind": "const","type": 592,"value": 1180},{"import": 1623,"src": 4341,"name": "Wyhash","kind": "const","type": 592,"value": 1641},{"import": 1623,"src": 4342,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1623,"src": 4343,"name": "mem","kind": "const","type": 592,"value": 1286},{"import": 1623,"src": 4344,"name": "primes","kind": "const","type": 1862,"value": null},{"import": 1623,"src": 341,"name": "read_bytes","kind": "const","type": 1863,"value": 838},{"import": 1623,"src": 342,"name": "read_8bytes_swapped","kind": "const","type": 582,"value": 661},{"import": 1623,"src": 344,"name": "mum","kind": "const","type": 583,"value": 663},{"import": 1623,"src": 340,"name": "mix0","kind": "const","type": 581,"value": 657},{"import": 1623,"src": 343,"name": "mix1","kind": "const","type": 581,"value": 662},{"import": 1623,"src": 4345,"name": "WyhashStateless","kind": "const","type": 592,"value": 1209},{"import": 1623,"src": 4346,"name": "expectEqual"},{"import": 1263,"src": 4347,"name": "Range","kind": "const","type": 592,"value": 1864},{"import": 1263,"src": 4348,"name": "order"},{"import": 1263,"src": 4349,"name": "parse"},{"import": 1263,"src": 4350,"name": "format"},{"import": 1640,"src": 4351,"name": "TraitFn","kind": "const","type": 592,"value": 1865},{"import": 1640,"src": 4352,"name": "multiTrait"},{"import": 1640,"src": 398,"name": "hasFn","kind": "const","type": 730,"value": 724},{"import": 1640,"src": 4353,"name": "hasField"},{"import": 1640,"src": 379,"name": "is","kind": "const","type": 662,"value": 703},{"import": 1640,"src": 382,"name": "isPtrTo","kind": "const","type": 667,"value": 706},{"import": 1640,"src": 4354,"name": "isSliceOf"},{"import": 1640,"src": 4355,"name": "isExtern"},{"import": 1640,"src": 4356,"name": "isPacked"},{"import": 1640,"src": 4357,"name": "isUnsignedInt"},{"import": 1640,"src": 4358,"name": "isSignedInt"},{"import": 1640,"src": 384,"name": "isSingleItemPtr","kind": "const","type": 670,"value": 708},{"import": 1640,"src": 4359,"name": "isManyItemPtr"},{"import": 1640,"src": 381,"name": "isSlice","kind": "const","type": 666,"value": 705},{"import": 1640,"src": 4360,"name": "isIndexable"},{"import": 1640,"src": 409,"name": "isNumber","kind": "const","type": 826,"value": 740},{"import": 1640,"src": 407,"name": "isIntegral","kind": "const","type": 822,"value": 738},{"import": 1640,"src": 4361,"name": "isFloat"},{"import": 1640,"src": 4362,"name": "isConstPtr"},{"import": 1640,"src": 400,"name": "isContainer","kind": "const","type": 733,"value": 726},{"import": 1640,"src": 4363,"name": "isTuple"},{"import": 1640,"src": 4364,"name": "isZigString"},{"import": 1640,"src": 4365,"name": "hasDecls"},{"import": 1640,"src": 4366,"name": "hasFields"},{"import": 1640,"src": 4367,"name": "hasFunctions"},{"import": 1640,"src": 352,"name": "hasUniqueRepresentation","kind": "const","type": 738,"value": 730},{"import": 1640,"src": 4368,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1640,"src": 4369,"name": "mem"},{"import": 1640,"src": 4370,"name": "debug"},{"import": 1640,"src": 4371,"name": "testing"},{"import": 1640,"src": 4372,"name": "warn"},{"import": 1640,"src": 4373,"name": "meta","kind": "const","type": 592,"value": 1348},{"import": 1623,"src": 4374,"name": "init"},{"import": 1623,"src": 4375,"name": "update"},{"import": 1623,"src": 4376,"name": "final"},{"import": 1623,"src": 211,"name": "hash","kind": "const","type": 357,"value": 373},{"import": 1230,"src": 4377,"name": "latest"},{"import": 1230,"src": 4378,"name": "known_win10_build_numbers"},{"import": 1230,"src": 4379,"name": "isAtLeast"},{"import": 1230,"src": 4380,"name": "Range","kind": "const","type": 592,"value": 1866},{"import": 1230,"src": 4381,"name": "format"},{"import": 1230,"src": 4382,"name": "includesVersion"},{"import": 1230,"src": 4383,"name": "isAtLeast"},{"import": 1230,"src": 4384,"name": "default"},{"import": 1251,"src": 4385,"name": "_i386"},{"import": 1251,"src": 4386,"name": "_i486"},{"import": 1251,"src": 4387,"name": "_i586"},{"import": 1251,"src": 4388,"name": "_i686"},{"import": 1251,"src": 4389,"name": "alderlake"},{"import": 1251,"src": 4390,"name": "amdfam10"},{"import": 1251,"src": 4391,"name": "athlon"},{"import": 1251,"src": 4392,"name": "athlon64"},{"import": 1251,"src": 4393,"name": "athlon64_sse3"},{"import": 1251,"src": 4394,"name": "athlon_4"},{"import": 1251,"src": 4395,"name": "athlon_fx"},{"import": 1251,"src": 4396,"name": "athlon_mp"},{"import": 1251,"src": 4397,"name": "athlon_tbird"},{"import": 1251,"src": 4398,"name": "athlon_xp"},{"import": 1251,"src": 4399,"name": "atom"},{"import": 1251,"src": 4400,"name": "barcelona"},{"import": 1251,"src": 4401,"name": "bdver1"},{"import": 1251,"src": 4402,"name": "bdver2"},{"import": 1251,"src": 4403,"name": "bdver3"},{"import": 1251,"src": 4404,"name": "bdver4"},{"import": 1251,"src": 4405,"name": "bonnell"},{"import": 1251,"src": 4406,"name": "broadwell"},{"import": 1251,"src": 4407,"name": "btver1"},{"import": 1251,"src": 4408,"name": "btver2"},{"import": 1251,"src": 4409,"name": "c3"},{"import": 1251,"src": 4410,"name": "c3_2"},{"import": 1251,"src": 4411,"name": "cannonlake"},{"import": 1251,"src": 4412,"name": "cascadelake"},{"import": 1251,"src": 4413,"name": "cooperlake"},{"import": 1251,"src": 4414,"name": "core2"},{"import": 1251,"src": 4415,"name": "core_avx2"},{"import": 1251,"src": 4416,"name": "core_avx_i"},{"import": 1251,"src": 4417,"name": "corei7"},{"import": 1251,"src": 4418,"name": "corei7_avx"},{"import": 1251,"src": 4419,"name": "generic"},{"import": 1251,"src": 4420,"name": "geode"},{"import": 1251,"src": 4421,"name": "goldmont"},{"import": 1251,"src": 4422,"name": "goldmont_plus"},{"import": 1251,"src": 4423,"name": "haswell","kind": "const","type": 1651,"value": null},{"import": 1251,"src": 4424,"name": "icelake_client"},{"import": 1251,"src": 4425,"name": "icelake_server"},{"import": 1251,"src": 4426,"name": "ivybridge"},{"import": 1251,"src": 4427,"name": "k6"},{"import": 1251,"src": 4428,"name": "k6_2"},{"import": 1251,"src": 4429,"name": "k6_3"},{"import": 1251,"src": 4430,"name": "k8"},{"import": 1251,"src": 4431,"name": "k8_sse3"},{"import": 1251,"src": 4432,"name": "knl"},{"import": 1251,"src": 4433,"name": "knm"},{"import": 1251,"src": 4434,"name": "lakemont"},{"import": 1251,"src": 4435,"name": "nehalem"},{"import": 1251,"src": 4436,"name": "nocona"},{"import": 1251,"src": 4437,"name": "opteron"},{"import": 1251,"src": 4438,"name": "opteron_sse3"},{"import": 1251,"src": 4439,"name": "penryn"},{"import": 1251,"src": 4440,"name": "pentium"},{"import": 1251,"src": 4441,"name": "pentium2"},{"import": 1251,"src": 4442,"name": "pentium3"},{"import": 1251,"src": 4443,"name": "pentium3m"},{"import": 1251,"src": 4444,"name": "pentium4"},{"import": 1251,"src": 4445,"name": "pentium4m"},{"import": 1251,"src": 4446,"name": "pentium_m"},{"import": 1251,"src": 4447,"name": "pentium_mmx"},{"import": 1251,"src": 4448,"name": "pentiumpro"},{"import": 1251,"src": 4449,"name": "prescott"},{"import": 1251,"src": 4450,"name": "rocketlake"},{"import": 1251,"src": 4451,"name": "sandybridge"},{"import": 1251,"src": 4452,"name": "sapphirerapids"},{"import": 1251,"src": 4453,"name": "silvermont"},{"import": 1251,"src": 4454,"name": "skx"},{"import": 1251,"src": 4455,"name": "skylake"},{"import": 1251,"src": 4456,"name": "skylake_avx512"},{"import": 1251,"src": 4457,"name": "slm"},{"import": 1251,"src": 4458,"name": "tigerlake"},{"import": 1251,"src": 4459,"name": "tremont"},{"import": 1251,"src": 4460,"name": "westmere"},{"import": 1251,"src": 4461,"name": "winchip2"},{"import": 1251,"src": 4462,"name": "winchip_c6"},{"import": 1251,"src": 4463,"name": "x86_64"},{"import": 1251,"src": 4464,"name": "x86_64_v2"},{"import": 1251,"src": 4465,"name": "x86_64_v3"},{"import": 1251,"src": 4466,"name": "x86_64_v4"},{"import": 1251,"src": 4467,"name": "yonah"},{"import": 1251,"src": 4468,"name": "znver1"},{"import": 1251,"src": 4469,"name": "znver2"},{"import": 1251,"src": 4470,"name": "znver3"},{"import": 1230,"src": 4471,"name": "Set","kind": "const","type": 592,"value": 835},{"import": 1230,"src": 359,"name": "feature_set_fns","kind": "const","type": 591,"value": 683},{"import": 1230,"src": 4472,"name": "toCpu"},{"import": 1230,"src": 4473,"name": "generic"},{"import": 1230,"src": 4474,"name": "baseline"},{"import": 1263,"src": 4475,"name": "Modifier","kind": "const","type": 592,"value": 1868},{"import": 1263,"src": 4476,"name": "FnDecl","kind": "const","type": 592,"value": 1870},{"import": 1301,"src": 4477,"name": "NextTickNode","kind": "const","type": 592,"value": 1294},{"import": 1301,"src": 4478,"name": "ResumeNode","kind": "const","type": 592,"value": 1309},{"import": 1301,"src": 4479,"name": "instance","kind": "const","type": 1871,"value": "null"},{"import": 1301,"src": 4480,"name": "init"},{"import": 1301,"src": 4481,"name": "initSingleThreaded"},{"import": 1301,"src": 4482,"name": "initMultiThreaded"},{"import": 1301,"src": 4483,"name": "initThreadPool"},{"import": 1301,"src": 4484,"name": "deinit"},{"import": 1301,"src": 4485,"name": "linuxAddFd"},{"import": 1301,"src": 4486,"name": "linuxModFd"},{"import": 1301,"src": 4487,"name": "linuxRemoveFd"},{"import": 1301,"src": 4488,"name": "linuxWaitFd"},{"import": 1301,"src": 4489,"name": "waitUntilFdReadable"},{"import": 1301,"src": 4490,"name": "waitUntilFdWritable"},{"import": 1301,"src": 4491,"name": "waitUntilFdWritableOrReadable"},{"import": 1301,"src": 4492,"name": "bsdWaitKev"},{"import": 1301,"src": 4493,"name": "bsdAddKev"},{"import": 1301,"src": 4494,"name": "bsdRemoveKev"},{"import": 1301,"src": 4495,"name": "onNextTick"},{"import": 1301,"src": 4496,"name": "cancelOnNextTick"},{"import": 1301,"src": 4497,"name": "run"},{"import": 1301,"src": 4498,"name": "runDetached"},{"import": 1301,"src": 4499,"name": "yield"},{"import": 1301,"src": 4500,"name": "startCpuBoundOperation"},{"import": 1301,"src": 4501,"name": "beginOneEvent"},{"import": 1301,"src": 4502,"name": "finishOneEvent"},{"import": 1301,"src": 4503,"name": "sleep"},{"import": 1301,"src": 4504,"name": "accept"},{"import": 1301,"src": 4505,"name": "connect"},{"import": 1301,"src": 4506,"name": "openZ"},{"import": 1301,"src": 4507,"name": "openatZ"},{"import": 1301,"src": 4508,"name": "close"},{"import": 1301,"src": 4509,"name": "read"},{"import": 1301,"src": 4510,"name": "readv"},{"import": 1301,"src": 4511,"name": "pread"},{"import": 1301,"src": 4512,"name": "preadv"},{"import": 1301,"src": 4513,"name": "write"},{"import": 1301,"src": 4514,"name": "writev"},{"import": 1301,"src": 4515,"name": "pwrite"},{"import": 1301,"src": 4516,"name": "pwritev"},{"import": 1301,"src": 4517,"name": "sendto"},{"import": 1301,"src": 4518,"name": "recvfrom"},{"import": 1301,"src": 4519,"name": "faccessatZ"},{"import": 1301,"src": 4520,"name": "Request","kind": "const","type": 592,"value": 722},{"import": 1301,"src": 4521,"name": "global_instance_state"},{"import": 1301,"src": 4522,"name": "default_instance","kind": "const","type": 1871,"value": "null"},{"import": 1301,"src": 4523,"name": "InitOsDataError"},{"import": 1301,"src": 4524,"name": "wakeup_bytes"},{"import": 1301,"src": 4525,"name": "initOsData"},{"import": 1301,"src": 4526,"name": "deinitOsData"},{"import": 1301,"src": 4527,"name": "dispatch"},{"import": 1301,"src": 4528,"name": "DelayQueue","kind": "const","type": 592,"value": 1872},{"import": 1301,"src": 4529,"name": "workerRun"},{"import": 1301,"src": 4530,"name": "posixFsRequest"},{"import": 1301,"src": 4531,"name": "posixFsCancel"},{"import": 1301,"src": 4532,"name": "posixFsRun"},{"import": 1301,"src": 4533,"name": "OsData","kind": "const","type": 592,"value": 1873},{"import": 1301,"src": 4534,"name": "KEventData"},{"import": 1301,"src": 4535,"name": "LinuxOsData"},{"import": 1301,"src": 4536,"name": "Error","kind": "const","type": 592,"value": 644},{"import": 1301,"src": 4537,"name": "Error","kind": "const","type": 592,"value": 644},{"import": 1301,"src": 4538,"name": "Error","kind": "const","type": 592,"value": 608},{"import": 1301,"src": 4539,"name": "Error","kind": "const","type": 592,"value": 608},{"import": 1301,"src": 4540,"name": "Error","kind": "const","type": 592,"value": 1788},{"import": 1301,"src": 4541,"name": "Error","kind": "const","type": 592,"value": 1788},{"import": 1301,"src": 4542,"name": "Error","kind": "const","type": 592,"value": 1787},{"import": 1301,"src": 4543,"name": "Error","kind": "const","type": 592,"value": 1787},{"import": 1301,"src": 4544,"name": "Error","kind": "const","type": 592,"value": 1789},{"import": 1301,"src": 4545,"name": "Error","kind": "const","type": 592,"value": 1789},{"import": 1301,"src": 4546,"name": "Error","kind": "const","type": 592,"value": 1791},{"import": 1310,"src": 4547,"name": "Flags","kind": "const","type": 592,"value": 1884},{"import": 1728,"src": 4548,"name": "padding"},{"import": 1728,"src": 4549,"name": "array_type"},{"import": 1728,"src": 4550,"name": "class_type"},{"import": 1728,"src": 4551,"name": "entry_point","kind": "const","type": 690,"value": null},{"import": 1728,"src": 4552,"name": "enumeration_type"},{"import": 1728,"src": 4553,"name": "formal_parameter"},{"import": 1728,"src": 4554,"name": "imported_declaration"},{"import": 1728,"src": 4555,"name": "label"},{"import": 1728,"src": 4556,"name": "lexical_block"},{"import": 1728,"src": 4557,"name": "member"},{"import": 1728,"src": 4558,"name": "pointer_type"},{"import": 1728,"src": 4559,"name": "reference_type"},{"import": 1728,"src": 4560,"name": "compile_unit","kind": "const","type": 690,"value": null},{"import": 1728,"src": 4561,"name": "string_type"},{"import": 1728,"src": 4562,"name": "structure_type"},{"import": 1728,"src": 4563,"name": "subroutine","kind": "const","type": 690,"value": null},{"import": 1728,"src": 4564,"name": "subroutine_type"},{"import": 1728,"src": 4565,"name": "typedef"},{"import": 1728,"src": 4566,"name": "union_type"},{"import": 1728,"src": 4567,"name": "unspecified_parameters"},{"import": 1728,"src": 4568,"name": "variant"},{"import": 1728,"src": 4569,"name": "common_block"},{"import": 1728,"src": 4570,"name": "common_inclusion"},{"import": 1728,"src": 4571,"name": "inheritance"},{"import": 1728,"src": 4572,"name": "inlined_subroutine","kind": "const","type": 690,"value": null},{"import": 1728,"src": 4573,"name": "module"},{"import": 1728,"src": 4574,"name": "ptr_to_member_type"},{"import": 1728,"src": 4575,"name": "set_type"},{"import": 1728,"src": 4576,"name": "subrange_type"},{"import": 1728,"src": 4577,"name": "with_stmt"},{"import": 1728,"src": 4578,"name": "access_declaration"},{"import": 1728,"src": 4579,"name": "base_type"},{"import": 1728,"src": 4580,"name": "catch_block"},{"import": 1728,"src": 4581,"name": "const_type"},{"import": 1728,"src": 4582,"name": "constant"},{"import": 1728,"src": 4583,"name": "enumerator"},{"import": 1728,"src": 4584,"name": "file_type"},{"import": 1728,"src": 4585,"name": "friend"},{"import": 1728,"src": 4586,"name": "namelist"},{"import": 1728,"src": 4587,"name": "namelist_item"},{"import": 1728,"src": 4588,"name": "packed_type"},{"import": 1728,"src": 4589,"name": "subprogram","kind": "const","type": 690,"value": null},{"import": 1728,"src": 4590,"name": "template_type_param"},{"import": 1728,"src": 4591,"name": "template_value_param"},{"import": 1728,"src": 4592,"name": "thrown_type"},{"import": 1728,"src": 4593,"name": "try_block"},{"import": 1728,"src": 4594,"name": "variant_part"},{"import": 1728,"src": 4595,"name": "variable"},{"import": 1728,"src": 4596,"name": "volatile_type"},{"import": 1728,"src": 4597,"name": "dwarf_procedure"},{"import": 1728,"src": 4598,"name": "restrict_type"},{"import": 1728,"src": 4599,"name": "interface_type"},{"import": 1728,"src": 4600,"name": "namespace"},{"import": 1728,"src": 4601,"name": "imported_module"},{"import": 1728,"src": 4602,"name": "unspecified_type"},{"import": 1728,"src": 4603,"name": "partial_unit"},{"import": 1728,"src": 4604,"name": "imported_unit"},{"import": 1728,"src": 4605,"name": "condition"},{"import": 1728,"src": 4606,"name": "shared_type"},{"import": 1728,"src": 4607,"name": "type_unit"},{"import": 1728,"src": 4608,"name": "rvalue_reference_type"},{"import": 1728,"src": 4609,"name": "template_alias"},{"import": 1728,"src": 4610,"name": "lo_user"},{"import": 1728,"src": 4611,"name": "hi_user"},{"import": 1728,"src": 4612,"name": "MIPS_loop"},{"import": 1728,"src": 4613,"name": "HP_array_descriptor"},{"import": 1728,"src": 4614,"name": "HP_Bliss_field"},{"import": 1728,"src": 4615,"name": "HP_Bliss_field_set"},{"import": 1728,"src": 4616,"name": "format_label"},{"import": 1728,"src": 4617,"name": "function_template"},{"import": 1728,"src": 4618,"name": "class_template"},{"import": 1728,"src": 4619,"name": "GNU_BINCL"},{"import": 1728,"src": 4620,"name": "GNU_EINCL"},{"import": 1728,"src": 4621,"name": "GNU_template_template_param"},{"import": 1728,"src": 4622,"name": "GNU_template_parameter_pack"},{"import": 1728,"src": 4623,"name": "GNU_formal_parameter_pack"},{"import": 1728,"src": 4624,"name": "GNU_call_site"},{"import": 1728,"src": 4625,"name": "GNU_call_site_parameter"},{"import": 1728,"src": 4626,"name": "upc_shared_type"},{"import": 1728,"src": 4627,"name": "upc_strict_type"},{"import": 1728,"src": 4628,"name": "upc_relaxed_type"},{"import": 1728,"src": 4629,"name": "PGI_kanji_type"},{"import": 1728,"src": 4630,"name": "PGI_interface_block"},{"import": 1729,"src": 4631,"name": "sibling"},{"import": 1729,"src": 4632,"name": "location"},{"import": 1729,"src": 4633,"name": "name","kind": "const","type": 690,"value": null},{"import": 1729,"src": 4634,"name": "ordering"},{"import": 1729,"src": 4635,"name": "subscr_data"},{"import": 1729,"src": 4636,"name": "byte_size"},{"import": 1729,"src": 4637,"name": "bit_offset"},{"import": 1729,"src": 4638,"name": "bit_size"},{"import": 1729,"src": 4639,"name": "element_list"},{"import": 1729,"src": 4640,"name": "stmt_list","kind": "const","type": 690,"value": null},{"import": 1729,"src": 4641,"name": "low_pc","kind": "const","type": 690,"value": null},{"import": 1729,"src": 4642,"name": "high_pc","kind": "const","type": 690,"value": null},{"import": 1729,"src": 4643,"name": "language"},{"import": 1729,"src": 4644,"name": "member"},{"import": 1729,"src": 4645,"name": "discr"},{"import": 1729,"src": 4646,"name": "discr_value"},{"import": 1729,"src": 4647,"name": "visibility"},{"import": 1729,"src": 4648,"name": "import"},{"import": 1729,"src": 4649,"name": "string_length"},{"import": 1729,"src": 4650,"name": "common_reference"},{"import": 1729,"src": 4651,"name": "comp_dir","kind": "const","type": 690,"value": null},{"import": 1729,"src": 4652,"name": "const_value"},{"import": 1729,"src": 4653,"name": "containing_type"},{"import": 1729,"src": 4654,"name": "default_value"},{"import": 1729,"src": 4655,"name": "inline"},{"import": 1729,"src": 4656,"name": "is_optional"},{"import": 1729,"src": 4657,"name": "lower_bound"},{"import": 1729,"src": 4658,"name": "producer"},{"import": 1729,"src": 4659,"name": "prototyped"},{"import": 1729,"src": 4660,"name": "return_addr"},{"import": 1729,"src": 4661,"name": "start_scope"},{"import": 1729,"src": 4662,"name": "bit_stride"},{"import": 1729,"src": 4663,"name": "upper_bound"},{"import": 1729,"src": 4664,"name": "abstract_origin","kind": "const","type": 690,"value": null},{"import": 1729,"src": 4665,"name": "accessibility"},{"import": 1729,"src": 4666,"name": "address_class"},{"import": 1729,"src": 4667,"name": "artificial"},{"import": 1729,"src": 4668,"name": "base_types"},{"import": 1729,"src": 4669,"name": "calling_convention"},{"import": 1729,"src": 4670,"name": "count"},{"import": 1729,"src": 4671,"name": "data_member_location"},{"import": 1729,"src": 4672,"name": "decl_column"},{"import": 1729,"src": 4673,"name": "decl_file"},{"import": 1729,"src": 4674,"name": "decl_line"},{"import": 1729,"src": 4675,"name": "declaration"},{"import": 1729,"src": 4676,"name": "discr_list"},{"import": 1729,"src": 4677,"name": "encoding"},{"import": 1729,"src": 4678,"name": "external"},{"import": 1729,"src": 4679,"name": "frame_base"},{"import": 1729,"src": 4680,"name": "friend"},{"import": 1729,"src": 4681,"name": "identifier_case"},{"import": 1729,"src": 4682,"name": "macro_info"},{"import": 1729,"src": 4683,"name": "namelist_items"},{"import": 1729,"src": 4684,"name": "priority"},{"import": 1729,"src": 4685,"name": "segment"},{"import": 1729,"src": 4686,"name": "specification","kind": "const","type": 690,"value": null},{"import": 1729,"src": 4687,"name": "static_link"},{"import": 1729,"src": 4688,"name": "type"},{"import": 1729,"src": 4689,"name": "use_location"},{"import": 1729,"src": 4690,"name": "variable_parameter"},{"import": 1729,"src": 4691,"name": "virtuality"},{"import": 1729,"src": 4692,"name": "vtable_elem_location"},{"import": 1729,"src": 4693,"name": "allocated"},{"import": 1729,"src": 4694,"name": "associated"},{"import": 1729,"src": 4695,"name": "data_location"},{"import": 1729,"src": 4696,"name": "byte_stride"},{"import": 1729,"src": 4697,"name": "entry_pc"},{"import": 1729,"src": 4698,"name": "use_UTF8"},{"import": 1729,"src": 4699,"name": "extension"},{"import": 1729,"src": 4700,"name": "ranges","kind": "const","type": 690,"value": null},{"import": 1729,"src": 4701,"name": "trampoline"},{"import": 1729,"src": 4702,"name": "call_column"},{"import": 1729,"src": 4703,"name": "call_file"},{"import": 1729,"src": 4704,"name": "call_line"},{"import": 1729,"src": 4705,"name": "description"},{"import": 1729,"src": 4706,"name": "binary_scale"},{"import": 1729,"src": 4707,"name": "decimal_scale"},{"import": 1729,"src": 4708,"name": "small"},{"import": 1729,"src": 4709,"name": "decimal_sign"},{"import": 1729,"src": 4710,"name": "digit_count"},{"import": 1729,"src": 4711,"name": "picture_string"},{"import": 1729,"src": 4712,"name": "mutable"},{"import": 1729,"src": 4713,"name": "threads_scaled"},{"import": 1729,"src": 4714,"name": "explicit"},{"import": 1729,"src": 4715,"name": "object_pointer"},{"import": 1729,"src": 4716,"name": "endianity"},{"import": 1729,"src": 4717,"name": "elemental"},{"import": 1729,"src": 4718,"name": "pure"},{"import": 1729,"src": 4719,"name": "recursive"},{"import": 1729,"src": 4720,"name": "signature"},{"import": 1729,"src": 4721,"name": "main_subprogram"},{"import": 1729,"src": 4722,"name": "data_bit_offset"},{"import": 1729,"src": 4723,"name": "const_expr"},{"import": 1729,"src": 4724,"name": "enum_class"},{"import": 1729,"src": 4725,"name": "linkage_name"},{"import": 1729,"src": 4726,"name": "alignment"},{"import": 1729,"src": 4727,"name": "lo_user"},{"import": 1729,"src": 4728,"name": "hi_user"},{"import": 1729,"src": 4729,"name": "MIPS_fde"},{"import": 1729,"src": 4730,"name": "MIPS_loop_begin"},{"import": 1729,"src": 4731,"name": "MIPS_tail_loop_begin"},{"import": 1729,"src": 4732,"name": "MIPS_epilog_begin"},{"import": 1729,"src": 4733,"name": "MIPS_loop_unroll_factor"},{"import": 1729,"src": 4734,"name": "MIPS_software_pipeline_depth"},{"import": 1729,"src": 4735,"name": "MIPS_linkage_name"},{"import": 1729,"src": 4736,"name": "MIPS_stride"},{"import": 1729,"src": 4737,"name": "MIPS_abstract_name"},{"import": 1729,"src": 4738,"name": "MIPS_clone_origin"},{"import": 1729,"src": 4739,"name": "MIPS_has_inlines"},{"import": 1729,"src": 4740,"name": "HP_block_index"},{"import": 1729,"src": 4741,"name": "HP_unmodifiable"},{"import": 1729,"src": 4742,"name": "HP_prologue"},{"import": 1729,"src": 4743,"name": "HP_epilogue"},{"import": 1729,"src": 4744,"name": "HP_actuals_stmt_list"},{"import": 1729,"src": 4745,"name": "HP_proc_per_section"},{"import": 1729,"src": 4746,"name": "HP_raw_data_ptr"},{"import": 1729,"src": 4747,"name": "HP_pass_by_reference"},{"import": 1729,"src": 4748,"name": "HP_opt_level"},{"import": 1729,"src": 4749,"name": "HP_prof_version_id"},{"import": 1729,"src": 4750,"name": "HP_opt_flags"},{"import": 1729,"src": 4751,"name": "HP_cold_region_low_pc"},{"import": 1729,"src": 4752,"name": "HP_cold_region_high_pc"},{"import": 1729,"src": 4753,"name": "HP_all_variables_modifiable"},{"import": 1729,"src": 4754,"name": "HP_linkage_name"},{"import": 1729,"src": 4755,"name": "HP_prof_flags"},{"import": 1729,"src": 4756,"name": "HP_unit_name"},{"import": 1729,"src": 4757,"name": "HP_unit_size"},{"import": 1729,"src": 4758,"name": "HP_widened_byte_size"},{"import": 1729,"src": 4759,"name": "HP_definition_points"},{"import": 1729,"src": 4760,"name": "HP_default_location"},{"import": 1729,"src": 4761,"name": "HP_is_result_param"},{"import": 1729,"src": 4762,"name": "sf_names"},{"import": 1729,"src": 4763,"name": "src_info"},{"import": 1729,"src": 4764,"name": "mac_info"},{"import": 1729,"src": 4765,"name": "src_coords"},{"import": 1729,"src": 4766,"name": "body_begin"},{"import": 1729,"src": 4767,"name": "body_end"},{"import": 1729,"src": 4768,"name": "GNU_vector"},{"import": 1729,"src": 4769,"name": "GNU_guarded_by"},{"import": 1729,"src": 4770,"name": "GNU_pt_guarded_by"},{"import": 1729,"src": 4771,"name": "GNU_guarded"},{"import": 1729,"src": 4772,"name": "GNU_pt_guarded"},{"import": 1729,"src": 4773,"name": "GNU_locks_excluded"},{"import": 1729,"src": 4774,"name": "GNU_exclusive_locks_required"},{"import": 1729,"src": 4775,"name": "GNU_shared_locks_required"},{"import": 1729,"src": 4776,"name": "GNU_odr_signature"},{"import": 1729,"src": 4777,"name": "GNU_template_name"},{"import": 1729,"src": 4778,"name": "GNU_call_site_value"},{"import": 1729,"src": 4779,"name": "GNU_call_site_data_value"},{"import": 1729,"src": 4780,"name": "GNU_call_site_target"},{"import": 1729,"src": 4781,"name": "GNU_call_site_target_clobbered"},{"import": 1729,"src": 4782,"name": "GNU_tail_call"},{"import": 1729,"src": 4783,"name": "GNU_all_tail_call_sites"},{"import": 1729,"src": 4784,"name": "GNU_all_call_sites"},{"import": 1729,"src": 4785,"name": "GNU_all_source_call_sites"},{"import": 1729,"src": 4786,"name": "GNU_macros"},{"import": 1729,"src": 4787,"name": "GNU_dwo_name"},{"import": 1729,"src": 4788,"name": "GNU_dwo_id"},{"import": 1729,"src": 4789,"name": "GNU_ranges_base"},{"import": 1729,"src": 4790,"name": "GNU_addr_base"},{"import": 1729,"src": 4791,"name": "GNU_pubnames"},{"import": 1729,"src": 4792,"name": "GNU_pubtypes"},{"import": 1729,"src": 4793,"name": "VMS_rtnbeg_pd_address"},{"import": 1729,"src": 4794,"name": "use_GNAT_descriptive_type"},{"import": 1729,"src": 4795,"name": "GNAT_descriptive_type"},{"import": 1729,"src": 4796,"name": "upc_threads_scaled"},{"import": 1729,"src": 4797,"name": "PGI_lbase"},{"import": 1729,"src": 4798,"name": "PGI_soffset"},{"import": 1729,"src": 4799,"name": "PGI_lstride"},{"import": 1331,"src": 4800,"name": "addr","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4801,"name": "block2","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4802,"name": "block4","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4803,"name": "data2","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4804,"name": "data4","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4805,"name": "data8","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4806,"name": "string","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4807,"name": "block","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4808,"name": "block1","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4809,"name": "data1","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4810,"name": "flag","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4811,"name": "sdata","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4812,"name": "strp","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4813,"name": "udata","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4814,"name": "ref_addr","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4815,"name": "ref1","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4816,"name": "ref2","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4817,"name": "ref4","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4818,"name": "ref8","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4819,"name": "ref_udata","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4820,"name": "indirect","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4821,"name": "sec_offset","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4822,"name": "exprloc","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4823,"name": "flag_present","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4824,"name": "ref_sig8","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4825,"name": "GNU_addr_index"},{"import": 1331,"src": 4826,"name": "GNU_str_index"},{"import": 1331,"src": 4827,"name": "GNU_ref_alt"},{"import": 1331,"src": 4828,"name": "GNU_strp_alt"},{"import": 1331,"src": 4829,"name": "no"},{"import": 1331,"src": 4830,"name": "yes","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4831,"name": "extended_op","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4832,"name": "copy","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4833,"name": "advance_pc","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4834,"name": "advance_line","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4835,"name": "set_file","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4836,"name": "set_column","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4837,"name": "negate_stmt","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4838,"name": "set_basic_block","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4839,"name": "const_add_pc","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4840,"name": "fixed_advance_pc","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4841,"name": "set_prologue_end","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4842,"name": "set_epilogue_begin"},{"import": 1331,"src": 4843,"name": "set_isa"},{"import": 1331,"src": 4844,"name": "end_sequence","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4845,"name": "set_address","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4846,"name": "define_file","kind": "const","type": 690,"value": null},{"import": 1331,"src": 4847,"name": "set_discriminator"},{"import": 1331,"src": 4848,"name": "lo_user"},{"import": 1331,"src": 4849,"name": "hi_user"},{"import": 1734,"src": 98,"name": "readULEB128","kind": "const","type": 1885,"value": 839},{"import": 1734,"src": 4850,"name": "writeULEB128"},{"import": 1734,"src": 191,"name": "readILEB128","kind": "const","type": 1886,"value": 840},{"import": 1734,"src": 4851,"name": "writeILEB128"},{"import": 1734,"src": 4852,"name": "writeUnsignedFixed"},{"import": 1734,"src": 4853,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1734,"src": 4854,"name": "testing"},{"import": 1734,"src": 4855,"name": "test_read_stream_ileb128"},{"import": 1734,"src": 4856,"name": "test_read_stream_uleb128"},{"import": 1734,"src": 4857,"name": "test_read_ileb128"},{"import": 1734,"src": 4858,"name": "test_read_uleb128"},{"import": 1734,"src": 4859,"name": "test_read_ileb128_seq"},{"import": 1734,"src": 4860,"name": "test_read_uleb128_seq"},{"import": 1734,"src": 4861,"name": "test_write_leb128"},{"import": 1744,"src": 4862,"name": "wait"},{"import": 1744,"src": 4863,"name": "timedWait"},{"import": 1744,"src": 4864,"name": "set"},{"import": 1744,"src": 4865,"name": "std"},{"import": 1744,"src": 4866,"name": "builtin"},{"import": 1744,"src": 4867,"name": "testing"},{"import": 1744,"src": 4868,"name": "assert"},{"import": 1744,"src": 4869,"name": "StaticResetEvent"},{"import": 1744,"src": 4870,"name": "AutoResetEvent"},{"import": 1744,"src": 4871,"name": "UNSET"},{"import": 1744,"src": 4872,"name": "SET"},{"import": 1744,"src": 4873,"name": "event_align"},{"import": 1744,"src": 4874,"name": "waitFor"},{"import": 1745,"src": 4875,"name": "Impl","kind": "const","type": 592,"value": 1542},{"import": 1745,"src": 4876,"name": "InitError"},{"import": 1745,"src": 4877,"name": "init"},{"import": 1745,"src": 4878,"name": "deinit"},{"import": 1745,"src": 4879,"name": "set"},{"import": 1745,"src": 4880,"name": "reset"},{"import": 1745,"src": 4881,"name": "wait"},{"import": 1745,"src": 4882,"name": "TimedWaitResult","kind": "const","type": 592,"value": 1162},{"import": 1745,"src": 4883,"name": "timedWait"},{"import": 1745,"src": 4884,"name": "DarwinEvent"},{"import": 1745,"src": 4885,"name": "PosixEvent"},{"import": 1745,"src": 4886,"name": "ResetEvent"},{"import": 1745,"src": 4887,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1745,"src": 4888,"name": "builtin","kind": "const","type": 592,"value": 831},{"import": 1745,"src": 4889,"name": "testing"},{"import": 1745,"src": 4890,"name": "assert"},{"import": 1745,"src": 4891,"name": "c"},{"import": 1745,"src": 4892,"name": "os"},{"import": 1745,"src": 4893,"name": "time"},{"import": 1335,"src": 4894,"name": "ThreadHandle"},{"import": 1335,"src": 4895,"name": "windows","kind": "const","type": 592,"value": 1578},{"import": 1335,"src": 22,"name": "getCurrentId","kind": "const","type": 12,"value": 24},{"import": 1335,"src": 4896,"name": "getCpuCount"},{"import": 1335,"src": 4897,"name": "ThreadCompletion","kind": "const","type": 592,"value": 1887},{"import": 1335,"src": 4898,"name": "spawn"},{"import": 1335,"src": 4899,"name": "getHandle"},{"import": 1335,"src": 4900,"name": "detach"},{"import": 1335,"src": 4901,"name": "join"},{"import": 1747,"src": 4902,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1747,"src": 4903,"name": "ws2_32"},{"import": 1747,"src": 4904,"name": "windows","kind": "const","type": 592,"value": 1578},{"import": 1339,"src": 4905,"name": "Color","kind": "const","type": 592,"value": 1154},{"import": 1339,"src": 4906,"name": "Config","kind": "const","type": 592,"value": 861},{"import": 1339,"src": 4907,"name": "address"},{"import": 1339,"src": 4908,"name": "addressLessThan"},{"import": 1344,"src": 218,"name": "alloc","kind": "const","type": 363,"value": 380},{"import": 1344,"src": 219,"name": "resize","kind": "const","type": 364,"value": 381},{"import": 1364,"src": 4909,"name": "wake"},{"import": 1364,"src": 315,"name": "wait","kind": "const","type": 547,"value": 600},{"import": 1364,"src": 316,"name": "getEventHandle","kind": "const","type": 548,"value": 601},{"import": 1364,"src": 4910,"name": "event_handle","kind": "var","type": 602,"value": "18446744073709551615"},{"import": 1364,"src": 4911,"name": "EMPTY","kind": "const","type": 602,"value": "18446744073709551615"},{"import": 1364,"src": 4912,"name": "LOADING","kind": "const","type": 602,"value": "18446744073709551614"},{"import": 1364,"src": 4913,"name": "wake"},{"import": 1364,"src": 317,"name": "wait","kind": "const","type": 549,"value": 602},{"import": 1829,"src": 4914,"name": "AddVectoredExceptionHandler"},{"import": 1829,"src": 4915,"name": "RemoveVectoredExceptionHandler"},{"import": 1829,"src": 4916,"name": "CancelIo"},{"import": 1829,"src": 4917,"name": "CancelIoEx"},{"import": 1829,"src": 4918,"name": "CloseHandle"},{"import": 1829,"src": 4919,"name": "CreateDirectoryW"},{"import": 1829,"src": 4920,"name": "SetEndOfFile"},{"import": 1829,"src": 4921,"name": "CreateEventExW"},{"import": 1829,"src": 4922,"name": "CreateFileW"},{"import": 1829,"src": 4923,"name": "CreatePipe"},{"import": 1829,"src": 4924,"name": "CreateNamedPipeW"},{"import": 1829,"src": 4925,"name": "CreateProcessW"},{"import": 1829,"src": 4926,"name": "CreateSymbolicLinkW"},{"import": 1829,"src": 4927,"name": "CreateIoCompletionPort"},{"import": 1829,"src": 4928,"name": "CreateThread"},{"import": 1829,"src": 4929,"name": "DeviceIoControl"},{"import": 1829,"src": 4930,"name": "DeleteFileW"},{"import": 1829,"src": 4931,"name": "DuplicateHandle"},{"import": 1829,"src": 4932,"name": "ExitProcess","kind": "const","type": 1896,"value": 841},{"import": 1829,"src": 4933,"name": "FindFirstFileW"},{"import": 1829,"src": 4934,"name": "FindClose"},{"import": 1829,"src": 4935,"name": "FindNextFileW"},{"import": 1829,"src": 4936,"name": "FormatMessageW"},{"import": 1829,"src": 4937,"name": "FreeEnvironmentStringsW"},{"import": 1829,"src": 4938,"name": "GetCommandLineA"},{"import": 1829,"src": 4939,"name": "GetCommandLineW"},{"import": 1829,"src": 4940,"name": "GetConsoleMode","kind": "const","type": 1897,"value": 842},{"import": 1829,"src": 4941,"name": "GetConsoleOutputCP"},{"import": 1829,"src": 4942,"name": "GetConsoleScreenBufferInfo","kind": "const","type": 1898,"value": 843},{"import": 1829,"src": 4943,"name": "FillConsoleOutputCharacterA"},{"import": 1829,"src": 4944,"name": "FillConsoleOutputCharacterW"},{"import": 1829,"src": 4945,"name": "FillConsoleOutputAttribute"},{"import": 1829,"src": 4946,"name": "SetConsoleCursorPosition"},{"import": 1829,"src": 4947,"name": "GetCurrentDirectoryW","kind": "const","type": 1899,"value": 844},{"import": 1829,"src": 4948,"name": "GetCurrentThread"},{"import": 1829,"src": 4949,"name": "GetCurrentThreadId","kind": "const","type": 1900,"value": 845},{"import": 1829,"src": 4950,"name": "GetCurrentProcessId"},{"import": 1829,"src": 4951,"name": "GetCurrentProcess","kind": "const","type": 1901,"value": 846},{"import": 1829,"src": 4952,"name": "GetEnvironmentStringsW"},{"import": 1829,"src": 4953,"name": "GetEnvironmentVariableW"},{"import": 1829,"src": 4954,"name": "GetExitCodeProcess"},{"import": 1829,"src": 4955,"name": "GetFileSizeEx","kind": "const","type": 1902,"value": 847},{"import": 1829,"src": 4956,"name": "GetFileAttributesW"},{"import": 1829,"src": 4957,"name": "GetModuleFileNameW"},{"import": 1829,"src": 4958,"name": "GetModuleHandleW"},{"import": 1829,"src": 4959,"name": "GetLastError","kind": "const","type": 1903,"value": 848},{"import": 1829,"src": 4960,"name": "SetLastError"},{"import": 1829,"src": 4961,"name": "GetFileInformationByHandle"},{"import": 1829,"src": 4962,"name": "GetFileInformationByHandleEx","kind": "const","type": 1904,"value": 849},{"import": 1829,"src": 4963,"name": "GetFinalPathNameByHandleW"},{"import": 1829,"src": 4964,"name": "GetFullPathNameW","kind": "const","type": 1905,"value": 850},{"import": 1829,"src": 4965,"name": "GetOverlappedResult"},{"import": 1829,"src": 4966,"name": "GetProcessHeap"},{"import": 1829,"src": 4967,"name": "GetQueuedCompletionStatus"},{"import": 1829,"src": 4968,"name": "GetQueuedCompletionStatusEx"},{"import": 1829,"src": 4969,"name": "GetSystemInfo"},{"import": 1829,"src": 4970,"name": "GetSystemTimeAsFileTime"},{"import": 1829,"src": 4971,"name": "HeapCreate"},{"import": 1829,"src": 4972,"name": "HeapDestroy"},{"import": 1829,"src": 4973,"name": "HeapReAlloc"},{"import": 1829,"src": 4974,"name": "HeapSize"},{"import": 1829,"src": 4975,"name": "HeapCompact"},{"import": 1829,"src": 4976,"name": "HeapSummary"},{"import": 1829,"src": 4977,"name": "GetStdHandle"},{"import": 1829,"src": 4978,"name": "HeapAlloc"},{"import": 1829,"src": 4979,"name": "HeapFree"},{"import": 1829,"src": 4980,"name": "HeapValidate"},{"import": 1829,"src": 4981,"name": "VirtualAlloc","kind": "const","type": 1906,"value": 851},{"import": 1829,"src": 4982,"name": "VirtualFree","kind": "const","type": 1907,"value": 852},{"import": 1829,"src": 4983,"name": "LocalFree"},{"import": 1829,"src": 4984,"name": "MoveFileExW"},{"import": 1829,"src": 4985,"name": "PostQueuedCompletionStatus"},{"import": 1829,"src": 4986,"name": "QueryPerformanceCounter","kind": "const","type": 1908,"value": 853},{"import": 1829,"src": 4987,"name": "QueryPerformanceFrequency","kind": "const","type": 1908,"value": 854},{"import": 1829,"src": 4988,"name": "ReadDirectoryChangesW"},{"import": 1829,"src": 4989,"name": "ReadFile","kind": "const","type": 1909,"value": 855},{"import": 1829,"src": 4990,"name": "RemoveDirectoryW"},{"import": 1829,"src": 4991,"name": "SetConsoleTextAttribute","kind": "const","type": 1910,"value": 856},{"import": 1829,"src": 4992,"name": "SetConsoleCtrlHandler"},{"import": 1829,"src": 4993,"name": "SetConsoleOutputCP"},{"import": 1829,"src": 4994,"name": "SetFileCompletionNotificationModes"},{"import": 1829,"src": 4995,"name": "SetFilePointerEx","kind": "const","type": 1911,"value": 857},{"import": 1829,"src": 4996,"name": "SetFileTime"},{"import": 1829,"src": 4997,"name": "SetHandleInformation"},{"import": 1829,"src": 4998,"name": "Sleep"},{"import": 1829,"src": 4999,"name": "SwitchToThread","kind": "const","type": 1912,"value": 858},{"import": 1829,"src": 5000,"name": "TerminateProcess"},{"import": 1829,"src": 5001,"name": "TlsAlloc"},{"import": 1829,"src": 5002,"name": "TlsFree"},{"import": 1829,"src": 5003,"name": "WaitForSingleObject"},{"import": 1829,"src": 5004,"name": "WaitForSingleObjectEx"},{"import": 1829,"src": 5005,"name": "WaitForMultipleObjects"},{"import": 1829,"src": 5006,"name": "WaitForMultipleObjectsEx"},{"import": 1829,"src": 5007,"name": "WriteFile","kind": "const","type": 1913,"value": 859},{"import": 1829,"src": 5008,"name": "WriteFileEx"},{"import": 1829,"src": 5009,"name": "LoadLibraryW"},{"import": 1829,"src": 5010,"name": "GetProcAddress"},{"import": 1829,"src": 5011,"name": "FreeLibrary"},{"import": 1829,"src": 5012,"name": "InitializeCriticalSection"},{"import": 1829,"src": 5013,"name": "EnterCriticalSection"},{"import": 1829,"src": 5014,"name": "LeaveCriticalSection"},{"import": 1829,"src": 5015,"name": "DeleteCriticalSection"},{"import": 1829,"src": 5016,"name": "InitOnceExecuteOnce"},{"import": 1829,"src": 5017,"name": "K32EmptyWorkingSet"},{"import": 1829,"src": 5018,"name": "K32EnumDeviceDrivers"},{"import": 1829,"src": 5019,"name": "K32EnumPageFilesA"},{"import": 1829,"src": 5020,"name": "K32EnumPageFilesW"},{"import": 1829,"src": 5021,"name": "K32EnumProcessModules","kind": "const","type": 1914,"value": 860},{"import": 1829,"src": 5022,"name": "K32EnumProcessModulesEx"},{"import": 1829,"src": 5023,"name": "K32EnumProcesses"},{"import": 1829,"src": 5024,"name": "K32GetDeviceDriverBaseNameA"},{"import": 1829,"src": 5025,"name": "K32GetDeviceDriverBaseNameW"},{"import": 1829,"src": 5026,"name": "K32GetDeviceDriverFileNameA"},{"import": 1829,"src": 5027,"name": "K32GetDeviceDriverFileNameW"},{"import": 1829,"src": 5028,"name": "K32GetMappedFileNameA"},{"import": 1829,"src": 5029,"name": "K32GetMappedFileNameW"},{"import": 1829,"src": 5030,"name": "K32GetModuleBaseNameA"},{"import": 1829,"src": 5031,"name": "K32GetModuleBaseNameW"},{"import": 1829,"src": 5032,"name": "K32GetModuleFileNameExA"},{"import": 1829,"src": 5033,"name": "K32GetModuleFileNameExW","kind": "const","type": 1915,"value": 861},{"import": 1829,"src": 5034,"name": "K32GetModuleInformation","kind": "const","type": 1916,"value": 862},{"import": 1829,"src": 5035,"name": "K32GetPerformanceInfo"},{"import": 1829,"src": 5036,"name": "K32GetProcessImageFileNameA"},{"import": 1829,"src": 5037,"name": "K32GetProcessImageFileNameW"},{"import": 1829,"src": 5038,"name": "K32GetProcessMemoryInfo"},{"import": 1829,"src": 5039,"name": "K32GetWsChanges"},{"import": 1829,"src": 5040,"name": "K32GetWsChangesEx"},{"import": 1829,"src": 5041,"name": "K32InitializeProcessForWsWatch"},{"import": 1829,"src": 5042,"name": "K32QueryWorkingSet"},{"import": 1829,"src": 5043,"name": "K32QueryWorkingSetEx"},{"import": 1829,"src": 5044,"name": "FlushFileBuffers"},{"import": 1829,"src": 5045,"name": "WakeAllConditionVariable"},{"import": 1829,"src": 5046,"name": "WakeConditionVariable"},{"import": 1829,"src": 5047,"name": "SleepConditionVariableSRW"},{"import": 1829,"src": 5048,"name": "TryAcquireSRWLockExclusive"},{"import": 1829,"src": 5049,"name": "AcquireSRWLockExclusive","kind": "const","type": 1917,"value": 863},{"import": 1829,"src": 5050,"name": "ReleaseSRWLockExclusive","kind": "const","type": 1917,"value": 864},{"import": 1829,"src": 5051,"name": "SetThreadDescription"},{"import": 1829,"src": 5052,"name": "GetThreadDescription"},{"import": 1829,"src": 5053,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1829,"src": 5054,"name": "windows","kind": "const","type": 592,"value": 1578},{"import": 1829,"src": 5055,"name": "BOOL","kind": "const","type": 592,"value": 838},{"import": 1829,"src": 5056,"name": "BOOLEAN"},{"import": 1829,"src": 5057,"name": "CONDITION_VARIABLE"},{"import": 1829,"src": 5058,"name": "CONSOLE_SCREEN_BUFFER_INFO","kind": "const","type": 592,"value": 1840},{"import": 1829,"src": 5059,"name": "COORD"},{"import": 1829,"src": 5060,"name": "DWORD","kind": "const","type": 592,"value": 641},{"import": 1829,"src": 5061,"name": "FILE_INFO_BY_HANDLE_CLASS","kind": "const","type": 592,"value": 641},{"import": 1829,"src": 5062,"name": "HANDLE","kind": "const","type": 592,"value": 840},{"import": 1829,"src": 5063,"name": "HMODULE","kind": "const","type": 592,"value": 775},{"import": 1829,"src": 5064,"name": "HRESULT"},{"import": 1829,"src": 5065,"name": "LARGE_INTEGER","kind": "const","type": 592,"value": 781},{"import": 1829,"src": 5066,"name": "LPCWSTR"},{"import": 1829,"src": 5067,"name": "LPTHREAD_START_ROUTINE"},{"import": 1829,"src": 5068,"name": "LPVOID","kind": "const","type": 592,"value": 840},{"import": 1829,"src": 5069,"name": "LPWSTR","kind": "const","type": 592,"value": 748},{"import": 1829,"src": 5070,"name": "MODULEINFO","kind": "const","type": 592,"value": 1853},{"import": 1829,"src": 5071,"name": "OVERLAPPED","kind": "const","type": 592,"value": 1711},{"import": 1829,"src": 5072,"name": "PERFORMANCE_INFORMATION"},{"import": 1829,"src": 5073,"name": "PROCESS_MEMORY_COUNTERS"},{"import": 1829,"src": 5074,"name": "PSAPI_WS_WATCH_INFORMATION"},{"import": 1829,"src": 5075,"name": "PSAPI_WS_WATCH_INFORMATION_EX"},{"import": 1829,"src": 5076,"name": "SECURITY_ATTRIBUTES"},{"import": 1829,"src": 5077,"name": "SIZE_T","kind": "const","type": 592,"value": 602},{"import": 1829,"src": 5078,"name": "SRWLOCK","kind": "const","type": 592,"value": 602},{"import": 1829,"src": 5079,"name": "UINT","kind": "const","type": 592,"value": 1833},{"import": 1829,"src": 5080,"name": "VECTORED_EXCEPTION_HANDLER"},{"import": 1829,"src": 5081,"name": "WCHAR","kind": "const","type": 592,"value": 598},{"import": 1829,"src": 5082,"name": "WINAPI","kind": "const","type": 1657,"value": null},{"import": 1829,"src": 5083,"name": "WORD","kind": "const","type": 592,"value": 598},{"import": 1829,"src": 5084,"name": "Win32Error","kind": "const","type": 592,"value": 1106},{"import": 1829,"src": 5085,"name": "va_list"},{"import": 1829,"src": 5086,"name": "HLOCAL"},{"import": 1829,"src": 5087,"name": "FILETIME"},{"import": 1829,"src": 5088,"name": "STARTUPINFOW"},{"import": 1829,"src": 5089,"name": "PROCESS_INFORMATION"},{"import": 1829,"src": 5090,"name": "OVERLAPPED_ENTRY"},{"import": 1829,"src": 5091,"name": "LPHEAP_SUMMARY"},{"import": 1829,"src": 5092,"name": "ULONG_PTR"},{"import": 1829,"src": 5093,"name": "FILE_NOTIFY_INFORMATION"},{"import": 1829,"src": 5094,"name": "HANDLER_ROUTINE"},{"import": 1829,"src": 5095,"name": "ULONG"},{"import": 1829,"src": 5096,"name": "PVOID"},{"import": 1829,"src": 5097,"name": "LPSTR"},{"import": 1829,"src": 5098,"name": "PENUM_PAGE_FILE_CALLBACKA"},{"import": 1829,"src": 5099,"name": "PENUM_PAGE_FILE_CALLBACKW"},{"import": 1829,"src": 5100,"name": "INIT_ONCE"},{"import": 1829,"src": 5101,"name": "CRITICAL_SECTION"},{"import": 1829,"src": 5102,"name": "WIN32_FIND_DATAW"},{"import": 1829,"src": 5103,"name": "CHAR"},{"import": 1829,"src": 5104,"name": "BY_HANDLE_FILE_INFORMATION"},{"import": 1829,"src": 5105,"name": "SYSTEM_INFO"},{"import": 1829,"src": 5106,"name": "LPOVERLAPPED_COMPLETION_ROUTINE"},{"import": 1829,"src": 5107,"name": "UCHAR"},{"import": 1829,"src": 5108,"name": "FARPROC"},{"import": 1829,"src": 5109,"name": "INIT_ONCE_FN"},{"import": 1830,"src": 5110,"name": "RtlGetVersion"},{"import": 1830,"src": 5111,"name": "RtlCaptureStackBackTrace","kind": "const","type": 1918,"value": 865},{"import": 1830,"src": 5112,"name": "NtQueryInformationFile"},{"import": 1830,"src": 5113,"name": "NtSetInformationFile"},{"import": 1830,"src": 5114,"name": "NtQueryAttributesFile"},{"import": 1830,"src": 5115,"name": "NtCreateFile","kind": "const","type": 1919,"value": 866},{"import": 1830,"src": 5116,"name": "NtDeviceIoControlFile"},{"import": 1830,"src": 5117,"name": "NtFsControlFile"},{"import": 1830,"src": 5118,"name": "NtClose","kind": "const","type": 1920,"value": 867},{"import": 1830,"src": 5119,"name": "RtlDosPathNameToNtPathName_U"},{"import": 1830,"src": 5120,"name": "RtlFreeUnicodeString"},{"import": 1830,"src": 5121,"name": "NtQueryDirectoryFile"},{"import": 1830,"src": 5122,"name": "NtCreateKeyedEvent","kind": "const","type": 1921,"value": 868},{"import": 1830,"src": 5123,"name": "NtReleaseKeyedEvent"},{"import": 1830,"src": 5124,"name": "NtWaitForKeyedEvent","kind": "const","type": 1922,"value": 869},{"import": 1830,"src": 5125,"name": "RtlSetCurrentDirectory_U"},{"import": 1830,"src": 5126,"name": "NtQueryObject"},{"import": 1830,"src": 5127,"name": "RtlWakeAddressAll"},{"import": 1830,"src": 5128,"name": "RtlWakeAddressSingle"},{"import": 1830,"src": 5129,"name": "RtlWaitOnAddress"},{"import": 1830,"src": 5130,"name": "NtLockFile","kind": "const","type": 1923,"value": 870},{"import": 1830,"src": 5131,"name": "NtUnlockFile"},{"import": 1830,"src": 5132,"name": "std","kind": "const","type": 592,"value": 830},{"import": 1830,"src": 5133,"name": "windows","kind": "const","type": 592,"value": 1578},{"import": 1830,"src": 5134,"name": "BOOL"},{"import": 1830,"src": 5135,"name": "DWORD","kind": "const","type": 592,"value": 641},{"import": 1830,"src": 5136,"name": "ULONG","kind": "const","type": 592,"value": 641},{"import": 1830,"src": 5137,"name": "WINAPI","kind": "const","type": 1657,"value": null},{"import": 1830,"src": 5138,"name": "NTSTATUS","kind": "const","type": 592,"value": 1180},{"import": 1830,"src": 5139,"name": "WORD","kind": "const","type": 592,"value": 598},{"import": 1830,"src": 5140,"name": "HANDLE","kind": "const","type": 592,"value": 840},{"import": 1830,"src": 5141,"name": "ACCESS_MASK","kind": "const","type": 592,"value": 641},{"import": 1830,"src": 5142,"name": "IO_APC_ROUTINE","kind": "const","type": 592,"value": 1851},{"import": 1830,"src": 5143,"name": "BOOLEAN","kind": "const","type": 592,"value": 676},{"import": 1830,"src": 5144,"name": "OBJECT_ATTRIBUTES","kind": "const","type": 592,"value": 1843},{"import": 1830,"src": 5145,"name": "PVOID","kind": "const","type": 592,"value": 840},{"import": 1830,"src": 5146,"name": "IO_STATUS_BLOCK","kind": "const","type": 592,"value": 1598},{"import": 1830,"src": 5147,"name": "LARGE_INTEGER","kind": "const","type": 592,"value": 781},{"import": 1830,"src": 5148,"name": "OBJECT_INFORMATION_CLASS"},{"import": 1830,"src": 5149,"name": "FILE_INFORMATION_CLASS"},{"import": 1830,"src": 5150,"name": "UNICODE_STRING"},{"import": 1830,"src": 5151,"name": "RTL_OSVERSIONINFOW"},{"import": 1830,"src": 5152,"name": "FILE_BASIC_INFORMATION"},{"import": 1830,"src": 5153,"name": "SIZE_T"},{"import": 1830,"src": 5154,"name": "CURDIR"},{"import": 1263,"src": 5155,"name": "includesVersion"},{"import": 1263,"src": 5156,"name": "isAtLeast"},{"import": 1230,"src": 5157,"name": "includesVersion"},{"import": 1230,"src": 5158,"name": "isAtLeast"},{"import": 1301,"src": 5159,"name": "init"},{"import": 1301,"src": 5160,"name": "run"},{"import": 1301,"src": 5161,"name": "Waiters","kind": "const","type": 592,"value": 1931},{"import": 1335,"src": 5162,"name": "free"},{"import": 1301,"src": 5163,"name": "Entry"},{"import": 1301,"src": 5164,"name": "insert"},{"import": 1301,"src": 5165,"name": "popExpired"},{"import": 1301,"src": 5166,"name": "nextExpire"},{"import": 1301,"src": 5167,"name": "peekExpiringEntry"}],"fns": [{"src": 0,"type": 0,"decl": 1780},{"src": 1,"type": 1,"decl": 1346},{"src": 2,"type": 2,"decl": 0},{"src": 3,"type": 3,"decl": 1466},{"src": 4,"type": 4,"decl": 1469},{"src": 5,"type": 5,"decl": 3987},{"src": 6,"type": 6,"decl": 2447},{"src": 7,"type": 7,"decl": 2450},{"src": 8,"type": 8,"decl": 1936},{"src": 9,"type": 9,"decl": 2768},{"src": 10,"type": 10,"decl": 65},{"src": 11,"type": 11,"decl": 83},{"src": 12,"type": 12,"decl": 2125},{"src": 13,"type": 13},{"src": 14,"type": 14,"decl": 3522},{"src": 13,"type": 15},{"src": 15,"type": 16,"decl": 2446},{"src": 16,"type": 17,"decl": 2443},{"src": 17,"type": 8,"decl": 1937},{"src": 18,"type": 18,"decl": 4005},{"src": 13,"type": 19},{"src": 19,"type": 20,"decl": 4021},{"src": 20,"type": 21,"decl": 2819},{"src": 21,"type": 22,"decl": 4207},{"src": 22,"type": 12,"decl": 5427},{"src": 23,"type": 23},{"src": 24,"type": 24,"decl": 6},{"src": 25,"type": 25},{"src": 23,"type": 26},{"src": 25,"type": 27},{"src": 26,"type": 28},{"src": 27,"type": 29},{"src": 28,"type": 30,"decl": 2441},{"src": 29,"type": 31,"decl": 2458},{"src": 30,"type": 32,"decl": 2512},{"src": 13,"type": 33},{"src": 31,"type": 34,"decl": 2442},{"src": 32,"type": 35},{"src": 33,"type": 36},{"src": 34,"type": 37},{"src": 35,"type": 38,"decl": 1592},{"src": 36,"type": 39,"decl": 634},{"src": 37,"type": 40,"decl": 588},{"src": 38,"type": 41,"decl": 1594},{"src": 39,"type": 42},{"src": 40,"type": 43},{"src": 41,"type": 44},{"src": 33,"type": 45},{"src": 42,"type": 46,"decl": 131},{"src": 43,"type": 47},{"src": 44,"type": 48},{"src": 45,"type": 49,"decl": 2646},{"src": 46,"type": 50},{"src": 47,"type": 51,"decl": 2503},{"src": 44,"type": 52},{"src": 48,"type": 53,"decl": 28},{"src": 49,"type": 54,"decl": 1479},{"src": 50,"type": 55,"decl": 1480},{"src": 51,"type": 56,"decl": 55},{"src": 52,"type": 57,"decl": 81},{"src": 53,"type": 58,"decl": 650},{"src": 54,"type": 59,"decl": 649},{"src": 55,"type": 60},{"src": 56,"type": 61,"decl": 36},{"src": 57,"type": 62},{"src": 58,"type": 63},{"src": 59,"type": 64,"decl": 690},{"src": 60,"type": 65},{"src": 57,"type": 66},{"src": 58,"type": 67},{"src": 60,"type": 68},{"src": 61,"type": 69,"decl": 1486},{"src": 62,"type": 70,"decl": 38},{"src": 57,"type": 71},{"src": 58,"type": 72},{"src": 60,"type": 73},{"src": 63,"type": 74,"decl": 1482},{"src": 64,"type": 75,"decl": 575},{"src": 65,"type": 76,"decl": 584},{"src": 66,"type": 77},{"src": 67,"type": 78},{"src": 68,"type": 79},{"src": 69,"type": 80,"decl": 1485},{"src": 70,"type": 81,"decl": 659},{"src": 71,"type": 82,"decl": 661},{"src": 72,"type": 59,"decl": 648},{"src": 73,"type": 83},{"src": 74,"type": 84,"decl": 559},{"src": 75,"type": 85},{"src": 76,"type": 86},{"src": 39,"type": 87},{"src": 76,"type": 88},{"src": 76,"type": 89},{"src": 76,"type": 90},{"src": 76,"type": 91},{"src": 77,"type": 92,"decl": 2072},{"src": 78,"type": 93,"decl": 239},{"src": 78,"type": 94,"decl": 389},{"src": 78,"type": 95,"decl": 489},{"src": 79,"type": 96,"decl": 1238},{"src": 80,"type": 97},{"src": 81,"type": 98,"decl": 706},{"src": 82,"type": 99,"decl": 703},{"src": 83,"type": 100,"decl": 708},{"src": 84,"type": 101,"decl": 709},{"src": 85,"type": 102,"decl": 711},{"src": 86,"type": 102,"decl": 710},{"src": 87,"type": 103,"decl": 705},{"src": 88,"type": 104,"decl": 748},{"src": 89,"type": 105,"decl": 746},{"src": 90,"type": 106},{"src": 91,"type": 107},{"src": 58,"type": 108},{"src": 53,"type": 109,"decl": 718},{"src": 54,"type": 110,"decl": 717},{"src": 92,"type": 111},{"src": 91,"type": 112},{"src": 58,"type": 113},{"src": 92,"type": 114},{"src": 91,"type": 115},{"src": 58,"type": 116},{"src": 92,"type": 117},{"src": 71,"type": 118,"decl": 729},{"src": 72,"type": 110,"decl": 716},{"src": 93,"type": 104,"decl": 749},{"src": 94,"type": 119,"decl": 1240},{"src": 95,"type": 120,"decl": 258},{"src": 96,"type": 121,"decl": 1241},{"src": 78,"type": 122,"decl": 289},{"src": 97,"type": 123,"decl": 1234},{"src": 98,"type": 124},{"src": 99,"type": 125,"decl": 291},{"src": 95,"type": 126,"decl": 308},{"src": 78,"type": 127,"decl": 339},{"src": 100,"type": 128,"decl": 328},{"src": 101,"type": 129,"decl": 324},{"src": 64,"type": 130,"decl": 325},{"src": 65,"type": 131,"decl": 334},{"src": 66,"type": 132},{"src": 102,"type": 133,"decl": 329},{"src": 95,"type": 134,"decl": 358},{"src": 100,"type": 135,"decl": 378},{"src": 101,"type": 136,"decl": 374},{"src": 64,"type": 137,"decl": 375},{"src": 65,"type": 138,"decl": 384},{"src": 66,"type": 139},{"src": 102,"type": 140,"decl": 379},{"src": 100,"type": 141,"decl": 278},{"src": 101,"type": 142,"decl": 274},{"src": 64,"type": 143,"decl": 275},{"src": 65,"type": 144,"decl": 284},{"src": 66,"type": 145},{"src": 102,"type": 146,"decl": 279},{"src": 103,"type": 147},{"src": 104,"type": 148,"decl": 2101},{"src": 78,"type": 149,"decl": 439},{"src": 105,"type": 150,"decl": 468},{"src": 101,"type": 151,"decl": 474},{"src": 64,"type": 152,"decl": 475},{"src": 65,"type": 153,"decl": 484},{"src": 66,"type": 154},{"src": 106,"type": 155},{"src": 107,"type": 156,"decl": 4058},{"src": 108,"type": 157,"decl": 4056},{"src": 109,"type": 158,"decl": 1243},{"src": 99,"type": 159,"decl": 441},{"src": 110,"type": 160,"decl": 4062},{"src": 111,"type": 161,"decl": 4059},{"src": 112,"type": 162,"decl": 4063},{"src": 95,"type": 163,"decl": 508},{"src": 100,"type": 164,"decl": 528},{"src": 101,"type": 165,"decl": 524},{"src": 64,"type": 166,"decl": 525},{"src": 65,"type": 167,"decl": 534},{"src": 66,"type": 168},{"src": 102,"type": 169,"decl": 529},{"src": 113,"type": 170,"decl": 1239},{"src": 44,"type": 171},{"src": 95,"type": 172,"decl": 408},{"src": 100,"type": 173,"decl": 428},{"src": 101,"type": 174,"decl": 424},{"src": 64,"type": 175,"decl": 425},{"src": 65,"type": 176,"decl": 434},{"src": 66,"type": 177},{"src": 102,"type": 178,"decl": 429},{"src": 114,"type": 179,"decl": 1481},{"src": 75,"type": 85},{"src": 75,"type": 85},{"src": 115,"type": 180},{"src": 116,"type": 181},{"src": 117,"type": 182,"decl": 4091},{"src": 118,"type": 183,"decl": 4092},{"src": 119,"type": 184,"decl": 3818},{"src": 120,"type": 185,"decl": 4088},{"src": 121,"type": 186,"decl": 4125},{"src": 122,"type": 187,"decl": 4124},{"src": 43,"type": 188},{"src": 123,"type": 189},{"src": 124,"type": 190,"decl": 773},{"src": 125,"type": 191,"decl": 3566},{"src": 126,"type": 192},{"src": 41,"type": 193},{"src": 127,"type": 194},{"src": 128,"type": 195,"decl": 4138},{"src": 129,"type": 196,"decl": 2639},{"src": 130,"type": 197,"decl": 1495},{"src": 131,"type": 198,"decl": 4147},{"src": 115,"type": 199},{"src": 116,"type": 200},{"src": 132,"type": 70,"decl": 39},{"src": 133,"type": 45,"decl": 2056},{"src": 39,"type": 201},{"src": 134,"type": 202,"decl": 1574},{"src": 135,"type": 203,"decl": 1575},{"src": 136,"type": 204,"decl": 1573},{"src": 57,"type": 205},{"src": 58,"type": 206},{"src": 53,"type": 207,"decl": 781},{"src": 54,"type": 208,"decl": 780},{"src": 33,"type": 209},{"src": 41,"type": 210},{"src": 39,"type": 211},{"src": 137,"type": 212,"decl": 4141},{"src": 138,"type": 213,"decl": 4146},{"src": 58,"type": 214},{"src": 115,"type": 215},{"src": 116,"type": 216},{"src": 139,"type": 217,"decl": 1177},{"src": 140,"type": 218},{"src": 78,"type": 219,"decl": 808},{"src": 99,"type": 220,"decl": 810},{"src": 95,"type": 221,"decl": 827},{"src": 100,"type": 222,"decl": 847},{"src": 101,"type": 223,"decl": 843},{"src": 64,"type": 224,"decl": 844},{"src": 65,"type": 225,"decl": 853},{"src": 66,"type": 226},{"src": 102,"type": 227,"decl": 848},{"src": 141,"type": 228,"decl": 822},{"src": 142,"type": 229},{"src": 143,"type": 230},{"src": 144,"type": 231,"decl": 4145},{"src": 145,"type": 232,"decl": 4140},{"src": 115,"type": 233},{"src": 116,"type": 234},{"src": 78,"type": 235,"decl": 858},{"src": 115,"type": 236},{"src": 116,"type": 237},{"src": 99,"type": 238,"decl": 860},{"src": 146,"type": 239,"decl": 787},{"src": 78,"type": 240,"decl": 908},{"src": 147,"type": 241,"decl": 786},{"src": 148,"type": 242,"decl": 939},{"src": 71,"type": 243,"decl": 792},{"src": 72,"type": 208,"decl": 779},{"src": 95,"type": 244,"decl": 927},{"src": 100,"type": 245,"decl": 947},{"src": 101,"type": 246,"decl": 943},{"src": 64,"type": 247,"decl": 944},{"src": 65,"type": 248,"decl": 953},{"src": 66,"type": 249},{"src": 102,"type": 250,"decl": 948},{"src": 99,"type": 251,"decl": 910},{"src": 141,"type": 252,"decl": 922},{"src": 149,"type": 253,"decl": 1571},{"src": 95,"type": 254,"decl": 877},{"src": 100,"type": 255,"decl": 897},{"src": 101,"type": 256,"decl": 893},{"src": 64,"type": 257,"decl": 894},{"src": 65,"type": 258,"decl": 903},{"src": 66,"type": 259},{"src": 102,"type": 260,"decl": 898},{"src": 78,"type": 261,"decl": 958},{"src": 150,"type": 262},{"src": 91,"type": 263},{"src": 99,"type": 264,"decl": 960},{"src": 100,"type": 265,"decl": 997},{"src": 101,"type": 266,"decl": 993},{"src": 64,"type": 267,"decl": 994},{"src": 65,"type": 268,"decl": 1003},{"src": 66,"type": 269},{"src": 102,"type": 270,"decl": 998},{"src": 115,"type": 271},{"src": 116,"type": 272},{"src": 141,"type": 273,"decl": 872},{"src": 141,"type": 274,"decl": 972},{"src": 151,"type": 275,"decl": 124},{"src": 152,"type": 276,"decl": 175},{"src": 153,"type": 277,"decl": 214},{"src": 154,"type": 278,"decl": 234},{"src": 155,"type": 279,"decl": 235},{"src": 156,"type": 217,"decl": 227},{"src": 157,"type": 280,"decl": 233},{"src": 158,"type": 217},{"src": 159,"type": 280,"decl": 170},{"src": 160,"type": 281},{"src": 161,"type": 282,"decl": 236},{"src": 162,"type": 36,"decl": 1886},{"src": 163,"type": 283},{"src": 164,"type": 284,"decl": 161},{"src": 165,"type": 285,"decl": 232},{"src": 166,"type": 286,"decl": 229},{"src": 167,"type": 287,"decl": 230},{"src": 168,"type": 288,"decl": 1578},{"src": 169,"type": 289,"decl": 179},{"src": 170,"type": 290},{"src": 171,"type": 291},{"src": 172,"type": 292,"decl": 1677},{"src": 173,"type": 293,"decl": 2509},{"src": 174,"type": 294,"decl": 4144},{"src": 175,"type": 295,"decl": 4097},{"src": 176,"type": 296,"decl": 4142},{"src": 177,"type": 297,"decl": 4143},{"src": 178,"type": 298,"decl": 1572},{"src": 179,"type": 299,"decl": 1236},{"src": 180,"type": 300,"decl": 4060},{"src": 91,"type": 301},{"src": 92,"type": 302},{"src": 181,"type": 303,"decl": 1235},{"src": 182,"type": 304,"decl": 1237},{"src": 183,"type": 305,"decl": 730},{"src": 78,"type": 306,"decl": 1008},{"src": 95,"type": 307,"decl": 1027},{"src": 100,"type": 308,"decl": 1047},{"src": 101,"type": 309,"decl": 1043},{"src": 64,"type": 310,"decl": 1044},{"src": 65,"type": 311,"decl": 1053},{"src": 66,"type": 312},{"src": 102,"type": 313,"decl": 1048},{"src": 146,"type": 314,"decl": 724},{"src": 147,"type": 315,"decl": 723},{"src": 78,"type": 316,"decl": 1058},{"src": 184,"type": 317,"decl": 1587},{"src": 98,"type": 318},{"src": 95,"type": 319,"decl": 1077},{"src": 100,"type": 320,"decl": 1097},{"src": 101,"type": 321,"decl": 1093},{"src": 64,"type": 322,"decl": 1094},{"src": 65,"type": 323,"decl": 1103},{"src": 66,"type": 324},{"src": 102,"type": 325,"decl": 1098},{"src": 40,"type": 326},{"src": 185,"type": 327,"decl": 747},{"src": 186,"type": 328,"decl": 1588},{"src": 187,"type": 329,"decl": 4074},{"src": 188,"type": 330,"decl": 4117},{"src": 189,"type": 331,"decl": 4073},{"src": 190,"type": 332,"decl": 1586},{"src": 191,"type": 333},{"src": 192,"type": 334,"decl": 1589},{"src": 13,"type": 335},{"src": 13,"type": 336},{"src": 193,"type": 337},{"src": 194,"type": 338},{"src": 13,"type": 339},{"src": 195,"type": 20,"decl": 4022},{"src": 196,"type": 340,"decl": 4151},{"src": 23,"type": 341},{"src": 197,"type": 342,"decl": 4289},{"src": 198,"type": 343,"decl": 4302},{"src": 199,"type": 344,"decl": 5},{"src": 200,"type": 345},{"src": 201,"type": 346},{"src": 202,"type": 347},{"src": 203,"type": 348},{"src": 204,"type": 349,"decl": 2561},{"src": 205,"type": 350},{"src": 206,"type": 351,"decl": 3929},{"src": 60,"type": 352},{"src": 207,"type": 353,"decl": 3922},{"src": 208,"type": 354,"decl": 3924},{"src": 209,"type": 355,"decl": 9},{"src": 210,"type": 356},{"src": 211,"type": 357,"decl": 4904},{"src": 212,"type": 358},{"src": 213,"type": 359},{"src": 214,"type": 360,"decl": 1590},{"src": 215,"type": 361,"decl": 1598},{"src": 216,"type": 39,"decl": 633},{"src": 217,"type": 362,"decl": 680},{"src": 218,"type": 363,"decl": 5441},{"src": 219,"type": 364,"decl": 5442},{"src": 23,"type": 365},{"src": 25,"type": 366},{"src": 220,"type": 367},{"src": 220,"type": 367},{"src": 221,"type": 368,"decl": 30},{"src": 222,"type": 368,"decl": 29},{"src": 223,"type": 369},{"src": 116,"type": 370},{"src": 224,"type": 371,"decl": 4047},{"src": 225,"type": 372,"decl": 202},{"src": 223,"type": 373},{"src": 226,"type": 374,"decl": 4081},{"src": 227,"type": 375,"decl": 1499},{"src": 223,"type": 376},{"src": 228,"type": 377,"decl": 4202},{"src": 78,"type": 378,"decl": 539},{"src": 229,"type": 379,"decl": 4205},{"src": 230,"type": 380,"decl": 3711},{"src": 231,"type": 381,"decl": 3714},{"src": 232,"type": 382},{"src": 233,"type": 383},{"src": 234,"type": 79},{"src": 234,"type": 79},{"src": 234,"type": 79},{"src": 102,"type": 384,"decl": 579},{"src": 223,"type": 385},{"src": 235,"type": 295},{"src": 40,"type": 386},{"src": 203,"type": 387},{"src": 40,"type": 388},{"src": 236,"type": 389},{"src": 237,"type": 65},{"src": 237,"type": 73},{"src": 237,"type": 68},{"src": 41,"type": 390},{"src": 232,"type": 391},{"src": 232,"type": 392},{"src": 232,"type": 393},{"src": 232,"type": 394},{"src": 238,"type": 395},{"src": 239,"type": 396},{"src": 240,"type": 397},{"src": 241,"type": 398},{"src": 241,"type": 399},{"src": 241,"type": 400},{"src": 241,"type": 401},{"src": 241,"type": 402},{"src": 242,"type": 403},{"src": 243,"type": 404},{"src": 44,"type": 405},{"src": 46,"type": 406},{"src": 41,"type": 407},{"src": 232,"type": 408},{"src": 223,"type": 409},{"src": 232,"type": 410},{"src": 244,"type": 411,"decl": 4079},{"src": 245,"type": 60},{"src": 246,"type": 60,"decl": 4126},{"src": 247,"type": 412,"decl": 777},{"src": 248,"type": 413,"decl": 4211},{"src": 116,"type": 414},{"src": 249,"type": 415},{"src": 250,"type": 416,"decl": 4299},{"src": 251,"type": 411,"decl": 4078},{"src": 252,"type": 417,"decl": 3938},{"src": 253,"type": 418},{"src": 254,"type": 419},{"src": 255,"type": 420,"decl": 4851},{"src": 142,"type": 421},{"src": 256,"type": 422,"decl": 1604},{"src": 257,"type": 423,"decl": 4236},{"src": 223,"type": 424},{"src": 116,"type": 425},{"src": 223,"type": 426},{"src": 232,"type": 427},{"src": 127,"type": 428},{"src": 258,"type": 429},{"src": 41,"type": 430},{"src": 232,"type": 431},{"src": 232,"type": 432},{"src": 41,"type": 433},{"src": 232,"type": 434},{"src": 127,"type": 435},{"src": 127,"type": 436},{"src": 259,"type": 277},{"src": 260,"type": 437},{"src": 261,"type": 438,"decl": 228},{"src": 262,"type": 36},{"src": 223,"type": 439},{"src": 263,"type": 284,"decl": 237},{"src": 264,"type": 288,"decl": 1579},{"src": 265,"type": 440,"decl": 1580},{"src": 266,"type": 441,"decl": 1581},{"src": 267,"type": 442},{"src": 13,"type": 443},{"src": 13,"type": 444},{"src": 268,"type": 445},{"src": 269,"type": 446,"decl": 8},{"src": 270,"type": 295,"decl": 4099},{"src": 237,"type": 352},{"src": 232,"type": 447},{"src": 232,"type": 448},{"src": 271,"type": 449,"decl": 1605},{"src": 23,"type": 450},{"src": 25,"type": 366},{"src": 23,"type": 451},{"src": 23,"type": 452},{"src": 272,"type": 453,"decl": 4152},{"src": 273,"type": 454,"decl": 4288},{"src": 274,"type": 455,"decl": 3925},{"src": 275,"type": 456,"decl": 3926},{"src": 276,"type": 457,"decl": 3927},{"src": 277,"type": 357,"decl": 1623},{"src": 278,"type": 458,"decl": 105},{"src": 279,"type": 459,"decl": 1606},{"src": 280,"type": 460,"decl": 4258},{"src": 281,"type": 359,"decl": 1894},{"src": 282,"type": 461,"decl": 2728},{"src": 283,"type": 462,"decl": 4259},{"src": 210,"type": 463},{"src": 284,"type": 464,"decl": 3964},{"src": 285,"type": 465,"decl": 3564},{"src": 286,"type": 466,"decl": 3641},{"src": 287,"type": 466,"decl": 3640},{"src": 288,"type": 467},{"src": 289,"type": 372},{"src": 290,"type": 374},{"src": 291,"type": 468,"decl": 4178},{"src": 292,"type": 469,"decl": 4285},{"src": 293,"type": 470,"decl": 4304},{"src": 33,"type": 471},{"src": 294,"type": 472,"decl": 4225},{"src": 295,"type": 473,"decl": 4228},{"src": 223,"type": 474},{"src": 41,"type": 475},{"src": 116,"type": 476},{"src": 296,"type": 477,"decl": 4025},{"src": 297,"type": 478},{"src": 298,"type": 479,"decl": 2560},{"src": 40,"type": 480},{"src": 288,"type": 481},{"src": 236,"type": 482},{"src": 299,"type": 483},{"src": 300,"type": 464},{"src": 116,"type": 484},{"src": 223,"type": 485},{"src": 297,"type": 486},{"src": 223,"type": 487},{"src": 41,"type": 488},{"src": 116,"type": 489},{"src": 297,"type": 490},{"src": 223,"type": 491},{"src": 41,"type": 492},{"src": 116,"type": 493},{"src": 297,"type": 494},{"src": 223,"type": 495},{"src": 116,"type": 496},{"src": 297,"type": 497},{"src": 301,"type": 498},{"src": 302,"type": 499},{"src": 91,"type": 500},{"src": 58,"type": 501},{"src": 92,"type": 502},{"src": 223,"type": 503},{"src": 223,"type": 504},{"src": 41,"type": 505},{"src": 116,"type": 506},{"src": 297,"type": 507},{"src": 223,"type": 508},{"src": 41,"type": 509},{"src": 116,"type": 510},{"src": 297,"type": 511},{"src": 290,"type": 411},{"src": 303,"type": 512,"decl": 1610},{"src": 304,"type": 513,"decl": 1611},{"src": 305,"type": 514,"decl": 3921},{"src": 306,"type": 515,"decl": 3923},{"src": 307,"type": 516},{"src": 308,"type": 517},{"src": 309,"type": 419},{"src": 223,"type": 424},{"src": 297,"type": 518},{"src": 249,"type": 519},{"src": 310,"type": 520},{"src": 116,"type": 521},{"src": 223,"type": 385},{"src": 297,"type": 414},{"src": 223,"type": 522},{"src": 297,"type": 523},{"src": 116,"type": 524},{"src": 223,"type": 525},{"src": 297,"type": 526},{"src": 249,"type": 527},{"src": 249,"type": 528},{"src": 311,"type": 529},{"src": 312,"type": 530},{"src": 313,"type": 36},{"src": 297,"type": 531},{"src": 41,"type": 532},{"src": 314,"type": 533,"decl": 4261},{"src": 23,"type": 534},{"src": 25,"type": 27},{"src": 25,"type": 25},{"src": 25,"type": 25},{"src": 23,"type": 535},{"src": 25,"type": 536},{"src": 25,"type": 27},{"src": 25,"type": 27},{"src": 223,"type": 537},{"src": 41,"type": 538},{"src": 116,"type": 539},{"src": 297,"type": 540},{"src": 223,"type": 541},{"src": 41,"type": 542},{"src": 116,"type": 543},{"src": 297,"type": 544},{"src": 41,"type": 545},{"src": 210,"type": 546},{"src": 315,"type": 547,"decl": 5444},{"src": 316,"type": 548,"decl": 5445},{"src": 317,"type": 549,"decl": 5450},{"src": 318,"type": 550,"decl": 1613},{"src": 319,"type": 551,"decl": 3765},{"src": 320,"type": 552,"decl": 2158},{"src": 321,"type": 553,"decl": 1614},{"src": 322,"type": 554,"decl": 1620},{"src": 323,"type": 555,"decl": 1621},{"src": 324,"type": 556,"decl": 1622},{"src": 325,"type": 557,"decl": 1602},{"src": 326,"type": 558,"decl": 1601},{"src": 327,"type": 559,"decl": 1163},{"src": 328,"type": 249},{"src": 329,"type": 364,"decl": 1603},{"src": 330,"type": 560},{"src": 331,"type": 461,"decl": 1791},{"src": 143,"type": 561},{"src": 55,"type": 562},{"src": 40,"type": 563},{"src": 332,"type": 186,"decl": 3869},{"src": 297,"type": 564},{"src": 333,"type": 565},{"src": 40,"type": 566},{"src": 223,"type": 474},{"src": 334,"type": 477,"decl": 4053},{"src": 223,"type": 485},{"src": 223,"type": 487},{"src": 223,"type": 491},{"src": 223,"type": 495},{"src": 60,"type": 567},{"src": 237,"type": 567},{"src": 223,"type": 504},{"src": 223,"type": 508},{"src": 116,"type": 568},{"src": 223,"type": 522},{"src": 223,"type": 525},{"src": 116,"type": 531},{"src": 210,"type": 569},{"src": 200,"type": 570},{"src": 201,"type": 571},{"src": 200,"type": 572},{"src": 201,"type": 573},{"src": 200,"type": 574},{"src": 201,"type": 575},{"src": 202,"type": 576},{"src": 203,"type": 577},{"src": 210,"type": 578},{"src": 210,"type": 579},{"src": 223,"type": 537},{"src": 223,"type": 541},{"src": 116,"type": 295},{"src": 335,"type": 12,"decl": 4274},{"src": 336,"type": 12,"decl": 4275},{"src": 337,"type": 12,"decl": 1618},{"src": 338,"type": 580,"decl": 1619},{"src": 339,"type": 555,"decl": 1624},{"src": 340,"type": 581,"decl": 4861},{"src": 341,"type": 582},{"src": 341,"type": 582},{"src": 341,"type": 582},{"src": 342,"type": 582,"decl": 4859},{"src": 343,"type": 581,"decl": 4862},{"src": 344,"type": 583,"decl": 4860},{"src": 313,"type": 583},{"src": 345,"type": 36,"decl": 1889},{"src": 258,"type": 584},{"src": 346,"type": 331,"decl": 3864},{"src": 347,"type": 585},{"src": 348,"type": 581,"decl": 3920},{"src": 341,"type": 582},{"src": 349,"type": 586},{"src": 350,"type": 36,"decl": 1890},{"src": 310,"type": 584},{"src": 351,"type": 587,"decl": 3884},{"src": 352,"type": 367},{"src": 353,"type": 585},{"src": 354,"type": 588,"decl": 1914},{"src": 160,"type": 367},{"src": 355,"type": 589,"decl": 1178},{"src": 356,"type": 590,"decl": 1179},{"src": 357,"type": 582,"decl": 1654},{"src": 358,"type": 60,"decl": 1653},{"src": 359,"type": 591,"decl": 5000},{"src": 360,"type": 595,"decl": 3365},{"src": 361,"type": 600,"decl": 3287},{"src": 362,"type": 605,"decl": 1629},{"src": 363,"type": 609,"decl": 1649},{"src": 364,"type": 611,"decl": 1645},{"src": 365,"type": 612,"decl": 1646},{"src": 366,"type": 613,"decl": 1659},{"src": 367,"type": 615,"decl": 1660},{"src": 368,"type": 618,"decl": 1647},{"src": 369,"type": 619,"decl": 1661},{"src": 370,"type": 621,"decl": 3272},{"src": 371,"type": 622,"decl": 1679},{"src": 372,"type": 626,"decl": 1678},{"src": 373,"type": 642,"decl": 1717},{"src": 374,"type": 647,"decl": 1803},{"src": 375,"type": 649,"decl": 1730},{"src": 376,"type": 650,"decl": 1723},{"src": 377,"type": 655,"decl": 1731},{"src": 378,"type": 659,"decl": 3355},{"src": 379,"type": 662,"decl": 4873},{"src": 380,"type": 664},{"src": 381,"type": 666,"decl": 4882},{"src": 382,"type": 667,"decl": 4874},{"src": 383,"type": 669},{"src": 384,"type": 670,"decl": 4880},{"src": 385,"type": 671,"decl": 3342},{"src": 386,"type": 673,"decl": 1919},{"src": 387,"type": 677,"decl": 1923},{"src": 388,"type": 678,"decl": 1856},{"src": 389,"type": 689,"decl": 3311},{"src": 390,"type": 692,"decl": 3343},{"src": 391,"type": 694,"decl": 3345},{"src": 158,"type": 708,"decl": 3275},{"src": 392,"type": 709,"decl": 3276},{"src": 393,"type": 713,"decl": 1925},{"src": 394,"type": 716,"decl": 1955},{"src": 395,"type": 718,"decl": 1962},{"src": 396,"type": 724,"decl": 1954},{"src": 397,"type": 726,"decl": 2004},{"src": 55,"type": 729,"decl": 1799},{"src": 398,"type": 730,"decl": 4871},{"src": 399,"type": 732},{"src": 400,"type": 733,"decl": 4888},{"src": 233,"type": 734,"decl": 1818},{"src": 67,"type": 736,"decl": 1816},{"src": 160,"type": 737,"decl": 3303},{"src": 352,"type": 738,"decl": 4894},{"src": 401,"type": 742,"decl": 1920},{"src": 402,"type": 743,"decl": 3312},{"src": 253,"type": 770,"decl": 1876},{"src": 403,"type": 771,"decl": 3939},{"src": 404,"type": 776,"decl": 3344},{"src": 405,"type": 780,"decl": 1922},{"src": 406,"type": 820,"decl": 1650},{"src": 407,"type": 822,"decl": 4885},{"src": 408,"type": 823,"decl": 1138},{"src": 409,"type": 826,"decl": 4884},{"src": 13,"type": 1232,"decl": 7},{"src": 289,"type": 1240,"decl": 203},{"src": 259,"type": 1241,"decl": 215},{"src": 311,"type": 1243,"decl": 231},{"src": 58,"type": 1255,"decl": 663},{"src": 57,"type": 1256,"decl": 666},{"src": 115,"type": 1257,"decl": 673},{"src": 58,"type": 1259,"decl": 731},{"src": 91,"type": 1260,"decl": 736},{"src": 301,"type": 1261,"decl": 737},{"src": 58,"type": 1287,"decl": 794},{"src": 57,"type": 1288,"decl": 797},{"src": 91,"type": 1289,"decl": 799},{"src": 115,"type": 1290,"decl": 804},{"src": 150,"type": 1291,"decl": 805},{"src": 103,"type": 1332,"decl": 1242},{"src": 267,"type": 1373,"decl": 1478},{"src": 75,"type": 1381,"decl": 1483},{"src": 76,"type": 1382,"decl": 1484},{"src": 80,"type": 1653,"decl": 1724},{"src": 43,"type": 1670,"decl": 1792},{"src": 73,"type": 1671,"decl": 1794},{"src": 235,"type": 1672,"decl": 1804},{"src": 143,"type": 1673,"decl": 1805},{"src": 300,"type": 1674,"decl": 1807},{"src": 258,"type": 1675,"decl": 1808},{"src": 310,"type": 1676,"decl": 1809},{"src": 333,"type": 1677,"decl": 1822},{"src": 353,"type": 1678,"decl": 1824},{"src": 347,"type": 1679,"decl": 1826},{"src": 302,"type": 1680,"decl": 1829},{"src": 60,"type": 1681,"decl": 1830},{"src": 237,"type": 1682,"decl": 1831},{"src": 92,"type": 1683,"decl": 1838},{"src": 123,"type": 1684,"decl": 1851},{"src": 245,"type": 1685,"decl": 1854},{"src": 170,"type": 1686,"decl": 1863},{"src": 307,"type": 1687,"decl": 1867},{"src": 308,"type": 1688,"decl": 1868},{"src": 212,"type": 1689,"decl": 1880},{"src": 297,"type": 1690,"decl": 1884},{"src": 116,"type": 1691,"decl": 1885},{"src": 262,"type": 1692,"decl": 1887},{"src": 313,"type": 1693,"decl": 1891},{"src": 330,"type": 1694,"decl": 1895},{"src": 140,"type": 1726,"decl": 2054},{"src": 90,"type": 1735,"decl": 2093},{"src": 242,"type": 1736,"decl": 2094},{"src": 238,"type": 1737,"decl": 2095},{"src": 240,"type": 1738,"decl": 2096},{"src": 239,"type": 1739,"decl": 2097},{"src": 241,"type": 1740,"decl": 2098},{"src": 243,"type": 1741,"decl": 2099},{"src": 106,"type": 1742,"decl": 2100},{"src": 32,"type": 1749,"decl": 2451},{"src": 193,"type": 1750,"decl": 2453},{"src": 194,"type": 1751,"decl": 2454},{"src": 34,"type": 1753,"decl": 2456},{"src": 171,"type": 1757,"decl": 2502},{"src": 268,"type": 1758,"decl": 2506},{"src": 23,"type": 1760,"decl": 2531},{"src": 25,"type": 1761,"decl": 2533},{"src": 201,"type": 1762,"decl": 2534},{"src": 210,"type": 1763,"decl": 2542},{"src": 205,"type": 1764,"decl": 2545},{"src": 202,"type": 1765,"decl": 2549},{"src": 68,"type": 1766,"decl": 2555},{"src": 200,"type": 1768,"decl": 2587},{"src": 234,"type": 1769,"decl": 2600},{"src": 33,"type": 1773,"decl": 3273},{"src": 288,"type": 1774,"decl": 3278},{"src": 236,"type": 1775,"decl": 3279},{"src": 299,"type": 1776,"decl": 3280},{"src": 203,"type": 1777,"decl": 3298},{"src": 40,"type": 1778,"decl": 3300},{"src": 312,"type": 1779,"decl": 3305},{"src": 260,"type": 1780,"decl": 3306},{"src": 349,"type": 1781,"decl": 3313},{"src": 142,"type": 1782,"decl": 3346},{"src": 2938,"type": 1783,"decl": 3350},{"src": 213,"type": 1784,"decl": 3358},{"src": 220,"type": 1793,"decl": 3822},{"src": 44,"type": 1795,"decl": 4026},{"src": 46,"type": 1796,"decl": 4027},{"src": 39,"type": 1797,"decl": 4028},{"src": 163,"type": 1798,"decl": 4032},{"src": 223,"type": 1799,"decl": 4035},{"src": 328,"type": 1800,"decl": 4036},{"src": 66,"type": 1801,"decl": 4038},{"src": 232,"type": 1802,"decl": 4040},{"src": 127,"type": 1803,"decl": 4041},{"src": 249,"type": 1804,"decl": 4043},{"src": 41,"type": 1805,"decl": 4044},{"src": 126,"type": 1806,"decl": 4045},{"src": 290,"type": 1810,"decl": 4120},{"src": 309,"type": 1831,"decl": 4296},{"src": 254,"type": 1832,"decl": 4297},{"src": 341,"type": 1863,"decl": 4858},{"src": 98,"type": 1885,"decl": 5379},{"src": 191,"type": 1886,"decl": 5381},{"src": 4932,"type": 1896,"decl": 5469},{"src": 4940,"type": 1897,"decl": 5477},{"src": 4942,"type": 1898,"decl": 5479},{"src": 4947,"type": 1899,"decl": 5484},{"src": 4949,"type": 1900,"decl": 5486},{"src": 4951,"type": 1901,"decl": 5488},{"src": 4955,"type": 1902,"decl": 5492},{"src": 4959,"type": 1903,"decl": 5496},{"src": 4962,"type": 1904,"decl": 5499},{"src": 4964,"type": 1905,"decl": 5501},{"src": 4981,"type": 1906,"decl": 5518},{"src": 4982,"type": 1907,"decl": 5519},{"src": 4986,"type": 1908,"decl": 5523},{"src": 4987,"type": 1908,"decl": 5524},{"src": 4989,"type": 1909,"decl": 5526},{"src": 4991,"type": 1910,"decl": 5528},{"src": 4995,"type": 1911,"decl": 5532},{"src": 4999,"type": 1912,"decl": 5536},{"src": 5007,"type": 1913,"decl": 5544},{"src": 5021,"type": 1914,"decl": 5558},{"src": 5033,"type": 1915,"decl": 5570},{"src": 5034,"type": 1916,"decl": 5571},{"src": 5049,"type": 1917,"decl": 5586},{"src": 5050,"type": 1917,"decl": 5587},{"src": 5111,"type": 1918,"decl": 5648},{"src": 5115,"type": 1919,"decl": 5652},{"src": 5118,"type": 1920,"decl": 5655},{"src": 5122,"type": 1921,"decl": 5659},{"src": 5124,"type": 1922,"decl": 5661},{"src": 5130,"type": 1923,"decl": 5667}],"errors": [{"src": 5168,"name": "DiskQuota"},{"src": 5169,"name": "FileTooBig"},{"src": 5170,"name": "InputOutput"},{"src": 5171,"name": "NoSpaceLeft"},{"src": 5172,"name": "AccessDenied"},{"src": 5173,"name": "BrokenPipe"},{"src": 5174,"name": "SystemResources"},{"src": 5175,"name": "OperationAborted"},{"src": 5176,"name": "NotOpenForWriting"},{"src": 5177,"name": "WouldBlock"},{"src": 5178,"name": "ConnectionResetByPeer"},{"src": 5179,"name": "Unexpected"},{"src": 5180,"name": "InputOutput"},{"src": 5181,"name": "SystemResources"},{"src": 5182,"name": "IsDir"},{"src": 5183,"name": "OperationAborted"},{"src": 5184,"name": "BrokenPipe"},{"src": 5185,"name": "ConnectionResetByPeer"},{"src": 5186,"name": "ConnectionTimedOut"},{"src": 5187,"name": "NotOpenForReading"},{"src": 5188,"name": "WouldBlock"},{"src": 5189,"name": "AccessDenied"},{"src": 5190,"name": "Unseekable"},{"src": 5191,"name": "AccessDenied"},{"src": 5192,"name": "SharingViolation"},{"src": 5193,"name": "PathAlreadyExists"},{"src": 5194,"name": "FileNotFound"},{"src": 5195,"name": "AccessDenied"},{"src": 5196,"name": "PipeBusy"},{"src": 5197,"name": "NameTooLong"},{"src": 5198,"name": "InvalidUtf8"},{"src": 5199,"name": "BadPathName"},{"src": 5200,"name": "Unexpected"},{"src": 5201,"name": "SymLinkLoop"},{"src": 5202,"name": "ProcessFdQuotaExceeded"},{"src": 5203,"name": "SystemFdQuotaExceeded"},{"src": 5204,"name": "NoDevice"},{"src": 5205,"name": "SystemResources"},{"src": 5206,"name": "FileTooBig"},{"src": 5207,"name": "IsDir"},{"src": 5208,"name": "NoSpaceLeft"},{"src": 5209,"name": "NotDir"},{"src": 5210,"name": "DeviceBusy"},{"src": 5211,"name": "FileLocksNotSupported"},{"src": 5212,"name": "WouldBlock"},{"src": 5213,"name": "SystemResources"},{"src": 5214,"name": "Utf8ExpectedContinuation"},{"src": 5215,"name": "Utf8OverlongEncoding"},{"src": 5216,"name": "Utf8EncodesSurrogateHalf"},{"src": 5217,"name": "Utf8CodepointTooLarge"},{"src": 5218,"name": "SystemResources"},{"src": 5219,"name": "OperationAborted"},{"src": 5220,"name": "BrokenPipe"},{"src": 5221,"name": "NotOpenForWriting"},{"src": 5222,"name": "Unexpected"},{"src": 5223,"name": "OutOfMemory"},{"src": 5224,"name": "Overflow"},{"src": 5225,"name": "InvalidMachine"},{"src": 5226,"name": "InvalidPEHeader"},{"src": 5227,"name": "InvalidPEMagic"},{"src": 5228,"name": "EndOfStream"},{"src": 5229,"name": "Overflow"},{"src": 5230,"name": "InvalidCharacter"},{"src": 5231,"name": "StreamTooLong"},{"src": 5232,"name": "MissingStringTable"},{"src": 5233,"name": "MissingCoffSection"},{"src": 5234,"name": "InvalidDebugInfo"},{"src": 5235,"name": "MissingDebugInfo"},{"src": 5236,"name": "CurrentWorkingDirectoryUnlinked"},{"src": 5237,"name": "NameTooLong"},{"src": 5238,"name": "InvalidStreamDirectory"},{"src": 5239,"name": "InvalidBlockIndex"},{"src": 5240,"name": "UnhandledBigDirectoryStream"},{"src": 5241,"name": "UnknownPDBVersion"},{"src": 5242,"name": "EOF"},{"src": 5243,"name": "InvalidValue"},{"src": 5244,"name": "EndOfFile"},{"src": 5224,"name": "Overflow"},{"src": 5245,"name": "TruncatedInput"},{"src": 5246,"name": "Utf8InvalidStartByte"},{"src": 5247,"name": "OutOfMemory"},{"src": 5248,"name": "OperationAborted"},{"src": 5249,"name": "BrokenPipe"},{"src": 5250,"name": "Unexpected"},{"src": 5224,"name": "Overflow"},{"src": 5224,"name": "Overflow"},{"src": 5251,"name": "Overflow"},{"src": 5252,"name": "NameTooLong"},{"src": 5253,"name": "Unexpected"},{"src": 5254,"name": "TooManyParentDirs"},{"src": 5255,"name": "Unexpected"},{"src": 5256,"name": "Overflow"},{"src": 5257,"name": "Utf8ExpectedContinuation"},{"src": 5258,"name": "Utf8OverlongEncoding"},{"src": 5259,"name": "Utf8ExpectedContinuation"},{"src": 5260,"name": "Utf8OverlongEncoding"},{"src": 5261,"name": "Unexpected"},{"src": 5262,"name": "Overflow"},{"src": 5263,"name": "IsDir"},{"src": 5264,"name": "NotDir"},{"src": 5265,"name": "FileNotFound"},{"src": 5266,"name": "NoDevice"},{"src": 5267,"name": "AccessDenied"},{"src": 5268,"name": "PipeBusy"},{"src": 5269,"name": "PathAlreadyExists"},{"src": 5270,"name": "Unexpected"},{"src": 5271,"name": "NameTooLong"},{"src": 5272,"name": "WouldBlock"},{"src": 5273,"name": "Unexpected"},{"src": 5274,"name": "InvalidCharacter"},{"src": 5224,"name": "Overflow"},{"src": 5262,"name": "Overflow"},{"src": 5251,"name": "Overflow"},{"src": 5275,"name": "Overflow"},{"src": 5276,"name": "DanglingSurrogateHalf"},{"src": 5277,"name": "ExpectedSecondSurrogateHalf"},{"src": 5278,"name": "UnexpectedSecondSurrogateHalf"},{"src": 5279,"name": "CodepointTooLarge"},{"src": 5280,"name": "Utf8CannotEncodeSurrogateHalf"},{"src": 5281,"name": "Unexpected"},{"src": 5282,"name": "TimedOut"},{"src": 5283,"name": "TimerUnsupported"},{"src": 5284,"name": "SystemCannotYield"},{"src": 5224,"name": "Overflow"},{"src": 5224,"name": "Overflow"},{"src": 5285,"name": "Unseekable"},{"src": 5286,"name": "Unseekable"},{"src": 5287,"name": "AccessDenied"},{"src": 5288,"name": "FileNotFound"},{"src": 5289,"name": "NameTooLong"},{"src": 5290,"name": "PathAlreadyExists"},{"src": 5291,"name": "BadPathName"},{"src": 5292,"name": "InvalidUtf8"},{"src": 5293,"name": "AccessDenied"},{"src": 5294,"name": "PermissionDenied"},{"src": 5295,"name": "FileNotFound"},{"src": 5296,"name": "NameTooLong"},{"src": 5297,"name": "InputOutput"},{"src": 5298,"name": "SystemResources"},{"src": 5299,"name": "BadPathName"},{"src": 5300,"name": "FileBusy"},{"src": 5301,"name": "SymLinkLoop"},{"src": 5302,"name": "ReadOnlyFileSystem"},{"src": 5303,"name": "InvalidUtf8"},{"src": 5304,"name": "WouldBlock"},{"src": 5305,"name": "SystemResources"},{"src": 5306,"name": "FileLocksNotSupported"}],"astNodes": [{"file": 12,"line": 693,"col": 4,"docs": " This function is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation.","fields": [5307,5308]},{"file": 0,"line": 4,"col": 4,"docs": " This Function Adds two i32 together and returns the result.","fields": [5309,5310]},{"file": 3,"line": 715,"col": 24,"docs": " Populates only the feature bits specified.","fields": [5311]},{"file": 3,"line": 637,"col": 20,"fields": []},{"file": 3,"line": 654,"col": 20,"docs": " Adds the specified feature but not its dependencies.","fields": [5312,5313]},{"file": 41,"line": 177,"col": 0,"fields": [5314,5315,5316]},{"file": 26,"line": 224,"col": 4,"docs": " This function invokes undefined behavior when `ok` is `false`. In Debug and ReleaseSafe modes, calls to this function are always generated, and the `unreachable` statement triggers a panic. In ReleaseFast and ReleaseSmall modes, calls to this function are optimized away, and in fact the optimizer is able to use the assertion in its heuristics. Inside a test block, it is best to use the `std.testing` module rather than this function, because this function may not detect a test failure in ReleaseFast and ReleaseSmall mode. Outside of a test block, this assert function is the correct function to use.","fields": [5317]},{"file": 26,"line": 271,"col": 4,"fields": [5318,5319,5320]},{"file": 15,"line": 42,"col": 4,"docs": " Acquire the mutex. Deadlocks if the mutex is already held by the calling thread.","fields": [5321]},{"file": 32,"line": 73,"col": 4,"docs": " This returns a `File` that is configured to block with every write, in order to facilitate better debugging. This can be changed by modifying the `intended_io_mode` field.","fields": []},{"file": 5,"line": 604,"col": 8,"fields": [5322,5323]},{"file": 5,"line": 868,"col": 8,"fields": [5324]},{"file": 22,"line": 230,"col": 4,"docs": " Returns the platform ID of the callers thread. Attempts to use thread locals and avoid syscalls when possible.","fields": []},{"file": 4,"line": 26,"col": 12,"fields": [5325,5326,5327]},{"file": 36,"line": 414,"col": 4,"docs": " Causes abnormal process termination. If linking against libc, this calls the abort() libc function. Otherwise it raises SIGABRT followed by SIGKILL and finally lo","fields": []},{"file": 26,"line": 196,"col": 4,"docs": " Tries to print a stack trace to stderr, unbuffered, and ignores any error returned. TODO multithreaded awareness","fields": [5328]},{"file": 26,"line": 105,"col": 4,"docs": " Tries to print the current stack trace to stderr, unbuffered, and ignores any error returned. TODO multithreaded awareness","fields": [5329]},{"file": 15,"line": 46,"col": 4,"fields": [5330]},{"file": 42,"line": 38,"col": 4,"docs": " Wait for the event to be set by blocking the current thread. Thread-safe. No spurious wakeups. Upon return from `wait`, the only function available to be called in `StaticResetEvent` is `reset`.","fields": [5331]},{"file": 15,"line": 239,"col": 8,"fields": [5332]},{"file": 32,"line": 59,"col": 0,"fields": []},{"file": 46,"line": 511,"col": 4,"fields": [5333,5334,5335,5336]},{"file": 22,"line": 418,"col": 4,"fields": []},{"file": 28,"line": 72,"col": 4,"docs": " Renders fmt string with args, calling output with slices of bytes. If `output` returns an error, the error is returned from `format` and `output` is not called again. The format string must be comptime known and may contain placeholders following this format: `{[argument][specifier]:[fill][alignment][width].[precision]}` Each word between `[` and `]` is a parameter you have to replace with something: - *argument* is either the index or the name of the argument that should be inserted - *specifier* is a type-dependent formatting option that determines how a type should formatted (see below) - *fill* is a single character which is used to pad the formatted text - *alignment* is one of the three characters `<`, `^` or `>`. they define if the text is *left*, *center*, or *right* aligned - *width* is the total width of the field in characters - *precision* specifies how many decimals a formatted number should have Note that most of the parameters are optional and may be omitted. Also you can leave out separators like `:` and `.` when all parameters after the separator are omitted. Only exception is the *fill* parameter. If *fill* is required, one has to specify *alignment* as well, as otherwise the digits after `:` is interpreted as *width*, not *fill*. The *specifier* has several options for types: - `x` and `X`: output numeric value in hexadecimal notation - `s`:   - for pointer-to-many and C pointers of u8, print as a C-string using zero-termination   - for slices of u8, print the entire slice as a string without zero-termination - `e`: output floating point value in scientific notation - `d`: output numeric value in decimal notation - `b`: output integer value in binary notation - `o`: output integer value in octal notation - `c`: output integer as an ASCII character. Integer type must have 8 bits at max. - `u`: output integer as an UTF-8 sequence. Integer type must have 21 bits at max. - `*`: output the address of the value instead of the value itself. - `any`: output a value of any type using its default format If a formatted user type contains a function of the type ``` pub fn format(value: ?, comptime fmt: []const u8, options: std.fmt.FormatOptions, writer: anytype) !void ``` with `?` being the type formatted, this function will be called instead of the default implementation. This allows user types to be formatted in a logical manner instead of dumping all fields of the type. A user type may be a `struct`, `vector`, `union` or `enum` type. To print literal curly braces, escape them by writing them twice, e.g. `{{` or `}}`.","fields": [5337,5338,5339]},{"file": 4,"line": 19,"col": 12,"fields": [5340,5341]},{"file": 28,"line": 411,"col": 4,"fields": [5342,5343,5344,5345,5346]},{"file": 6,"line": 25,"col": 8,"fields": [5347,5348]},{"file": 6,"line": 40,"col": 8,"fields": [5349,5350,5351]},{"file": 26,"line": 77,"col": 4,"fields": []},{"file": 26,"line": 666,"col": 4,"docs": " TODO resources https://github.com/ziglang/zig/issues/4353","fields": [5352]},{"file": 26,"line": 1486,"col": 0,"fields": []},{"file": 26,"line": 86,"col": 4,"fields": []},{"file": 26,"line": 340,"col": 4,"fields": [5353,5354,5355,5356,5357]},{"file": 34,"line": 333,"col": 4,"docs": " Returns the smaller number. When one parameter's type's full range fits in the other, the return type is the smaller type.","fields": [5358,5359]},{"file": 26,"line": 580,"col": 4,"docs": " TODO resources https://github.com/ziglang/zig/issues/4353","fields": [5360,5361,5362,5363]},{"file": 26,"line": 1003,"col": 8,"fields": [5364,5365]},{"file": 3,"line": 1405,"col": 8,"fields": [5366]},{"file": 3,"line": 59,"col": 16,"fields": [5367]},{"file": 26,"line": 1072,"col": 4,"fields": [5368,5369]},{"file": 43,"line": 179,"col": 4,"docs": " Allocates an array of `n` items of type `T` and sets all the items to `undefined`. Depending on the Allocator implementation, it may be required to call `free` once the memory is no longer needed, to avoid a resource leak. If the `Allocator` implementation is unknown, then correct code will call `free` when done. For allocating a single item, see `create`.","fields": [5370,5371,5372]},{"file": 34,"line": 992,"col": 4,"docs": " Cast an integer to a different integer type. If the value doesn't fit, return an error. TODO make this an optional not an error.","fields": [5373,5374]},{"file": 43,"line": 443,"col": 4,"docs": " Free an array allocated with `alloc`. To free a single item, see `destroy`.","fields": [5375,5376]},{"file": 6,"line": 577,"col": 12,"docs": " Finds the value associated with a key in the map","fields": [5377,5378]},{"file": 13,"line": 193,"col": 4,"docs": " Copy all of source into dest at position 0. dest.len must be >= source.len. If the slices overlap, dest.ptr must be <= src.ptr.","fields": [5379,5380,5381]},{"file": 43,"line": 155,"col": 4,"docs": " Returns a pointer to undefined memory. Call `destroy` with the result to free the memory.","fields": [5382,5383]},{"file": 29,"line": 2276,"col": 4,"docs": " Same as `openFileAbsolute` but the path parameter is WTF-16 encoded.","fields": [5384,5385]},{"file": 43,"line": 163,"col": 4,"docs": " `ptr` should be the return value of `create`, or otherwise have the same address and alignment property.","fields": [5386,5387]},{"file": 26,"line": 692,"col": 0,"docs": " This takes ownership of coff_file: users of this function should not close it themselves, even on error. TODO resources https://github.com/ziglang/zig/issues/4353 TODO it's weird to take ownership even on error, rework this code.","fields": [5388,5389]},{"file": 5,"line": 181,"col": 8,"docs": " Upon success, the stream is in an uninitialized state. To continue using it, you must use the open() function.","fields": [5390]},{"file": 25,"line": 109,"col": 8,"fields": [5391,5392]},{"file": 25,"line": 121,"col": 8,"fields": [5393]},{"file": 5,"line": 467,"col": 8,"fields": [5394,5395]},{"file": 5,"line": 862,"col": 8,"fields": [5396]},{"file": 9,"line": 42,"col": 12,"docs": " If the number read would be smaller than `buf.len`, `error.EndOfStream` is returned instead.","fields": [5397,5398]},{"file": 9,"line": 31,"col": 12,"docs": " Returns the number of bytes read. If the number read is smaller than `buffer.len`, it means the stream reached the end. Reaching the end of a stream is not an error condition.","fields": [5399,5400]},{"file": 13,"line": 527,"col": 4,"docs": " Compares two slices and returns whether they are equal.","fields": [5401,5402,5403]},{"file": 5,"line": 245,"col": 8,"docs": " Repositions read/write file offset relative to the beginning. TODO: integrate with async I/O","fields": [5404,5405]},{"file": 9,"line": 256,"col": 12,"fields": [5406,5407]},{"file": 9,"line": 238,"col": 12,"docs": " Reads exactly `num_bytes` bytes and returns as an array. `num_bytes` must be comptime-known","fields": [5408,5409]},{"file": 3,"line": 1018,"col": 16,"fields": [5410]},{"file": 13,"line": 1329,"col": 4,"docs": " Reads an integer from memory with bit count specified by T. The bit count of T must be evenly divisible by 8. This function cannot fail and cannot cause undefined behavior. Assumes the endianness of memory is native. This means the function can simply pointer cast memory.","fields": [5411,5412]},{"file": 25,"line": 178,"col": 4,"fields": [5413]},{"file": 5,"line": 252,"col": 8,"docs": " TODO: integrate with async I/O","fields": [5414]},{"file": 25,"line": 274,"col": 8,"fields": [5415]},{"file": 7,"line": 334,"col": 12,"docs": " Modify the array so that it can hold at least `new_capacity` items. Like `ensureTotalCapacity`, but the resulting capacity is much more likely (but not guaranteed) to be equal to `new_capacity`. Invalidates pointers if additional memory is needed.","fields": [5416,5417]},{"file": 7,"line": 419,"col": 12,"docs": " Returns a slice of all the items plus the extra capacity, whose memory contents are `undefined`.","fields": [5418]},{"file": 43,"line": 337,"col": 4,"fields": [5419,5420,5421]},{"file": 13,"line": 1032,"col": 4,"docs": " Linear search for the index of a scalar value inside a slice.","fields": [5422,5423,5424]},{"file": 28,"line": 1589,"col": 4,"docs": " Parses the string `buf` as signed or unsigned representation in the specified radix of an integral value of type `T`. When `radix` is zero the string prefix is examined to detect the true radix:  * A prefix of \"0b\" implies radix=2,  * A prefix of \"0o\" implies radix=8,  * A prefix of \"0x\" implies radix=16,  * Otherwise radix=10 is assumed. Ignores '_' character in `buf`. See also `parseUnsigned`.","fields": [5425,5426,5427]},{"file": 25,"line": 159,"col": 4,"fields": [5428,5429,5430]},{"file": 9,"line": 188,"col": 12,"docs": " Reads from the stream until specified byte is found. If the buffer is not large enough to hold the entire contents, `error.StreamTooLong` is returned. If end-of-stream is found, returns the rest of the stream. If this function is called again after that, returns null. Returns a slice of the stream data, with ptr equal to `buf.ptr`. The delimiter byte is not included in the returned slice.","fields": [5431,5432,5433]},{"file": 9,"line": 224,"col": 12,"docs": " Reads 1 byte from the stream or returns `error.EndOfStream`.","fields": [5434]},{"file": 9,"line": 24,"col": 12,"docs": " Returns the number of bytes read. It may be less than buffer.len. If the number of bytes read is 0, it means end of stream. End of stream is not an error condition.","fields": [5435,5436]},{"file": 13,"line": 220,"col": 4,"docs": " Sets all elements of `dest` to `value`.","fields": [5437,5438,5439]},{"file": 7,"line": 181,"col": 12,"docs": " Extend the list by 1 element, but assert `self.capacity` is sufficient to hold an additional item. **Does not** invalidate pointers.","fields": [5440,5441]},{"file": 25,"line": 316,"col": 8,"fields": [5442,5443]},{"file": 25,"line": 326,"col": 8,"fields": [5444,5445,5446]},{"file": 21,"line": 1094,"col": 4,"docs": " Initialize DWARF info. The caller has the responsibility to initialize most the DwarfInfo fields before calling. These fields can be left undefined: * abbrev_table_list * compile_unit_list","fields": [5447,5448]},{"file": 7,"line": 49,"col": 12,"docs": " Deinitialize with `deinit` or use `toOwnedSlice`.","fields": [5449]},{"file": 21,"line": 622,"col": 4,"fields": [5450]},{"file": 10,"line": 115,"col": 4,"fields": [5451]},{"file": 10,"line": 46,"col": 12,"fields": [5452,5453]},{"file": 10,"line": 34,"col": 12,"fields": [5454]},{"file": 10,"line": 77,"col": 12,"fields": [5455,5456]},{"file": 10,"line": 81,"col": 12,"fields": [5457,5458]},{"file": 10,"line": 101,"col": 12,"fields": [5459]},{"file": 10,"line": 97,"col": 12,"fields": [5460]},{"file": 10,"line": 42,"col": 12,"fields": [5461]},{"file": 11,"line": 26,"col": 12,"fields": [5462]},{"file": 11,"line": 18,"col": 12,"fields": [5463,5464]},{"file": 21,"line": 455,"col": 0,"fields": [5465,5466,5467]},{"file": 9,"line": 266,"col": 12,"fields": [5468,5469,5470]},{"file": 13,"line": 1383,"col": 4,"docs": " Reads an integer from memory with bit count specified by T. The bit count of T must be evenly divisible by 8. This function cannot fail and cannot cause undefined behavior.","fields": [5471,5472,5473]},{"file": 11,"line": 30,"col": 12,"fields": [5474]},{"file": 21,"line": 841,"col": 4,"docs": " Gets an already existing AbbrevTable given the abbrev_offset, or if not found, seeks in the stream and parses it.","fields": [5475,5476]},{"file": 7,"line": 173,"col": 12,"docs": " Extend the list by 1 element. Allocates more memory as necessary.","fields": [5477,5478]},{"file": 21,"line": 854,"col": 4,"fields": [5479,5480]},{"file": 21,"line": 606,"col": 8,"fields": [5481]},{"file": 52,"line": 5,"col": 4,"docs": " Read a single unsigned LEB128 value from the given reader as type T, or error.Overflow if the value cannot fit.","fields": [5482,5483]},{"file": 7,"line": 67,"col": 12,"docs": " Release all allocated memory.","fields": [5484]},{"file": 7,"line": 361,"col": 12,"docs": " Increase length by 1, returning pointer to the new item. The returned pointer becomes invalid when the list resized.","fields": [5485]},{"file": 7,"line": 314,"col": 12,"docs": " Modify the array so that it can hold at least `new_capacity` items. Invalidates pointers if additional memory is needed.","fields": [5486,5487]},{"file": 7,"line": 371,"col": 12,"docs": " Increase length by 1, returning pointer to the new item. Asserts that there is already space for the new item without allocating more. The returned pointer becomes invalid when the list is resized. **Does not** invalidate element pointers.","fields": [5488]},{"file": 21,"line": 885,"col": 4,"fields": [5489,5490,5491,5492]},{"file": 21,"line": 586,"col": 0,"fields": [5493,5494]},{"file": 7,"line": 267,"col": 12,"docs": " Adjust the list's length to `new_len`. Does not initialize added items if any.","fields": [5495,5496]},{"file": 21,"line": 537,"col": 0,"fields": [5497,5498,5499,5500,5501]},{"file": 21,"line": 298,"col": 4,"fields": [5502,5503]},{"file": 21,"line": 338,"col": 8,"fields": [5504,5505,5506]},{"file": 21,"line": 1075,"col": 4,"fields": [5507,5508]},{"file": 21,"line": 330,"col": 4,"fields": [5509,5510]},{"file": 21,"line": 305,"col": 4,"fields": [5511,5512]},{"file": 21,"line": 282,"col": 4,"fields": [5513]},{"file": 21,"line": 726,"col": 4,"fields": [5514]},{"file": 25,"line": 213,"col": 8,"fields": [5515,5516]},{"file": 9,"line": 309,"col": 12,"fields": [5517,5518]},{"file": 13,"line": 2824,"col": 4,"docs": " Given a slice, returns a slice of the underlying bytes, preserving pointer attributes.","fields": [5519]},{"file": 44,"line": 453,"col": 4,"docs": " On Windows, this calls `resolveWindows` and on POSIX it calls `resolvePosix`.","fields": [5520,5521]},{"file": 44,"line": 469,"col": 4,"docs": " This function is like a series of `cd` statements executed one after another. It resolves \".\" and \"..\". The result does not have a trailing path separator. If all paths are relative it uses the current working directory as a starting point. Each drive has its own current working directory. Path separators are canonicalized to '\\\\' and drives are canonicalized to capital letters. Note: all usage of this function should be audited due to the existence of symlinks. Without performing actual syscalls, resolving `..` could be incorrect.","fields": [5522,5523]},{"file": 37,"line": 23,"col": 4,"docs": " Caller must free the returned memory.","fields": [5524]},{"file": 44,"line": 309,"col": 4,"fields": [5525]},{"file": 44,"line": 434,"col": 0,"fields": [5526]},{"file": 44,"line": 411,"col": 0,"fields": [5527,5528,5529]},{"file": 13,"line": 1622,"col": 4,"docs": " Returns an iterator that iterates over the slices of `buffer` that are not any of the bytes in `delimiter_bytes`. tokenize(u8, \"   abc def    ghi  \", \" \") Will return slices for \"abc\", \"def\", \"ghi\", null, in that order. If `buffer` is empty, the iterator will return null. If `delimiter_bytes` does not exist in buffer, the iterator will return `buffer`, null, in that order. See also the related function `split`.","fields": [5530,5531,5532]},{"file": 13,"line": 1806,"col": 12,"docs": " Returns a slice of the next token, or null if tokenization is complete.","fields": [5533]},{"file": 36,"line": 1745,"col": 4,"docs": " The result is a slice of out_buffer, indexed from 0.","fields": [5534]},{"file": 43,"line": 455,"col": 4,"docs": " Copies `m` to newly allocated memory. Caller owns the memory.","fields": [5535,5536,5537]},{"file": 43,"line": 392,"col": 4,"docs": " Prefer calling realloc to shrink if you can tolerate failure, such as in an ArrayList data structure with a storage capacity. Shrink always succeeds, and `new_n` must be <= `old_mem.len`. Returned slice has same alignment as old_mem. Shrinking to 0 is the same as calling `free`.","fields": [5538,5539,5540]},{"file": 20,"line": 503,"col": 8,"fields": [5541,5542]},{"file": 29,"line": 2216,"col": 4,"docs": " Returns a handle to the current working directory. It is not opened with iteration capability. Closing the returned `Dir` is checked illegal behavior. Iterating over the result is illegal behavior. On POSIX targets, this function is comptime-callable.","fields": []},{"file": 29,"line": 920,"col": 8,"docs": " Opens a file for reading or writing, without attempting to create a new file. To create a new file, see `createFile`. Call `File.close` to release the resource. Asserts that the path parameter has no null bytes.","fields": [5543,5544,5545]},{"file": 20,"line": 861,"col": 4,"fields": [5546,5547]},{"file": 5,"line": 257,"col": 8,"docs": " TODO: integrate with async I/O","fields": [5548]},{"file": 20,"line": 946,"col": 0,"fields": [5549,5550]},{"file": 20,"line": 1005,"col": 4,"fields": [5551,5552,5553]},{"file": 20,"line": 1016,"col": 4,"fields": [5554,5555]},{"file": 20,"line": 1071,"col": 8,"fields": [5556]},{"file": 20,"line": 606,"col": 8,"fields": [5557]},{"file": 20,"line": 850,"col": 8,"fields": [5558,5559]},{"file": 20,"line": 635,"col": 16,"fields": [5560]},{"file": 20,"line": 463,"col": 0,"fields": [5561,5562]},{"file": 7,"line": 110,"col": 12,"docs": " The caller owns the returned memory. Empties this ArrayList.","fields": [5563]},{"file": 35,"line": 293,"col": 4,"docs": " Takes a Slice or Many Pointer and returns it with the Type modified to have the given sentinel value. This function assumes the caller has verified the memory contains the sentinel value.","fields": [5564,5565]},{"file": 13,"line": 650,"col": 4,"docs": " Deprecated: use std.mem.span() or std.mem.sliceTo() Same as `span`, except when there is both a sentinel and an array length or slice length, scans the memory for the sentinel value rather than using the length.","fields": [5566]},{"file": 20,"line": 844,"col": 8,"fields": [5567,5568]},{"file": 20,"line": 526,"col": 8,"fields": [5569]},{"file": 9,"line": 127,"col": 12,"docs": " Allocates enough memory to read until `delimiter`. If the allocated memory would be greater than `max_size`, returns `error.StreamTooLong`. Caller owns returned memory. If this function returns an error, the contents from the stream read so far are lost.","fields": [5570,5571,5572,5573]},{"file": 9,"line": 101,"col": 12,"docs": " Replaces the `std.ArrayList` contents by reading from the stream until `delimiter` is found. Does not include the delimiter in the result. If the `std.ArrayList` length would exceed `max_size`, `error.StreamTooLong` is returned and the `std.ArrayList` is populated with `max_size` bytes from the stream.","fields": [5574,5575,5576,5577]},{"file": 7,"line": 292,"col": 12,"docs": " Reduce length to `new_len`. Invalidates pointers for the elements `items[new_len..]`.","fields": [5578,5579]},{"file": 20,"line": 1047,"col": 8,"fields": [5580,5581]},{"file": 9,"line": 320,"col": 12,"docs": " Reads an integer with the same size as the given enum's tag type. If the integer matches an enum tag, casts the integer to the enum tag and returns it. Otherwise, returns an error. TODO optimization taking advantage of most fields being in order","fields": [5582,5583,5584]},{"file": 6,"line": 538,"col": 12,"docs": " Inserts a key-value pair into the hash map, asserting that no previous entry with the same key is already present","fields": [5585,5586,5587]},{"file": 6,"line": 973,"col": 12,"fields": [5588,5589,5590,5591,5592]},{"file": 6,"line": 1367,"col": 12,"fields": [5593,5594,5595]},{"file": 6,"line": 1409,"col": 8,"fields": [5596,5597,5598,5599]},{"file": 6,"line": 1445,"col": 8,"fields": [5600,5601,5602,5603]},{"file": 6,"line": 869,"col": 8,"fields": [5604]},{"file": 6,"line": 1403,"col": 8,"fields": [5605]},{"file": 34,"line": 402,"col": 4,"docs": " Returns the maximum of two numbers. Return type is the one with the larger range.","fields": [5606,5607]},{"file": 6,"line": 925,"col": 12,"fields": [5608]},{"file": 34,"line": 1025,"col": 4,"fields": [5609]},{"file": 6,"line": 1476,"col": 8,"fields": [5610,5611,5612]},{"file": 13,"line": 2921,"col": 4,"docs": " Round an address up to the nearest aligned address The alignment must be a power of 2 and greater than 0.","fields": [5613,5614]},{"file": 43,"line": 238,"col": 4,"docs": " Deprecated: use `allocAdvanced`","fields": [5615,5616,5617,5618]},{"file": 6,"line": 864,"col": 12,"fields": [5619,5620]},{"file": 6,"line": 1397,"col": 8,"fields": [5621]},{"file": 6,"line": 917,"col": 8,"fields": [5622]},{"file": 6,"line": 921,"col": 8,"fields": [5623]},{"file": 6,"line": 755,"col": 16,"fields": [5624]},{"file": 6,"line": 1000,"col": 12,"fields": [5625,5626,5627,5628]},{"file": 13,"line": 2234,"col": 4,"fields": [5629,5630,5631]},{"file": 26,"line": 610,"col": 0,"fields": [5632,5633,5634,5635,5636,5637,5638]},{"file": 26,"line": 1398,"col": 12,"fields": [5639,5640]},{"file": 26,"line": 1462,"col": 0,"fields": [5641,5642]},{"file": 20,"line": 791,"col": 8,"fields": [5643,5644]},{"file": 44,"line": 950,"col": 4,"fields": [5645]},{"file": 20,"line": 670,"col": 8,"fields": [5646,5647,5648]},{"file": 20,"line": 694,"col": 8,"fields": [5649,5650,5651]},{"file": 20,"line": 1053,"col": 8,"fields": [5652,5653]},{"file": 21,"line": 793,"col": 8,"fields": [5654,5655]},{"file": 21,"line": 313,"col": 4,"fields": [5656,5657]},{"file": 21,"line": 610,"col": 8,"fields": [5658,5659]},{"file": 21,"line": 905,"col": 8,"fields": [5660,5661,5662]},{"file": 9,"line": 232,"col": 12,"docs": " Same as `readByte` except the returned byte is signed.","fields": [5663]},{"file": 21,"line": 398,"col": 8,"fields": [5664,5665,5666,5667]},{"file": 11,"line": 22,"col": 12,"fields": [5668,5669]},{"file": 21,"line": 422,"col": 8,"fields": [5670]},{"file": 44,"line": 101,"col": 4,"docs": " Naively combines a series of paths with the native path seperator. Allocates memory for the result, which must be freed by the caller.","fields": [5671,5672]},{"file": 44,"line": 37,"col": 0,"docs": " This is different from mem.join in that the separator will not be repeated if it is found at the end or beginning of a pair of consecutive paths.","fields": [5673,5674,5675,5676,5677]},{"file": 44,"line": 27,"col": 4,"docs": " Returns if the given byte is a valid path separator","fields": [5678]},{"file": 21,"line": 379,"col": 8,"fields": [5679]},{"file": 52,"line": 54,"col": 4,"docs": " Read a single signed LEB128 value from the given reader as type T, or error.Overflow if the value cannot fit.","fields": [5680,5681]},{"file": 26,"line": 44,"col": 8,"fields": [5682]},{"file": 26,"line": 449,"col": 4,"fields": [5683,5684,5685,5686]},{"file": 26,"line": 469,"col": 4,"fields": [5687,5688,5689,5690]},{"file": 15,"line": 243,"col": 8,"fields": [5691]},{"file": 42,"line": 140,"col": 8,"fields": [5692]},{"file": 46,"line": 1744,"col": 4,"fields": []},{"file": 46,"line": 1982,"col": 4,"docs": " Call this when you made a windows DLL call or something that does SetLastError and you get an unexpected error.","fields": [5693]},{"file": 4,"line": 15,"col": 12,"fields": [5694,5695]},{"file": 28,"line": 633,"col": 0,"fields": [5696,5697,5698,5699]},{"file": 28,"line": 654,"col": 4,"fields": [5700,5701,5702,5703]},{"file": 28,"line": 1312,"col": 4,"fields": [5704,5705,5706,5707,5708]},{"file": 34,"line": 933,"col": 4,"docs": " Returns the absolute value of the integer parameter. Result is an unsigned integer.","fields": [5709]},{"file": 28,"line": 1773,"col": 4,"fields": [5710,5711]},{"file": 28,"line": 932,"col": 4,"fields": [5712,5713,5714]},{"file": 40,"line": 162,"col": 4,"docs": " Returns the length of a supplied UTF-8 string literal in terms of unicode codepoints. Asserts that the data is valid UTF-8.","fields": [5715]},{"file": 40,"line": 18,"col": 4,"docs": " Given the first byte of a UTF-8 codepoint, returns a number 1-4 indicating the total length of the codepoint in bytes. If this byte does not match the form of a UTF-8 start byte, returns Utf8InvalidStartByte.","fields": [5716]},{"file": 40,"line": 70,"col": 4,"docs": " Decodes the UTF-8 codepoint encoded in the given slice of bytes. bytes.len must be equal to utf8ByteSequenceLength(bytes[0]) catch unreachable. If you already know the length at comptime, you can call one of utf8Decode2,utf8Decode3,utf8Decode4 directly instead of this function.","fields": [5717]},{"file": 4,"line": 35,"col": 12,"fields": [5718,5719,5720]},{"file": 28,"line": 883,"col": 4,"fields": [5721,5722,5723,5724]},{"file": 48,"line": 168,"col": 8,"fields": [5725,5726]},{"file": 13,"line": 2565,"col": 4,"docs": " Given a pointer to a single item, returns a slice of the underlying bytes, preserving pointer attributes.","fields": [5727]},{"file": 35,"line": 676,"col": 4,"docs": " Compares two of any type for equality. Containers are compared on a field-by-field basis, where possible. Pointers are not followed.","fields": [5728,5729]},{"file": 26,"line": 991,"col": 8,"fields": [5730]},{"file": 45,"line": 33,"col": 8,"fields": [5731]},{"file": 3,"line": 1401,"col": 8,"fields": [5732]},{"file": 3,"line": 838,"col": 16,"fields": [5733]},{"file": 31,"line": 238,"col": 4,"fields": [5734,5735,5736,5737,5738]},{"file": 31,"line": 336,"col": 4,"fields": [5739,5740,5741,5742,5743,5744]},{"file": 37,"line": 176,"col": 4,"fields": [5745]},{"file": 5,"line": 198,"col": 8,"docs": " Test whether ANSI escape codes will be treated as such.","fields": [5746]},{"file": 5,"line": 193,"col": 8,"docs": " Test whether the file refers to a terminal. See also `supportsAnsiEscapeCodes`.","fields": [5747]},{"file": 43,"line": 261,"col": 4,"fields": [5748,5749,5750,5751,5752,5753]},{"file": 43,"line": 473,"col": 4,"docs": " Call `resizeFn`, but caller guarantees that `new_len` <= `buf.len` meaning error.OutOfMemory should be impossible. This function allows a runtime `buf_align` value. Callers should generally prefer to call `shrink` directly.","fields": [5754,5755,5756,5757,5758,5759]},{"file": 6,"line": 1227,"col": 12,"fields": [5760,5761,5762]},{"file": 44,"line": 238,"col": 4,"fields": [5763]},{"file": 29,"line": 1040,"col": 8,"docs": " Same as `openFile` but Windows-only and the path parameter is [WTF-16](https://simonsapin.github.io/wtf-8/#potentially-ill-formed-utf-16) encoded.","fields": [5764,5765,5766]},{"file": 46,"line": 412,"col": 4,"fields": [5767]},{"file": 46,"line": 428,"col": 4,"docs": " If buffer's length exceeds what a Windows DWORD integer can hold, it will be broken into multiple non-atomic reads.","fields": [5768,5769,5770,5771]},{"file": 36,"line": 4318,"col": 4,"docs": " Repositions read/write file offset relative to the beginning.","fields": [5772,5773]},{"file": 36,"line": 4460,"col": 4,"docs": " Returns the read/write file offset relative to the beginning.","fields": [5774]},{"file": 43,"line": 358,"col": 4,"fields": [5775,5776,5777,5778,5779,5780]},{"file": 13,"line": 1046,"col": 4,"fields": [5781,5782,5783,5784]},{"file": 28,"line": 1647,"col": 0,"fields": [5785,5786,5787,5788]},{"file": 13,"line": 621,"col": 4,"docs": " Takes a pointer to an array, a sentinel-terminated pointer, or a slice, and returns a slice. If there is a sentinel on the input type, there will be a sentinel on the output type. The constness of the output type matches the constness of the input type. When there is both a sentinel and an array length or slice length, the length value is used instead of the sentinel.","fields": [5789]},{"file": 34,"line": 454,"col": 4,"docs": " Returns the sum of a and b. Returns an error on overflow.","fields": [5790,5791,5792]},{"file": 13,"line": 1337,"col": 4,"docs": " Reads an integer from memory with bit count specified by T. The bit count of T must be evenly divisible by 8. This function cannot fail and cannot cause undefined behavior. Assumes the endianness of memory is foreign, so it must byte-swap.","fields": [5793,5794]},{"file": 21,"line": 476,"col": 0,"fields": [5795,5796,5797]},{"file": 21,"line": 489,"col": 0,"fields": [5798,5799,5800,5801]},{"file": 21,"line": 483,"col": 0,"fields": [5802,5803,5804]},{"file": 21,"line": 494,"col": 0,"fields": [5805,5806,5807,5808,5809]},{"file": 21,"line": 468,"col": 0,"fields": [5810,5811,5812]},{"file": 21,"line": 522,"col": 0,"fields": [5813,5814,5815,5816]},{"file": 44,"line": 230,"col": 4,"fields": [5817]},{"file": 13,"line": 1779,"col": 4,"fields": [5818,5819,5820]},{"file": 44,"line": 441,"col": 0,"fields": [5821,5822]},{"file": 13,"line": 1834,"col": 8,"fields": [5823,5824]},{"file": 46,"line": 638,"col": 4,"docs": " The result is a slice of `buffer`, indexed from 0.","fields": [5825]},{"file": 43,"line": 415,"col": 4,"docs": " This is the same as `alignedShrink`, except caller may additionally pass the return address of the first stack frame, which may be relevant for allocators which collect stack traces.","fields": [5826,5827,5828,5829,5830]},{"file": 46,"line": 1869,"col": 4,"docs": " Converts the path `s` to WTF16, null-terminated. If the path is absolute, it will get NT-style prefix `\\??\\` prepended automatically.","fields": [5831]},{"file": 44,"line": 199,"col": 4,"fields": [5832]},{"file": 40,"line": 691,"col": 4,"docs": " Returns index of next character. If exact fit, returned index equals output slice length. Assumes there is enough space for the output.","fields": [5833,5834]},{"file": 13,"line": 2460,"col": 4,"docs": " Converts an integer which has host endianness to little endian.","fields": [5835,5836]},{"file": 46,"line": 1847,"col": 4,"docs": " Normalizes a Windows path with the following steps:     1) convert all forward slashes to back slashes     2) collapse duplicate back slashes     3) remove '.' and '..' directory parts Returns the length of the new path.","fields": [5837,5838]},{"file": 46,"line": 1906,"col": 0,"fields": [5839,5840]},{"file": 46,"line": 1781,"col": 8,"fields": [5841]},{"file": 46,"line": 1220,"col": 4,"fields": [5842]},{"file": 13,"line": 925,"col": 4,"docs": " Deprecated: use std.mem.len() or std.mem.sliceTo().len Takes a pointer to an array, an array, a sentinel-terminated pointer, or a slice, and returns the length. In the case of a sentinel-terminated array, it scans the array for a sentinel and uses that for the length, rather than using the array length. For C pointers it assumes it is a pointer-to-many with a 0 sentinel.","fields": [5843]},{"file": 6,"line": 1370,"col": 12,"fields": [5844,5845,5846]},{"file": 34,"line": 1072,"col": 4,"docs": " Returns the next power of two (if the value is not already a power of two). Only unsigned integers can be used. Zero is not an allowed input. If the value doesn't fit, returns an error.","fields": [5847,5848]},{"file": 6,"line": 913,"col": 8,"fields": [5849]},{"file": 13,"line": 2927,"col": 4,"docs": " Round an address up to the nearest aligned address The alignment must be a power of 2 and greater than 0.","fields": [5850,5851,5852]},{"file": 6,"line": 1509,"col": 8,"fields": [5853,5854]},{"file": 6,"line": 759,"col": 16,"fields": [5855]},{"file": 6,"line": 763,"col": 16,"fields": [5856]},{"file": 6,"line": 769,"col": 16,"fields": [5857,5858]},{"file": 26,"line": 506,"col": 12,"fields": [5859,5860,5861]},{"file": 26,"line": 916,"col": 0,"fields": [5862,5863]},{"file": 4,"line": 30,"col": 12,"fields": [5864,5865]},{"file": 44,"line": 979,"col": 4,"fields": [5866]},{"file": 26,"line": 33,"col": 8,"fields": [5867]},{"file": 42,"line": 147,"col": 8,"fields": [5868,5869]},{"file": 46,"line": 1726,"col": 4,"fields": []},{"file": 40,"line": 84,"col": 4,"fields": [5870]},{"file": 40,"line": 103,"col": 4,"fields": [5871]},{"file": 40,"line": 127,"col": 4,"fields": [5872]},{"file": 48,"line": 119,"col": 8,"fields": [5873,5874]},{"file": 6,"line": 394,"col": 12,"docs": " Create a managed hash map with an empty context. If the context is not zero-sized, you must use initContext(allocator, ctx) instead.","fields": [5875]},{"file": 45,"line": 19,"col": 12,"fields": [5876,5877]},{"file": 46,"line": 1471,"col": 4,"fields": [5878,5879,5880,5881]},{"file": 13,"line": 2997,"col": 4,"docs": " Given an address and an alignment, return true if the address is a multiple of the alignment The alignment must be a power of 2 and greater than 0.","fields": [5882,5883]},{"file": 31,"line": 228,"col": 4,"docs": " Verifies that the adjusted length will still map to the full length","fields": [5884,5885,5886]},{"file": 46,"line": 1479,"col": 4,"fields": [5887,5888,5889]},{"file": 40,"line": 762,"col": 0,"fields": [5890]},{"file": 36,"line": 1701,"col": 4,"docs": " Windows-only. Get an environment variable with a null-terminated, WTF-16 encoded name. See also `getenv`. This function first attempts a case-sensitive lookup. If no match is found, and `key` is ASCII, then it attempts a second case-insensitive lookup.","fields": [5891]},{"file": 36,"line": 2905,"col": 4,"fields": [5892]},{"file": 36,"line": 2861,"col": 4,"docs": " Test whether a file descriptor refers to a terminal.","fields": [5893]},{"file": 34,"line": 448,"col": 4,"docs": " Returns the product of a and b. Returns an error on overflow.","fields": [5894,5895,5896]},{"file": 6,"line": 1230,"col": 12,"fields": [5897,5898,5899]},{"file": 44,"line": 207,"col": 0,"fields": [5900,5901]},{"file": 46,"line": 61,"col": 4,"fields": [5902,5903]},{"file": 46,"line": 1673,"col": 4,"fields": [5904,5905,5906,5907,5908,5909,5910,5911,5912,5913]},{"file": 46,"line": 2009,"col": 4,"docs": " Call this when you made a windows NtDll call and you get an unexpected status.","fields": [5914]},{"file": 46,"line": 942,"col": 4,"docs": " The SetFilePointerEx function with the `dwMoveMethod` parameter set to `FILE_BEGIN`.","fields": [5915,5916]},{"file": 46,"line": 979,"col": 4,"docs": " The SetFilePointerEx function with parameters to get the current offset.","fields": [5917]},{"file": 43,"line": 82,"col": 4,"docs": " Realloc is used to modify the size or alignment of an existing allocation, as well as to provide the allocator with an opportunity to move an allocation to a better location. When the size/alignment is greater than the previous allocation, this function returns `error.OutOfMemory` when the requested new allocation could not be granted. When the size/alignment is less than or equal to the previous allocation, this function returns `error.OutOfMemory` when the allocator decides the client would be better off keeping the extra alignment/size. Clients will call `resizeFn` when they require the allocator to track a new alignment/size, and so this function should only return success when the allocator considers the reallocation desirable from the allocator's perspective. As an example, `std.ArrayList` tracks a \"capacity\", and therefore can handle reallocation failure, even when `new_n` <= `old_mem.len`. A `FixedBufferAllocator` would always return `error.OutOfMemory` for `reallocFn` when the size/alignment is less than or equal to the old allocation, because it cannot reclaim the memory, and thus the `std.ArrayList` would be better off retaining its capacity. When `reallocFn` returns, `return_value[0..min(old_mem.len, new_byte_count)]` must be the same as `old_mem` was when `reallocFn` is called. The bytes of `return_value[old_mem.len..]` have undefined values. The returned slice must have its pointer aligned at least to `new_alignment` bytes.","fields": [5918,5919,5920,5921,5922,5923,5924]},{"file": 13,"line": 2736,"col": 4,"docs": " Given a slice of bytes, returns a slice of the specified type backed by those bytes, preserving pointer attributes.","fields": [5925,5926]},{"file": 28,"line": 1760,"col": 4,"fields": [5927,5928]},{"file": 34,"line": 461,"col": 4,"docs": " Returns a - b, or an error on overflow.","fields": [5929,5930,5931]},{"file": 13,"line": 865,"col": 4,"docs": " Takes a pointer to an array, an array, a vector, a sentinel-terminated pointer, a slice or a tuple, and returns the length. In the case of a sentinel-terminated array, it uses the array length. For C pointers it assumes it is a pointer-to-many with a 0 sentinel.","fields": [5932]},{"file": 9,"line": 271,"col": 12,"fields": [5933,5934,5935,5936]},{"file": 13,"line": 1306,"col": 4,"docs": " Reads an integer from memory with size equal to bytes.len. T specifies the return type, which must be large enough to store the result.","fields": [5937,5938,5939]},{"file": 40,"line": 302,"col": 8,"fields": [5940]},{"file": 40,"line": 309,"col": 8,"fields": [5941]},{"file": 40,"line": 7,"col": 4,"docs": " Returns how many bytes the UTF-8 representation would require for the given codepoint.","fields": [5942]},{"file": 40,"line": 34,"col": 4,"docs": " Encodes the given codepoint into a UTF-8 byte sequence. c: the codepoint. out: the out buffer to write to. Must have a len >= utf8CodepointSequenceLength(c). Errors: if c cannot be encoded in UTF-8. Returns: the number of bytes written to out.","fields": [5943,5944]},{"file": 13,"line": 2329,"col": 4,"docs": " Replace all occurences of `needle` with `replacement`.","fields": [5945,5946,5947,5948]},{"file": 13,"line": 2338,"col": 4,"docs": " Collapse consecutive duplicate elements into one entry.","fields": [5949,5950,5951]},{"file": 46,"line": 1794,"col": 4,"docs": " Removes '.' and '..' path components from a \"sanitized relative path\". A \"sanitized path\" is one where:    1) all forward slashes have been replaced with back slashes    2) all repeating back slashes have been collapsed    3) the path is a relative one (does not start with a back slash)","fields": [5952,5953]},{"file": 13,"line": 975,"col": 4,"fields": [5954,5955,5956]},{"file": 6,"line": 1101,"col": 8,"docs": " Find the index containing the data for the given key. Whether this function returns null is almost always branched on after this function returns, and this function returns null/not null from separate code paths.  We want the optimizer to remove that branch and instead directly fuse the basic blocks after the branch to the basic blocks from this function.  To encourage that, this function is marked as inline.","fields": [5957,5958,5959]},{"file": 34,"line": 1060,"col": 4,"docs": " Returns the next power of two (if the value is not already a power of two). Only unsigned integers can be used. Zero is not an allowed input. Result is a type with 1 more bit than the input type.","fields": [5960,5961]},{"file": 13,"line": 2974,"col": 4,"docs": " Round an address up to the previous aligned address The alignment must be a power of 2 and greater than 0.","fields": [5962,5963,5964]},{"file": 46,"line": 1485,"col": 4,"fields": [5965,5966]},{"file": 42,"line": 240,"col": 12,"fields": [5967,5968]},{"file": 42,"line": 282,"col": 12,"fields": []},{"file": 42,"line": 177,"col": 8,"fields": [5969,5970]},{"file": 39,"line": 160,"col": 8,"docs": " Initialize the timer structure. Can only fail when running in a hostile environment that intentionally injects error values into syscalls, such as using seccomp on Linux to intercept `clock_gettime`.","fields": []},{"file": 36,"line": 6054,"col": 4,"fields": []},{"file": 23,"line": 41,"col": 4,"docs": " Signals to the processor that the caller is inside a busy-wait spin-loop.","fields": []},{"file": 39,"line": 205,"col": 8,"docs": " Reads the timer value since start or the last reset in nanoseconds","fields": [5971]},{"file": 48,"line": 41,"col": 8,"fields": [5972]},{"file": 48,"line": 62,"col": 8,"fields": [5973,5974]},{"file": 48,"line": 73,"col": 8,"fields": [5975,5976]},{"file": 45,"line": 62,"col": 4,"fields": [5977,5978,5979,5980,5981]},{"file": 45,"line": 47,"col": 4,"fields": [5982,5983,5984]},{"file": 16,"line": 73,"col": 12,"docs": " Insert a new node at the head. Arguments:     new_node: Pointer to the new node to insert.","fields": [5985,5986]},{"file": 43,"line": 304,"col": 4,"docs": " Increases or decreases the size of an allocation. It is guaranteed to not move the pointer.","fields": [5987,5988,5989]},{"file": 45,"line": 93,"col": 4,"fields": [5990,5991,5992,5993,5994,5995]},{"file": 13,"line": 3001,"col": 4,"fields": [5996,5997,5998]},{"file": 13,"line": 121,"col": 4,"docs": " An allocator helper function.  Adjusts an allocation length satisfy `len_align`. `full_len` should be the full capacity of the allocation which may be greater than the `len` that was requsted.  This function should only be used by allocators that are unaffected by `len_align`.","fields": [5999,6000,6001]},{"file": 38,"line": 265,"col": 4,"fields": [6002]},{"file": 13,"line": 1079,"col": 4,"fields": [6003,6004,6005]},{"file": 43,"line": 134,"col": 0,"docs": " Move the given memory to a new location in the given allocator to accomodate a new size and alignment.","fields": [6006,6007,6008,6009,6010,6011,6012]},{"file": 46,"line": 1603,"col": 4,"fields": []},{"file": 46,"line": 1612,"col": 4,"fields": []},{"file": 39,"line": 223,"col": 4,"fields": []},{"file": 39,"line": 235,"col": 4,"fields": [6013,6014]},{"file": 48,"line": 48,"col": 4,"fields": [6015,6016]},{"file": 48,"line": 26,"col": 0,"fields": [6017,6018,6019]},{"file": 48,"line": 11,"col": 0,"fields": [6020,6021]},{"file": 48,"line": 16,"col": 0,"fields": [6022]},{"file": 48,"line": 30,"col": 0,"fields": [6023,6024,6025]},{"file": 48,"line": 20,"col": 0,"fields": [6026,6027]},{"file": 13,"line": 2959,"col": 4,"docs": " Round an address up to the previous aligned address Unlike `alignBackward`, `alignment` can be any positive number, not just a power of 2.","fields": [6028,6029]},{"file": 38,"line": 241,"col": 4,"fields": [6030]},{"file": 13,"line": 1162,"col": 4,"docs": " Uses Boyer-moore-horspool algorithm on large inputs; `indexOfPosLinear` on small inputs.","fields": [6031,6032,6033,6034]},{"file": 39,"line": 248,"col": 0,"fields": [6035,6036,6037]},{"file": 34,"line": 1273,"col": 4,"docs": " Multiply a and b. Return type is wide enough to guarantee no overflow.","fields": [6038,6039,6040]},{"file": 13,"line": 2968,"col": 4,"docs": " Round an address up to the previous aligned address The alignment must be a power of 2 and greater than 0.","fields": [6041,6042]},{"file": 38,"line": 186,"col": 0,"fields": [6043,6044]},{"file": 49,"line": 547,"col": 4,"docs": " True if every value of the type `T` has a unique bit pattern representing it. In other words, `T` has no unused bits and no padding.","fields": [6045]},{"file": 13,"line": 1097,"col": 4,"docs": " Consider using `indexOfPos` instead of this, which will automatically use a more sophisticated algorithm on larger inputs.","fields": [6046,6047,6048,6049]},{"file": 13,"line": 1119,"col": 0,"fields": [6050,6051]},{"file": 6,"line": 76,"col": 8,"fields": [6052,6053]},{"file": 6,"line": 80,"col": 8,"fields": [6054,6055,6056]},{"file": 6,"line": 90,"col": 4,"fields": [6057]},{"file": 6,"line": 86,"col": 4,"fields": [6058,6059]},{"file": 3,"line": 712,"col": 16,"fields": [6060]},{"file": 35,"line": 859,"col": 4,"fields": [6061,6062]},{"file": 34,"line": 615,"col": 4,"docs": " Returns an unsigned int type that can hold the number of bits in T - 1. Suitable for 0-based bit indices of T.","fields": [6063]},{"file": 4,"line": 4,"col": 4,"fields": [6064,6065,6066]},{"file": 6,"line": 55,"col": 4,"fields": [6067]},{"file": 6,"line": 12,"col": 4,"fields": [6068,6069]},{"file": 6,"line": 38,"col": 4,"fields": [6070,6071]},{"file": 6,"line": 135,"col": 4,"docs": " This function issues a compile error with a helpful message if there is a problem with the provided context type.  A context must have the following member functions:   - hash(self, PseudoKey) Hash   - eql(self, PseudoKey, Key) bool If you are passing a context to a *Adapted function, PseudoKey is the type of the key parameter.  Otherwise, when creating a HashMap or HashMapUnmanaged type, PseudoKey = Key = K.","fields": [6072,6073,6074,6075]},{"file": 6,"line": 358,"col": 4,"docs": " General purpose hash table. No order is guaranteed and any modification invalidates live iterators. It provides fast operations (lookup, insertion, deletion) with quite high load factors (up to 80% by default) for a low memory usage. For a hash map that can be initialized directly that does not store an Allocator field, see `HashMapUnmanaged`. If iterating over the table entries is a strong usecase and needs to be fast, prefer the alternative `std.ArrayHashMap`. Context must be a struct type with two member functions:   hash(self, K) u64   eql(self, K, K) bool Adapted variants of many functions are provided.  These variants take a pseudo key instead of a key.  Their context must have the functions:   hash(self, PseudoKey) u64   eql(self, PseudoKey, K) bool","fields": [6076,6077,6078,6079]},{"file": 6,"line": 47,"col": 4,"fields": [6080,6081]},{"file": 6,"line": 673,"col": 4,"docs": " A HashMap based on open addressing and linear probing. A lookup or modification typically occurs only 2 cache misses. No order is guaranteed and any modification invalidates live iterators. It achieves good performance with quite high load factors (by default, grow is triggered at 80% full) and only one byte of overhead per element. The struct itself is only 16 bytes for a small footprint. This comes at the price of handling size with u32, which should be reasonnable enough for almost all uses. Deletions are achieved with tombstones.","fields": [6082,6083,6084,6085]},{"file": 34,"line": 314,"col": 4,"docs": " Given two types, returns the smallest one which is capable of holding the full range of the minimum value.","fields": [6086,6087]},{"file": 7,"line": 23,"col": 4,"docs": " A contiguous, growable list of arbitrarily aligned items in memory. This is a wrapper around an array of T values aligned to `alignment`-byte addresses. If the specified alignment is `null`, then `@alignOf(T)` is used. Initialize with `init`. This struct internally stores a `std.mem.Allocator` for memory management. To manually specify an allocator with each method call see `ArrayListAlignedUnmanaged`.","fields": [6088,6089]},{"file": 7,"line": 12,"col": 4,"docs": " A contiguous, growable list of items in memory. This is a wrapper around an array of T values. Initialize with `init`. This struct internally stores a `std.mem.Allocator` for memory management. To manually specify an allocator with each method call see `ArrayListUnmanaged`.","fields": [6090]},{"file": 9,"line": 6,"col": 4,"fields": [6091,6092,6093]},{"file": 13,"line": 563,"col": 4,"docs": " Takes a pointer to an array, a sentinel-terminated pointer, or a slice, and returns a slice. If there is a sentinel on the input type, there will be a sentinel on the output type. The constness of the output type matches the constness of the input type. `[*c]` pointers are assumed to be 0-terminated, and assumed to not allow null.","fields": [6094]},{"file": 10,"line": 119,"col": 0,"fields": [6095]},{"file": 10,"line": 8,"col": 4,"docs": " This turns a byte buffer into an `io.Writer`, `io.Reader`, or `io.SeekableStream`. If the supplied byte buffer is const, then `io.Writer` is not available.","fields": [6096]},{"file": 11,"line": 2,"col": 4,"fields": [6097,6098,6099,6100,6101,6102,6103]},{"file": 35,"line": 599,"col": 4,"fields": [6104]},{"file": 49,"line": 99,"col": 4,"fields": [6105]},{"file": 49,"line": 101,"col": 12,"fields": [6106]},{"file": 49,"line": 248,"col": 4,"fields": [6107]},{"file": 49,"line": 116,"col": 4,"fields": [6108]},{"file": 49,"line": 118,"col": 12,"fields": [6109]},{"file": 49,"line": 218,"col": 4,"fields": [6110]},{"file": 35,"line": 140,"col": 4,"fields": [6111]},{"file": 13,"line": 2539,"col": 0,"fields": [6112,6113,6114]},{"file": 13,"line": 2815,"col": 0,"fields": [6115]},{"file": 13,"line": 1797,"col": 4,"fields": [6116]},{"file": 34,"line": 1213,"col": 4,"docs": " Returns the maximum value of integer type T.","fields": [6117]},{"file": 35,"line": 159,"col": 4,"docs": " Given a \"memory span\" type, returns the \"element type\".","fields": [6118]},{"file": 35,"line": 226,"col": 4,"docs": " Given a \"memory span\" type, returns the same type except with the given sentinel value.","fields": [6119,6120]},{"file": 34,"line": 412,"col": 4,"docs": " Finds the maximum of three numbers.","fields": [6121,6122,6123]},{"file": 14,"line": 9,"col": 4,"docs": " Many producer, many consumer, non-allocating, thread-safe. Uses a mutex to protect access. The queue does not manage ownership and the user is responsible to manage the storage of the nodes.","fields": [6124]},{"file": 16,"line": 161,"col": 4,"docs": " A tail queue is headed by a pair of pointers, one to the head of the list and the other to the tail of the list. The elements are doubly linked so that an arbitrary element can be removed without a need to traverse the list. New elements can be added to the list before or after an existing element, at the head of the list, or at the end of the list. A tail queue may be traversed in either direction.","fields": [6125]},{"file": 17,"line": 6,"col": 4,"fields": [6126]},{"file": 16,"line": 14,"col": 4,"docs": " A singly-linked list is headed by a single forward pointer. The elements are singly linked for minimum space and pointer manipulation overhead at the expense of O(n) removal for arbitrary elements. New elements can be added to the list after an existing element or at the head of the list. A singly-linked list may only be traversed in the forward direction. Singly-linked lists are ideal for applications with large datasets and few or no removals or for implementing a LIFO queue.","fields": [6127]},{"file": 19,"line": 8,"col": 4,"docs": " Many reader, many writer, non-allocating, thread-safe Uses a spinlock to protect push() and pop() When building in single threaded mode, this is a simple linked list.","fields": [6128]},{"file": 49,"line": 45,"col": 4,"fields": [6129]},{"file": 49,"line": 47,"col": 12,"fields": [6130]},{"file": 49,"line": 354,"col": 4,"fields": [6131]},{"file": 13,"line": 2555,"col": 0,"fields": [6132]},{"file": 34,"line": 1221,"col": 4,"docs": " Returns the minimum value of integer type T.","fields": [6133]},{"file": 40,"line": 752,"col": 4,"docs": " Converts a UTF-8 string literal into a UTF-16LE string literal.","fields": [6134]},{"file": 35,"line": 190,"col": 4,"docs": " Given a type which can have a sentinel e.g. `[:0]u8`, returns the sentinel value, or `null` if there is not one. Types which cannot possibly have a sentinel will be a compile error.","fields": [6135]},{"file": 13,"line": 2722,"col": 0,"fields": [6136,6137]},{"file": 6,"line": 65,"col": 4,"docs": " Builtin hashmap for strings as keys. Key memory is managed by the caller.  Keys and values will not automatically be freed.","fields": [6138]},{"file": 49,"line": 308,"col": 4,"fields": [6139]},{"file": 17,"line": 108,"col": 8,"fields": [6140,6141]},{"file": 49,"line": 287,"col": 4,"fields": [6142]},{"file": 3,"line": 713,"col": 23,"fields": []},{"file": 8,"line": 6,"col": 20,"fields": [6143,6144,6145,6146,6147,6148,6149,6150,6151,6152,6153,6154,6155,6156,6157,6158,6159,6160,6161,6162,6163,6164,6165,6166,6167,6168,6169,6170,6171,6172,6173,6174,6175,6176,6177,6178,6179,6180,6181,6182,6183,6184,6185,6186,6187,6188,6189,6190,6191,6192,6193,6194,6195,6196,6197,6198,6199,6200,6201,6202,6203,6204,6205,6206,6207,6208,6209,6210,6211,6212,6213,6214,6215,6216,6217,6218,6219,6220,6221,6222,6223,6224,6225,6226,6227,6228,6229,6230,6231,6232,6233,6234,6235,6236,6237,6238,6239,6240,6241,6242,6243,6244,6245,6246,6247,6248,6249,6250,6251,6252,6253,6254,6255,6256,6257,6258,6259,6260,6261,6262,6263,6264,6265,6266,6267,6268,6269,6270,6271,6272,6273,6274,6275,6276,6277,6278,6279,6280,6281,6282,6283,6284]},{"file": 12,"line": 450,"col": 23,"fields": [6285,6286]},{"file": 4,"line": 9,"col": 11,"fields": [6287]},{"file": 5,"line": 12,"col": 17,"fields": [6288,6289,6290]},{"file": 6,"line": 56,"col": 11,"fields": []},{"file": 6,"line": 365,"col": 11,"fields": [6291,6292,6293]},{"file": 6,"line": 683,"col": 11,"fields": [6294,6295,6296]},{"file": 7,"line": 29,"col": 11,"fields": [6297,6298,6299]},{"file": 21,"line": 247,"col": 26,"fields": [6300,6301]},{"file": 21,"line": 253,"col": 25,"fields": [6302,6303,6304,6305]},{"file": 21,"line": 260,"col": 19,"fields": [6306,6307]},{"file": 21,"line": 238,"col": 20,"fields": [6308,6309,6310,6311]},{"file": 21,"line": 293,"col": 17,"fields": [6312,6313]},{"file": 21,"line": 233,"col": 13,"fields": [6314,6315]},{"file": 25,"line": 374,"col": 20,"fields": [6316]},{"file": 3,"line": 16,"col": 24,"fields": [6317,6318,6319,6320,6321,6322,6323,6324,6325,6326,6327,6328,6329,6330,6331,6332,6333,6334,6335,6336,6337,6338,6339,6340,6341,6342,6343,6344,6345,6346,6347,6348,6349,6350,6351,6352,6353,6354,6355,6356,6357]},{"file": 3,"line": 7,"col": 19,"fields": [6358,6359,6360]},{"file": 9,"line": 14,"col": 11,"fields": [6361]},{"file": 12,"line": 443,"col": 19,"fields": [6362,6363]},{"file": 3,"line": 749,"col": 25,"fields": [6364,6365,6366,6367,6368,6369,6370,6371,6372,6373,6374,6375,6376,6377,6378,6379,6380,6381,6382,6383,6384,6385,6386,6387,6388,6389,6390,6391,6392,6393,6394,6395,6396,6397,6398,6399,6400,6401,6402,6403,6404,6405,6406,6407,6408,6409,6410,6411,6412,6413,6414,6415,6416,6417,6418,6419,6420]},{"file": 10,"line": 9,"col": 11,"fields": [6421,6422]},{"file": 11,"line": 11,"col": 11,"fields": [6423]},{"file": 12,"line": 196,"col": 21,"fields": [6424,6425,6426,6427,6428,6429,6430,6431,6432,6433,6434,6435,6436,6437,6438,6439,6440,6441,6442,6443,6444,6445,6446,6447,6448]},{"file": 12,"line": 255,"col": 25,"fields": [6449,6450,6451,6452]},{"file": 13,"line": 1798,"col": 11,"fields": [6453,6454,6455]},{"file": 20,"line": 492,"col": 23,"fields": [6456,6457,6458,6459,6460,6461,6462]},{"file": 20,"line": 40,"col": 32,"fields": [6463,6464,6465,6466,6467,6468,6469,6470,6471]},{"file": 21,"line": 348,"col": 18,"fields": [6472,6473,6474,6475]},{"file": 14,"line": 10,"col": 11,"fields": [6476,6477,6478]},{"file": 16,"line": 162,"col": 11,"fields": [6479,6480,6481]},{"file": 17,"line": 7,"col": 11,"fields": [6482]},{"file": 22,"line": 319,"col": 26,"fields": [6483,6484,6485]},{"file": 18,"line": 1565,"col": 24,"fields": [6486,6487]},{"file": 16,"line": 15,"col": 11,"fields": [6488]},{"file": 19,"line": 9,"col": 11,"fields": [6489,6490]},{"file": 18,"line": 76,"col": 24,"fields": [6491,6492]},{"file": 25,"line": 363,"col": 28,"fields": [6493,6494,6495,6496,6497,6498,6499,6500]},{"file": 20,"line": 951,"col": 19,"fields": [6501,6502,6503,6504,6505,6506,6507]},{"file": 20,"line": 631,"col": 36,"fields": [6508,6509]},{"file": 20,"line": 17,"col": 28,"fields": [6510,6511,6512,6513,6514,6515,6516,6517,6518,6519,6520,6521,6522,6523,6524,6525,6526,6527,6528,6529]},{"file": 20,"line": 53,"col": 20,"fields": [6530,6531,6532,6533,6534,6535,6536,6537,6538,6539,6540,6541]},{"file": 6,"line": 75,"col": 26,"fields": []},{"file": 21,"line": 593,"col": 22,"fields": [6542,6543,6544,6545,6546,6547,6548,6549,6550]},{"file": 17,"line": 109,"col": 49,"fields": []},{"file": 17,"line": 130,"col": 68,"fields": []},{"file": 17,"line": 112,"col": 66,"fields": []},{"file": 0,"line": 0,"col": 0,"fields": []},{"file": 1,"line": 0,"col": 0,"fields": []},{"file": 2,"line": 0,"col": 0,"fields": []},{"file": 3,"line": 627,"col": 28,"fields": [6551]},{"file": 26,"line": 296,"col": 55},{"file": 26,"line": 298,"col": 39},{"file": 12,"line": 53,"col": 23,"fields": [6552,6553]},{"file": 26,"line": 322,"col": 66},{"file": 32,"line": 34,"col": 49,"fields": [6554]},{"file": 28,"line": 19,"col": 26,"fields": [6555,6556,6557,6558]},{"file": 26,"line": 204,"col": 90},{"file": 26,"line": 500,"col": 23,"fields": [6559,6560,6561]},{"file": 5,"line": 74,"col": 26,"fields": [6562,6563,6564,6565,6566,6567]},{"file": 25,"line": 98,"col": 17,"fields": [6568,6569,6570,6571,6572,6573,6574]},{"file": 44,"line": 297,"col": 24,"fields": [6575,6576,6577]},{"file": 44,"line": 302,"col": 21,"fields": [6578,6579,6580]},{"file": 29,"line": 290,"col": 16,"fields": [6581]},{"file": 20,"line": 997,"col": 18,"fields": [6582,6583,6584,6585]},{"file": 20,"line": 103,"col": 23,"fields": [6586,6587,6588,6589]},{"file": 6,"line": 746,"col": 25,"fields": [6590,6591]},{"file": 21,"line": 355,"col": 26,"fields": [6592,6593,6594,6595,6596,6597,6598,6599,6600,6601,6602,6603,6604,6605,6606,6607,6608,6609,6610]},{"file": 26,"line": 39,"col": 23,"fields": [6611,6612,6613]},{"file": 26,"line": 208,"col": 63},{"file": 26,"line": 113,"col": 90},{"file": 26,"line": 117,"col": 63},{"file": 58,"line": 1,"col": 23,"fields": [6614,6615,6616,6617,6618,6619,6620,6621,6622,6623,6624,6625,6626,6627,6628,6629,6630,6631,6632,6633,6634,6635,6636,6637,6638,6639,6640,6641,6642,6643,6644,6645,6646,6647,6648,6649,6650,6651,6652,6653,6654,6655,6656,6657,6658,6659,6660,6661,6662,6663,6664,6665,6666,6667,6668,6669,6670,6671,6672,6673,6674,6675,6676,6677,6678,6679,6680,6681,6682,6683,6684,6685,6686,6687,6688,6689,6690,6691,6692,6693,6694,6695,6696,6697,6698,6699,6700,6701,6702,6703,6704,6705,6706,6707,6708,6709,6710,6711,6712,6713,6714,6715,6716,6717,6718,6719,6720,6721,6722,6723,6724,6725,6726,6727,6728,6729,6730,6731,6732,6733,6734,6735,6736,6737,6738,6739,6740,6741,6742,6743,6744,6745,6746,6747,6748,6749,6750,6751,6752,6753,6754,6755,6756,6757,6758,6759,6760,6761,6762,6763,6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777,6778,6779,6780,6781,6782,6783,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6794,6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806,6807,6808,6809,6810,6811,6812,6813,6814,6815,6816,6817,6818,6819,6820,6821,6822,6823,6824,6825,6826,6827,6828,6829,6830,6831,6832,6833,6834,6835,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6846,6847,6848,6849,6850,6851,6852,6853,6854,6855,6856,6857,6858,6859,6860,6861,6862,6863,6864,6865,6866,6867,6868,6869,6870,6871,6872,6873,6874,6875,6876,6877,6878,6879,6880,6881,6882,6883,6884,6885,6886,6887,6888,6889,6890,6891,6892,6893,6894,6895,6896,6897,6898,6899,6900,6901,6902,6903,6904,6905,6906,6907,6908,6909,6910,6911,6912,6913,6914,6915,6916,6917,6918,6919,6920,6921,6922,6923,6924,6925,6926,6927,6928,6929,6930,6931,6932,6933,6934,6935,6936,6937,6938,6939,6940,6941,6942,6943,6944,6945,6946,6947,6948,6949,6950,6951,6952,6953,6954,6955,6956,6957,6958,6959,6960,6961,6962,6963,6964,6965,6966,6967,6968,6969,6970,6971,6972,6973,6974,6975,6976,6977,6978,6979,6980,6981,6982,6983,6984,6985,6986,6987,6988,6989,6990,6991,6992,6993,6994,6995,6996,6997,6998,6999,7000,7001,7002,7003,7004,7005,7006,7007,7008,7009,7010,7011,7012,7013,7014,7015,7016,7017,7018,7019,7020,7021,7022,7023,7024,7025,7026,7027,7028,7029,7030,7031,7032,7033,7034,7035,7036,7037,7038,7039,7040,7041,7042,7043,7044,7045,7046,7047,7048,7049,7050,7051,7052,7053,7054,7055,7056,7057,7058,7059,7060,7061,7062,7063,7064,7065,7066,7067,7068,7069,7070,7071,7072,7073,7074,7075,7076,7077,7078,7079,7080,7081,7082,7083,7084,7085,7086,7087,7088,7089,7090,7091,7092,7093,7094,7095,7096,7097,7098,7099,7100,7101,7102,7103,7104,7105,7106,7107,7108,7109,7110,7111,7112,7113,7114,7115,7116,7117,7118,7119,7120,7121,7122,7123,7124,7125,7126,7127,7128,7129,7130,7131,7132,7133,7134,7135,7136,7137,7138,7139,7140,7141,7142,7143,7144,7145,7146,7147,7148,7149,7150,7151,7152,7153,7154,7155,7156,7157,7158,7159,7160,7161,7162,7163,7164,7165,7166,7167,7168,7169,7170,7171,7172,7173,7174,7175,7176,7177,7178,7179,7180,7181,7182,7183,7184,7185,7186,7187,7188,7189,7190,7191,7192,7193,7194,7195,7196,7197,7198,7199,7200,7201,7202,7203,7204,7205,7206,7207,7208,7209,7210,7211,7212,7213,7214,7215,7216,7217,7218,7219,7220,7221,7222,7223,7224,7225,7226,7227,7228,7229,7230,7231,7232,7233,7234,7235,7236,7237,7238,7239,7240,7241,7242,7243,7244,7245,7246,7247,7248,7249,7250,7251,7252,7253,7254,7255,7256,7257,7258,7259,7260,7261,7262,7263,7264,7265,7266,7267,7268,7269,7270,7271,7272,7273,7274,7275,7276,7277,7278,7279,7280,7281,7282,7283,7284,7285,7286,7287,7288,7289,7290,7291,7292,7293,7294,7295,7296,7297,7298,7299,7300,7301,7302,7303,7304,7305,7306,7307,7308,7309,7310,7311,7312,7313,7314,7315,7316,7317,7318,7319,7320,7321,7322,7323,7324,7325,7326,7327,7328,7329,7330,7331,7332,7333,7334,7335,7336,7337,7338,7339,7340,7341,7342,7343,7344,7345,7346,7347,7348,7349,7350,7351,7352,7353,7354,7355,7356,7357,7358,7359,7360,7361,7362,7363,7364,7365,7366,7367,7368,7369,7370,7371,7372,7373,7374,7375,7376,7377,7378,7379,7380,7381,7382,7383,7384,7385,7386,7387,7388,7389,7390,7391,7392,7393,7394,7395,7396,7397,7398,7399,7400,7401,7402,7403,7404,7405,7406,7407,7408,7409,7410,7411,7412,7413,7414,7415,7416,7417,7418,7419,7420,7421,7422,7423,7424,7425,7426,7427,7428,7429,7430,7431,7432,7433,7434,7435,7436,7437,7438,7439,7440,7441,7442,7443,7444,7445,7446,7447,7448,7449,7450,7451,7452,7453,7454,7455,7456,7457,7458,7459,7460,7461,7462,7463,7464,7465,7466,7467,7468,7469,7470,7471,7472,7473,7474,7475,7476,7477,7478,7479,7480,7481,7482,7483,7484,7485,7486,7487,7488,7489,7490,7491,7492,7493,7494,7495,7496,7497,7498,7499,7500,7501,7502,7503,7504,7505,7506,7507,7508,7509,7510,7511,7512,7513,7514,7515,7516,7517,7518,7519,7520,7521,7522,7523,7524,7525,7526,7527,7528,7529,7530,7531,7532,7533,7534,7535,7536,7537,7538,7539,7540,7541,7542,7543,7544,7545,7546,7547,7548,7549,7550,7551,7552,7553,7554,7555,7556,7557,7558,7559,7560,7561,7562,7563,7564,7565,7566,7567,7568,7569,7570,7571,7572,7573,7574,7575,7576,7577,7578,7579,7580,7581,7582,7583,7584,7585,7586,7587,7588,7589,7590,7591,7592,7593,7594,7595,7596,7597,7598,7599,7600,7601,7602,7603,7604,7605,7606,7607,7608,7609,7610,7611,7612,7613,7614,7615,7616,7617,7618,7619,7620,7621,7622,7623,7624,7625,7626,7627,7628,7629,7630,7631,7632,7633,7634,7635,7636,7637,7638,7639,7640,7641,7642,7643,7644,7645,7646,7647,7648,7649,7650,7651,7652,7653,7654,7655,7656,7657,7658,7659,7660,7661,7662,7663,7664,7665,7666,7667,7668,7669,7670,7671,7672,7673,7674,7675,7676,7677,7678,7679,7680,7681,7682,7683,7684,7685,7686,7687,7688,7689,7690,7691,7692,7693,7694,7695,7696,7697,7698,7699,7700,7701,7702,7703,7704,7705,7706,7707,7708,7709,7710,7711,7712,7713,7714,7715,7716,7717,7718,7719,7720,7721,7722,7723,7724,7725,7726,7727,7728,7729,7730,7731,7732,7733,7734,7735,7736,7737,7738,7739,7740,7741,7742,7743,7744,7745,7746,7747,7748,7749,7750,7751,7752,7753,7754,7755,7756,7757,7758,7759,7760,7761,7762,7763,7764,7765,7766,7767,7768,7769,7770,7771,7772,7773,7774,7775,7776,7777,7778,7779,7780,7781,7782,7783,7784,7785,7786,7787,7788,7789,7790,7791,7792,7793,7794,7795,7796,7797,7798,7799,7800,7801,7802,7803]},{"file": 28,"line": 734,"col": 17,"fields": [7804,7805]},{"file": 26,"line": 987,"col": 22,"fields": [7806,7807]},{"file": 45,"line": 7,"col": 27,"fields": [7808,7809,7810]},{"file": 43,"line": 259,"col": 18,"fields": [7811,7812]},{"file": 46,"line": 1777,"col": 22,"fields": [7813,7814]},{"file": 26,"line": 490,"col": 22,"fields": [7815,7816,7817,7818,7819,7820,7821]},{"file": 26,"line": 623,"col": 49},{"file": 26,"line": 631,"col": 52},{"file": 26,"line": 27,"col": 21,"fields": [7822,7823,7824,7825]},{"file": 54,"line": 64,"col": 28,"fields": [7826,7827]},{"file": 45,"line": 15,"col": 22,"fields": [7828,7829]},{"file": 46,"line": 46,"col": 28,"fields": [7830,7831,7832,7833,7834,7835,7836,7837]},{"file": 47,"line": 1,"col": 21,"fields": [7838,7839,7840,7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855,7856,7857,7858,7859,7860,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870,7871,7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886,7887,7888,7889,7890,7891,7892,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,7904,7905,7906,7907,7908,7909,7910,7911,7912,7913,7914,7915,7916,7917,7918,7919,7920,7921,7922,7923,7924,7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935,7936,7937,7938,7939,7940,7941,7942,7943,7944,7945,7946,7947,7948,7949,7950,7951,7952,7953,7954,7955,7956,7957,7958,7959,7960,7961,7962,7963,7964,7965,7966,7967,7968,7969,7970,7971,7972,7973,7974,7975,7976,7977,7978,7979,7980,7981,7982,7983,7984,7985,7986,7987,7988,7989,7990,7991,7992,7993,7994,7995,7996,7997,7998,7999,8000,8001,8002,8003,8004,8005,8006,8007,8008,8009,8010,8011,8012,8013,8014,8015,8016,8017,8018,8019,8020,8021,8022,8023,8024,8025,8026,8027,8028,8029,8030,8031,8032,8033,8034,8035,8036,8037,8038,8039,8040,8041,8042,8043,8044,8045,8046,8047,8048,8049,8050,8051,8052,8053,8054,8055,8056,8057,8058,8059,8060,8061,8062,8063,8064,8065,8066,8067,8068,8069,8070,8071,8072,8073,8074,8075,8076,8077,8078,8079,8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,8096,8097,8098,8099,8100,8101,8102,8103,8104,8105,8106,8107,8108,8109,8110,8111,8112,8113,8114,8115,8116,8117,8118,8119,8120,8121,8122,8123,8124,8125,8126,8127,8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140,8141,8142,8143,8144,8145,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155,8156,8157,8158,8159,8160,8161,8162,8163,8164,8165,8166,8167,8168,8169,8170,8171,8172,8173,8174,8175,8176,8177,8178,8179,8180,8181,8182,8183,8184,8185,8186,8187,8188,8189,8190,8191,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8208,8209,8210,8211,8212,8213,8214,8215,8216,8217,8218,8219,8220,8221,8222,8223,8224,8225,8226,8227,8228,8229,8230,8231,8232,8233,8234,8235,8236,8237,8238,8239,8240,8241,8242,8243,8244,8245,8246,8247,8248,8249,8250,8251,8252,8253,8254,8255,8256,8257,8258,8259,8260,8261,8262,8263,8264,8265,8266,8267,8268,8269,8270,8271,8272,8273,8274,8275,8276,8277,8278,8279,8280,8281,8282,8283,8284,8285,8286,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,8304,8305,8306,8307,8308,8309,8310,8311,8312,8313,8314,8315,8316,8317,8318,8319,8320,8321,8322,8323,8324,8325,8326,8327,8328,8329,8330,8331,8332,8333,8334,8335,8336,8337,8338,8339,8340,8341,8342,8343,8344,8345,8346,8347,8348,8349,8350,8351,8352,8353,8354,8355,8356,8357,8358,8359,8360,8361,8362,8363,8364,8365,8366,8367,8368,8369,8370,8371,8372,8373,8374,8375,8376,8377,8378,8379,8380,8381,8382,8383,8384,8385,8386,8387,8388,8389,8390,8391,8392,8393,8394,8395,8396,8397,8398,8399,8400,8401,8402,8403,8404,8405,8406,8407,8408,8409,8410,8411,8412,8413,8414,8415,8416,8417,8418,8419,8420,8421,8422,8423,8424,8425,8426,8427,8428,8429,8430,8431,8432,8433,8434,8435,8436,8437,8438,8439,8440,8441,8442,8443,8444,8445,8446,8447,8448,8449,8450,8451,8452,8453,8454,8455,8456,8457,8458,8459,8460,8461,8462,8463,8464,8465,8466,8467,8468,8469,8470,8471,8472,8473,8474,8475,8476,8477,8478,8479,8480,8481,8482,8483,8484,8485,8486,8487,8488,8489,8490,8491,8492,8493,8494,8495,8496,8497,8498,8499,8500,8501,8502,8503,8504,8505,8506,8507,8508,8509,8510,8511,8512,8513,8514,8515,8516,8517,8518,8519,8520,8521,8522,8523,8524,8525,8526,8527,8528,8529,8530,8531,8532,8533,8534,8535,8536,8537,8538,8539,8540,8541,8542,8543,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,8556,8557,8558,8559,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8570,8571,8572,8573,8574,8575,8576,8577,8578,8579,8580,8581,8582,8583,8584,8585,8586,8587,8588,8589,8590,8591,8592,8593,8594,8595,8596,8597,8598,8599,8600,8601,8602,8603,8604,8605,8606,8607,8608,8609,8610,8611,8612,8613,8614,8615,8616,8617,8618,8619,8620,8621,8622,8623,8624,8625,8626,8627,8628,8629,8630,8631,8632,8633,8634,8635,8636,8637,8638,8639,8640,8641,8642,8643,8644,8645,8646,8647,8648,8649,8650,8651,8652,8653,8654,8655,8656,8657,8658,8659,8660,8661,8662,8663,8664,8665,8666,8667,8668,8669,8670,8671,8672,8673,8674,8675,8676,8677,8678,8679,8680,8681,8682,8683,8684,8685,8686,8687,8688,8689,8690,8691,8692,8693,8694,8695,8696,8697,8698,8699,8700,8701,8702,8703,8704,8705,8706,8707,8708,8709,8710,8711,8712,8713,8714,8715,8716,8717,8718,8719,8720,8721,8722,8723,8724,8725,8726,8727,8728,8729,8730,8731,8732,8733,8734,8735,8736,8737,8738,8739,8740,8741,8742,8743,8744,8745,8746,8747,8748,8749,8750,8751,8752,8753,8754,8755,8756,8757,8758,8759,8760,8761,8762,8763,8764,8765,8766,8767,8768,8769,8770,8771,8772,8773,8774,8775,8776,8777,8778,8779,8780,8781,8782,8783,8784,8785,8786,8787,8788,8789,8790,8791,8792,8793,8794,8795,8796,8797,8798,8799,8800,8801,8802,8803,8804,8805,8806,8807,8808,8809,8810,8811,8812,8813,8814,8815,8816,8817,8818,8819,8820,8821,8822,8823,8824,8825,8826,8827,8828,8829,8830,8831,8832,8833,8834,8835,8836,8837,8838,8839,8840,8841,8842,8843,8844,8845,8846,8847,8848,8849,8850,8851,8852,8853,8854,8855,8856,8857,8858,8859,8860,8861,8862,8863,8864,8865,8866,8867,8868,8869,8870,8871,8872,8873,8874,8875,8876,8877,8878,8879,8880,8881,8882,8883,8884,8885,8886,8887,8888,8889,8890,8891,8892,8893,8894,8895,8896,8897,8898,8899,8900,8901,8902,8903,8904,8905,8906,8907,8908,8909,8910,8911,8912,8913,8914,8915,8916,8917,8918,8919,8920,8921,8922,8923,8924,8925,8926,8927,8928,8929,8930,8931,8932,8933,8934,8935,8936,8937,8938,8939,8940,8941,8942,8943,8944,8945,8946,8947,8948,8949,8950,8951,8952,8953,8954,8955,8956,8957,8958,8959,8960,8961,8962,8963,8964,8965,8966,8967,8968,8969,8970,8971,8972,8973,8974,8975,8976,8977,8978,8979,8980,8981,8982,8983,8984,8985,8986,8987,8988,8989,8990,8991,8992,8993,8994,8995,8996,8997,8998,8999,9000,9001,9002,9003,9004,9005,9006,9007,9008,9009,9010,9011,9012,9013,9014,9015,9016,9017,9018,9019,9020,9021,9022,9023,9024,9025,9026,9027,9028,9029,9030,9031,9032,9033,9034,9035,9036,9037,9038,9039,9040,9041,9042,9043,9044,9045,9046,9047,9048,9049,9050,9051,9052,9053,9054,9055,9056,9057,9058,9059,9060,9061,9062,9063,9064,9065,9066,9067,9068,9069,9070,9071,9072,9073,9074,9075,9076,9077,9078,9079,9080,9081,9082,9083,9084,9085,9086,9087,9088,9089,9090,9091,9092,9093,9094,9095,9096,9097,9098,9099,9100,9101,9102,9103,9104,9105,9106,9107,9108,9109,9110,9111,9112,9113,9114,9115,9116,9117,9118,9119,9120,9121,9122,9123,9124,9125,9126,9127,9128,9129,9130,9131,9132,9133,9134,9135,9136,9137,9138,9139,9140,9141,9142,9143,9144,9145,9146,9147,9148,9149,9150,9151,9152,9153,9154,9155,9156,9157,9158,9159,9160,9161,9162,9163,9164,9165,9166,9167,9168,9169,9170,9171,9172,9173,9174,9175,9176,9177,9178,9179,9180,9181,9182,9183,9184,9185,9186,9187,9188,9189,9190,9191,9192,9193,9194,9195,9196,9197,9198,9199,9200,9201,9202,9203,9204,9205,9206,9207,9208,9209,9210,9211,9212,9213,9214,9215,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9248,9249,9250,9251,9252,9253,9254,9255,9256,9257,9258,9259,9260,9261,9262,9263,9264,9265,9266,9267,9268,9269,9270,9271,9272,9273,9274,9275,9276,9277,9278,9279,9280,9281,9282,9283,9284,9285,9286,9287,9288,9289,9290,9291,9292,9293,9294,9295,9296,9297,9298,9299,9300,9301,9302,9303,9304,9305,9306,9307,9308,9309,9310,9311,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9398,9399,9400,9401,9402,9403,9404,9405,9406,9407,9408,9409,9410,9411,9412,9413,9414,9415,9416,9417,9418,9419,9420,9421,9422,9423,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9450,9451,9452,9453,9454,9455,9456,9457,9458,9459,9460,9461,9462,9463,9464,9465,9466,9467,9468,9469,9470,9471,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,9548,9549,9550,9551,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9588,9589,9590,9591,9592,9593,9594,9595,9596,9597,9598,9599,9600,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9616,9617,9618,9619,9620,9621,9622,9623,9624,9625,9626,9627,9628,9629,9630]},{"file": 40,"line": 298,"col": 28,"fields": [9631,9632]},{"file": 39,"line": 137,"col": 18,"fields": [9633,9634,9635]},{"file": 48,"line": 37,"col": 24,"fields": [9636,9637]},{"file": 38,"line": 53,"col": 15,"fields": [9638,9639,9640,9641,9642,9643,9644,9645]},{"file": 3,"line": 0,"col": 0,"fields": []},{"file": 4,"line": 0,"col": 0,"fields": []},{"file": 5,"line": 0,"col": 0,"fields": []},{"file": 5,"line": 71,"col": 21,"fields": [9646,9647,9648]},{"file": 6,"line": 0,"col": 0,"fields": []},{"file": 26,"line": 1389,"col": 23,"fields": [9649,9650,9651]},{"file": 6,"line": 726,"col": 23,"fields": [9652,9653,9654]},{"file": 7,"line": 0,"col": 0,"fields": []},{"file": 21,"line": 265,"col": 18,"fields": [9655,9656,9657,9658,9659,9660,9661,9662,9663,9664]},{"file": 25,"line": 378,"col": 22,"fields": [9665,9666,9667,9668,9669,9670,9671,9672,9673,9674]},{"file": 3,"line": 12,"col": 19,"fields": [9675,9676]},{"file": 8,"line": 0,"col": 0,"docs": "","fields": []},{"file": 3,"line": 450,"col": 20,"fields": [9677,9678,9679,9680,9681,9682,9683,9684,9685,9686,9687,9688,9689,9690,9691,9692,9693,9694,9695,9696,9697,9698]},{"file": 3,"line": 596,"col": 20,"fields": [9699,9700,9701]},{"file": 9,"line": 0,"col": 0,"fields": []},{"file": 10,"line": 0,"col": 0,"fields": []},{"file": 11,"line": 0,"col": 0,"fields": []},{"file": 12,"line": 0,"col": 0,"fields": []},{"file": 12,"line": 225,"col": 20,"fields": [9702,9703]},{"file": 12,"line": 232,"col": 22,"fields": [9704]},{"file": 12,"line": 238,"col": 24,"fields": [9705,9706,9707,9708,9709,9710,9711,9712]},{"file": 12,"line": 265,"col": 22,"fields": [9713,9714,9715]},{"file": 12,"line": 278,"col": 32,"fields": [9716,9717,9718]},{"file": 12,"line": 286,"col": 28,"fields": [9719,9720,9721,9722,9723]},{"file": 12,"line": 296,"col": 23,"fields": [9724,9725,9726,9727]},{"file": 12,"line": 305,"col": 25,"fields": [9728]},{"file": 12,"line": 311,"col": 27,"fields": [9729,9730]},{"file": 12,"line": 318,"col": 22,"fields": [9731]},{"file": 12,"line": 328,"col": 26,"fields": [9732,9733]},{"file": 12,"line": 335,"col": 21,"fields": [9734,9735,9736,9737,9738]},{"file": 12,"line": 345,"col": 27,"fields": [9739,9740,9741]},{"file": 12,"line": 353,"col": 22,"fields": [9742,9743,9744,9745]},{"file": 12,"line": 362,"col": 22,"fields": [9746,9747,9748]},{"file": 12,"line": 370,"col": 19,"fields": [9749,9750,9751,9752,9753,9754]},{"file": 12,"line": 381,"col": 23,"fields": [9755]},{"file": 12,"line": 387,"col": 22,"fields": [9756]},{"file": 12,"line": 393,"col": 25,"fields": [9757]},{"file": 12,"line": 399,"col": 23,"fields": [9758,9759]},{"file": 12,"line": 406,"col": 28,"fields": [9760,9761,9762]},{"file": 13,"line": 0,"col": 0,"fields": []},{"file": 14,"line": 0,"col": 0,"fields": []},{"file": 16,"line": 166,"col": 25,"fields": [9763,9764,9765]},{"file": 15,"line": 0,"col": 0,"docs": "","fields": [9766]},{"file": 16,"line": 0,"col": 0,"fields": []},{"file": 17,"line": 0,"col": 0,"fields": []},{"file": 18,"line": 0,"col": 0,"fields": []},{"file": 18,"line": 1571,"col": 27,"fields": [9767,9768]},{"file": 18,"line": 1576,"col": 24,"fields": [9769,9770,9771,9772,9773,9774,9775,9776,9777,9778,9779,9780,9781]},{"file": 16,"line": 19,"col": 25,"fields": [9782,9783]},{"file": 19,"line": 0,"col": 0,"fields": []},{"file": 19,"line": 17,"col": 25,"fields": [9784,9785]},{"file": 18,"line": 42,"col": 27,"fields": [9786,9787,9788]},{"file": 20,"line": 0,"col": 0,"fields": []},{"file": 21,"line": 0,"col": 0,"fields": []},{"file": 22,"line": 0,"col": 0,"docs": "","fields": [9789]},{"file": 23,"line": 0,"col": 0,"fields": []},{"file": 24,"line": 0,"col": 0,"fields": []},{"file": 25,"line": 0,"col": 0,"fields": []},{"file": 26,"line": 0,"col": 0,"fields": []},{"file": 27,"line": 0,"col": 0,"fields": []},{"file": 28,"line": 0,"col": 0,"fields": []},{"file": 29,"line": 0,"col": 0,"fields": []},{"file": 30,"line": 0,"col": 0,"fields": []},{"file": 31,"line": 0,"col": 0,"fields": []},{"file": 32,"line": 0,"col": 0,"fields": []},{"file": 33,"line": 0,"col": 0,"fields": []},{"file": 34,"line": 0,"col": 0,"fields": []},{"file": 35,"line": 0,"col": 0,"fields": []},{"file": 36,"line": 0,"col": 0,"docs": "","fields": []},{"file": 37,"line": 0,"col": 0,"fields": []},{"file": 38,"line": 9,"col": 0,"fields": []},{"file": 39,"line": 0,"col": 0,"fields": []},{"file": 40,"line": 0,"col": 0,"fields": []},{"file": 41,"line": 2,"col": 0,"fields": []},{"file": 12,"line": 457,"col": 23,"fields": [9790,9791,9792]},{"file": 12,"line": 465,"col": 21,"fields": [9793,9794]},{"file": 12,"line": 147,"col": 17,"fields": [9795,9796,9797,9798]},{"file": 42,"line": 0,"col": 0,"docs": "","fields": [9799]},{"file": 15,"line": 232,"col": 25,"fields": [9800]},{"file": 28,"line": 13,"col": 22,"fields": [9801,9802,9803]},{"file": 43,"line": 0,"col": 0,"docs": "","fields": [9804,9805]},{"file": 25,"line": 342,"col": 19,"fields": [9806,9807,9808,9809,9810,9811,9812]},{"file": 25,"line": 352,"col": 23,"fields": [9813,9814,9815]},{"file": 21,"line": 288,"col": 12,"fields": [9816,9817,9818]},{"file": 21,"line": 278,"col": 17,"fields": [9819,9820]},{"file": 44,"line": 0,"col": 0,"fields": []},{"file": 20,"line": 481,"col": 16,"fields": [9821,9822,9823,9824,9825,9826,9827,9828,9829]},{"file": 20,"line": 857,"col": 12,"fields": [9830,9831]},{"file": 20,"line": 339,"col": 41,"fields": [9832,9833,9834]},{"file": 42,"line": 115,"col": 24,"fields": [9835]},{"file": 46,"line": 3246,"col": 16,"fields": [9836,9837,9838,9839,9840,9841,9842,9843,9844,9845,9846,9847,9848,9849,9850,9851,9852,9853,9854,9855,9856,9857,9858,9859,9860,9861,9862,9863,9864,9865,9866,9867,9868,9869,9870,9871,9872,9873,9874,9875,9876,9877,9878,9879,9880,9881,9882,9883,9884,9885,9886,9887,9888,9889,9890,9891,9892,9893,9894,9895,9896,9897,9898,9899,9900,9901,9902,9903,9904,9905,9906,9907,9908,9909,9910,9911,9912,9913,9914,9915,9916]},{"file": 45,"line": 0,"col": 0,"fields": []},{"file": 46,"line": 0,"col": 0,"docs": "","fields": []},{"file": 46,"line": 3229,"col": 16,"fields": [9917,9918,9919,9920,9921,9922,9923,9924,9925,9926]},{"file": 46,"line": 2287,"col": 28,"fields": [9927,9928]},{"file": 47,"line": 0,"col": 0,"fields": []},{"file": 48,"line": 0,"col": 0,"fields": []},{"file": 12,"line": 479,"col": 20,"fields": [9929,9930,9931]},{"file": 49,"line": 0,"col": 0,"fields": []},{"file": 48,"line": 130,"col": 19,"fields": [9932,9933,9934]},{"file": 26,"line": 50,"col": 19,"fields": [9935,9936]},{"file": 21,"line": 228,"col": 16,"fields": [9937,9938]},{"file": 25,"line": 379,"col": 17,"fields": [9939,9940]},{"file": 3,"line": 93,"col": 35,"fields": [9941,9942,9943,9944,9945,9946,9947,9948,9949,9950,9951,9952,9953,9954,9955,9956,9957,9958,9959,9960]},{"file": 3,"line": 181,"col": 38,"fields": [9961,9962]},{"file": 3,"line": 220,"col": 33,"fields": [9963,9964,9965,9966]},{"file": 8,"line": 978,"col": 16,"fields": []},{"file": 3,"line": 607,"col": 28,"fields": [9967,9968,9969,9970,9971]},{"file": 3,"line": 1230,"col": 26,"fields": [9972,9973,9974]},{"file": 12,"line": 86,"col": 26,"fields": [9975,9976,9977,9978]},{"file": 12,"line": 95,"col": 24,"fields": [9979,9980,9981,9982,9983,9984]},{"file": 12,"line": 118,"col": 24,"fields": [9985,9986,9987,9988,9989,9990,9991,9992,9993]},{"file": 12,"line": 156,"col": 30,"fields": [9994,9995,9996,9997,9998,9999,10000,10001,10002,10003,10004,10005,10006,10007,10008]},{"file": 12,"line": 176,"col": 25,"fields": [10009,10010,10011,10012]},{"file": 12,"line": 612,"col": 24,"fields": [10013,10014]},{"file": 12,"line": 655,"col": 26,"fields": [10015,10016,10017]},{"file": 12,"line": 413,"col": 25,"fields": [10018,10019,10020]},{"file": 18,"line": 13,"col": 17,"fields": [10021,10022,10023,10024,10025,10026,10027,10028,10029,10030,10031,10032,10033]},{"file": 18,"line": 1593,"col": 29,"fields": [10034,10035,10036]},{"file": 18,"line": 1601,"col": 30,"fields": [10037,10038,10039]},{"file": 18,"line": 1609,"col": 30,"fields": [10040,10041,10042]},{"file": 18,"line": 1617,"col": 31,"fields": [10043,10044,10045]},{"file": 18,"line": 1625,"col": 31,"fields": [10046,10047,10048,10049]},{"file": 18,"line": 1634,"col": 32,"fields": [10050,10051,10052,10053]},{"file": 18,"line": 1643,"col": 30,"fields": [10054,10055,10056,10057]},{"file": 18,"line": 1652,"col": 31,"fields": [10058,10059,10060,10061]},{"file": 18,"line": 1661,"col": 29,"fields": [10062,10063,10064,10065]},{"file": 18,"line": 1670,"col": 31,"fields": [10066,10067,10068,10069,10070]},{"file": 18,"line": 1680,"col": 30,"fields": [10071]},{"file": 18,"line": 1684,"col": 34,"fields": [10072,10073,10074,10075,10076]},{"file": 46,"line": 2375,"col": 23,"fields": [10077,10078,10079,10080]},{"file": 18,"line": 63,"col": 23,"fields": [10081,10082,10083]},{"file": 20,"line": 112,"col": 23,"fields": [10084,10085,10086,10087,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,10098,10099,10100,10101,10102,10103,10104,10105,10106,10107,10108,10109,10110,10111,10112,10113,10114,10115,10116,10117,10118,10119,10120,10121,10122,10123,10124,10125,10126,10127,10128,10129,10130,10131,10132,10133,10134,10135,10136,10137,10138,10139,10140,10141,10142,10143,10144,10145,10146,10147,10148,10149,10150,10151,10152,10153,10154,10155,10156,10157,10158,10159,10160,10161,10162,10163,10164,10165,10166,10167,10168,10169,10170,10171,10172,10173,10174,10175,10176,10177,10178,10179,10180,10181,10182,10183,10184,10185,10186,10187,10188,10189,10190,10191,10192,10193,10194,10195,10196,10197,10198,10199,10200,10201,10202,10203,10204,10205,10206,10207,10208,10209,10210,10211,10212,10213,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10224,10225,10226,10227,10228,10229,10230,10231,10232,10233,10234,10235,10236,10237,10238,10239,10240,10241,10242,10243,10244,10245,10246,10247,10248,10249,10250,10251,10252,10253,10254,10255,10256,10257,10258,10259,10260,10261,10262,10263,10264,10265,10266,10267,10268,10269,10270,10271,10272,10273,10274,10275,10276,10277,10278,10279]},{"file": 20,"line": 313,"col": 20,"fields": [10280,10281,10282,10283,10284,10285,10286,10287,10288,10289]},{"file": 20,"line": 328,"col": 25,"fields": [10290,10291,10292,10293,10294,10295,10296,10297]},{"file": 20,"line": 345,"col": 25,"fields": [10298,10299]},{"file": 20,"line": 357,"col": 31,"fields": [10300,10301,10302,10303]},{"file": 20,"line": 369,"col": 22,"fields": [10304,10305]},{"file": 20,"line": 379,"col": 36,"fields": [10306,10307,10308]},{"file": 20,"line": 391,"col": 28,"fields": [10309,10310]},{"file": 20,"line": 407,"col": 30,"fields": [10311,10312]},{"file": 20,"line": 413,"col": 36,"fields": [10313,10314,10315]},{"file": 20,"line": 424,"col": 32,"fields": [10316,10317,10318,10319,10320,10321,10322,10323,10324,10325,10326,10327,10328,10329]},{"file": 20,"line": 444,"col": 34,"fields": [10330,10331]},{"file": 20,"line": 452,"col": 33,"fields": [10332,10333,10334]},{"file": 50,"line": 0,"col": 0,"fields": []},{"file": 51,"line": 0,"col": 0,"fields": []},{"file": 21,"line": 14,"col": 17,"fields": []},{"file": 21,"line": 138,"col": 21,"fields": []},{"file": 21,"line": 143,"col": 16,"fields": []},{"file": 21,"line": 159,"col": 16,"fields": []},{"file": 52,"line": 0,"col": 0,"fields": []},{"file": 53,"line": 0,"col": 0,"docs": "","fields": [10335]},{"file": 54,"line": 0,"col": 0,"docs": "","fields": [10336]},{"file": 22,"line": 413,"col": 26,"fields": [10337]},{"file": 55,"line": 0,"col": 0,"docs": "","fields": []},{"file": 26,"line": 489,"col": 16,"fields": []},{"file": 26,"line": 949,"col": 20,"fields": [10338,10339,10340]},{"file": 31,"line": 237,"col": 22,"fields": []},{"file": 32,"line": 14,"col": 17,"fields": [10341,10342]},{"file": 33,"line": 740,"col": 21,"fields": [10343,10344,10345,10346,10347]},{"file": 36,"line": 181,"col": 18,"fields": [10348,10349]},{"file": 36,"line": 186,"col": 24,"fields": [10350,10351]},{"file": 25,"line": 353,"col": 26,"fields": [10352,10353]},{"file": 42,"line": 228,"col": 29,"fields": []},{"file": 42,"line": 171,"col": 26,"fields": []},{"file": 46,"line": 3278,"col": 12,"fields": [10354,10355]},{"file": 46,"line": 3217,"col": 27,"fields": [10356,10357,10358]},{"file": 46,"line": 2896,"col": 23,"fields": [10359,10360]},{"file": 56,"line": 0,"col": 0,"fields": []},{"file": 57,"line": 0,"col": 0,"fields": []},{"file": 46,"line": 2434,"col": 27,"fields": [10361,10362]},{"file": 46,"line": 2457,"col": 32,"fields": [10363,10364,10365]},{"file": 46,"line": 2815,"col": 23,"fields": [10366,10367,10368,10369]},{"file": 46,"line": 2827,"col": 18,"fields": [10370,10371]},{"file": 46,"line": 2883,"col": 39,"fields": [10372,10373,10374,10375,10376]},{"file": 46,"line": 2901,"col": 39,"fields": [10377,10378,10379,10380,10381,10382,10383,10384,10385]},{"file": 46,"line": 2913,"col": 33,"fields": [10386,10387,10388,10389,10390,10391]},{"file": 46,"line": 3199,"col": 30,"fields": [10392,10393,10394,10395,10396,10397]},{"file": 46,"line": 3407,"col": 25,"fields": [10398,10399,10400,10401,10402,10403,10404,10405,10406]},{"file": 46,"line": 3435,"col": 40,"fields": [10407,10408,10409,10410,10411,10412,10413,10414,10415,10416,10417,10418,10419,10420,10421,10422,10423,10424,10425,10426,10427,10428,10429,10430,10431,10432,10433,10434]},{"file": 46,"line": 3466,"col": 36,"fields": [10435,10436,10437,10438]},{"file": 46,"line": 3495,"col": 19,"fields": [10439,10440]},{"file": 46,"line": 3502,"col": 23,"fields": [10441,10442,10443]},{"file": 46,"line": 2289,"col": 7,"fields": [10444,10445]},{"file": 12,"line": 484,"col": 22,"fields": [10446,10447]},{"file": 3,"line": 139,"col": 30,"fields": [10448,10449]},{"file": 12,"line": 618,"col": 25,"fields": [10450,10451,10452,10453,10454,10455,10456,10457]},{"file": 12,"line": 420,"col": 31,"fields": [10458,10459,10460,10461,10462,10463,10464,10465]},{"file": 18,"line": 844,"col": 23,"fields": [10466,10467,10468,10469,10470]},{"file": 18,"line": 1547,"col": 20,"fields": [10471,10472]},{"file": 46,"line": 2378,"col": 20,"fields": [10473,10474]},{"file": 20,"line": 397,"col": 22,"fields": [10475,10476,10477]},{"file": 22,"line": 429,"col": 29,"fields": [10478,10479,10480,10481]},{"file": 18,"line": 891,"col": 24,"fields": [10482]},{"file": 46,"line": 2379,"col": 25,"fields": [10483,10484]},{"file": 3,"line": 724,"col": 24,"docs": " Returns true if the specified feature is enabled.","fields": [10485,10486]},{"file": 3,"line": 729,"col": 24,"docs": " Returns true if any specified feature is enabled.","fields": [10487,10488]},{"file": 3,"line": 738,"col": 24,"docs": " Returns true if every specified feature is enabled.","fields": [10489,10490]},{"file": 4,"line": 13,"col": 12},{"file": 4,"line": 49,"col": 12,"docs": " Write a native-endian integer. TODO audit non-power-of-two int sizes","fields": [10491,10492,10493]},{"file": 4,"line": 57,"col": 12,"docs": " Write a foreign-endian integer. TODO audit non-power-of-two int sizes","fields": [10494,10495,10496]},{"file": 4,"line": 64,"col": 12,"docs": " TODO audit non-power-of-two int sizes","fields": [10497,10498,10499]},{"file": 4,"line": 71,"col": 12,"docs": " TODO audit non-power-of-two int sizes","fields": [10500,10501,10502]},{"file": 4,"line": 78,"col": 12,"docs": " TODO audit non-power-of-two int sizes","fields": [10503,10504,10505,10506]},{"file": 4,"line": 84,"col": 12,"fields": [10507,10508]},{"file": 4,"line": 12,"col": 8},{"file": 5,"line": 30,"col": 8},{"file": 5,"line": 31,"col": 8},{"file": 5,"line": 32,"col": 8},{"file": 5,"line": 33,"col": 8},{"file": 5,"line": 34,"col": 8},{"file": 5,"line": 36,"col": 8},{"file": 5,"line": 50,"col": 8},{"file": 5,"line": 56,"col": 8},{"file": 5,"line": 71,"col": 8},{"file": 5,"line": 74,"col": 8,"docs": " TODO https://github.com/ziglang/zig/issues/3802"},{"file": 5,"line": 123,"col": 8,"docs": " TODO https://github.com/ziglang/zig/issues/3802"},{"file": 5,"line": 221,"col": 8},{"file": 5,"line": 225,"col": 8,"docs": " Shrinks or expands the file. The file offset after this call is left unchanged.","fields": [10509,10510]},{"file": 5,"line": 229,"col": 8},{"file": 5,"line": 233,"col": 8,"docs": " Repositions read/write file offset relative to the current offset. TODO: integrate with async I/O","fields": [10511,10512]},{"file": 5,"line": 239,"col": 8,"docs": " Repositions read/write file offset relative to the end. TODO: integrate with async I/O","fields": [10513,10514]},{"file": 5,"line": 249,"col": 8},{"file": 5,"line": 264,"col": 8},{"file": 5,"line": 267,"col": 8,"docs": " TODO: integrate with async I/O","fields": [10515]},{"file": 5,"line": 274,"col": 8},{"file": 5,"line": 296,"col": 8},{"file": 5,"line": 299,"col": 8,"docs": " TODO: integrate with async I/O","fields": [10516]},{"file": 5,"line": 366,"col": 8},{"file": 5,"line": 372,"col": 8,"docs": " Changes the mode of the file. The process must have the correct privileges in order to do this successfully, or must have the effective user ID matching the owner of the file.","fields": [10517,10518]},{"file": 5,"line": 376,"col": 8},{"file": 5,"line": 383,"col": 8,"docs": " Changes the owner and group of the file. The process must have the correct privileges in order to do this successfully. The group may be changed by the owner of the file to any group of which the owner is a member. If the owner or group is specified as `null`, the ID is not changed.","fields": [10519,10520,10521]},{"file": 5,"line": 387,"col": 8},{"file": 5,"line": 394,"col": 8,"docs": " The underlying file system may have a different granularity than nanoseconds, and therefore this function cannot guarantee any precision will be stored. Further, the maximum value is limited by the system ABI. When a value is provided that exceeds this range, the value is clamped to the maximum. TODO: integrate with async I/O","fields": [10522,10523,10524]},{"file": 5,"line": 422,"col": 8,"docs": " Reads all the bytes from the current position to the end of the file. On success, caller owns returned buffer. If the file is larger than `max_bytes`, returns `error.FileTooBig`.","fields": [10525,10526,10527]},{"file": 5,"line": 432,"col": 8,"docs": " Reads all the bytes from the current position to the end of the file. On success, caller owns returned buffer. If the file is larger than `max_bytes`, returns `error.FileTooBig`. If `size_hint` is specified the initial buffer size is calculated using that value, otherwise an arbitrary value is used instead. Allows specifying alignment and a sentinel value.","fields": [10528,10529,10530,10531,10532,10533]},{"file": 5,"line": 464,"col": 8},{"file": 5,"line": 465,"col": 8},{"file": 5,"line": 481,"col": 8,"docs": " Returns the number of bytes read. If the number read is smaller than `buffer.len`, it means the file reached the end. Reaching the end of a file is not an error condition.","fields": [10534,10535]},{"file": 5,"line": 491,"col": 8,"fields": [10536,10537,10538]},{"file": 5,"line": 505,"col": 8,"docs": " Returns the number of bytes read. If the number read is smaller than `buffer.len`, it means the file reached the end. Reaching the end of a file is not an error condition.","fields": [10539,10540,10541]},{"file": 5,"line": 516,"col": 8,"docs": " See https://github.com/ziglang/zig/issues/7699","fields": [10542,10543]},{"file": 5,"line": 537,"col": 8,"docs": " Returns the number of bytes read. If the number read is smaller than the total bytes from all the buffers, it means the file reached the end. Reaching the end of a file is not an error condition. The `iovecs` parameter is mutable because this function needs to mutate the fields in order to handle partial reads from the underlying OS layer. See https://github.com/ziglang/zig/issues/7699","fields": [10544,10545]},{"file": 5,"line": 559,"col": 8,"docs": " See https://github.com/ziglang/zig/issues/7699","fields": [10546,10547,10548]},{"file": 5,"line": 580,"col": 8,"docs": " Returns the number of bytes read. If the number read is smaller than the total bytes from all the buffers, it means the file reached the end. Reaching the end of a file is not an error condition. The `iovecs` parameter is mutable because this function needs to mutate the fields in order to handle partial reads from the underlying OS layer. See https://github.com/ziglang/zig/issues/7699","fields": [10549,10550,10551]},{"file": 5,"line": 601,"col": 8},{"file": 5,"line": 602,"col": 8},{"file": 5,"line": 616,"col": 8,"fields": [10552,10553]},{"file": 5,"line": 623,"col": 8,"fields": [10554,10555,10556]},{"file": 5,"line": 635,"col": 8,"fields": [10557,10558,10559]},{"file": 5,"line": 644,"col": 8,"docs": " See https://github.com/ziglang/zig/issues/7699 See equivalent function: `std.net.Stream.writev`.","fields": [10560,10561]},{"file": 5,"line": 663,"col": 8,"docs": " The `iovecs` parameter is mutable because this function needs to mutate the fields in order to handle partial writes from the underlying OS layer. See https://github.com/ziglang/zig/issues/7699 See equivalent function: `std.net.Stream.writevAll`.","fields": [10562,10563]},{"file": 5,"line": 680,"col": 8,"docs": " See https://github.com/ziglang/zig/issues/7699","fields": [10564,10565,10566]},{"file": 5,"line": 698,"col": 8,"docs": " The `iovecs` parameter is mutable because this function needs to mutate the fields in order to handle partial writes from the underlying OS layer. See https://github.com/ziglang/zig/issues/7699","fields": [10567,10568,10569]},{"file": 5,"line": 716,"col": 8},{"file": 5,"line": 718,"col": 8,"fields": [10570,10571,10572,10573,10574]},{"file": 5,"line": 726,"col": 8,"docs": " Returns the number of bytes copied. If the number read is smaller than `buffer.len`, it means the in file reached the end. Reaching the end of a file is not an error condition.","fields": [10575,10576,10577,10578,10579]},{"file": 5,"line": 740,"col": 8},{"file": 5,"line": 756,"col": 8},{"file": 5,"line": 758,"col": 8,"fields": [10580,10581,10582]},{"file": 5,"line": 774,"col": 8,"docs": " Does not try seeking in either of the File parameters. See `writeFileAll` as an alternative to calling this.","fields": [10583,10584,10585]},{"file": 5,"line": 860,"col": 8},{"file": 5,"line": 866,"col": 8},{"file": 5,"line": 872,"col": 8},{"file": 5,"line": 882,"col": 8,"fields": [10586]},{"file": 5,"line": 889,"col": 8},{"file": 5,"line": 901,"col": 8,"docs": " Blocks when an incompatible lock is held by another process. A process may hold only one type of lock (shared or exclusive) on a file. When a process terminates in any way, the lock is released. Assumes the file is unlocked. TODO: integrate with async I/O","fields": [10587,10588]},{"file": 5,"line": 937,"col": 8,"docs": " Assumes the file is locked.","fields": [10589]},{"file": 5,"line": 968,"col": 8,"docs": " Attempts to obtain a lock, returning `true` if the lock is obtained, and `false` if there was an existing incompatible lock held. A process may hold only one type of lock (shared or exclusive) on a file. When a process terminates in any way, the lock is released. Assumes the file is unlocked. TODO: integrate with async I/O","fields": [10590,10591]},{"file": 5,"line": 1008,"col": 8,"docs": " Assumes the file is already locked in exclusive mode. Atomically modifies the lock to be in shared mode, without releasing it. TODO: integrate with async I/O","fields": [10592]},{"file": 5,"line": 796,"col": 4,"docs": " Low level function which can fail for OS-specific reasons. See `writeFileAll` as an alternative to calling this. TODO integrate with async I/O","fields": [10593,10594,10595]},{"file": 5,"line": 886,"col": 4},{"file": 5,"line": 887,"col": 4},{"file": 6,"line": 57,"col": 12},{"file": 6,"line": 58,"col": 12},{"file": 6,"line": 371,"col": 12,"docs": " The type of the unmanaged hash map underlying this wrapper"},{"file": 6,"line": 373,"col": 12,"docs": " An entry, containing pointers to a key and value stored in the map"},{"file": 6,"line": 375,"col": 12,"docs": " A copy of a key and value which are no longer in the map"},{"file": 6,"line": 377,"col": 12,"docs": " The integer type that is the result of hashing"},{"file": 6,"line": 379,"col": 12,"docs": " The iterator type returned by iterator()"},{"file": 6,"line": 381,"col": 12},{"file": 6,"line": 382,"col": 12},{"file": 6,"line": 385,"col": 12,"docs": " The integer type used to store the size of the map"},{"file": 6,"line": 387,"col": 12,"docs": " The type returned from getOrPut and variants"},{"file": 6,"line": 406,"col": 12,"docs": " Create a managed hash map with a context","fields": [10596,10597]},{"file": 6,"line": 418,"col": 12,"docs": " Release the backing array and invalidate this map. This does *not* deinit keys, values, or the context! If your keys or values need to be released, ensure that that is done before calling this function.","fields": [10598]},{"file": 6,"line": 427,"col": 12,"docs": " Empty the map, but keep the backing allocation for future use. This does *not* free keys or values! Be sure to release them if they need deinitialization before calling this function.","fields": [10599]},{"file": 6,"line": 435,"col": 12,"docs": " Empty the map and release the backing allocation. This does *not* free keys or values! Be sure to release them if they need deinitialization before calling this function.","fields": [10600]},{"file": 6,"line": 440,"col": 12,"docs": " Return the number of items in the map.","fields": [10601]},{"file": 6,"line": 446,"col": 12,"docs": " Create an iterator over the entries in the map. The iterator is invalidated if the map is modified.","fields": [10602]},{"file": 6,"line": 452,"col": 12,"docs": " Create an iterator over the keys in the map. The iterator is invalidated if the map is modified.","fields": [10603]},{"file": 6,"line": 458,"col": 12,"docs": " Create an iterator over the values in the map. The iterator is invalidated if the map is modified.","fields": [10604]},{"file": 6,"line": 468,"col": 12,"docs": " If key exists this function cannot fail. If there is an existing item with `key`, then the result `Entry` pointers point to it, and found_existing is true. Otherwise, puts a new item with undefined value, and the `Entry` pointers point to it. Caller should then initialize the value (but not the key).","fields": [10605,10606]},{"file": 6,"line": 478,"col": 12,"docs": " If key exists this function cannot fail. If there is an existing item with `key`, then the result `Entry` pointers point to it, and found_existing is true. Otherwise, puts a new item with undefined key and value, and the `Entry` pointers point to it. Caller must then initialize the key and value.","fields": [10607,10608,10609]},{"file": 6,"line": 489,"col": 12,"docs": " If there is an existing item with `key`, then the result `Entry` pointers point to it, and found_existing is true. Otherwise, puts a new item with undefined value, and the `Entry` pointers point to it. Caller should then initialize the value (but not the key). If a new entry needs to be stored, this function asserts there is enough capacity to store it.","fields": [10610,10611]},{"file": 6,"line": 500,"col": 12,"docs": " If there is an existing item with `key`, then the result `Entry` pointers point to it, and found_existing is true. Otherwise, puts a new item with undefined value, and the `Entry` pointers point to it. Caller must then initialize the key and value. If a new entry needs to be stored, this function asserts there is enough capacity to store it.","fields": [10612,10613,10614]},{"file": 6,"line": 504,"col": 12,"fields": [10615,10616,10617]},{"file": 6,"line": 509,"col": 12,"docs": " Deprecated: call `ensureUnusedCapacity` or `ensureTotalCapacity`."},{"file": 6,"line": 513,"col": 12,"docs": " Increases capacity, guaranteeing that insertions up until the `expected_count` will not cause an allocation, and therefore cannot fail.","fields": [10618,10619]},{"file": 6,"line": 520,"col": 12,"docs": " Increases capacity, guaranteeing that insertions up until `additional_count` **more** items will not cause an allocation, and therefore cannot fail.","fields": [10620,10621]},{"file": 6,"line": 526,"col": 12,"docs": " Returns the number of total elements which may be present before it is no longer guaranteed that no allocations will be performed.","fields": [10622]},{"file": 6,"line": 532,"col": 12,"docs": " Clobbers any existing data. To detect if a put would clobber existing data, see `getOrPut`.","fields": [10623,10624,10625]},{"file": 6,"line": 545,"col": 12,"docs": " Asserts there is enough capacity to store the new key-value pair. Clobbers any existing data. To detect if a put would clobber existing data, see `getOrPutAssumeCapacity`.","fields": [10626,10627,10628]},{"file": 6,"line": 552,"col": 12,"docs": " Asserts there is enough capacity to store the new key-value pair. Asserts that it does not clobber any existing data. To detect if a put would clobber existing data, see `getOrPutAssumeCapacity`.","fields": [10629,10630,10631]},{"file": 6,"line": 557,"col": 12,"docs": " Inserts a new `Entry` into the hash map, returning the previous one, if any.","fields": [10632,10633,10634]},{"file": 6,"line": 563,"col": 12,"docs": " Inserts a new `Entry` into the hash map, returning the previous one, if any. If insertion happuns, asserts there is enough capacity without allocating.","fields": [10635,10636,10637]},{"file": 6,"line": 568,"col": 12,"docs": " Removes a value from the map and returns the removed kv pair.","fields": [10638,10639]},{"file": 6,"line": 572,"col": 12,"fields": [10640,10641,10642]},{"file": 6,"line": 580,"col": 12,"fields": [10643,10644,10645]},{"file": 6,"line": 584,"col": 12,"fields": [10646,10647]},{"file": 6,"line": 587,"col": 12,"fields": [10648,10649,10650]},{"file": 6,"line": 592,"col": 12,"docs": " Finds the actual key associated with an adapted key in the map","fields": [10651,10652]},{"file": 6,"line": 595,"col": 12,"fields": [10653,10654,10655]},{"file": 6,"line": 599,"col": 12,"fields": [10656,10657]},{"file": 6,"line": 602,"col": 12,"fields": [10658,10659,10660]},{"file": 6,"line": 607,"col": 12,"docs": " Finds the key and value associated with a key in the map","fields": [10661,10662]},{"file": 6,"line": 611,"col": 12,"fields": [10663,10664,10665]},{"file": 6,"line": 616,"col": 12,"docs": " Check if the map contains a key","fields": [10666,10667]},{"file": 6,"line": 620,"col": 12,"fields": [10668,10669,10670]},{"file": 6,"line": 626,"col": 12,"docs": " If there is an `Entry` with a matching key, it is deleted from the hash map, and then returned from this function.","fields": [10671,10672]},{"file": 6,"line": 630,"col": 12,"fields": [10673,10674,10675]},{"file": 6,"line": 635,"col": 12,"docs": " Creates a copy of this map, using the same allocator","fields": [10676]},{"file": 6,"line": 641,"col": 12,"docs": " Creates a copy of this map, using a specified allocator","fields": [10677,10678]},{"file": 6,"line": 647,"col": 12,"docs": " Creates a copy of this map, using a specified context","fields": [10679,10680]},{"file": 6,"line": 653,"col": 12,"docs": " Creates a copy of this map, using a specified allocator and context.","fields": [10681,10682,10683]},{"file": 6,"line": 389,"col": 8},{"file": 6,"line": 710,"col": 12},{"file": 6,"line": 714,"col": 12},{"file": 6,"line": 716,"col": 12},{"file": 6,"line": 721,"col": 12},{"file": 6,"line": 785,"col": 12},{"file": 6,"line": 813,"col": 12},{"file": 6,"line": 814,"col": 12},{"file": 6,"line": 838,"col": 12},{"file": 6,"line": 844,"col": 12},{"file": 6,"line": 846,"col": 12,"fields": [10684,10685]},{"file": 6,"line": 852,"col": 12,"fields": [10686,10687,10688]},{"file": 6,"line": 876,"col": 12,"docs": " Deprecated: call `ensureUnusedCapacity` or `ensureTotalCapacity`."},{"file": 6,"line": 878,"col": 12,"fields": [10689,10690,10691]},{"file": 6,"line": 883,"col": 12,"fields": [10692,10693,10694,10695]},{"file": 6,"line": 888,"col": 12,"fields": [10696,10697,10698]},{"file": 6,"line": 891,"col": 12,"fields": [10699,10700,10701,10702]},{"file": 6,"line": 895,"col": 12,"fields": [10703]},{"file": 6,"line": 903,"col": 12,"fields": [10704,10705]},{"file": 6,"line": 909,"col": 12,"fields": [10706]},{"file": 6,"line": 931,"col": 12,"fields": [10707]},{"file": 6,"line": 935,"col": 12,"fields": [10708]},{"file": 6,"line": 951,"col": 12,"fields": [10709]},{"file": 6,"line": 968,"col": 12,"docs": " Insert an entry in the map. Assumes it is not already present.","fields": [10710,10711,10712,10713]},{"file": 6,"line": 983,"col": 12,"docs": " Asserts there is enough capacity to store the new key-value pair. Clobbers any existing data. To detect if a put would clobber existing data, see `getOrPutAssumeCapacity`.","fields": [10714,10715,10716]},{"file": 6,"line": 988,"col": 12,"fields": [10717,10718,10719,10720]},{"file": 6,"line": 995,"col": 12,"docs": " Insert an entry in the map. Assumes it is not already present, and that no allocation is needed.","fields": [10721,10722,10723]},{"file": 6,"line": 1027,"col": 12,"docs": " Inserts a new `Entry` into the hash map, returning the previous one, if any.","fields": [10724,10725,10726,10727]},{"file": 6,"line": 1032,"col": 12,"fields": [10728,10729,10730,10731,10732]},{"file": 6,"line": 1047,"col": 12,"docs": " Inserts a new `Entry` into the hash map, returning the previous one, if any. If insertion happens, asserts there is enough capacity without allocating.","fields": [10733,10734,10735]},{"file": 6,"line": 1052,"col": 12,"fields": [10736,10737,10738,10739]},{"file": 6,"line": 1067,"col": 12,"docs": " If there is an `Entry` with a matching key, it is deleted from the hash map, and then returned from this function.","fields": [10740,10741]},{"file": 6,"line": 1072,"col": 12,"fields": [10742,10743,10744]},{"file": 6,"line": 1075,"col": 12,"fields": [10745,10746,10747]},{"file": 6,"line": 1144,"col": 12,"fields": [10748,10749]},{"file": 6,"line": 1149,"col": 12,"fields": [10750,10751,10752]},{"file": 6,"line": 1152,"col": 12,"fields": [10753,10754,10755]},{"file": 6,"line": 1163,"col": 12,"docs": " Insert an entry if the associated key is not already present, otherwise update preexisting value.","fields": [10756,10757,10758,10759]},{"file": 6,"line": 1168,"col": 12,"fields": [10760,10761,10762,10763,10764]},{"file": 6,"line": 1174,"col": 12,"docs": " Get an optional pointer to the actual key associated with adapted key, if present.","fields": [10765,10766]},{"file": 6,"line": 1179,"col": 12,"fields": [10767,10768,10769]},{"file": 6,"line": 1182,"col": 12,"fields": [10770,10771,10772]},{"file": 6,"line": 1190,"col": 12,"docs": " Get a copy of the actual key associated with adapted key, if present.","fields": [10773,10774]},{"file": 6,"line": 1195,"col": 12,"fields": [10775,10776,10777]},{"file": 6,"line": 1198,"col": 12,"fields": [10778,10779,10780]},{"file": 6,"line": 1206,"col": 12,"docs": " Get an optional pointer to the value associated with key, if present.","fields": [10781,10782]},{"file": 6,"line": 1211,"col": 12,"fields": [10783,10784,10785]},{"file": 6,"line": 1214,"col": 12,"fields": [10786,10787,10788]},{"file": 6,"line": 1222,"col": 12,"docs": " Get a copy of the value associated with key, if present.","fields": [10789,10790]},{"file": 6,"line": 1237,"col": 12,"fields": [10791,10792,10793]},{"file": 6,"line": 1242,"col": 12,"fields": [10794,10795,10796,10797]},{"file": 6,"line": 1249,"col": 12,"fields": [10798,10799,10800,10801]},{"file": 6,"line": 1254,"col": 12,"fields": [10802,10803,10804,10805,10806]},{"file": 6,"line": 1269,"col": 12,"fields": [10807,10808]},{"file": 6,"line": 1274,"col": 12,"fields": [10809,10810,10811]},{"file": 6,"line": 1281,"col": 12,"fields": [10812,10813,10814]},{"file": 6,"line": 1347,"col": 12,"fields": [10815,10816,10817,10818]},{"file": 6,"line": 1352,"col": 12,"fields": [10819,10820,10821,10822,10823]},{"file": 6,"line": 1362,"col": 12,"docs": " Return true if there is a value associated with key in the map.","fields": [10824,10825]},{"file": 6,"line": 1377,"col": 12,"docs": " If there is an `Entry` with a matching key, it is deleted from the hash map, and this function returns true.  Otherwise this function returns false.","fields": [10826,10827]},{"file": 6,"line": 1382,"col": 12,"fields": [10828,10829,10830]},{"file": 6,"line": 1385,"col": 12,"fields": [10831,10832,10833]},{"file": 6,"line": 1415,"col": 12,"fields": [10834,10835]},{"file": 6,"line": 1420,"col": 12,"fields": [10836,10837,10838]},{"file": 6,"line": 684,"col": 8},{"file": 6,"line": 707,"col": 8,"docs": " Capacity of the first grow when bootstrapping the hashmap."},{"file": 6,"line": 726,"col": 8},{"file": 6,"line": 746,"col": 8,"docs": " Metadata for a slot. It can be in three states: empty, used or tombstone. Tombstones indicate that an entry was previously used, they are a simple way to handle removal. To this state, we add 7 bits from the slot's key hash. These are used as a fast way to disambiguate between entries without having to use the equality function. If two fingerprints are different, we know that we don't have to compare the keys at all. The 7 bits are the highest ones from a 64 bit hash. This way, not only we use the `log2(capacity)` lowest bits from the hash to determine a slot index, but we use 7 more bits to quickly resolve collisions when multiple elements with different hashes end up wanting to be in the same slot. Not using the equality function means we don't have to read into the entries array, likely avoiding a cache miss and a potentially costly function call."},{"file": 6,"line": 816,"col": 8,"fields": [10839]},{"file": 6,"line": 860,"col": 8,"fields": [10840,10841]},{"file": 7,"line": 46,"col": 12},{"file": 7,"line": 60,"col": 12,"docs": " Initialize with capacity to hold at least `num` elements. The resulting capacity is likely to be equal to `num`. Deinitialize with `deinit` or use `toOwnedSlice`.","fields": [10842,10843]},{"file": 7,"line": 73,"col": 12},{"file": 7,"line": 74,"col": 12},{"file": 7,"line": 75,"col": 12},{"file": 7,"line": 76,"col": 12},{"file": 7,"line": 77,"col": 12},{"file": 7,"line": 78,"col": 12},{"file": 7,"line": 79,"col": 12},{"file": 7,"line": 80,"col": 12},{"file": 7,"line": 85,"col": 12,"docs": " ArrayList takes ownership of the passed in slice. The slice must have been allocated with `allocator`. Deinitialize with `deinit` or use `toOwnedSlice`.","fields": [10844,10845]},{"file": 7,"line": 96,"col": 12,"docs": " Initializes an ArrayListUnmanaged with the `items` and `capacity` fields of this ArrayList. This ArrayList retains ownership of underlying memory. Deprecated: use `moveToUnmanaged` which has different semantics.","fields": [10846]},{"file": 7,"line": 102,"col": 12,"docs": " Initializes an ArrayListUnmanaged with the `items` and `capacity` fields of this ArrayList. Empties this ArrayList.","fields": [10847]},{"file": 7,"line": 118,"col": 12,"docs": " The caller owns the returned memory. Empties this ArrayList.","fields": [10848,10849]},{"file": 7,"line": 126,"col": 12,"docs": " Insert `item` at index `n` by moving `list[n .. list.len]` to make room. This operation is O(N).","fields": [10850,10851,10852]},{"file": 7,"line": 136,"col": 12,"docs": " Insert slice `items` at index `i` by moving `list[i .. list.len]` to make room. This operation is O(N).","fields": [10853,10854,10855]},{"file": 7,"line": 148,"col": 12,"docs": " Replace range of elements `list[start..start+len]` with `new_items`. Grows list if `len < new_items.len`. Shrinks list if `len > new_items.len`. Invalidates pointers if this ArrayList is resized.","fields": [10856,10857,10858,10859]},{"file": 7,"line": 191,"col": 12,"docs": " Remove the element at index `i`, shift elements after index `i` forward, and return the removed element. Asserts the array has at least one item. Invalidates pointers to end of list. This operation is O(N).","fields": [10860,10861]},{"file": 7,"line": 205,"col": 12,"docs": " Removes the element at the specified index and returns it. The empty slot is filled from the end of the list. This operation is O(1).","fields": [10862,10863]},{"file": 7,"line": 215,"col": 12,"docs": " Append the slice of items to the list. Allocates more memory as necessary.","fields": [10864,10865]},{"file": 7,"line": 222,"col": 12,"docs": " Append the slice of items to the list, asserting the capacity is already enough to store the new items. **Does not** invalidate pointers.","fields": [10866,10867]},{"file": 7,"line": 230,"col": 12},{"file": 7,"line": 237,"col": 12,"docs": " Initializes a Writer which will append to the list.","fields": [10868]},{"file": 7,"line": 250,"col": 12,"docs": " Append a value to the list `n` times. Allocates more memory as necessary.","fields": [10869,10870,10871]},{"file": 7,"line": 258,"col": 12,"docs": " Append a value to the list `n` times. Asserts the capacity is enough. **Does not** invalidate pointers.","fields": [10872,10873,10874]},{"file": 7,"line": 274,"col": 12,"docs": " Reduce allocated capacity to `new_len`. May invalidate element pointers.","fields": [10875,10876]},{"file": 7,"line": 298,"col": 12,"docs": " Invalidates all element pointers.","fields": [10877]},{"file": 7,"line": 303,"col": 12,"docs": " Invalidates all element pointers.","fields": [10878]},{"file": 7,"line": 310,"col": 12,"docs": " Deprecated: call `ensureUnusedCapacity` or `ensureTotalCapacity`."},{"file": 7,"line": 349,"col": 12,"docs": " Modify the array so that it can hold at least `additional_count` **more** items. Invalidates pointers if additional memory is needed.","fields": [10879,10880]},{"file": 7,"line": 355,"col": 12,"docs": " Increases the array's length to match the full capacity that is already allocated. The new elements have `undefined` values. **Does not** invalidate pointers.","fields": [10881]},{"file": 7,"line": 382,"col": 12,"docs": " Resize the array, adding `n` new elements, which have `undefined` values. The return value is an array pointing to the newly allocated elements. The returned pointer becomes invalid when the list is resized. Resizes list if `self.capacity` is not large enough.","fields": [10882,10883]},{"file": 7,"line": 393,"col": 12,"docs": " Resize the array, adding `n` new elements, which have `undefined` values. The return value is an array pointing to the newly allocated elements. Asserts that there is already space for the new item without allocating more. **Does not** invalidate element pointers. The returned pointer becomes invalid when the list is resized.","fields": [10884,10885]},{"file": 7,"line": 403,"col": 12,"docs": " Remove and return the last element from the list. Asserts the list has at least one item. Invalidates pointers to the removed element.","fields": [10886]},{"file": 7,"line": 412,"col": 12,"docs": " Remove and return the last element from the list, or return `null` if list is empty. Invalidates pointers to the removed element, if any.","fields": [10887]},{"file": 7,"line": 429,"col": 12,"docs": " Returns a slice of only the extra capacity after items. This can be useful for writing directly into an ArrayList. Note that such an operation must be followed up with a direct modification of `self.items.len`.","fields": [10888]},{"file": 7,"line": 30,"col": 8},{"file": 7,"line": 243,"col": 8,"docs": " Same as `append` except it returns the number of bytes written, which is always the same as `m.len`. The purpose of this function existing is to match `std.io.Writer` API.","fields": [10889,10890]},{"file": 3,"line": 66,"col": 16,"fields": [10891]},{"file": 3,"line": 73,"col": 16,"fields": [10892]},{"file": 3,"line": 83,"col": 16,"fields": [10893]},{"file": 3,"line": 12,"col": 8},{"file": 3,"line": 431,"col": 8},{"file": 3,"line": 432,"col": 8},{"file": 3,"line": 433,"col": 8},{"file": 3,"line": 434,"col": 8},{"file": 3,"line": 435,"col": 8},{"file": 3,"line": 436,"col": 8},{"file": 3,"line": 437,"col": 8},{"file": 3,"line": 438,"col": 8},{"file": 3,"line": 439,"col": 8},{"file": 3,"line": 440,"col": 8},{"file": 3,"line": 441,"col": 8},{"file": 3,"line": 442,"col": 8},{"file": 3,"line": 443,"col": 8},{"file": 3,"line": 444,"col": 8},{"file": 3,"line": 445,"col": 8},{"file": 3,"line": 446,"col": 8},{"file": 3,"line": 447,"col": 8},{"file": 3,"line": 448,"col": 8},{"file": 3,"line": 450,"col": 8},{"file": 3,"line": 552,"col": 8},{"file": 3,"line": 585,"col": 8},{"file": 3,"line": 596,"col": 8},{"file": 3,"line": 1304,"col": 8,"docs": " TODO delete this deprecated declaration after 0.9.0 is released"},{"file": 3,"line": 1306,"col": 8},{"file": 3,"line": 1308,"col": 8,"fields": [10894,10895]},{"file": 3,"line": 1312,"col": 8,"fields": [10896,10897,10898,10899]},{"file": 3,"line": 1316,"col": 8,"fields": [10900,10901]},{"file": 3,"line": 1320,"col": 8,"fields": [10902,10903]},{"file": 3,"line": 1332,"col": 8,"fields": [10904]},{"file": 3,"line": 1336,"col": 8,"fields": [10905,10906]},{"file": 3,"line": 1346,"col": 8,"fields": [10907]},{"file": 3,"line": 1350,"col": 8,"fields": [10908]},{"file": 3,"line": 1354,"col": 8,"fields": [10909,10910]},{"file": 3,"line": 1364,"col": 8,"fields": [10911]},{"file": 3,"line": 1368,"col": 8,"fields": [10912,10913]},{"file": 3,"line": 1381,"col": 8,"fields": [10914]},{"file": 3,"line": 1385,"col": 8,"fields": [10915]},{"file": 3,"line": 1389,"col": 8,"fields": [10916]},{"file": 3,"line": 1393,"col": 8,"fields": [10917]},{"file": 3,"line": 1397,"col": 8,"fields": [10918]},{"file": 3,"line": 1409,"col": 8,"fields": [10919]},{"file": 3,"line": 1413,"col": 8,"fields": [10920,10921]},{"file": 3,"line": 1417,"col": 8,"fields": [10922]},{"file": 3,"line": 1421,"col": 8,"fields": [10923]},{"file": 3,"line": 1425,"col": 8},{"file": 3,"line": 1431,"col": 8,"fields": [10924]},{"file": 3,"line": 1435,"col": 8,"fields": [10925]},{"file": 3,"line": 1458,"col": 8},{"file": 3,"line": 1491,"col": 8,"fields": [10926]},{"file": 3,"line": 1672,"col": 8,"docs": " Return whether or not the given host target is capable of executing natively executables of the other target.","fields": [10927,10928]},{"file": 3,"line": 1701,"col": 8,"docs": " 0c spim    little-endian MIPS 3000 family 1c 68000   Motorola MC68000 2c 68020   Motorola MC68020 5c arm     little-endian ARM 6c amd64   AMD64 and compatibles (e.g., Intel EM64T) 7c arm64   ARM64 (ARMv8) 8c 386     Intel i386, i486, Pentium, etc. kc sparc   Sun SPARC qc power   Power PC vc mips    big-endian MIPS 3000 family","fields": [10929]},{"file": 3,"line": 1715,"col": 8,"fields": [10930]},{"file": 9,"line": 15,"col": 12},{"file": 9,"line": 47,"col": 12},{"file": 9,"line": 52,"col": 12,"docs": " Appends to the `std.ArrayList` contents by reading from the stream until end of stream is found. If the number of bytes appended would exceed `max_append_size`, `error.StreamTooLong` is returned and the `std.ArrayList` has exactly `max_append_size` bytes appended.","fields": [10931,10932,10933]},{"file": 9,"line": 56,"col": 12,"fields": [10934,10935,10936,10937]},{"file": 9,"line": 90,"col": 12,"docs": " Allocates enough memory to hold all the contents of the stream. If the allocated memory would be greater than `max_size`, returns `error.StreamTooLong`. Caller owns returned memory. If this function returns an error, the contents from the stream read so far are lost.","fields": [10938,10939,10940]},{"file": 9,"line": 143,"col": 12,"docs": " Reads from the stream until specified byte is found. If the buffer is not large enough to hold the entire contents, `error.StreamTooLong` is returned. Returns a slice of the stream data, with ptr equal to `buf.ptr`. The delimiter byte is not included in the returned slice.","fields": [10941,10942,10943]},{"file": 9,"line": 163,"col": 12,"docs": " Allocates enough memory to read until `delimiter` or end-of-stream. If the allocated memory would be greater than `max_size`, returns `error.StreamTooLong`. If end-of-stream is found, returns the rest of the stream. If this function is called again after that, returns null. Caller owns returned memory. If this function returns an error, the contents from the stream read so far are lost.","fields": [10944,10945,10946,10947]},{"file": 9,"line": 213,"col": 12,"docs": " Reads from the stream until specified byte is found, discarding all data, including the delimiter. If end-of-stream is found, this function succeeds.","fields": [10948,10949]},{"file": 9,"line": 245,"col": 12,"docs": " Reads a native-endian integer","fields": [10950,10951]},{"file": 9,"line": 251,"col": 12,"docs": " Reads a foreign-endian integer","fields": [10952,10953]},{"file": 9,"line": 261,"col": 12,"fields": [10954,10955]},{"file": 9,"line": 280,"col": 12,"docs": " Optional parameters for `skipBytes`"},{"file": 9,"line": 286,"col": 12,"docs": " Reads `num_bytes` bytes from the stream and discards them","fields": [10956,10957,10958]},{"file": 9,"line": 298,"col": 12,"docs": " Reads `slice.len` bytes from the stream and returns if they are the same as the passed slice","fields": [10959,10960]},{"file": 9,"line": 19,"col": 8},{"file": 3,"line": 810,"col": 16,"fields": [10961]},{"file": 3,"line": 817,"col": 16,"fields": [10962]},{"file": 3,"line": 824,"col": 16,"fields": [10963]},{"file": 3,"line": 831,"col": 16,"fields": [10964]},{"file": 3,"line": 845,"col": 16,"fields": [10965]},{"file": 3,"line": 852,"col": 16,"fields": [10966]},{"file": 3,"line": 859,"col": 16,"fields": [10967]},{"file": 3,"line": 866,"col": 16,"fields": [10968]},{"file": 3,"line": 873,"col": 16,"fields": [10969]},{"file": 3,"line": 880,"col": 16,"fields": [10970]},{"file": 3,"line": 887,"col": 16,"fields": [10971,10972]},{"file": 3,"line": 896,"col": 16,"fields": [10973]},{"file": 3,"line": 957,"col": 16,"fields": [10974]},{"file": 3,"line": 1084,"col": 16,"fields": [10975]},{"file": 3,"line": 1152,"col": 16,"docs": " Returns a name that matches the lib/std/target/* source file name.","fields": [10976]},{"file": 3,"line": 1172,"col": 16,"docs": " All CPU features Zig is aware of, sorted lexicographically by name.","fields": [10977]},{"file": 3,"line": 1197,"col": 16,"docs": " All processors Zig is aware of, sorted lexicographically by name.","fields": [10978]},{"file": 3,"line": 1220,"col": 12,"fields": [10979]},{"file": 10,"line": 14,"col": 12},{"file": 10,"line": 15,"col": 12},{"file": 10,"line": 16,"col": 12},{"file": 10,"line": 17,"col": 12},{"file": 10,"line": 19,"col": 12},{"file": 10,"line": 20,"col": 12},{"file": 10,"line": 22,"col": 12},{"file": 10,"line": 38,"col": 12,"fields": [10980]},{"file": 10,"line": 60,"col": 12,"docs": " If the returned number of bytes written is less than requested, the buffer is full. Returns `error.NoSpaceLeft` when no bytes would be written. Note: `error.NoSpaceLeft` matches the corresponding error from `std.fs.File.WriteError`.","fields": [10981,10982]},{"file": 10,"line": 105,"col": 12,"fields": [10983]},{"file": 10,"line": 109,"col": 12,"fields": [10984]},{"file": 10,"line": 32,"col": 8},{"file": 11,"line": 15,"col": 12},{"file": 11,"line": 16,"col": 12},{"file": 11,"line": 14,"col": 8},{"file": 12,"line": 225,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 232,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 238,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 265,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 278,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 286,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 296,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 305,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 311,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 318,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 324,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 328,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 335,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 345,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 353,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 362,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 370,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 381,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 387,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 393,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 399,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 406,"col": 8,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 13,"line": 1822,"col": 12,"docs": " Returns a slice of the remaining bytes. Does not affect iterator state.","fields": [10985]},{"file": 13,"line": 1830,"col": 12,"docs": " Resets the iterator to the initial token.","fields": [10986]},{"file": 13,"line": 1803,"col": 8},{"file": 14,"line": 15,"col": 12},{"file": 14,"line": 16,"col": 12},{"file": 14,"line": 20,"col": 12,"docs": " Initializes a new queue. The queue does not provide a `deinit()` function, so the user must take care of cleaning up the queue elements.","fields": []},{"file": 14,"line": 30,"col": 12,"docs": " Appends `node` to the queue. The lifetime of `node` must be longer than lifetime of queue.","fields": [10987,10988]},{"file": 14,"line": 49,"col": 12,"docs": " Gets a previously inserted node or returns `null` if there is none. It is safe to `get()` a node from the queue while another thread tries to `remove()` the same node at the same time.","fields": [10989]},{"file": 14,"line": 66,"col": 12,"fields": [10990,10991]},{"file": 14,"line": 85,"col": 12,"docs": " Removes a node from the queue, returns whether node was actually removed. It is safe to `remove()` a node from the queue while another thread tries to `get()` the same node at the same time.","fields": [10992,10993]},{"file": 14,"line": 111,"col": 12,"docs": " Returns `true` if the queue is currently empty. Note that in a multi-consumer environment a return value of `false` does not mean that `get` will yield a non-`null` value!","fields": [10994]},{"file": 14,"line": 118,"col": 12,"docs": " Dumps the contents of the queue to `stderr`.","fields": [10995]},{"file": 14,"line": 125,"col": 12,"docs": " Dumps the contents of the queue to `stream`. Up to 4 elements from the head are dumped and the tail of the queue is dumped as well.","fields": [10996,10997]},{"file": 16,"line": 166,"col": 12,"docs": " Node inside the linked list wrapping the actual data."},{"file": 16,"line": 181,"col": 12,"docs": " Insert a new node after an existing one. Arguments:     node: Pointer to a node in the list.     new_node: Pointer to the new node to insert.","fields": [10998,10999,11000]},{"file": 16,"line": 202,"col": 12,"docs": " Insert a new node before an existing one. Arguments:     node: Pointer to a node in the list.     new_node: Pointer to the new node to insert.","fields": [11001,11002,11003]},{"file": 16,"line": 223,"col": 12,"docs": " Concatenate list2 onto the end of list1, removing all entries from the former. Arguments:     list1: the list to concatenate onto     list2: the list to be concatenated","fields": [11004,11005]},{"file": 16,"line": 244,"col": 12,"docs": " Insert a new node at the end of the list. Arguments:     new_node: Pointer to the new node to insert.","fields": [11006,11007]},{"file": 16,"line": 258,"col": 12,"docs": " Insert a new node at the beginning of the list. Arguments:     new_node: Pointer to the new node to insert.","fields": [11008,11009]},{"file": 16,"line": 277,"col": 12,"docs": " Remove a node from the list. Arguments:     node: Pointer to the node to be removed.","fields": [11010,11011]},{"file": 16,"line": 302,"col": 12,"docs": " Remove and return the last node in the list. Returns:     A pointer to the last node in the list.","fields": [11012]},{"file": 16,"line": 312,"col": 12,"docs": " Remove and return the first node in the list. Returns:     A pointer to the first node in the list.","fields": [11013]},{"file": 16,"line": 163,"col": 8},{"file": 17,"line": 12,"col": 12,"fields": [11014]},{"file": 17,"line": 18,"col": 12,"docs": " Non-atomically load from the atomic value without synchronization. Care must be taken to avoid data-races when interacting with other atomic operations.","fields": [11015]},{"file": 17,"line": 24,"col": 12,"docs": " Non-atomically store to the atomic value without synchronization. Care must be taken to avoid data-races when interacting with other atomic operations.","fields": [11016,11017]},{"file": 17,"line": 28,"col": 12,"fields": [11018,11019]},{"file": 17,"line": 36,"col": 12,"fields": [11020,11021,11022]},{"file": 17,"line": 44,"col": 12,"fields": [11023,11024,11025]},{"file": 17,"line": 48,"col": 12,"fields": [11026,11027,11028,11029,11030]},{"file": 17,"line": 58,"col": 12,"fields": [11031,11032,11033,11034,11035]},{"file": 17,"line": 10,"col": 8},{"file": 17,"line": 68,"col": 8,"fields": [11036,11037,11038,11039,11040,11041]},{"file": 17,"line": 99,"col": 8,"fields": [11042,11043,11044,11045]},{"file": 18,"line": 1569,"col": 12},{"file": 18,"line": 1571,"col": 12},{"file": 18,"line": 1576,"col": 12},{"file": 16,"line": 19,"col": 12,"docs": " Node inside the linked list wrapping the actual data."},{"file": 16,"line": 82,"col": 12,"docs": " Remove a node from the list. Arguments:     node: Pointer to the node to be removed.","fields": [11046,11047]},{"file": 16,"line": 98,"col": 12,"docs": " Remove and return the first node in the list. Returns:     A pointer to the first node in the list.","fields": [11048]},{"file": 16,"line": 106,"col": 12,"docs": " Iterate over all nodes, returning the count. This operation is O(N).","fields": [11049]},{"file": 16,"line": 16,"col": 8},{"file": 19,"line": 15,"col": 12},{"file": 19,"line": 17,"col": 12},{"file": 19,"line": 22,"col": 12,"fields": []},{"file": 19,"line": 31,"col": 12,"docs": " push operation, but only if you are the first item in the stack. if you did not succeed in being the first item in the stack, returns the other item that was there.","fields": [11050,11051]},{"file": 19,"line": 36,"col": 12,"fields": [11052,11053]},{"file": 19,"line": 49,"col": 12,"fields": [11054]},{"file": 19,"line": 64,"col": 12,"fields": [11055]},{"file": 19,"line": 13,"col": 8},{"file": 20,"line": 953,"col": 4,"docs": " The LLVM docs list a space between C / C++ but empirically this is not the case."},{"file": 17,"line": 131,"col": 16,"fields": [11056,11057,11058]},{"file": 17,"line": 135,"col": 16,"fields": [11059,11060,11061]},{"file": 17,"line": 139,"col": 16,"fields": [11062,11063,11064]},{"file": 17,"line": 143,"col": 16,"fields": [11065,11066,11067]},{"file": 17,"line": 154,"col": 16,"fields": [11068,11069,11070]},{"file": 17,"line": 158,"col": 16,"fields": [11071,11072,11073]},{"file": 17,"line": 162,"col": 16,"fields": [11074,11075,11076]},{"file": 17,"line": 147,"col": 12},{"file": 17,"line": 148,"col": 12},{"file": 17,"line": 166,"col": 12,"fields": [11077,11078,11079,11080]},{"file": 17,"line": 113,"col": 16,"fields": [11081,11082,11083]},{"file": 17,"line": 117,"col": 16,"fields": [11084,11085,11086]},{"file": 17,"line": 121,"col": 16,"fields": [11087,11088,11089]},{"file": 17,"line": 125,"col": 16,"fields": [11090,11091,11092]},{"file": 0,"line": 0,"col": 0},{"file": 0,"line": 1,"col": 0},{"file": 1,"line": 0,"col": 4},{"file": 1,"line": 1,"col": 4},{"file": 1,"line": 2,"col": 4},{"file": 1,"line": 3,"col": 4},{"file": 1,"line": 4,"col": 4},{"file": 1,"line": 5,"col": 4},{"file": 1,"line": 6,"col": 4},{"file": 1,"line": 7,"col": 4},{"file": 1,"line": 8,"col": 4},{"file": 1,"line": 9,"col": 4},{"file": 1,"line": 10,"col": 4},{"file": 1,"line": 11,"col": 4},{"file": 1,"line": 12,"col": 4},{"file": 1,"line": 13,"col": 4},{"file": 1,"line": 14,"col": 4},{"file": 1,"line": 15,"col": 4},{"file": 1,"line": 16,"col": 4},{"file": 1,"line": 17,"col": 4},{"file": 1,"line": 18,"col": 4},{"file": 1,"line": 19,"col": 4},{"file": 1,"line": 20,"col": 4},{"file": 1,"line": 21,"col": 4},{"file": 1,"line": 22,"col": 4},{"file": 1,"line": 23,"col": 4},{"file": 1,"line": 24,"col": 4},{"file": 1,"line": 25,"col": 4},{"file": 1,"line": 26,"col": 4},{"file": 1,"line": 27,"col": 4},{"file": 1,"line": 28,"col": 4},{"file": 1,"line": 29,"col": 4},{"file": 1,"line": 30,"col": 4},{"file": 1,"line": 31,"col": 4},{"file": 1,"line": 32,"col": 4},{"file": 1,"line": 33,"col": 4},{"file": 1,"line": 34,"col": 4},{"file": 1,"line": 35,"col": 4},{"file": 1,"line": 36,"col": 4},{"file": 1,"line": 37,"col": 4},{"file": 1,"line": 38,"col": 4},{"file": 1,"line": 39,"col": 4},{"file": 1,"line": 40,"col": 4},{"file": 1,"line": 42,"col": 4},{"file": 1,"line": 43,"col": 4},{"file": 1,"line": 44,"col": 4},{"file": 1,"line": 45,"col": 4},{"file": 1,"line": 46,"col": 4},{"file": 1,"line": 47,"col": 4},{"file": 1,"line": 48,"col": 4},{"file": 1,"line": 49,"col": 4},{"file": 1,"line": 50,"col": 4},{"file": 1,"line": 51,"col": 4},{"file": 1,"line": 52,"col": 4},{"file": 1,"line": 53,"col": 4},{"file": 1,"line": 54,"col": 4},{"file": 1,"line": 55,"col": 4},{"file": 1,"line": 56,"col": 4},{"file": 1,"line": 57,"col": 4},{"file": 1,"line": 58,"col": 4},{"file": 1,"line": 59,"col": 4},{"file": 1,"line": 60,"col": 4},{"file": 1,"line": 61,"col": 4},{"file": 1,"line": 62,"col": 4},{"file": 1,"line": 63,"col": 4},{"file": 1,"line": 64,"col": 4},{"file": 1,"line": 65,"col": 4},{"file": 1,"line": 66,"col": 4},{"file": 1,"line": 67,"col": 4},{"file": 1,"line": 68,"col": 4},{"file": 1,"line": 69,"col": 4},{"file": 1,"line": 70,"col": 4},{"file": 1,"line": 71,"col": 4},{"file": 1,"line": 72,"col": 4},{"file": 1,"line": 73,"col": 4},{"file": 1,"line": 74,"col": 4},{"file": 1,"line": 75,"col": 4},{"file": 1,"line": 76,"col": 4},{"file": 1,"line": 77,"col": 4},{"file": 1,"line": 78,"col": 4},{"file": 1,"line": 79,"col": 4},{"file": 1,"line": 80,"col": 4},{"file": 1,"line": 81,"col": 4},{"file": 1,"line": 82,"col": 4},{"file": 1,"line": 83,"col": 4},{"file": 1,"line": 84,"col": 4},{"file": 1,"line": 85,"col": 4},{"file": 1,"line": 86,"col": 4},{"file": 1,"line": 87,"col": 4},{"file": 1,"line": 88,"col": 4},{"file": 2,"line": 3,"col": 4,"docs": " Zig version. When writing code that supports multiple versions of Zig, prefer feature detection (i.e. with `@hasDecl` or `@hasField`) over version checks."},{"file": 2,"line": 5,"col": 4,"docs": " Temporary until self-hosted is feature complete."},{"file": 2,"line": 7,"col": 4,"docs": " Temporary until self-hosted supports the `cpu.arch` value."},{"file": 2,"line": 9,"col": 4,"docs": " Temporary until self-hosted can call `std.Target.x86.featureSetHas` at comptime."},{"file": 2,"line": 11,"col": 4},{"file": 2,"line": 12,"col": 4},{"file": 2,"line": 13,"col": 4},{"file": 2,"line": 14,"col": 4},{"file": 2,"line": 15,"col": 4},{"file": 2,"line": 16,"col": 4},{"file": 2,"line": 65,"col": 4},{"file": 2,"line": 72,"col": 4},{"file": 2,"line": 77,"col": 4},{"file": 2,"line": 78,"col": 4},{"file": 2,"line": 79,"col": 4},{"file": 2,"line": 80,"col": 4},{"file": 2,"line": 81,"col": 4},{"file": 2,"line": 82,"col": 4},{"file": 2,"line": 83,"col": 4},{"file": 2,"line": 84,"col": 4},{"file": 2,"line": 85,"col": 4},{"file": 2,"line": 86,"col": 4},{"file": 2,"line": 0,"col": 0},{"file": 3,"line": 630,"col": 20},{"file": 3,"line": 631,"col": 20},{"file": 3,"line": 632,"col": 20},{"file": 3,"line": 633,"col": 20},{"file": 3,"line": 634,"col": 20},{"file": 3,"line": 636,"col": 20},{"file": 3,"line": 641,"col": 20,"fields": [11093]},{"file": 3,"line": 647,"col": 20,"fields": [11094,11095]},{"file": 3,"line": 661,"col": 20,"docs": " Adds the specified feature set but not its dependencies.","fields": [11096,11097]},{"file": 3,"line": 667,"col": 20,"docs": " Removes the specified feature but not its dependents.","fields": [11098,11099]},{"file": 3,"line": 674,"col": 20,"docs": " Removes the specified feature but not its dependents.","fields": [11100,11101]},{"file": 3,"line": 679,"col": 20,"fields": [11102,11103]},{"file": 3,"line": 696,"col": 20,"fields": [11104]},{"file": 3,"line": 700,"col": 20,"fields": [11105,11106]},{"file": 3,"line": 704,"col": 20,"fields": [11107,11108]},{"file": 12,"line": 57,"col": 8,"fields": [11109,11110,11111,11112]},{"file": 44,"line": 302,"col": 8},{"file": 29,"line": 293,"col": 8},{"file": 29,"line": 302,"col": 8},{"file": 29,"line": 753,"col": 8,"fields": [11113]},{"file": 29,"line": 794,"col": 8},{"file": 29,"line": 874,"col": 8,"docs": " Recursively iterates over a directory. `self` must have been opened with `OpenDirOptions{.iterate = true}`. Must call `Walker.deinit` when done. The order of returned file system entries is undefined. `self` will not be closed after walking it.","fields": [11114,11115]},{"file": 29,"line": 892,"col": 8},{"file": 29,"line": 907,"col": 8,"fields": [11116]},{"file": 29,"line": 933,"col": 8,"docs": " Same as `openFile` but WASI only.","fields": [11117,11118,11119]},{"file": 29,"line": 957,"col": 8},{"file": 29,"line": 960,"col": 8,"docs": " Same as `openFile` but the path parameter is null-terminated.","fields": [11120,11121,11122]},{"file": 29,"line": 1080,"col": 8,"docs": " Creates, opens, or overwrites a file with write access. Call `File.close` on the result when done. Asserts that the path parameter has no null bytes.","fields": [11123,11124,11125]},{"file": 29,"line": 1092,"col": 8},{"file": 29,"line": 1095,"col": 8,"docs": " Same as `createFile` but WASI only.","fields": [11126,11127,11128]},{"file": 29,"line": 1123,"col": 8,"docs": " Same as `createFile` but the path parameter is null-terminated.","fields": [11129,11130,11131]},{"file": 29,"line": 1194,"col": 8,"docs": " Same as `createFile` but Windows-only and the path parameter is [WTF-16](https://simonsapin.github.io/wtf-8/#potentially-ill-formed-utf-16) encoded.","fields": [11132,11133,11134]},{"file": 29,"line": 1235,"col": 8},{"file": 29,"line": 1236,"col": 8},{"file": 29,"line": 1237,"col": 8},{"file": 29,"line": 1239,"col": 8,"fields": [11135,11136]},{"file": 29,"line": 1243,"col": 8,"fields": [11137,11138]},{"file": 29,"line": 1247,"col": 8,"fields": [11139,11140]},{"file": 29,"line": 1255,"col": 8,"docs": " Calls makeDir recursively to make an entire path. Returns success if the path already exists and is a directory. This function is not atomic, and if it returns an error, the file system may have been modified regardless.","fields": [11141,11142]},{"file": 29,"line": 1288,"col": 8,"docs": " This function performs `makePath`, followed by `openDir`. If supported by the OS, this operation is atomic. It is not atomic on all operating systems.","fields": [11143,11144,11145]},{"file": 29,"line": 1301,"col": 8,"docs": "  This function returns the canonicalized absolute pathname of `pathname` relative to this `Dir`. If `pathname` is absolute, ignores this `Dir` handle and returns the canonicalized absolute pathname of `pathname` argument. This function is not universally supported by all platforms. Currently supported hosts are: Linux, macOS, and Windows. See also `Dir.realpathZ`, `Dir.realpathW`, and `Dir.realpathAlloc`.","fields": [11146,11147,11148]},{"file": 29,"line": 1315,"col": 8,"docs": " Same as `Dir.realpath` except `pathname` is null-terminated. See also `Dir.realpath`, `realpathZ`.","fields": [11149,11150,11151]},{"file": 29,"line": 1348,"col": 8,"docs": " Windows-only. Same as `Dir.realpath` except `pathname` is WTF16 encoded. See also `Dir.realpath`, `realpathW`.","fields": [11152,11153,11154]},{"file": 29,"line": 1400,"col": 8,"docs": " Same as `Dir.realpath` except caller must free the returned memory. See also `Dir.realpath`.","fields": [11155,11156,11157]},{"file": 29,"line": 1418,"col": 8,"docs": " Changes the current working directory to the open directory handle. This modifies global state and can have surprising effects in multi- threaded applications. Most applications and especially libraries should not call this function as a general rule, however it can have use cases in, for example, implementing a shell, or child process execution. Not all targets support this. For example, WASI does not have the concept of a current working directory.","fields": [11158]},{"file": 29,"line": 1425,"col": 8},{"file": 29,"line": 1443,"col": 8,"docs": " Opens a directory at the given path. The directory is a system resource that remains open until `close` is called on the result. Asserts that the path parameter has no null bytes.","fields": [11159,11160,11161]},{"file": 29,"line": 1455,"col": 8},{"file": 29,"line": 1458,"col": 8,"docs": " Same as `openDir` except only WASI.","fields": [11162,11163,11164]},{"file": 29,"line": 1496,"col": 8,"docs": " Same as `openDir` except the parameter is null-terminated.","fields": [11165,11166,11167]},{"file": 29,"line": 1512,"col": 8,"docs": " Same as `openDir` except the path parameter is WTF-16 encoded, NT-prefixed. This function asserts the target OS is Windows.","fields": [11168,11169,11170]},{"file": 29,"line": 1586,"col": 8},{"file": 29,"line": 1590,"col": 8,"docs": " Delete a file name and possibly the file it refers to, based on an open directory handle. Asserts that the path parameter has no null bytes.","fields": [11171,11172]},{"file": 29,"line": 1605,"col": 8},{"file": 29,"line": 1608,"col": 8,"docs": " Same as `deleteFile` except the parameter is null-terminated.","fields": [11173,11174]},{"file": 29,"line": 1627,"col": 8,"docs": " Same as `deleteFile` except the parameter is WTF-16 encoded.","fields": [11175,11176]},{"file": 29,"line": 1634,"col": 8},{"file": 29,"line": 1653,"col": 8,"docs": " Returns `error.DirNotEmpty` if the directory is not empty. To delete a directory recursively, see `deleteTree`. Asserts that the path parameter has no null bytes.","fields": [11177,11178]},{"file": 29,"line": 1669,"col": 8,"docs": " Same as `deleteDir` except the parameter is null-terminated.","fields": [11179,11180]},{"file": 29,"line": 1678,"col": 8,"docs": " Same as `deleteDir` except the parameter is UTF16LE, NT prefixed. This function is Windows-only.","fields": [11181,11182]},{"file": 29,"line": 1685,"col": 8},{"file": 29,"line": 1691,"col": 8,"docs": " Change the name or location of a file or directory. If new_sub_path already exists, it will be replaced. Renaming a file over an existing directory or a directory over an existing file will fail with `error.IsDir` or `error.NotDir`","fields": [11183,11184,11185]},{"file": 29,"line": 1696,"col": 8,"docs": " Same as `rename` except the parameters are null-terminated.","fields": [11186,11187,11188]},{"file": 29,"line": 1702,"col": 8,"docs": " Same as `rename` except the parameters are UTF16LE, NT prefixed. This function is Windows-only.","fields": [11189,11190,11191]},{"file": 29,"line": 1710,"col": 8,"docs": " Creates a symbolic link named `sym_link_path` which contains the string `target_path`. A symbolic link (also known as a soft link) may point to an existing file or to a nonexistent one; the latter case is known as a dangling link. If `sym_link_path` exists, it will not be overwritten.","fields": [11192,11193,11194,11195]},{"file": 29,"line": 1730,"col": 8,"docs": " WASI-only. Same as `symLink` except targeting WASI.","fields": [11196,11197,11198,11199]},{"file": 29,"line": 1740,"col": 8,"docs": " Same as `symLink`, except the pathname parameters are null-terminated.","fields": [11200,11201,11202,11203]},{"file": 29,"line": 1756,"col": 8,"docs": " Windows-only. Same as `symLink` except the pathname parameters are null-terminated, WTF16 encoded.","fields": [11204,11205,11206,11207]},{"file": 29,"line": 1768,"col": 8,"docs": " Read value of a symbolic link. The return value is a slice of `buffer`, from index `0`. Asserts that the path parameter has no null bytes.","fields": [11208,11209,11210]},{"file": 29,"line": 1780,"col": 8},{"file": 29,"line": 1783,"col": 8,"docs": " WASI-only. Same as `readLink` except targeting WASI.","fields": [11211,11212,11213]},{"file": 29,"line": 1788,"col": 8,"docs": " Same as `readLink`, except the `pathname` parameter is null-terminated.","fields": [11214,11215,11216]},{"file": 29,"line": 1798,"col": 8,"docs": " Windows-only. Same as `readLink` except the pathname parameter is null-terminated, WTF16 encoded.","fields": [11217,11218,11219]},{"file": 29,"line": 1807,"col": 8,"docs": " Read all of file contents using a preallocated buffer. The returned slice has the same pointer as `buffer`. If the length matches `buffer.len` the situation is ambiguous. It could either mean that the entire file was read, and it exactly fits the buffer, or it could mean the buffer was not big enough for the entire file.","fields": [11220,11221,11222]},{"file": 29,"line": 1817,"col": 8,"docs": " On success, caller owns returned buffer. If the file is larger than `max_bytes`, returns `error.FileTooBig`.","fields": [11223,11224,11225,11226]},{"file": 29,"line": 1826,"col": 8,"docs": " On success, caller owns returned buffer. If the file is larger than `max_bytes`, returns `error.FileTooBig`. If `size_hint` is specified the initial buffer size is calculated using that value, otherwise the effective file size is used instead. Allows specifying alignment and a sentinel value.","fields": [11227,11228,11229,11230,11231,11232,11233]},{"file": 29,"line": 1846,"col": 8},{"file": 29,"line": 1876,"col": 8,"docs": " Whether `full_path` describes a symlink, file, or directory, this function removes it. If it cannot be removed because it is a non-empty directory, this function recursively removes its entries and then tries again. This operation is not atomic on most file systems.","fields": [11234,11235]},{"file": 29,"line": 2025,"col": 8,"docs": " Writes content to the file system, creating a new file if it does not exist, truncating if it already exists.","fields": [11236,11237,11238]},{"file": 29,"line": 2031,"col": 8},{"file": 29,"line": 2038,"col": 8,"docs": " Test accessing `path`. `path` is UTF8-encoded. Be careful of Time-Of-Check-Time-Of-Use race conditions when using this function. For example, instead of testing if a file exists and then opening it, just open it and handle the error for file not found.","fields": [11239,11240,11241]},{"file": 29,"line": 2048,"col": 8,"docs": " Same as `access` except the path parameter is null-terminated.","fields": [11242,11243,11244]},{"file": 29,"line": 2071,"col": 8,"docs": " Same as `access` except asserts the target OS is Windows and the path parameter is * WTF-16 encoded * null-terminated * NtDll prefixed TODO currently this ignores `flags`.","fields": [11245,11246,11247]},{"file": 29,"line": 2081,"col": 8,"docs": " Check the file size, mtime, and mode of `source_path` and `dest_path`. If they are equal, does nothing. Otherwise, atomically copies `source_path` to `dest_path`. The destination file gains the mtime, atime, and mode of the source file so that the next call to `updateFile` will not need a copy. Returns the previous status of the file before updating. If any of the directories do not exist for dest_path, they are created.","fields": [11248,11249,11250,11251,11252]},{"file": 29,"line": 2129,"col": 8,"docs": " Guaranteed to be atomic. On Linux, until https://patchwork.kernel.org/patch/9636735/ is merged and readily available, there is a possibility of power loss or application termination leaving temporary files present in the same directory as dest_path.","fields": [11253,11254,11255,11256,11257]},{"file": 29,"line": 2153,"col": 8},{"file": 29,"line": 2161,"col": 8,"docs": " Directly access the `.file` field, and then call `AtomicFile.finish` to atomically replace `dest_path` with contents. Always call `AtomicFile.deinit` to clean up, regardless of whether `AtomicFile.finish` succeeded. `dest_path` must remain valid until `AtomicFile.deinit` is called.","fields": [11258,11259,11260]},{"file": 29,"line": 2170,"col": 8},{"file": 29,"line": 2171,"col": 8},{"file": 29,"line": 2173,"col": 8,"fields": [11261]},{"file": 29,"line": 2181,"col": 8},{"file": 29,"line": 2188,"col": 8,"docs": " Changes the mode of the directory. The process must have the correct privileges in order to do this successfully, or must have the effective user ID matching the owner of the directory. Additionally, the directory must have been opened with `OpenDirOptions{ .iterate = true }`.","fields": [11262,11263]},{"file": 29,"line": 2202,"col": 8,"docs": " Changes the owner and group of the directory. The process must have the correct privileges in order to do this successfully. The group may be changed by the owner of the directory to any group of which the owner is a member. Additionally, the directory must have been opened with `OpenDirOptions{ .iterate = true }`. If the owner or group is specified as `null`, the ID is not changed.","fields": [11264,11265,11266]},{"file": 29,"line": 2210,"col": 8},{"file": 29,"line": 300,"col": 4},{"file": 29,"line": 1522,"col": 4,"docs": " `flags` must contain `os.O.DIRECTORY`.","fields": [11267,11268,11269]},{"file": 29,"line": 1539,"col": 4,"fields": [11270,11271,11272,11273]},{"file": 20,"line": 1003,"col": 8},{"file": 20,"line": 1059,"col": 4,"fields": [11274]},{"file": 20,"line": 1063,"col": 4,"fields": [11275]},{"file": 6,"line": 774,"col": 16,"fields": [11276]},{"file": 6,"line": 747,"col": 12},{"file": 6,"line": 749,"col": 12},{"file": 6,"line": 750,"col": 12},{"file": 26,"line": 998,"col": 8,"fields": [11277]},{"file": 26,"line": 1015,"col": 4,"fields": [11278,11279]},{"file": 26,"line": 1153,"col": 4,"fields": [11280,11281]},{"file": 26,"line": 1220,"col": 4,"fields": [11282,11283]},{"file": 45,"line": 15,"col": 8,"docs": " Inner state of ArenaAllocator. Can be stored rather than the entire ArenaAllocator as a memory-saving optimization."},{"file": 45,"line": 37,"col": 8,"fields": [11284]},{"file": 45,"line": 31,"col": 4},{"file": 47,"line": 4,"col": 8,"docs": " The caller specified WaitAny for WaitType and one of the dispatcher objects in the Object array has been set to the signaled state."},{"file": 47,"line": 6,"col": 8,"docs": " The caller attempted to wait for a mutex that has been abandoned."},{"file": 47,"line": 8,"col": 8,"docs": " The maximum number of boot-time filters has been reached."},{"file": 39,"line": 149,"col": 8},{"file": 39,"line": 211,"col": 8,"docs": " Resets the timer value to 0/now.","fields": [11285]},{"file": 39,"line": 216,"col": 8,"docs": " Returns the current value of the timer in nanoseconds, then resets it","fields": [11286]},{"file": 39,"line": 154,"col": 4,"docs": " At some point we may change our minds on RAW, but for now we're sticking with posix standard MONOTONIC. For more information, see: https://github.com/ziglang/zig/pull/933"},{"file": 3,"line": 7,"col": 4,"docs": " TODO Nearly all the functions in this namespace would be better off if https://github.com/ziglang/zig/issues/425 was solved."},{"file": 3,"line": 0,"col": 0},{"file": 3,"line": 1,"col": 0},{"file": 3,"line": 2,"col": 0},{"file": 4,"line": 0,"col": 0},{"file": 4,"line": 1,"col": 0},{"file": 4,"line": 2,"col": 0},{"file": 5,"line": 12,"col": 4},{"file": 5,"line": 0,"col": 0},{"file": 5,"line": 1,"col": 0},{"file": 5,"line": 2,"col": 0},{"file": 5,"line": 3,"col": 0},{"file": 5,"line": 4,"col": 0},{"file": 5,"line": 5,"col": 0},{"file": 5,"line": 6,"col": 0},{"file": 5,"line": 7,"col": 0},{"file": 5,"line": 8,"col": 0},{"file": 5,"line": 9,"col": 0},{"file": 5,"line": 10,"col": 0},{"file": 6,"line": 51,"col": 4,"fields": [11287,11288]},{"file": 6,"line": 71,"col": 4,"docs": " Key memory is managed by the caller.  Keys and values will not automatically be freed.","fields": [11289]},{"file": 6,"line": 75,"col": 4},{"file": 6,"line": 94,"col": 4},{"file": 6,"line": 108,"col": 4},{"file": 6,"line": 123,"col": 4,"docs": " Deprecated use `default_max_load_percentage`"},{"file": 6,"line": 125,"col": 4},{"file": 6,"line": 0,"col": 0},{"file": 6,"line": 1,"col": 0},{"file": 6,"line": 2,"col": 0},{"file": 6,"line": 3,"col": 0},{"file": 6,"line": 4,"col": 0},{"file": 6,"line": 5,"col": 0},{"file": 6,"line": 6,"col": 0},{"file": 6,"line": 7,"col": 0},{"file": 6,"line": 8,"col": 0},{"file": 6,"line": 9,"col": 0},{"file": 6,"line": 10,"col": 0},{"file": 6,"line": 1538,"col": 0},{"file": 6,"line": 1539,"col": 0},{"file": 6,"line": 1540,"col": 0},{"file": 26,"line": 1394,"col": 12,"fields": [11290]},{"file": 7,"line": 439,"col": 4,"docs": " An ArrayList, but the allocator is passed as a parameter to the relevant functions rather than stored in the struct itself. The same allocator **must** be used throughout the entire lifetime of an ArrayListUnmanaged. Initialize directly or with `initCapacity`, and deinitialize with `deinit` or use `toOwnedSlice`.","fields": [11291]},{"file": 7,"line": 447,"col": 4,"docs": " An ArrayListAligned, but the allocator is passed as a parameter to the relevant functions rather than stored  in the struct itself. The same allocator **must** be used throughout the entire lifetime of an ArrayListAlignedUnmanaged. Initialize directly or with `initCapacity`, and deinitialize with `deinit` or use `toOwnedSlice`.","fields": [11292,11293]},{"file": 7,"line": 0,"col": 0},{"file": 7,"line": 1,"col": 0},{"file": 7,"line": 2,"col": 0},{"file": 7,"line": 3,"col": 0},{"file": 7,"line": 4,"col": 0},{"file": 7,"line": 5,"col": 0},{"file": 7,"line": 1197,"col": 0},{"file": 7,"line": 1202,"col": 0},{"file": 25,"line": 379,"col": 4},{"file": 3,"line": 16,"col": 12},{"file": 3,"line": 93,"col": 12,"docs": " Based on NTDDI version constants from https://docs.microsoft.com/en-us/cpp/porting/modifying-winver-and-win32-winnt"},{"file": 3,"line": 181,"col": 12},{"file": 3,"line": 220,"col": 12,"docs": " The version ranges here represent the minimum OS version to be supported and the maximum OS version to be supported. The default values represent the range that the Zig Standard Library bases its abstractions on. The minimum version of the range is the main setting to tweak for a target. Usually, the maximum target OS version will remain the default, which is the latest released version of the OS. To test at compile time if the target is guaranteed to support a given OS feature, one should check that the minimum version of the range is greater than or equal to the version the feature was introduced in. To test at compile time if the target certainly will not support a given OS feature, one should check that the maximum version of the range is less than the version the feature was introduced in. If neither of these cases apply, a runtime check should be used to determine if the target supports a given OS feature. Binaries built with a given maximum version will continue to function on newer operating system versions. However, such a binary may not take full advantage of the newer operating system APIs. See `Os.isAtLeast`."},{"file": 3,"line": 337,"col": 12},{"file": 3,"line": 346,"col": 12,"docs": " Provides a tagged union. `Target` does not store the tag because it is redundant with the OS tag; this function abstracts that part away.","fields": [11294]},{"file": 3,"line": 368,"col": 12,"docs": " Checks if system is guaranteed to be at least `version` or older than `version`. Returns `null` if a runtime check is required.","fields": [11295,11296,11297]},{"file": 3,"line": 381,"col": 12,"docs": " On Darwin, we always link libSystem which contains libc. Similarly on FreeBSD and NetBSD we always link system libc since this is the stable syscall interface.","fields": [11298]},{"file": 8,"line": 6,"col": 4},{"file": 8,"line": 151,"col": 4},{"file": 8,"line": 152,"col": 4},{"file": 8,"line": 153,"col": 4},{"file": 8,"line": 154,"col": 4},{"file": 8,"line": 156,"col": 4},{"file": 8,"line": 978,"col": 4},{"file": 8,"line": 2,"col": 0},{"file": 8,"line": 3,"col": 0},{"file": 8,"line": 4,"col": 0},{"file": 3,"line": 474,"col": 12,"fields": [11299,11300]},{"file": 3,"line": 527,"col": 12,"fields": [11301]},{"file": 3,"line": 534,"col": 12,"fields": [11302]},{"file": 3,"line": 541,"col": 12,"fields": [11303]},{"file": 3,"line": 607,"col": 12},{"file": 3,"line": 749,"col": 12},{"file": 3,"line": 1230,"col": 12},{"file": 3,"line": 1298,"col": 12,"docs": " The \"default\" set of CPU features for cross-compiling. A conservative set of features that is expected to be supported on most available hardware.","fields": [11304]},{"file": 9,"line": 0,"col": 0},{"file": 9,"line": 1,"col": 0},{"file": 9,"line": 2,"col": 0},{"file": 9,"line": 3,"col": 0},{"file": 9,"line": 4,"col": 0},{"file": 10,"line": 0,"col": 0},{"file": 10,"line": 1,"col": 0},{"file": 10,"line": 2,"col": 0},{"file": 10,"line": 3,"col": 0},{"file": 10,"line": 4,"col": 0},{"file": 11,"line": 0,"col": 0},{"file": 12,"line": 4,"col": 4},{"file": 12,"line": 5,"col": 4},{"file": 12,"line": 6,"col": 4},{"file": 12,"line": 7,"col": 4},{"file": 12,"line": 8,"col": 4},{"file": 12,"line": 9,"col": 4},{"file": 12,"line": 10,"col": 4},{"file": 12,"line": 11,"col": 4},{"file": 12,"line": 12,"col": 4},{"file": 12,"line": 13,"col": 4},{"file": 12,"line": 14,"col": 4},{"file": 12,"line": 15,"col": 4},{"file": 12,"line": 16,"col": 4},{"file": 12,"line": 17,"col": 4},{"file": 12,"line": 18,"col": 4},{"file": 12,"line": 19,"col": 4},{"file": 12,"line": 20,"col": 4},{"file": 12,"line": 21,"col": 4},{"file": 12,"line": 22,"col": 4},{"file": 12,"line": 23,"col": 4},{"file": 12,"line": 29,"col": 4,"docs": " `explicit_subsystem` is missing when the subsystem is automatically detected, so Zig standard library has the subsystem detection logic here. This should generally be used rather than `explicit_subsystem`. On non-Windows targets, this is `null`."},{"file": 12,"line": 53,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 86,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 95,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 106,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 118,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 136,"col": 4,"docs": " The code model puts constraints on the location of symbols and the size of code and data. The selection of a code model is a trade off on speed and restrictions that needs to be selected on a per application basis to meet its requirements. A slightly more detailed explanation can be found in (for example) the [System V Application Binary Interface (x86_64)](https://github.com/hjl-tools/x86-psABI/wiki/x86-64-psABI-1.0.pdf) 3.5.1. This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 147,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 156,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 176,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 185,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 192,"col": 4},{"file": 12,"line": 196,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 436,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 443,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 450,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 457,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 465,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 472,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 479,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 566,"col": 4,"fields": []},{"file": 12,"line": 612,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 655,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 663,"col": 4,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 672,"col": 4,"docs": " This function type is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 680,"col": 4,"docs": " This function type is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 684,"col": 4,"docs": " This function is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 0,"col": 0},{"file": 12,"line": 723,"col": 0},{"file": 12,"line": 724,"col": 0},{"file": 12,"line": 255,"col": 12,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 12,"line": 413,"col": 12,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 13,"line": 14,"col": 4,"docs": " Compile time known minimum page size. https://github.com/ziglang/zig/issues/4082"},{"file": 13,"line": 30,"col": 4,"docs": " The standard library currently thoroughly depends on byte size being 8 bits.  (see the use of u8 throughout allocation code as the \"byte\" type.)  Code which depends on this can reference this declaration.  If we ever try to port the standard library to a non-8-bit-byte platform, this will allow us to search for things which need to be updated."},{"file": 13,"line": 32,"col": 4},{"file": 13,"line": 36,"col": 4,"docs": " Detects and asserts if the std.mem.Allocator interface is violated by the caller or the allocator.","fields": [11305]},{"file": 13,"line": 113,"col": 4,"fields": [11306]},{"file": 13,"line": 206,"col": 4,"docs": " Copy all of source into dest at position 0. dest.len must be >= source.len. If the slices overlap, dest.ptr must be >= src.ptr.","fields": [11307,11308,11309]},{"file": 13,"line": 231,"col": 4,"docs": " Generally, Zig users are encouraged to explicitly initialize all fields of a struct explicitly rather than using this function. However, it is recognized that there are sometimes use cases for initializing all fields to a \"zero\" value. For example, when interfacing with a C API where this practice is more common and relied upon. If you are performing code review and see this function used, examine closely - it may be a code smell. Zero initializes the type. This can be used to zero initialize a any type for which it makes sense. Structs will be initialized recursively.","fields": [11310]},{"file": 13,"line": 398,"col": 4,"docs": " Initializes all fields of the struct with their default value, or zero values if no default value is present. If the field is present in the provided initial values, it will have that value instead. Structs are initialized recursively.","fields": [11311,11312]},{"file": 13,"line": 492,"col": 4,"docs": " Compares two slices of numbers lexicographically. O(n).","fields": [11313,11314,11315]},{"file": 13,"line": 514,"col": 4,"docs": " Returns true if lhs < rhs, false otherwise","fields": [11316,11317,11318]},{"file": 13,"line": 538,"col": 4,"docs": " Compares two slices and returns the index of the first inequality. Returns null if the slices are equal.","fields": [11319,11320,11321]},{"file": 13,"line": 555,"col": 4},{"file": 13,"line": 556,"col": 4},{"file": 13,"line": 734,"col": 4,"docs": " Takes a pointer to an array, an array, a sentinel-terminated pointer, or a slice and iterates searching for the first occurrence of `end`, returning the scanned slice. If `end` is not found, the full length of the array/slice/sentinel terminated pointer is returned. If the pointer type is sentinel terminated and `end` matches that terminator, the resulting slice is also sentinel terminated. Pointer properties such as mutability and alignment are preserved. C pointers are assumed to be non-null.","fields": [11322,11323]},{"file": 13,"line": 984,"col": 4,"docs": " Returns true if all elements in a slice are equal to the scalar value provided","fields": [11324,11325,11326]},{"file": 13,"line": 992,"col": 4,"docs": " Deprecated, use `Allocator.dupe`.","fields": [11327,11328,11329]},{"file": 13,"line": 997,"col": 4,"docs": " Deprecated, use `Allocator.dupeZ`.","fields": [11330,11331,11332]},{"file": 13,"line": 1002,"col": 4,"docs": " Remove values from the beginning of a slice.","fields": [11333,11334,11335]},{"file": 13,"line": 1009,"col": 4,"docs": " Remove values from the end of a slice.","fields": [11336,11337,11338]},{"file": 13,"line": 1016,"col": 4,"docs": " Remove values from the beginning and end of a slice.","fields": [11339,11340,11341]},{"file": 13,"line": 1037,"col": 4,"docs": " Linear search for the last index of a scalar value inside a slice.","fields": [11342,11343,11344]},{"file": 13,"line": 1054,"col": 4,"fields": [11345,11346,11347]},{"file": 13,"line": 1058,"col": 4,"fields": [11348,11349,11350]},{"file": 13,"line": 1069,"col": 4,"fields": [11351,11352,11353,11354]},{"file": 13,"line": 1087,"col": 4,"docs": " Find the index in a slice of a sub-slice, searching from the end backwards. To start looking at a different index, slice the haystack first. Consider using `lastIndexOf` instead of this, which will automatically use a more sophisticated algorithm on larger inputs.","fields": [11355,11356,11357]},{"file": 13,"line": 1135,"col": 4,"docs": " Find the index in a slice of a sub-slice, searching from the end backwards. To start looking at a different index, slice the haystack first. Uses the Reverse boyer-moore-horspool algorithm on large inputs; `lastIndexOfLinear` on small inputs.","fields": [11358,11359,11360]},{"file": 13,"line": 1242,"col": 4,"docs": " Returns the number of needles inside the haystack needle.len must be > 0 does not count overlapping needles","fields": [11361,11362,11363]},{"file": 13,"line": 1272,"col": 4,"docs": " Returns true if the haystack contains expected_count or more needles needle.len must be > 0 does not count overlapping needles","fields": [11364,11365,11366,11367]},{"file": 13,"line": 1341,"col": 4},{"file": 13,"line": 1346,"col": 4},{"file": 13,"line": 1356,"col": 4,"docs": " Asserts that bytes.len >= @typeInfo(T).Int.bits / 8. Reads the integer starting from index 0 and ignores extra bytes. The bit count of T must be evenly divisible by 8. Assumes the endianness of memory is native. This means the function can simply pointer cast memory.","fields": [11368,11369]},{"file": 13,"line": 1366,"col": 4,"docs": " Asserts that bytes.len >= @typeInfo(T).Int.bits / 8. Reads the integer starting from index 0 and ignores extra bytes. The bit count of T must be evenly divisible by 8. Assumes the endianness of memory is foreign, so it must byte-swap.","fields": [11370,11371]},{"file": 13,"line": 1370,"col": 4},{"file": 13,"line": 1375,"col": 4},{"file": 13,"line": 1394,"col": 4,"docs": " Asserts that bytes.len >= @typeInfo(T).Int.bits / 8. Reads the integer starting from index 0 and ignores extra bytes. The bit count of T must be evenly divisible by 8.","fields": [11372,11373,11374]},{"file": 13,"line": 1440,"col": 4,"docs": " Writes an integer to memory, storing it in twos-complement. This function always succeeds, has defined behavior for all inputs, and accepts any integer bit width. This function stores in native endian, which means it is implemented as a simple memory store.","fields": [11375,11376,11377]},{"file": 13,"line": 1448,"col": 4,"docs": " Writes an integer to memory, storing it in twos-complement. This function always succeeds, has defined behavior for all inputs, but the integer bit width must be divisible by 8. This function stores in foreign endian, which means it does a @byteSwap first.","fields": [11378,11379,11380]},{"file": 13,"line": 1452,"col": 4},{"file": 13,"line": 1457,"col": 4},{"file": 13,"line": 1465,"col": 4,"docs": " Writes an integer to memory, storing it in twos-complement. This function always succeeds, has defined behavior for all inputs, but the integer bit width must be divisible by 8.","fields": [11381,11382,11383,11384]},{"file": 13,"line": 1479,"col": 4,"docs": " Writes a twos-complement little-endian integer to memory. Asserts that buf.len >= @typeInfo(T).Int.bits / 8. The bit count of T must be divisible by 8. Any extra bytes in buffer after writing the integer are set to zero. To avoid the branch to check for extra buffer bytes, use writeIntLittle instead.","fields": [11385,11386,11387]},{"file": 13,"line": 1503,"col": 4,"docs": " Writes a twos-complement big-endian integer to memory. Asserts that buffer.len >= @typeInfo(T).Int.bits / 8. The bit count of T must be divisible by 8. Any extra bytes in buffer before writing the integer are set to zero. To avoid the branch to check for extra buffer bytes, use writeIntBig instead.","fields": [11388,11389,11390]},{"file": 13,"line": 1525,"col": 4},{"file": 13,"line": 1530,"col": 4},{"file": 13,"line": 1541,"col": 4,"docs": " Writes a twos-complement integer to memory, with the specified endianness. Asserts that buf.len >= @typeInfo(T).Int.bits / 8. The bit count of T must be evenly divisible by 8. Any extra bytes in buffer not part of the integer are set to zero, with respect to endianness. To avoid the branch to check for extra buffer bytes, use writeInt instead.","fields": [11391,11392,11393,11394]},{"file": 13,"line": 1588,"col": 4,"docs": " Swap the byte order of all the members of the fields of a struct (Changing their endianess)","fields": [11395,11396]},{"file": 13,"line": 1716,"col": 4,"docs": " Returns an iterator that iterates over the slices of `buffer` that are separated by bytes in `delimiter`. split(u8, \"abc|def||ghi\", \"|\") will return slices for \"abc\", \"def\", \"\", \"ghi\", null, in that order. If `delimiter` does not exist in buffer, the iterator will return `buffer`, null, in that order. The delimiter length must not be zero. See also the related function `tokenize`.","fields": [11397,11398,11399]},{"file": 13,"line": 1725,"col": 4},{"file": 13,"line": 1788,"col": 4,"fields": [11400,11401,11402]},{"file": 13,"line": 1845,"col": 4,"fields": [11403]},{"file": 13,"line": 1877,"col": 4,"docs": " Naively combines a series of slices with a separator. Allocates memory for the result, which must be freed by the caller.","fields": [11404,11405,11406]},{"file": 13,"line": 1883,"col": 4,"docs": " Naively combines a series of slices with a separator and null terminator. Allocates memory for the result, which must be freed by the caller.","fields": [11407,11408,11409]},{"file": 13,"line": 1967,"col": 4,"docs": " Copies each T from slices into a new slice that exactly holds all the elements.","fields": [11410,11411,11412]},{"file": 13,"line": 2208,"col": 4,"docs": " Returns the smallest number in a slice. O(n). `slice` must not be empty.","fields": [11413,11414]},{"file": 13,"line": 2222,"col": 4,"docs": " Returns the largest number in a slice. O(n). `slice` must not be empty.","fields": [11415,11416]},{"file": 13,"line": 2241,"col": 4,"docs": " In-place order reversal of a slice","fields": [11417,11418]},{"file": 13,"line": 2258,"col": 4,"docs": " In-place rotation of the values in an array ([0 1 2 3] becomes [1 2 3 0] if we rotate by 1) Assumes 0 <= amount <= items.len","fields": [11419,11420,11421]},{"file": 13,"line": 2274,"col": 4,"docs": " Replace needle with replacement as many times as possible, writing to an output buffer which is assumed to be of appropriate size. Use replacementSize to calculate an appropriate buffer size. The needle must not be empty.","fields": [11422,11423,11424,11425,11426]},{"file": 13,"line": 2352,"col": 4,"docs": " Collapse consecutive duplicate elements into one entry.","fields": [11427,11428,11429]},{"file": 13,"line": 2377,"col": 4,"docs": " Calculate the size needed in an output buffer to perform a replacement. The needle must not be empty.","fields": [11430,11431,11432,11433]},{"file": 13,"line": 2409,"col": 4,"docs": " Perform a replacement on an allocated buffer of pre-determined size. Caller must free returned memory.","fields": [11434,11435,11436,11437,11438]},{"file": 13,"line": 2428,"col": 4,"docs": " Converts a little-endian integer to host endianness.","fields": [11439,11440]},{"file": 13,"line": 2436,"col": 4,"docs": " Converts a big-endian integer to host endianness.","fields": [11441,11442]},{"file": 13,"line": 2444,"col": 4,"docs": " Converts an integer from specified endianness to host endianness.","fields": [11443,11444,11445]},{"file": 13,"line": 2452,"col": 4,"docs": " Converts an integer which has host endianness to the desired endianness.","fields": [11446,11447,11448]},{"file": 13,"line": 2468,"col": 4,"docs": " Converts an integer which has host endianness to big endian.","fields": [11449,11450]},{"file": 13,"line": 2481,"col": 4,"docs": " Returns the number of elements that, if added to the given pointer, align it to a multiple of the given quantity, or `null` if one of the following conditions is met: - The aligned pointer would not fit the address space, - The delta required to align the pointer is not a multiple of the pointee's   type.","fields": [11451,11452]},{"file": 13,"line": 2513,"col": 4,"docs": " Aligns a given pointer value to a specified alignment factor. Returns an aligned pointer or null if one of the following conditions is met: - The aligned pointer would not fit the address space, - The delta required to align the pointer is not a multiple of the pointee's   type.","fields": [11453,11454]},{"file": 13,"line": 2619,"col": 4,"docs": " Given any value, returns a copy of its bytes in an array.","fields": [11455]},{"file": 13,"line": 2652,"col": 4,"docs": " Given a pointer to an array of bytes, returns a pointer to a value of the specified type backed by those bytes, preserving pointer attributes.","fields": [11456,11457]},{"file": 13,"line": 2709,"col": 4,"docs": " Given a pointer to an array of bytes, returns a value of the specified type backed by a copy of those bytes.","fields": [11458,11459]},{"file": 13,"line": 2934,"col": 4,"docs": " Force an evaluation of the expression; this tries to prevent the compiler from optimizing the computation away even if the result eventually gets discarded.","fields": [11460]},{"file": 13,"line": 2984,"col": 4,"docs": " Returns whether `alignment` is a valid alignment, meaning it is a positive power of 2.","fields": [11461]},{"file": 13,"line": 2988,"col": 4,"fields": [11462,11463]},{"file": 13,"line": 3046,"col": 4,"docs": " Returns the largest slice in the given bytes that conforms to the new alignment, or `null` if the given bytes contain no conforming address.","fields": [11464,11465]},{"file": 13,"line": 3060,"col": 4,"docs": " Returns the largest sub-slice within the given slice that conforms to the new alignment, or `null` if the given slice contains no conforming address.","fields": [11466,11467]},{"file": 13,"line": 0,"col": 0},{"file": 13,"line": 1,"col": 0},{"file": 13,"line": 2,"col": 0},{"file": 13,"line": 3,"col": 0},{"file": 13,"line": 4,"col": 0},{"file": 13,"line": 5,"col": 0},{"file": 13,"line": 6,"col": 0},{"file": 13,"line": 7,"col": 0},{"file": 13,"line": 8,"col": 0},{"file": 13,"line": 9,"col": 0},{"file": 13,"line": 10,"col": 0},{"file": 13,"line": 132,"col": 0},{"file": 13,"line": 136,"col": 0,"fields": [11468,11469,11470,11471,11472]},{"file": 13,"line": 676,"col": 0,"docs": " Helper for the return type of sliceTo()","fields": [11473,11474]},{"file": 13,"line": 788,"col": 0,"docs": " Private helper for sliceTo(). If you want the length, use sliceTo(foo, x).len","fields": [11475,11476]},{"file": 13,"line": 1106,"col": 0,"fields": [11477,11478]},{"file": 13,"line": 1888,"col": 0,"fields": [11479,11480,11481,11482]},{"file": 13,"line": 2019,"col": 0,"fields": []},{"file": 13,"line": 2070,"col": 0,"fields": []},{"file": 13,"line": 2356,"col": 0,"fields": [11483,11484,11485]},{"file": 13,"line": 2637,"col": 0,"fields": [11486,11487]},{"file": 13,"line": 3028,"col": 0,"docs": " Returns a slice with the given new alignment, all other pointer attributes copied from `AttributeSource`.","fields": [11488,11489]},{"file": 14,"line": 0,"col": 0},{"file": 14,"line": 1,"col": 0},{"file": 14,"line": 2,"col": 0},{"file": 14,"line": 3,"col": 0},{"file": 14,"line": 157,"col": 0},{"file": 14,"line": 171,"col": 0},{"file": 14,"line": 172,"col": 0},{"file": 14,"line": 242,"col": 0,"fields": [11490]},{"file": 14,"line": 261,"col": 0,"fields": [11491]},{"file": 15,"line": 36,"col": 4,"docs": " Try to acquire the mutex without blocking. Returns `false` if the mutex is unavailable. Otherwise returns `true`. Call `unlock` on the mutex to release.","fields": [11492]},{"file": 15,"line": 59,"col": 4},{"file": 15,"line": 165,"col": 4},{"file": 15,"line": 202,"col": 4,"docs": " This has the sematics as `Mutex`, however it does not actually do any synchronization. Operations are safety-checked no-ops."},{"file": 15,"line": 232,"col": 4},{"file": 15,"line": 24,"col": 0},{"file": 15,"line": 25,"col": 0},{"file": 15,"line": 26,"col": 0},{"file": 15,"line": 27,"col": 0},{"file": 15,"line": 28,"col": 0},{"file": 15,"line": 29,"col": 0},{"file": 15,"line": 30,"col": 0},{"file": 15,"line": 31,"col": 0},{"file": 15,"line": 32,"col": 0},{"file": 15,"line": 50,"col": 0},{"file": 15,"line": 248,"col": 0},{"file": 15,"line": 279,"col": 0,"fields": [11493]},{"file": 16,"line": 0,"col": 0},{"file": 16,"line": 1,"col": 0},{"file": 16,"line": 2,"col": 0},{"file": 16,"line": 3,"col": 0},{"file": 16,"line": 4,"col": 0},{"file": 16,"line": 5,"col": 0},{"file": 17,"line": 0,"col": 0},{"file": 17,"line": 2,"col": 0},{"file": 17,"line": 3,"col": 0},{"file": 17,"line": 4,"col": 0},{"file": 17,"line": 262,"col": 0,"fields": []},{"file": 17,"line": 307,"col": 0},{"file": 17,"line": 339,"col": 0},{"file": 18,"line": 13,"col": 4},{"file": 18,"line": 0,"col": 0},{"file": 18,"line": 1,"col": 0},{"file": 18,"line": 2,"col": 0},{"file": 18,"line": 3,"col": 0},{"file": 18,"line": 4,"col": 0},{"file": 18,"line": 5,"col": 0},{"file": 18,"line": 6,"col": 0},{"file": 18,"line": 7,"col": 0},{"file": 18,"line": 8,"col": 0},{"file": 18,"line": 9,"col": 0},{"file": 18,"line": 11,"col": 0},{"file": 18,"line": 1713,"col": 0,"fields": []},{"file": 18,"line": 1717,"col": 0,"fields": [11494,11495]},{"file": 18,"line": 1723,"col": 0},{"file": 18,"line": 1749,"col": 0,"fields": []},{"file": 18,"line": 1772,"col": 0,"fields": [11496,11497]},{"file": 18,"line": 1593,"col": 16},{"file": 18,"line": 1601,"col": 16},{"file": 18,"line": 1609,"col": 16},{"file": 18,"line": 1617,"col": 16},{"file": 18,"line": 1625,"col": 16},{"file": 18,"line": 1634,"col": 16},{"file": 18,"line": 1643,"col": 16},{"file": 18,"line": 1652,"col": 16},{"file": 18,"line": 1661,"col": 16},{"file": 18,"line": 1670,"col": 16},{"file": 18,"line": 1680,"col": 16},{"file": 18,"line": 1684,"col": 16},{"file": 16,"line": 23,"col": 16},{"file": 16,"line": 29,"col": 16,"docs": " Insert a new node after the current one. Arguments:     new_node: Pointer to the new node to insert.","fields": [11498,11499]},{"file": 16,"line": 40,"col": 16,"docs": " Remove a node from the list. Arguments:     node: Pointer to the node to be removed. Returns:     node removed","fields": [11500]},{"file": 16,"line": 48,"col": 16,"docs": " Iterate over the singly-linked list from this node, until the final node is found. This operation is O(N).","fields": [11501]},{"file": 16,"line": 57,"col": 16,"docs": " Iterate over each next node, returning the count of all nodes except the starting one. This operation is O(N).","fields": [11502]},{"file": 19,"line": 0,"col": 0},{"file": 19,"line": 1,"col": 0},{"file": 19,"line": 2,"col": 0},{"file": 19,"line": 3,"col": 0},{"file": 19,"line": 70,"col": 0},{"file": 19,"line": 83,"col": 0},{"file": 19,"line": 84,"col": 0},{"file": 19,"line": 147,"col": 0,"fields": [11503]},{"file": 19,"line": 165,"col": 0,"fields": [11504]},{"file": 18,"line": 47,"col": 12},{"file": 18,"line": 61,"col": 12},{"file": 18,"line": 63,"col": 12},{"file": 18,"line": 69,"col": 12},{"file": 18,"line": 88,"col": 12},{"file": 18,"line": 83,"col": 8},{"file": 18,"line": 99,"col": 8},{"file": 20,"line": 17,"col": 4},{"file": 20,"line": 40,"col": 4},{"file": 20,"line": 53,"col": 4},{"file": 20,"line": 71,"col": 4},{"file": 20,"line": 79,"col": 4},{"file": 20,"line": 103,"col": 4},{"file": 20,"line": 112,"col": 4,"docs": " Duplicate copy of SymbolRecordKind, but using the official CV names. Useful for reference purposes and when dealing with unknown record types."},{"file": 20,"line": 311,"col": 4},{"file": 20,"line": 313,"col": 4},{"file": 20,"line": 328,"col": 4},{"file": 20,"line": 339,"col": 4},{"file": 20,"line": 345,"col": 4},{"file": 20,"line": 357,"col": 4,"docs": " The following variable length array appears immediately after the header. The structure definition follows. LineBlockFragmentHeader Blocks[] Each `LineBlockFragmentHeader` as specified below."},{"file": 20,"line": 369,"col": 4},{"file": 20,"line": 379,"col": 4,"docs": " The following two variable length arrays appear immediately after the header.  The structure definitions follow. LineNumberEntry   Lines[NumLines]; ColumnNumberEntry Columns[NumLines];"},{"file": 20,"line": 391,"col": 4},{"file": 20,"line": 407,"col": 4},{"file": 20,"line": 413,"col": 4,"docs": " Checksum bytes follow."},{"file": 20,"line": 424,"col": 4},{"file": 20,"line": 444,"col": 4},{"file": 20,"line": 452,"col": 4},{"file": 20,"line": 481,"col": 4},{"file": 20,"line": 0,"col": 0},{"file": 20,"line": 1,"col": 0},{"file": 20,"line": 2,"col": 0},{"file": 20,"line": 3,"col": 0},{"file": 20,"line": 4,"col": 0},{"file": 20,"line": 5,"col": 0},{"file": 20,"line": 6,"col": 0},{"file": 20,"line": 7,"col": 0},{"file": 20,"line": 8,"col": 0},{"file": 20,"line": 9,"col": 0},{"file": 20,"line": 11,"col": 0},{"file": 20,"line": 857,"col": 0},{"file": 20,"line": 951,"col": 0},{"file": 20,"line": 997,"col": 0},{"file": 21,"line": 10,"col": 4},{"file": 21,"line": 11,"col": 4},{"file": 21,"line": 12,"col": 4},{"file": 21,"line": 14,"col": 4},{"file": 21,"line": 51,"col": 4},{"file": 21,"line": 96,"col": 4},{"file": 21,"line": 138,"col": 4},{"file": 21,"line": 143,"col": 4},{"file": 21,"line": 159,"col": 4},{"file": 21,"line": 168,"col": 4},{"file": 21,"line": 207,"col": 4},{"file": 21,"line": 218,"col": 4},{"file": 21,"line": 593,"col": 4},{"file": 21,"line": 0,"col": 0},{"file": 21,"line": 1,"col": 0},{"file": 21,"line": 2,"col": 0},{"file": 21,"line": 3,"col": 0},{"file": 21,"line": 4,"col": 0},{"file": 21,"line": 5,"col": 0},{"file": 21,"line": 6,"col": 0},{"file": 21,"line": 8,"col": 0},{"file": 21,"line": 228,"col": 0},{"file": 21,"line": 233,"col": 0},{"file": 21,"line": 238,"col": 0},{"file": 21,"line": 245,"col": 0},{"file": 21,"line": 247,"col": 0},{"file": 21,"line": 253,"col": 0},{"file": 21,"line": 260,"col": 0},{"file": 21,"line": 265,"col": 0},{"file": 21,"line": 278,"col": 0},{"file": 21,"line": 288,"col": 0},{"file": 21,"line": 348,"col": 0},{"file": 21,"line": 355,"col": 0},{"file": 22,"line": 11,"col": 4},{"file": 22,"line": 12,"col": 4},{"file": 22,"line": 13,"col": 4},{"file": 22,"line": 14,"col": 4},{"file": 22,"line": 15,"col": 4},{"file": 22,"line": 16,"col": 4},{"file": 22,"line": 17,"col": 4},{"file": 22,"line": 19,"col": 4},{"file": 22,"line": 21,"col": 4},{"file": 22,"line": 36,"col": 4},{"file": 22,"line": 47,"col": 4},{"file": 22,"line": 53,"col": 4,"fields": [11505,11506]},{"file": 22,"line": 136,"col": 4},{"file": 22,"line": 148,"col": 4,"fields": [11507,11508]},{"file": 22,"line": 226,"col": 4,"docs": " Represents a unique ID per thread."},{"file": 22,"line": 234,"col": 4},{"file": 22,"line": 241,"col": 4,"docs": " Returns the platforms view on the number of logical CPU cores available.","fields": []},{"file": 22,"line": 246,"col": 4,"docs": " Configuration options for hints on how to spawn threads."},{"file": 22,"line": 254,"col": 4},{"file": 22,"line": 288,"col": 4,"docs": " Spawns a new thread which executes `function` using `args` and returns a handle the spawned thread. `config` can be used as hints to the platform for now to spawn and execute the `function`. The caller must eventually either call `join()` to wait for the thread to finish and free its resources or call `detach()` to excuse the caller from calling `join()` and have the thread clean up its resources on completion`.","fields": [11509,11510,11511]},{"file": 22,"line": 299,"col": 4,"docs": " Represents a kernel thread handle. May be an integer or a pointer depending on the platform."},{"file": 22,"line": 302,"col": 4,"docs": " Retrns the handle of this thread","fields": [11512]},{"file": 22,"line": 308,"col": 4,"docs": " Release the obligation of the caller to call `join()` and have the thread clean up its own resources on completion. Once called, this consumes the Thread object and invoking any other functions on it is considered undefined behavior.","fields": [11513]},{"file": 22,"line": 314,"col": 4,"docs": " Waits for the thread to complete, then deallocates any resources created on `spawn()`. Once called, this consumes the Thread object and invoking any other functions on it is considered undefined behavior.","fields": [11514]},{"file": 22,"line": 4,"col": 0},{"file": 22,"line": 5,"col": 0},{"file": 22,"line": 6,"col": 0},{"file": 22,"line": 7,"col": 0},{"file": 22,"line": 8,"col": 0},{"file": 22,"line": 9,"col": 0},{"file": 22,"line": 22,"col": 0},{"file": 22,"line": 24,"col": 0},{"file": 22,"line": 25,"col": 0},{"file": 22,"line": 319,"col": 0,"docs": " State to synchronize detachment of spawner thread to spawned thread"},{"file": 22,"line": 326,"col": 0,"docs": " Used by the Thread implementations to call the spawned function with the arguments.","fields": [11515,11516]},{"file": 22,"line": 379,"col": 0,"docs": " We can't compile error in the `Impl` switch statement as its eagerly evaluated. So instead, we compile-error on the methods themselves for platforms which don't support threads."},{"file": 22,"line": 413,"col": 0},{"file": 22,"line": 516,"col": 0},{"file": 22,"line": 669,"col": 0},{"file": 22,"line": 1003,"col": 0,"fields": [11517]},{"file": 22,"line": 1102,"col": 0,"fields": [11518,11519]},{"file": 23,"line": 3,"col": 4},{"file": 23,"line": 5,"col": 4},{"file": 23,"line": 6,"col": 4},{"file": 23,"line": 7,"col": 4},{"file": 23,"line": 15,"col": 4,"fields": [11520]},{"file": 23,"line": 26,"col": 4,"fields": [11521]},{"file": 23,"line": 0,"col": 0},{"file": 23,"line": 1,"col": 0},{"file": 24,"line": 11,"col": 4},{"file": 24,"line": 12,"col": 4},{"file": 24,"line": 13,"col": 4},{"file": 24,"line": 22,"col": 4,"docs": " The return type is `type` to force comptime function call execution. TODO: https://github.com/ziglang/zig/issues/425 If not linking libc, returns struct{pub const ok = false;} If linking musl libc, returns struct{pub const ok = true;} If linking gnu libc (glibc), the `ok` value will be true if the target version is greater than or equal to `glibc_version`. If linking a libc other than these, returns `false`.","fields": [11522]},{"file": 24,"line": 59,"col": 4},{"file": 24,"line": 89,"col": 4,"fields": [11523]},{"file": 24,"line": 97,"col": 4},{"file": 24,"line": 99,"col": 4,"fields": [11524,11525]},{"file": 24,"line": 100,"col": 4,"fields": [11526]},{"file": 24,"line": 101,"col": 4,"fields": [11527,11528,11529,11530]},{"file": 24,"line": 102,"col": 4,"fields": [11531,11532,11533,11534]},{"file": 24,"line": 104,"col": 4,"fields": [11535,11536],"varArgs": true},{"file": 24,"line": 105,"col": 4,"fields": []},{"file": 24,"line": 106,"col": 4,"fields": [11537]},{"file": 24,"line": 107,"col": 4,"fields": [11538]},{"file": 24,"line": 108,"col": 4,"fields": [11539]},{"file": 24,"line": 109,"col": 4,"fields": [11540]},{"file": 24,"line": 110,"col": 4,"fields": [11541,11542,11543]},{"file": 24,"line": 111,"col": 4,"fields": [11544,11545,11546],"varArgs": true},{"file": 24,"line": 112,"col": 4,"fields": [11547,11548,11549,11550],"varArgs": true},{"file": 24,"line": 113,"col": 4,"fields": [11551,11552]},{"file": 24,"line": 114,"col": 4,"fields": [11553]},{"file": 24,"line": 115,"col": 4,"fields": [11554,11555,11556]},{"file": 24,"line": 116,"col": 4,"fields": [11557,11558,11559]},{"file": 24,"line": 117,"col": 4,"fields": [11560,11561,11562,11563]},{"file": 24,"line": 118,"col": 4,"fields": [11564,11565,11566,11567]},{"file": 24,"line": 119,"col": 4,"fields": [11568,11569,11570]},{"file": 24,"line": 120,"col": 4,"fields": [11571,11572,11573,11574]},{"file": 24,"line": 121,"col": 4,"fields": [11575,11576,11577]},{"file": 24,"line": 122,"col": 4,"fields": [11578,11579,11580,11581]},{"file": 24,"line": 123,"col": 4,"fields": [11582,11583,11584,11585,11586,11587]},{"file": 24,"line": 124,"col": 4,"fields": [11588,11589]},{"file": 24,"line": 125,"col": 4,"fields": [11590,11591,11592]},{"file": 24,"line": 126,"col": 4,"fields": [11593,11594,11595]},{"file": 24,"line": 127,"col": 4,"fields": [11596,11597,11598,11599,11600]},{"file": 24,"line": 128,"col": 4,"fields": [11601]},{"file": 24,"line": 129,"col": 4,"fields": [11602,11603,11604]},{"file": 24,"line": 130,"col": 4,"fields": [11605,11606]},{"file": 24,"line": 131,"col": 4,"fields": [11607,11608,11609]},{"file": 24,"line": 132,"col": 4,"fields": []},{"file": 24,"line": 133,"col": 4,"fields": [11610,11611]},{"file": 24,"line": 134,"col": 4,"fields": [11612,11613,11614,11615]},{"file": 24,"line": 135,"col": 4,"fields": [11616]},{"file": 24,"line": 136,"col": 4,"fields": [11617,11618]},{"file": 24,"line": 137,"col": 4,"fields": [11619,11620,11621]},{"file": 24,"line": 138,"col": 4,"fields": [11622,11623]},{"file": 24,"line": 139,"col": 4,"fields": [11624,11625,11626]},{"file": 24,"line": 140,"col": 4,"fields": [11627,11628]},{"file": 24,"line": 141,"col": 4,"fields": [11629,11630,11631,11632]},{"file": 24,"line": 142,"col": 4,"fields": [11633]},{"file": 24,"line": 143,"col": 4,"fields": [11634]},{"file": 24,"line": 144,"col": 4,"fields": [11635,11636,11637]},{"file": 24,"line": 145,"col": 4,"fields": [11638]},{"file": 24,"line": 146,"col": 4,"fields": [11639,11640]},{"file": 24,"line": 147,"col": 4,"fields": [11641,11642,11643]},{"file": 24,"line": 148,"col": 4,"fields": [11644,11645,11646,11647]},{"file": 24,"line": 149,"col": 4,"fields": [11648,11649]},{"file": 24,"line": 150,"col": 4,"fields": [11650,11651,11652]},{"file": 24,"line": 152,"col": 4,"fields": [11653]},{"file": 24,"line": 153,"col": 4,"fields": [11654]},{"file": 24,"line": 154,"col": 4,"fields": [11655,11656,11657,11658,11659,11660]},{"file": 24,"line": 155,"col": 4,"fields": [11661,11662,11663,11664,11665]},{"file": 24,"line": 156,"col": 4,"fields": [11666,11667,11668]},{"file": 24,"line": 157,"col": 4,"fields": [11669,11670]},{"file": 24,"line": 158,"col": 4,"fields": [11671,11672,11673]},{"file": 24,"line": 159,"col": 4,"fields": [11674,11675,11676],"varArgs": true},{"file": 24,"line": 160,"col": 4,"fields": [11677,11678]},{"file": 24,"line": 161,"col": 4,"fields": [11679,11680,11681],"varArgs": true},{"file": 24,"line": 162,"col": 4,"fields": [11682]},{"file": 24,"line": 164,"col": 4,"fields": [11683,11684]},{"file": 24,"line": 165,"col": 4,"fields": [11685,11686]},{"file": 24,"line": 166,"col": 4,"fields": [11687,11688,11689]},{"file": 24,"line": 167,"col": 4,"fields": [11690,11691,11692,11693]},{"file": 24,"line": 168,"col": 4,"fields": [11694,11695]},{"file": 24,"line": 169,"col": 4,"fields": [11696,11697,11698]},{"file": 24,"line": 170,"col": 4,"fields": [11699,11700,11701]},{"file": 24,"line": 171,"col": 4,"fields": [11702,11703,11704]},{"file": 24,"line": 172,"col": 4,"fields": [11705,11706,11707]},{"file": 24,"line": 173,"col": 4,"fields": [11708,11709,11710,11711]},{"file": 24,"line": 174,"col": 4,"fields": [11712,11713,11714,11715,11716]},{"file": 24,"line": 175,"col": 4,"fields": [11717,11718,11719,11720,11721]},{"file": 24,"line": 176,"col": 4,"fields": [11722,11723,11724,11725]},{"file": 24,"line": 177,"col": 4,"fields": [11726,11727,11728,11729,11730,11731]},{"file": 24,"line": 185,"col": 4,"fields": [11732,11733,11734]},{"file": 24,"line": 187,"col": 4,"fields": [11735,11736,11737,11738]},{"file": 24,"line": 188,"col": 4,"fields": [11739,11740,11741,11742,11743,11744]},{"file": 24,"line": 196,"col": 4,"fields": [11745,11746,11747]},{"file": 24,"line": 198,"col": 4,"fields": [11748,11749]},{"file": 24,"line": 199,"col": 4,"fields": [11750,11751,11752,11753]},{"file": 24,"line": 201,"col": 4,"fields": [11754]},{"file": 24,"line": 202,"col": 4,"fields": [11755]},{"file": 24,"line": 203,"col": 4,"fields": [11756]},{"file": 24,"line": 204,"col": 4,"fields": [11757]},{"file": 24,"line": 205,"col": 4,"fields": [11758,11759]},{"file": 24,"line": 206,"col": 4,"fields": [11760,11761]},{"file": 24,"line": 207,"col": 4,"fields": [11762,11763,11764]},{"file": 24,"line": 208,"col": 4,"fields": [11765,11766,11767]},{"file": 24,"line": 210,"col": 4,"fields": [11768]},{"file": 24,"line": 211,"col": 4,"fields": [11769,11770]},{"file": 24,"line": 212,"col": 4,"fields": [11771]},{"file": 24,"line": 214,"col": 4,"fields": [11772,11773]},{"file": 24,"line": 215,"col": 4,"fields": [11774,11775]},{"file": 24,"line": 217,"col": 4,"fields": [11776,11777,11778,11779]},{"file": 24,"line": 218,"col": 4,"fields": [11780,11781]},{"file": 24,"line": 220,"col": 4,"fields": [11782,11783,11784,11785]},{"file": 24,"line": 221,"col": 4,"fields": [11786]},{"file": 24,"line": 222,"col": 4,"fields": [11787,11788,11789]},{"file": 24,"line": 223,"col": 4,"fields": [11790,11791]},{"file": 24,"line": 224,"col": 4,"fields": [11792,11793]},{"file": 24,"line": 225,"col": 4,"fields": [11794]},{"file": 24,"line": 226,"col": 4,"fields": []},{"file": 24,"line": 227,"col": 4,"fields": [11795,11796]},{"file": 24,"line": 228,"col": 4,"fields": [11797]},{"file": 24,"line": 229,"col": 4,"fields": [11798,11799,11800]},{"file": 24,"line": 234,"col": 4,"fields": [11801,11802]},{"file": 24,"line": 235,"col": 4,"fields": [11803]},{"file": 24,"line": 236,"col": 4,"fields": [11804]},{"file": 24,"line": 237,"col": 4,"fields": [11805,11806]},{"file": 24,"line": 238,"col": 4,"fields": [11807,11808,11809]},{"file": 24,"line": 239,"col": 4,"fields": [11810]},{"file": 24,"line": 240,"col": 4,"fields": [11811]},{"file": 24,"line": 241,"col": 4,"fields": [11812]},{"file": 24,"line": 242,"col": 4,"fields": [11813]},{"file": 24,"line": 243,"col": 4,"fields": [11814,11815]},{"file": 24,"line": 244,"col": 4,"fields": [11816,11817]},{"file": 24,"line": 246,"col": 4,"fields": []},{"file": 24,"line": 247,"col": 4,"fields": [11818,11819,11820,11821,11822,11823]},{"file": 24,"line": 256,"col": 4,"fields": []},{"file": 24,"line": 257,"col": 4,"fields": [11824,11825,11826,11827,11828]},{"file": 24,"line": 264,"col": 4,"fields": [11829,11830,11831]},{"file": 24,"line": 265,"col": 4,"fields": [11832,11833,11834]},{"file": 24,"line": 266,"col": 4,"fields": [11835,11836,11837,11838,11839]},{"file": 24,"line": 273,"col": 4,"fields": [11840,11841,11842]},{"file": 24,"line": 274,"col": 4,"fields": [11843,11844,11845,11846,11847]},{"file": 24,"line": 281,"col": 4,"fields": [11848,11849,11850,11851]},{"file": 24,"line": 283,"col": 4,"fields": [11852,11853,11854,11855]},{"file": 24,"line": 290,"col": 4,"fields": [11856]},{"file": 24,"line": 292,"col": 4,"fields": [11857,11858,11859,11860,11861,11862,11863]},{"file": 24,"line": 302,"col": 4,"fields": [11864]},{"file": 24,"line": 304,"col": 4,"fields": [11865,11866,11867]},{"file": 24,"line": 305,"col": 4,"fields": [11868,11869,11870,11871]},{"file": 24,"line": 307,"col": 4,"fields": [11872,11873,11874,11875,11876]},{"file": 24,"line": 315,"col": 4},{"file": 24,"line": 316,"col": 4,"fields": [11877]},{"file": 24,"line": 317,"col": 4,"fields": [11878]},{"file": 24,"line": 318,"col": 4,"fields": [11879]},{"file": 24,"line": 319,"col": 4,"fields": [11880]},{"file": 24,"line": 321,"col": 4},{"file": 24,"line": 322,"col": 4,"fields": [11881,11882]},{"file": 24,"line": 323,"col": 4,"fields": [11883,11884,11885]},{"file": 24,"line": 324,"col": 4,"fields": [11886]},{"file": 24,"line": 325,"col": 4,"fields": [11887]},{"file": 24,"line": 326,"col": 4,"fields": [11888]},{"file": 24,"line": 328,"col": 4,"fields": [11889]},{"file": 24,"line": 329,"col": 4,"fields": [11890]},{"file": 24,"line": 330,"col": 4,"fields": [11891]},{"file": 24,"line": 331,"col": 4,"fields": [11892]},{"file": 24,"line": 332,"col": 4,"fields": [11893]},{"file": 24,"line": 333,"col": 4,"fields": [11894]},{"file": 24,"line": 335,"col": 4},{"file": 24,"line": 336,"col": 4},{"file": 24,"line": 338,"col": 4,"fields": [11895,11896]},{"file": 24,"line": 339,"col": 4,"fields": [11897]},{"file": 24,"line": 340,"col": 4,"fields": [11898,11899]},{"file": 24,"line": 342,"col": 4,"fields": []},{"file": 24,"line": 343,"col": 4,"fields": [11900]},{"file": 24,"line": 344,"col": 4,"fields": [11901]},{"file": 24,"line": 345,"col": 4,"fields": [11902]},{"file": 24,"line": 347,"col": 4,"fields": [11903,11904],"varArgs": true},{"file": 24,"line": 349,"col": 4,"fields": [11905,11906]},{"file": 24,"line": 350,"col": 4,"fields": [11907,11908]},{"file": 24,"line": 352,"col": 4,"fields": [11909,11910,11911]},{"file": 24,"line": 354,"col": 4,"fields": [11912,11913,11914],"varArgs": true},{"file": 24,"line": 355,"col": 4,"fields": [11915,11916,11917]},{"file": 24,"line": 356,"col": 4,"fields": []},{"file": 24,"line": 357,"col": 4,"fields": [11918]},{"file": 24,"line": 359,"col": 4},{"file": 24,"line": 84,"col": 12,"fields": [11919,11920]},{"file": 24,"line": 85,"col": 12,"fields": [11921,11922,11923,11924]},{"file": 55,"line": 5,"col": 4,"fields": []},{"file": 55,"line": 7,"col": 4,"fields": [11925]},{"file": 55,"line": 11,"col": 4,"fields": [11926,11927]},{"file": 55,"line": 12,"col": 4,"fields": [11928,11929]},{"file": 55,"line": 13,"col": 4,"fields": [11930,11931]},{"file": 55,"line": 14,"col": 4,"fields": [11932,11933]},{"file": 55,"line": 15,"col": 4,"fields": [11934,11935]},{"file": 55,"line": 16,"col": 4,"fields": [11936,11937]},{"file": 55,"line": 17,"col": 4,"fields": []},{"file": 55,"line": 18,"col": 4,"fields": [11938,11939,11940]},{"file": 55,"line": 19,"col": 4,"fields": [11941,11942,11943]},{"file": 55,"line": 20,"col": 4,"fields": [11944,11945]},{"file": 55,"line": 21,"col": 4,"fields": [11946]},{"file": 55,"line": 22,"col": 4,"fields": [11947]},{"file": 55,"line": 23,"col": 4,"fields": [11948,11949]},{"file": 55,"line": 25,"col": 4},{"file": 55,"line": 26,"col": 4},{"file": 55,"line": 27,"col": 4},{"file": 55,"line": 28,"col": 4},{"file": 55,"line": 30,"col": 4},{"file": 55,"line": 32,"col": 4},{"file": 55,"line": 34,"col": 4},{"file": 55,"line": 39,"col": 4},{"file": 55,"line": 44,"col": 4},{"file": 55,"line": 46,"col": 4},{"file": 55,"line": 48,"col": 4},{"file": 55,"line": 49,"col": 4},{"file": 55,"line": 50,"col": 4},{"file": 55,"line": 51,"col": 4},{"file": 55,"line": 54,"col": 4,"docs": " maximum signal number + 1"},{"file": 55,"line": 57,"col": 4,"docs": " Signal types"},{"file": 55,"line": 90,"col": 4},{"file": 55,"line": 96,"col": 4},{"file": 55,"line": 186,"col": 4},{"file": 55,"line": 188,"col": 4},{"file": 55,"line": 191,"col": 4,"docs": " Remove directory instead of unlinking file"},{"file": 55,"line": 195,"col": 4},{"file": 55,"line": 196,"col": 4},{"file": 55,"line": 197,"col": 4},{"file": 55,"line": 199,"col": 4},{"file": 55,"line": 201,"col": 4},{"file": 55,"line": 202,"col": 4},{"file": 55,"line": 204,"col": 4},{"file": 55,"line": 205,"col": 4},{"file": 55,"line": 206,"col": 4},{"file": 55,"line": 207,"col": 4},{"file": 55,"line": 208,"col": 4},{"file": 55,"line": 209,"col": 4},{"file": 55,"line": 210,"col": 4},{"file": 55,"line": 212,"col": 4},{"file": 55,"line": 213,"col": 4},{"file": 55,"line": 214,"col": 4},{"file": 55,"line": 215,"col": 4},{"file": 55,"line": 216,"col": 4},{"file": 55,"line": 217,"col": 4},{"file": 55,"line": 219,"col": 4},{"file": 55,"line": 246,"col": 4},{"file": 24,"line": 0,"col": 0},{"file": 24,"line": 1,"col": 0},{"file": 24,"line": 2,"col": 0},{"file": 24,"line": 3,"col": 0},{"file": 24,"line": 4,"col": 0},{"file": 24,"line": 5,"col": 0},{"file": 25,"line": 14,"col": 4},{"file": 25,"line": 72,"col": 4},{"file": 25,"line": 73,"col": 4},{"file": 25,"line": 74,"col": 4},{"file": 25,"line": 75,"col": 4},{"file": 25,"line": 76,"col": 4},{"file": 25,"line": 79,"col": 4},{"file": 25,"line": 80,"col": 4},{"file": 25,"line": 81,"col": 4},{"file": 25,"line": 82,"col": 4},{"file": 25,"line": 83,"col": 4},{"file": 25,"line": 89,"col": 4},{"file": 25,"line": 98,"col": 4},{"file": 25,"line": 374,"col": 4},{"file": 25,"line": 0,"col": 0},{"file": 25,"line": 1,"col": 0},{"file": 25,"line": 2,"col": 0},{"file": 25,"line": 3,"col": 0},{"file": 25,"line": 4,"col": 0},{"file": 25,"line": 6,"col": 0},{"file": 25,"line": 10,"col": 0},{"file": 25,"line": 11,"col": 0},{"file": 25,"line": 12,"col": 0},{"file": 25,"line": 68,"col": 0},{"file": 25,"line": 69,"col": 0},{"file": 25,"line": 85,"col": 0},{"file": 25,"line": 86,"col": 0},{"file": 25,"line": 87,"col": 0},{"file": 25,"line": 342,"col": 0},{"file": 25,"line": 352,"col": 0},{"file": 25,"line": 363,"col": 0},{"file": 25,"line": 378,"col": 0},{"file": 26,"line": 22,"col": 4},{"file": 26,"line": 27,"col": 4},{"file": 26,"line": 39,"col": 4},{"file": 26,"line": 59,"col": 4,"docs": " Deprecated. Use `std.log` functions for logging or `std.debug.print` for \"printf debugging\"."},{"file": 26,"line": 63,"col": 4,"docs": " Print to stderr, unbuffered, and silently returning on failure. Intended for use in \"printf debugging.\" Use `std.log` functions for proper logging.","fields": [11950,11951]},{"file": 26,"line": 70,"col": 4,"fields": []},{"file": 26,"line": 126,"col": 4,"docs": " Tries to print the stack trace starting from the supplied base pointer to stderr, unbuffered, and ignores any error returned. TODO multithreaded awareness","fields": [11952,11953]},{"file": 26,"line": 152,"col": 4,"docs": " Returns a slice with the same pointer as addresses, with a potentially smaller len. On Windows, when first_address is not null, we ask for at least 32 stack frames, and then try to find the first address. If addresses.len is more than 32, we capture that many stack frames exactly, and then look for the first address, chopping off the irrelevant frames and shifting so that the returned addresses pointer equals the passed in addresses pointer.","fields": [11954,11955]},{"file": 26,"line": 228,"col": 4,"fields": [11956,11957]},{"file": 26,"line": 236,"col": 4,"docs": " `panicExtra` is useful when you want to print out an `@errorReturnTrace` and also print out some values.","fields": [11958,11959,11960]},{"file": 26,"line": 361,"col": 4},{"file": 26,"line": 489,"col": 4},{"file": 26,"line": 659,"col": 4},{"file": 26,"line": 759,"col": 4,"docs": " This takes ownership of elf_file: users of this function should not close it themselves, even on error. TODO resources https://github.com/ziglang/zig/issues/4353 TODO it's weird to take ownership even on error, rework this code.","fields": [11961,11962]},{"file": 26,"line": 987,"col": 4},{"file": 26,"line": 1227,"col": 4},{"file": 26,"line": 1495,"col": 4,"docs": " Whether or not the current target can print useful debug information when a segfault occurs."},{"file": 26,"line": 1501,"col": 4},{"file": 26,"line": 1506,"col": 4,"fields": []},{"file": 26,"line": 1515,"col": 4,"docs": " Attaches a global SIGSEGV handler which calls @panic(\"segmentation fault\");","fields": []},{"file": 26,"line": 1666,"col": 4,"fields": [11963]},{"file": 26,"line": 0,"col": 0},{"file": 26,"line": 1,"col": 0},{"file": 26,"line": 2,"col": 0},{"file": 26,"line": 3,"col": 0},{"file": 26,"line": 4,"col": 0},{"file": 26,"line": 5,"col": 0},{"file": 26,"line": 6,"col": 0},{"file": 26,"line": 7,"col": 0},{"file": 26,"line": 8,"col": 0},{"file": 26,"line": 9,"col": 0},{"file": 26,"line": 10,"col": 0},{"file": 26,"line": 11,"col": 0},{"file": 26,"line": 12,"col": 0},{"file": 26,"line": 13,"col": 0},{"file": 26,"line": 14,"col": 0},{"file": 26,"line": 15,"col": 0},{"file": 26,"line": 16,"col": 0},{"file": 26,"line": 17,"col": 0},{"file": 26,"line": 18,"col": 0},{"file": 26,"line": 19,"col": 0},{"file": 26,"line": 20,"col": 0},{"file": 26,"line": 50,"col": 0},{"file": 26,"line": 55,"col": 0},{"file": 26,"line": 75,"col": 0,"docs": " TODO multithreaded awareness"},{"file": 26,"line": 260,"col": 0,"docs": " Non-zero whenever the program triggered a panic. The counter is incremented/decremented atomically."},{"file": 26,"line": 263,"col": 0},{"file": 26,"line": 267,"col": 12,"docs": " Counts how many times the panic handler is invoked by this thread. This is used to catch and handle panics triggered by the panic handler."},{"file": 26,"line": 332,"col": 0},{"file": 26,"line": 333,"col": 0},{"file": 26,"line": 334,"col": 0},{"file": 26,"line": 335,"col": 0},{"file": 26,"line": 336,"col": 0},{"file": 26,"line": 337,"col": 0},{"file": 26,"line": 338,"col": 0},{"file": 26,"line": 561,"col": 0,"fields": [11964,11965]},{"file": 26,"line": 749,"col": 0,"fields": [11966,11967,11968]},{"file": 26,"line": 831,"col": 0,"docs": " TODO resources https://github.com/ziglang/zig/issues/4353 This takes ownership of macho_file: users of this function should not close it themselves, even on error. TODO it's weird to take ownership even on error, rework this code.","fields": [11969,11970]},{"file": 26,"line": 949,"col": 0},{"file": 26,"line": 968,"col": 0,"docs": " `file` is expected to have been opened with .intended_io_mode == .blocking. Takes ownership of file, even on error. TODO it's weird to take ownership even on error, rework this code.","fields": [11971]},{"file": 26,"line": 1484,"col": 0,"docs": " TODO multithreaded awareness"},{"file": 26,"line": 1485,"col": 0},{"file": 26,"line": 1512,"col": 0},{"file": 26,"line": 1534,"col": 0,"fields": []},{"file": 26,"line": 1552,"col": 0,"fields": [11972,11973,11974]},{"file": 26,"line": 1623,"col": 0,"fields": [11975]},{"file": 26,"line": 1634,"col": 0,"fields": [11976,11977,11978]},{"file": 27,"line": 0,"col": 4},{"file": 27,"line": 1,"col": 4},{"file": 27,"line": 2,"col": 4},{"file": 27,"line": 3,"col": 4},{"file": 27,"line": 4,"col": 4},{"file": 27,"line": 5,"col": 4},{"file": 27,"line": 6,"col": 4},{"file": 27,"line": 7,"col": 4},{"file": 27,"line": 8,"col": 4},{"file": 27,"line": 9,"col": 4},{"file": 28,"line": 11,"col": 4},{"file": 28,"line": 13,"col": 4},{"file": 28,"line": 19,"col": 4},{"file": 28,"line": 365,"col": 4,"fields": [11979,11980,11981]},{"file": 28,"line": 734,"col": 4},{"file": 28,"line": 764,"col": 4,"docs": " Return a Formatter for a []const u8 where every byte is formatted as a pair of lowercase hexadecimal digits.","fields": [11982]},{"file": 28,"line": 770,"col": 4,"docs": " Return a Formatter for a []const u8 where every byte is formatted as pair of uppercase hexadecimal digits.","fields": [11983]},{"file": 28,"line": 810,"col": 4,"docs": " Return a Formatter for a []const u8 where every non-printable ASCII character is escaped as \\xNN, where NN is the character in lowercase hexadecimal notation.","fields": [11984]},{"file": 28,"line": 817,"col": 4,"docs": " Return a Formatter for a []const u8 where every non-printable ASCII character is escaped as \\xNN, where NN is the character in uppercase hexadecimal notation.","fields": [11985]},{"file": 28,"line": 872,"col": 4,"docs": " Return a Formatter for a u64 value representing a file size. This formatter represents the number as multiple of 1000 and uses the SI measurement units (kB, MB, GB, ...).","fields": [11986]},{"file": 28,"line": 879,"col": 4,"docs": " Return a Formatter for a u64 value representing a file size. This formatter represents the number as multiple of 1024 and uses the IEC measurement units (KiB, MiB, GiB, ...).","fields": [11987]},{"file": 28,"line": 908,"col": 4,"fields": [11988,11989,11990]},{"file": 28,"line": 917,"col": 4,"fields": [11991,11992,11993]},{"file": 28,"line": 971,"col": 4,"docs": " Print a float in scientific notation to the specified precision. Null uses full precision. It should be the case that every full precision, printed value can be re-parsed back to the same type unambiguously.","fields": [11994,11995,11996]},{"file": 28,"line": 1062,"col": 4,"fields": [11997,11998,11999]},{"file": 28,"line": 1173,"col": 4,"docs": " Print a float of the format x.yyyyy where the number of y is specified by the precision argument. By default floats are printed at full precision (no rounding).","fields": [12000,12001,12002]},{"file": 28,"line": 1364,"col": 4,"fields": [12003,12004,12005,12006,12007]},{"file": 28,"line": 1421,"col": 4,"docs": " Return a Formatter for number of nanoseconds according to its magnitude: [#y][#w][#d][#h][#m]#[.###][n|u|m]s","fields": [12008]},{"file": 28,"line": 1474,"col": 4,"docs": " Return a Formatter for number of nanoseconds according to its signed magnitude: [#y][#w][#d][#h][#m]#[.###][n|u|m]s","fields": [12009]},{"file": 28,"line": 1544,"col": 4},{"file": 28,"line": 1563,"col": 4,"docs": " Creates a Formatter type from a format function. Wrapping data in Formatter(func) causes the data to be formatted using the given function `func`.  `func` must be of the following form:     fn formatExample(         data: T,         comptime fmt: []const u8,         options: std.fmt.FormatOptions,         writer: anytype,     ) !void;","fields": [12010]},{"file": 28,"line": 1711,"col": 4,"docs": " Parses the string `buf` as  unsigned representation in the specified radix of an integral value of type `T`. When `radix` is zero the string prefix is examined to detect the true radix:  * A prefix of \"0b\" implies radix=2,  * A prefix of \"0o\" implies radix=8,  * A prefix of \"0x\" implies radix=16,  * Otherwise radix=10 is assumed. Ignores '_' character in `buf`. See also `parseInt`.","fields": [12011,12012,12013]},{"file": 28,"line": 1751,"col": 4},{"file": 28,"line": 1752,"col": 4},{"file": 28,"line": 1753,"col": 4},{"file": 28,"line": 1781,"col": 4},{"file": 28,"line": 1785,"col": 4,"fields": [12014,12015,12016]},{"file": 28,"line": 1791,"col": 4,"fields": [12017,12018,12019]},{"file": 28,"line": 1797,"col": 4,"docs": " Count the characters needed for format. Useful for preallocating memory","fields": [12020,12021]},{"file": 28,"line": 1803,"col": 4},{"file": 28,"line": 1805,"col": 4,"fields": [12022,12023,12024]},{"file": 28,"line": 1817,"col": 4,"docs": " Deprecated, use allocPrintZ"},{"file": 28,"line": 1819,"col": 4,"fields": [12025,12026,12027]},{"file": 28,"line": 1845,"col": 4,"fields": [12028,12029,12030,12031,12032]},{"file": 28,"line": 1849,"col": 4,"fields": [12033,12034]},{"file": 28,"line": 2369,"col": 4},{"file": 28,"line": 2370,"col": 4},{"file": 28,"line": 2375,"col": 4,"docs": " Decodes the sequence of bytes represented by the specified string of hexadecimal characters. Returns a slice of the output buffer containing the decoded bytes.","fields": [12035,12036]},{"file": 28,"line": 0,"col": 0},{"file": 28,"line": 1,"col": 0},{"file": 28,"line": 2,"col": 0},{"file": 28,"line": 3,"col": 0},{"file": 28,"line": 4,"col": 0},{"file": 28,"line": 5,"col": 0},{"file": 28,"line": 6,"col": 0},{"file": 28,"line": 7,"col": 0},{"file": 28,"line": 8,"col": 0},{"file": 28,"line": 9,"col": 0},{"file": 28,"line": 392,"col": 0},{"file": 28,"line": 394,"col": 0,"fields": [12037]},{"file": 28,"line": 702,"col": 0,"fields": [12038,12039,12040,12041]},{"file": 28,"line": 736,"col": 0,"fields": [12042]},{"file": 28,"line": 759,"col": 0},{"file": 28,"line": 760,"col": 0},{"file": 28,"line": 774,"col": 0,"fields": [12043]},{"file": 28,"line": 804,"col": 0},{"file": 28,"line": 805,"col": 0},{"file": 28,"line": 821,"col": 0,"fields": [12044]},{"file": 28,"line": 866,"col": 0},{"file": 28,"line": 867,"col": 0},{"file": 28,"line": 1370,"col": 0,"fields": [12045,12046,12047,12048]},{"file": 28,"line": 1463,"col": 0,"fields": [12049,12050,12051,12052]},{"file": 29,"line": 13,"col": 4},{"file": 29,"line": 14,"col": 4},{"file": 29,"line": 15,"col": 4},{"file": 29,"line": 19,"col": 4},{"file": 29,"line": 20,"col": 4},{"file": 29,"line": 21,"col": 4},{"file": 29,"line": 22,"col": 4},{"file": 29,"line": 24,"col": 4},{"file": 29,"line": 25,"col": 4},{"file": 29,"line": 27,"col": 4},{"file": 29,"line": 36,"col": 4,"docs": " This represents the maximum size of a UTF-8 encoded file path that the operating system will accept. Paths, including those returned from file system operations, may be longer than this length, but such paths cannot be successfully passed back in other file system operations. However, all path components returned by file system operations are assumed to fit into a UTF-8 encoded array of this length. The byte count includes room for a null sentinel byte."},{"file": 29,"line": 51,"col": 4},{"file": 29,"line": 54,"col": 4,"docs": " Base64 encoder, replacing the standard `+/` with `-_` so that it can be used in a file name on any filesystem."},{"file": 29,"line": 57,"col": 4,"docs": " Base64 decoder, replacing the standard `+/` with `-_` so that it can be used in a file name on any filesystem."},{"file": 29,"line": 61,"col": 4,"docs": " Whether or not async file system syscalls need a dedicated thread because the operating system does not support non-blocking I/O on the file system."},{"file": 29,"line": 67,"col": 4,"docs": " TODO remove the allocator requirement from this API","fields": [12053,12054,12055]},{"file": 29,"line": 95,"col": 4},{"file": 29,"line": 100,"col": 4},{"file": 29,"line": 108,"col": 4,"docs": " Same as `Dir.updateFile`, except asserts that both `source_path` and `dest_path` are absolute. See `Dir.updateFile` for a function that operates on both absolute and relative paths.","fields": [12056,12057,12058]},{"file": 29,"line": 122,"col": 4,"docs": " Same as `Dir.copyFile`, except asserts that both `source_path` and `dest_path` are absolute. See `Dir.copyFile` for a function that operates on both absolute and relative paths.","fields": [12059,12060,12061]},{"file": 29,"line": 130,"col": 4,"docs": " TODO update this API to avoid a getrandom syscall for every operation."},{"file": 29,"line": 212,"col": 4,"docs": " Create a new directory, based on an absolute path. Asserts that the path is absolute. See `Dir.makeDir` for a function that operates on both absolute and relative paths.","fields": [12062]},{"file": 29,"line": 218,"col": 4,"docs": " Same as `makeDirAbsolute` except the parameter is a null-terminated UTF8-encoded string.","fields": [12063]},{"file": 29,"line": 224,"col": 4,"docs": " Same as `makeDirAbsolute` except the parameter is a null-terminated WTF-16 encoded string.","fields": [12064]},{"file": 29,"line": 229,"col": 4},{"file": 29,"line": 230,"col": 4},{"file": 29,"line": 231,"col": 4},{"file": 29,"line": 234,"col": 4,"docs": " Same as `Dir.deleteDir` except the path is absolute.","fields": [12065]},{"file": 29,"line": 240,"col": 4,"docs": " Same as `deleteDirAbsolute` except the path parameter is null-terminated.","fields": [12066]},{"file": 29,"line": 246,"col": 4,"docs": " Same as `deleteDirAbsolute` except the path parameter is WTF-16 and target OS is assumed Windows.","fields": [12067]},{"file": 29,"line": 251,"col": 4},{"file": 29,"line": 254,"col": 4,"docs": " Same as `Dir.rename` except the paths are absolute.","fields": [12068,12069]},{"file": 29,"line": 261,"col": 4,"docs": " Same as `renameAbsolute` except the path parameters are null-terminated.","fields": [12070,12071]},{"file": 29,"line": 268,"col": 4,"docs": " Same as `renameAbsolute` except the path parameters are WTF-16 and target OS is assumed Windows.","fields": [12072,12073]},{"file": 29,"line": 275,"col": 4,"docs": " Same as `Dir.rename`, except `new_sub_path` is relative to `new_dir`","fields": [12074,12075,12076,12077]},{"file": 29,"line": 280,"col": 4,"docs": " Same as `rename` except the parameters are null-terminated.","fields": [12078,12079,12080,12081]},{"file": 29,"line": 286,"col": 4,"docs": " Same as `rename` except the parameters are UTF16LE, NT prefixed. This function is Windows-only.","fields": [12082,12083,12084,12085]},{"file": 29,"line": 290,"col": 4},{"file": 29,"line": 2231,"col": 4,"docs": " Opens a directory at the given path. The directory is a system resource that remains open until `close` is called on the result. See `openDirAbsoluteZ` for a function that accepts a null-terminated path. Asserts that the path parameter has no null bytes.","fields": [12086,12087]},{"file": 29,"line": 2240,"col": 4,"docs": " Same as `openDirAbsolute` but the path parameter is null-terminated.","fields": [12088,12089]},{"file": 29,"line": 2248,"col": 4,"docs": " Same as `openDirAbsolute` but the path parameter is null-terminated.","fields": [12090,12091]},{"file": 29,"line": 2262,"col": 4,"docs": " Opens a file for reading or writing, without attempting to create a new file, based on an absolute path. Call `File.close` to release the resource. Asserts that the path is absolute. See `Dir.openFile` for a function that operates on both absolute and relative paths. Asserts that the path parameter has no null bytes. See `openFileAbsoluteZ` for a function that accepts a null-terminated path.","fields": [12092,12093]},{"file": 29,"line": 2267,"col": 4},{"file": 29,"line": 2270,"col": 4,"docs": " Same as `openFileAbsolute` but the path parameter is null-terminated.","fields": [12094,12095]},{"file": 29,"line": 2287,"col": 4,"docs": " Test accessing `path`. `path` is UTF8-encoded. Be careful of Time-Of-Check-Time-Of-Use race conditions when using this function. For example, instead of testing if a file exists and then opening it, just open it and handle the error for file not found. See `accessAbsoluteZ` for a function that accepts a null-terminated path.","fields": [12096,12097]},{"file": 29,"line": 2295,"col": 4,"docs": " Same as `accessAbsolute` but the path parameter is null-terminated.","fields": [12098,12099]},{"file": 29,"line": 2303,"col": 4,"docs": " Same as `accessAbsolute` but the path parameter is WTF-16 encoded.","fields": [12100,12101]},{"file": 29,"line": 2317,"col": 4,"docs": " Creates, opens, or overwrites a file with write access, based on an absolute path. Call `File.close` to release the resource. Asserts that the path is absolute. See `Dir.createFile` for a function that operates on both absolute and relative paths. Asserts that the path parameter has no null bytes. See `createFileAbsoluteC` for a function that accepts a null-terminated path.","fields": [12102,12103]},{"file": 29,"line": 2322,"col": 4},{"file": 29,"line": 2325,"col": 4,"docs": " Same as `createFileAbsolute` but the path parameter is null-terminated.","fields": [12104,12105]},{"file": 29,"line": 2331,"col": 4,"docs": " Same as `createFileAbsolute` but the path parameter is WTF-16 encoded.","fields": [12106,12107]},{"file": 29,"line": 2340,"col": 4,"docs": " Delete a file name and possibly the file it refers to, based on an absolute path. Asserts that the path is absolute. See `Dir.deleteFile` for a function that operates on both absolute and relative paths. Asserts that the path parameter has no null bytes.","fields": [12108]},{"file": 29,"line": 2345,"col": 4},{"file": 29,"line": 2348,"col": 4,"docs": " Same as `deleteFileAbsolute` except the parameter is null-terminated.","fields": [12109]},{"file": 29,"line": 2354,"col": 4,"docs": " Same as `deleteFileAbsolute` except the parameter is WTF-16 encoded.","fields": [12110]},{"file": 29,"line": 2364,"col": 4,"docs": " Removes a symlink, file, or directory. This is equivalent to `Dir.deleteTree` with the base directory. Asserts that the path is absolute. See `Dir.deleteTree` for a function that operates on both absolute and relative paths. Asserts that the path parameter has no null bytes.","fields": [12111]},{"file": 29,"line": 2379,"col": 4,"docs": " Same as `Dir.readLink`, except it asserts the path is absolute.","fields": [12112,12113]},{"file": 29,"line": 2386,"col": 4,"docs": " Windows-only. Same as `readlinkW`, except the path parameter is null-terminated, WTF16 encoded.","fields": [12114,12115]},{"file": 29,"line": 2392,"col": 4,"docs": " Same as `readLink`, except the path parameter is null-terminated.","fields": [12116,12117]},{"file": 29,"line": 2397,"col": 4},{"file": 29,"line": 2398,"col": 4},{"file": 29,"line": 2404,"col": 4,"docs": " Use with `Dir.symLink` and `symLinkAbsolute` to specify whether the symlink will point to a file or a directory. This value is ignored on all hosts except Windows where creating symlinks to different resource types, requires different flags. By default, `symLinkAbsolute` is assumed to point to a file."},{"file": 29,"line": 2413,"col": 4,"docs": " Creates a symbolic link named `sym_link_path` which contains the string `target_path`. A symbolic link (also known as a soft link) may point to an existing file or to a nonexistent one; the latter case is known as a dangling link. If `sym_link_path` exists, it will not be overwritten. See also `symLinkAbsoluteZ` and `symLinkAbsoluteW`.","fields": [12118,12119,12120]},{"file": 29,"line": 2431,"col": 4,"docs": " Windows-only. Same as `symLinkAbsolute` except the parameters are null-terminated, WTF16 encoded. Note that this function will by default try creating a symbolic link to a file. If you would like to create a symbolic link to a directory, specify this with `SymLinkFlags{ .is_directory = true }`. See also `symLinkAbsolute`, `symLinkAbsoluteZ`.","fields": [12121,12122,12123]},{"file": 29,"line": 2439,"col": 4,"docs": " Same as `symLinkAbsolute` except the parameters are null-terminated pointers. See also `symLinkAbsolute`.","fields": [12124,12125,12126]},{"file": 29,"line": 2450,"col": 4},{"file": 29,"line": 2451,"col": 4},{"file": 29,"line": 2453,"col": 4},{"file": 29,"line": 2455,"col": 4},{"file": 29,"line": 2470,"col": 4,"fields": [12127]},{"file": 29,"line": 2487,"col": 4},{"file": 29,"line": 2491,"col": 4,"docs": " `selfExePath` except allocates the result on the heap. Caller owns returned memory.","fields": [12128]},{"file": 29,"line": 2513,"col": 4,"docs": " Get the path to the current executable. If you only need the directory, use selfExeDirPath. If you only want an open file handle, use openSelfExe. This function may return an error if the current executable was deleted after spawning. Returned value is a slice of out_buffer. On Linux, depends on procfs being mounted. If the currently executing binary has been deleted, the file path looks something like `/a/b/c/exe (deleted)`. TODO make the return type of this a null terminated pointer","fields": [12129]},{"file": 29,"line": 2593,"col": 4,"docs": " The result is UTF16LE-encoded.","fields": []},{"file": 29,"line": 2600,"col": 4,"docs": " `selfExeDirPath` except allocates the result on the heap. Caller owns returned memory.","fields": [12130]},{"file": 29,"line": 2614,"col": 4,"docs": " Get the directory path that contains the current executable. Returned value is a slice of out_buffer.","fields": [12131]},{"file": 29,"line": 2623,"col": 4,"docs": " `realpath`, except caller must free the returned memory. See also `Dir.realpath`.","fields": [12132,12133]},{"file": 29,"line": 0,"col": 0},{"file": 29,"line": 1,"col": 0},{"file": 29,"line": 2,"col": 0},{"file": 29,"line": 3,"col": 0},{"file": 29,"line": 4,"col": 0},{"file": 29,"line": 5,"col": 0},{"file": 29,"line": 6,"col": 0},{"file": 29,"line": 7,"col": 0},{"file": 29,"line": 8,"col": 0},{"file": 29,"line": 9,"col": 0},{"file": 29,"line": 11,"col": 0},{"file": 29,"line": 207,"col": 0},{"file": 29,"line": 2634,"col": 0},{"file": 29,"line": 2639,"col": 0,"fields": [12134,12135]},{"file": 30,"line": 1,"col": 4},{"file": 30,"line": 4,"col": 4},{"file": 30,"line": 5,"col": 4},{"file": 30,"line": 6,"col": 4},{"file": 30,"line": 9,"col": 4},{"file": 30,"line": 10,"col": 4},{"file": 30,"line": 13,"col": 4},{"file": 30,"line": 14,"col": 4},{"file": 30,"line": 15,"col": 4},{"file": 30,"line": 18,"col": 4},{"file": 30,"line": 19,"col": 4},{"file": 30,"line": 21,"col": 4},{"file": 30,"line": 22,"col": 4},{"file": 30,"line": 24,"col": 4},{"file": 30,"line": 25,"col": 4},{"file": 30,"line": 27,"col": 4},{"file": 30,"line": 28,"col": 4},{"file": 30,"line": 29,"col": 4},{"file": 30,"line": 32,"col": 4},{"file": 30,"line": 0,"col": 0},{"file": 30,"line": 3,"col": 0},{"file": 30,"line": 12,"col": 0},{"file": 30,"line": 17,"col": 0},{"file": 30,"line": 31,"col": 0},{"file": 31,"line": 11,"col": 4},{"file": 31,"line": 12,"col": 4},{"file": 31,"line": 13,"col": 4},{"file": 31,"line": 14,"col": 4},{"file": 31,"line": 15,"col": 4},{"file": 31,"line": 16,"col": 4},{"file": 31,"line": 17,"col": 4},{"file": 31,"line": 156,"col": 4,"docs": " Supports the full Allocator interface, including alignment, and exploiting `malloc_usable_size` if available. For an allocator that directly calls `malloc`/`free`, see `raw_c_allocator`."},{"file": 31,"line": 167,"col": 4,"docs": " Asserts allocations are within `@alignOf(std.c.max_align_t)` and directly calls `malloc`/`free`. Does not attempt to utilize `malloc_usable_size`. This allocator is safe to use as the backing allocator with `ArenaAllocator` for example and is more optimal in such a case than `c_allocator`."},{"file": 31,"line": 211,"col": 4,"docs": " This allocator makes a syscall directly for every allocation and free. Thread-safe and lock-free."},{"file": 31,"line": 235,"col": 4,"docs": " TODO Utilize this on Windows."},{"file": 31,"line": 572,"col": 4},{"file": 31,"line": 683,"col": 4},{"file": 31,"line": 769,"col": 4},{"file": 31,"line": 814,"col": 4,"fields": [12136,12137]},{"file": 31,"line": 826,"col": 4,"fields": [12138]},{"file": 31,"line": 1050,"col": 4,"docs": " This one should not try alignments that exceed what C malloc can handle.","fields": [12139]},{"file": 31,"line": 1096,"col": 4,"fields": [12140]},{"file": 31,"line": 1126,"col": 4,"fields": [12141]},{"file": 31,"line": 1158,"col": 4,"fields": [12142]},{"file": 31,"line": 0,"col": 0},{"file": 31,"line": 1,"col": 0},{"file": 31,"line": 2,"col": 0},{"file": 31,"line": 3,"col": 0},{"file": 31,"line": 4,"col": 0},{"file": 31,"line": 5,"col": 0},{"file": 31,"line": 6,"col": 0},{"file": 31,"line": 7,"col": 0},{"file": 31,"line": 8,"col": 0},{"file": 31,"line": 9,"col": 0},{"file": 31,"line": 19,"col": 0},{"file": 31,"line": 21,"col": 0},{"file": 31,"line": 157,"col": 0},{"file": 31,"line": 168,"col": 0},{"file": 31,"line": 173,"col": 0,"fields": [12143,12144,12145,12146,12147]},{"file": 31,"line": 188,"col": 0,"fields": [12148,12149,12150,12151,12152,12153]},{"file": 31,"line": 218,"col": 0},{"file": 31,"line": 222,"col": 0},{"file": 31,"line": 237,"col": 0},{"file": 31,"line": 402,"col": 0},{"file": 31,"line": 673,"col": 0,"fields": [12154,12155]},{"file": 31,"line": 678,"col": 0,"fields": [12156,12157]},{"file": 31,"line": 971,"col": 0},{"file": 32,"line": 14,"col": 4},{"file": 32,"line": 24,"col": 4,"docs": " The application's chosen I/O mode. This defaults to `Mode.blocking` but can be overridden by `root.event_loop`."},{"file": 32,"line": 30,"col": 4},{"file": 32,"line": 34,"col": 4,"docs": " This is an enum value to use for I/O mode at runtime, since it takes up zero bytes at runtime, and makes expressions comptime-known when `is_async` is `false`."},{"file": 32,"line": 35,"col": 4},{"file": 32,"line": 51,"col": 4,"docs": " TODO: async stdout on windows without a dedicated thread. https://github.com/ziglang/zig/pull/4816#issuecomment-604521023","fields": []},{"file": 32,"line": 95,"col": 4,"docs": " TODO: async stdin on windows without a dedicated thread. https://github.com/ziglang/zig/pull/4816#issuecomment-604521023","fields": []},{"file": 32,"line": 103,"col": 4},{"file": 32,"line": 104,"col": 4},{"file": 32,"line": 105,"col": 4},{"file": 32,"line": 107,"col": 4},{"file": 32,"line": 108,"col": 4},{"file": 32,"line": 110,"col": 4},{"file": 32,"line": 111,"col": 4},{"file": 32,"line": 113,"col": 4},{"file": 32,"line": 114,"col": 4},{"file": 32,"line": 116,"col": 4},{"file": 32,"line": 117,"col": 4},{"file": 32,"line": 119,"col": 4},{"file": 32,"line": 120,"col": 4},{"file": 32,"line": 122,"col": 4},{"file": 32,"line": 123,"col": 4},{"file": 32,"line": 125,"col": 4},{"file": 32,"line": 126,"col": 4},{"file": 32,"line": 127,"col": 4},{"file": 32,"line": 128,"col": 4},{"file": 32,"line": 130,"col": 4},{"file": 32,"line": 131,"col": 4},{"file": 32,"line": 133,"col": 4},{"file": 32,"line": 134,"col": 4},{"file": 32,"line": 136,"col": 4},{"file": 32,"line": 137,"col": 4},{"file": 32,"line": 139,"col": 4},{"file": 32,"line": 140,"col": 4},{"file": 32,"line": 142,"col": 4},{"file": 32,"line": 143,"col": 4},{"file": 32,"line": 145,"col": 4,"docs": " Deprecated: use `FindByteWriter`."},{"file": 32,"line": 147,"col": 4,"docs": " Deprecated: use `findByteWriter`."},{"file": 32,"line": 149,"col": 4},{"file": 32,"line": 151,"col": 4},{"file": 32,"line": 154,"col": 4,"docs": " A Writer that doesn't write to anything."},{"file": 32,"line": 184,"col": 4},{"file": 32,"line": 185,"col": 4},{"file": 32,"line": 0,"col": 0},{"file": 32,"line": 1,"col": 0},{"file": 32,"line": 2,"col": 0},{"file": 32,"line": 3,"col": 0},{"file": 32,"line": 5,"col": 0},{"file": 32,"line": 6,"col": 0},{"file": 32,"line": 7,"col": 0},{"file": 32,"line": 8,"col": 0},{"file": 32,"line": 9,"col": 0},{"file": 32,"line": 10,"col": 0},{"file": 32,"line": 11,"col": 0},{"file": 32,"line": 12,"col": 0},{"file": 32,"line": 37,"col": 0,"fields": []},{"file": 32,"line": 81,"col": 0,"fields": []},{"file": 32,"line": 156,"col": 0},{"file": 32,"line": 157,"col": 0,"fields": [12158,12159]},{"file": 33,"line": 0,"col": 4},{"file": 33,"line": 10,"col": 4},{"file": 33,"line": 21,"col": 4},{"file": 33,"line": 26,"col": 4},{"file": 33,"line": 34,"col": 4},{"file": 33,"line": 41,"col": 4,"docs": " The uuid load command contains a single 128-bit unique random number that identifies an object produced by the static link editor."},{"file": 33,"line": 54,"col": 4,"docs": " The version_min_command contains the min OS version on which this binary was built to run."},{"file": 33,"line": 70,"col": 4,"docs": " The source_version_command is an optional load command containing the version of the sources used to build the binary."},{"file": 33,"line": 84,"col": 4,"docs": " The build_version_command contains the min OS version on which this binary was built to run for its platform. The list of known platforms and tool values following it."},{"file": 33,"line": 105,"col": 4},{"file": 33,"line": 113,"col": 4},{"file": 33,"line": 114,"col": 4},{"file": 33,"line": 115,"col": 4},{"file": 33,"line": 116,"col": 4},{"file": 33,"line": 117,"col": 4},{"file": 33,"line": 118,"col": 4},{"file": 33,"line": 119,"col": 4},{"file": 33,"line": 120,"col": 4},{"file": 33,"line": 121,"col": 4},{"file": 33,"line": 122,"col": 4},{"file": 33,"line": 124,"col": 4},{"file": 33,"line": 125,"col": 4},{"file": 33,"line": 126,"col": 4},{"file": 33,"line": 132,"col": 4,"docs": " The entry_point_command is a replacement for thread_command. It is used for main executables to specify the location (file offset) of main(). If -stack_size was used at link time, the stacksize field will contain the stack size needed for the main thread."},{"file": 33,"line": 149,"col": 4,"docs": " The symtab_command contains the offsets and sizes of the link-edit 4.3BSD \"stab\" style symbol table information as described in the header files <nlist.h> and <stab.h>."},{"file": 33,"line": 207,"col": 4,"docs": " This is the second set of the symbolic information which is used to support the data structures for the dynamically link editor. The original set of symbolic information in the symtab_command which contains the symbol and string tables must also be present when this load command is present.  When this load command is present the symbol table is organized into three groups of symbols:  local symbols (static and debugging symbols) - grouped by module  defined external symbols - grouped by module (sorted by name if not lib)  undefined external symbols (sorted by name if MH_BINDATLOAD is not set,       \t\t\t    and in order the were seen by the static  \t\t\t    linker if MH_BINDATLOAD is set) In this load command there are offsets and counts to each of the three groups of symbols. This load command contains a the offsets and sizes of the following new symbolic information tables:  table of contents  module table  reference symbol table  indirect symbol table The first three tables above (the table of contents, module table and reference symbol table) are only present if the file is a dynamically linked shared library.  For executable and object modules, which are files containing only one module, the information that would be in these three tables is determined as follows: \ttable of contents - the defined external symbols are sorted by name  module table - the file contains only one module so everything in the  \t       file is part of the module.  reference symbol table - is the defined and undefined external symbols For dynamically linked shared library files this load command also contains offsets and sizes to the pool of relocation entries for all sections separated into two groups:  external relocation entries  local relocation entries For executable and object modules the relocation entries continue to hang off the section structures."},{"file": 33,"line": 347,"col": 4,"docs": " The linkedit_data_command contains the offsets and sizes of a blob of data in the __LINKEDIT segment."},{"file": 33,"line": 367,"col": 4,"docs": " The dyld_info_command contains the file offsets and sizes of the new compressed form of the information dyld needs to load the image.  This information is used by dyld on Mac OS X 10.6 and later.  All information pointed to by this command is encoded using byte streams, so no endian swapping is needed to interpret it."},{"file": 33,"line": 488,"col": 4,"docs": " A program that uses a dynamic linker contains a dylinker_command to identify the name of the dynamic linker (LC_LOAD_DYLINKER). And a dynamic linker contains a dylinker_command to identify the dynamic linker (LC_ID_DYLINKER). A file can have at most one of these. This struct is also used for the LC_DYLD_ENVIRONMENT load command and contains string for dyld to treat like an environment variable."},{"file": 33,"line": 509,"col": 4,"docs": " A dynamically linked shared library (filetype == MH_DYLIB in the mach header) contains a dylib_command (cmd == LC_ID_DYLIB) to identify the library. An object that uses a dynamically linked shared library also contains a dylib_command (cmd == LC_LOAD_DYLIB, LC_LOAD_WEAK_DYLIB, or LC_REEXPORT_DYLIB) for each library it uses."},{"file": 33,"line": 527,"col": 4,"docs": " Dynamicaly linked shared libraries are identified by two things.  The pathname (the name of the library as found for execution), and the compatibility version number.  The pathname must match and the compatibility number in the user of the library must be greater than or equal to the library being used.  The time stamp is used to record the time a library was built and copied into user so it can be use to determined if the library used at runtime is exactly the same as used to built the program."},{"file": 33,"line": 543,"col": 4,"docs": " The rpath_command contains a path which at runtime should be added to the current run path used to find @rpath prefixed dylibs."},{"file": 33,"line": 564,"col": 4,"docs": " The segment load command indicates that a part of this file is to be mapped into the task's address space.  The size of this segment in memory, vmsize, maybe equal to or larger than the amount to map from this file, filesize.  The file is mapped starting at fileoff to the beginning of the segment in memory, vmaddr.  The rest of the memory of the segment, if any, is allocated zero fill on demand.  The segment's maximum virtual memory protection and initial virtual memory protection are specified by the maxprot and initprot fields.  If the segment has sections then the section structures directly follow the segment command and their size is reflected in cmdsize."},{"file": 33,"line": 601,"col": 4,"docs": " The 64-bit segment load command indicates that a part of this file is to be mapped into a 64-bit task's address space.  If the 64-bit segment has sections then section_64 structures directly follow the 64-bit segment command and their size is reflected in cmdsize."},{"file": 33,"line": 659,"col": 4,"docs": " A segment is made up of zero or more sections.  Non-MH_OBJECT files have all of their segments with the proper sections in each, and padded to the specified segment alignment when produced by the link editor.  The first segment of a MH_EXECUTE and MH_FVMLIB format file contains the mach_header and load commands of the object file before its first section.  The zero fill sections are always last in their segment (in all formats).  This allows the zeroed segment padding to be mapped into memory where zero fill sections might be. The gigabyte zero fill sections, those with the section type S_GB_ZEROFILL, can only be in a segment with sections of this type. These segments are then placed after all other segments. The MH_OBJECT format has all of its sections in one segment for compactness.  There is no padding to a specified segment boundary and the mach_header and load commands are not part of the segment. Sections with the same section name, sectname, going into the same segment, segname, are combined by the link editor.  The resulting section is aligned to the maximum alignment of the combined sections and is the new section's alignment.  The combined sections are aligned to their original alignment in the combined section.  Any padded bytes to get the specified alignment are zeroed. The format of the relocation entries referenced by the reloff and nreloc fields of the section structure for mach object files is described in the header file <reloc.h>."},{"file": 33,"line": 694,"col": 4},{"file": 33,"line": 732,"col": 4},{"file": 33,"line": 740,"col": 4},{"file": 33,"line": 754,"col": 4,"docs": " Format of a relocation entry of a Mach-O file.  Modified from the 4.3BSD format.  The modifications from the original format were changing the value of the r_symbolnum field for \"local\" (r_extern == 0) relocation entries. This modification is required to support symbols in an arbitrary number of sections not just the three sections (text, data and bss) in a 4.3BSD file. Also the last 4 bits have had the r_type tag added to them."},{"file": 33,"line": 781,"col": 4,"docs": " After MacOS X 10.1 when a new load command is added that is required to be understood by the dynamic linker for the image to execute properly the LC_REQ_DYLD bit will be or'ed into the load command constant.  If the dynamic linker sees such a load command it it does not understand will issue a \"unknown load command required for execution\" error and refuse to use the image.  Other load commands without this bit that are not understood will simply be ignored."},{"file": 33,"line": 784,"col": 4,"docs": " segment of this file to be mapped"},{"file": 33,"line": 787,"col": 4,"docs": " link-edit stab symbol table info"},{"file": 33,"line": 790,"col": 4,"docs": " link-edit gdb symbol table info (obsolete)"},{"file": 33,"line": 793,"col": 4,"docs": " thread"},{"file": 33,"line": 796,"col": 4,"docs": " unix thread (includes a stack)"},{"file": 33,"line": 799,"col": 4,"docs": " load a specified fixed VM shared library"},{"file": 33,"line": 802,"col": 4,"docs": " fixed VM shared library identification"},{"file": 33,"line": 805,"col": 4,"docs": " object identification info (obsolete)"},{"file": 33,"line": 808,"col": 4,"docs": " fixed VM file inclusion (internal use)"},{"file": 33,"line": 811,"col": 4,"docs": " prepage command (internal use)"},{"file": 33,"line": 814,"col": 4,"docs": " dynamic link-edit symbol table info"},{"file": 33,"line": 817,"col": 4,"docs": " load a dynamically linked shared library"},{"file": 33,"line": 820,"col": 4,"docs": " dynamically linked shared lib ident"},{"file": 33,"line": 823,"col": 4,"docs": " load a dynamic linker"},{"file": 33,"line": 826,"col": 4,"docs": " dynamic linker identification"},{"file": 33,"line": 829,"col": 4,"docs": " modules prebound for a dynamically"},{"file": 33,"line": 832,"col": 4,"docs": " image routines"},{"file": 33,"line": 835,"col": 4,"docs": " sub framework"},{"file": 33,"line": 838,"col": 4,"docs": " sub umbrella"},{"file": 33,"line": 841,"col": 4,"docs": " sub client"},{"file": 33,"line": 844,"col": 4,"docs": " sub library"},{"file": 33,"line": 847,"col": 4,"docs": " two-level namespace lookup hints"},{"file": 33,"line": 850,"col": 4,"docs": " prebind checksum"},{"file": 33,"line": 854,"col": 4,"docs": " load a dynamically linked shared library that is allowed to be missing (all symbols are weak imported)."},{"file": 33,"line": 857,"col": 4,"docs": " 64-bit segment of this file to be mapped"},{"file": 33,"line": 860,"col": 4,"docs": " 64-bit image routines"},{"file": 33,"line": 863,"col": 4,"docs": " the uuid"},{"file": 33,"line": 866,"col": 4,"docs": " runpath additions"},{"file": 33,"line": 869,"col": 4,"docs": " local of code signature"},{"file": 33,"line": 872,"col": 4,"docs": " local of info to split segments"},{"file": 33,"line": 875,"col": 4,"docs": " load and re-export dylib"},{"file": 33,"line": 878,"col": 4,"docs": " delay load of dylib until first use"},{"file": 33,"line": 881,"col": 4,"docs": " encrypted segment information"},{"file": 33,"line": 884,"col": 4,"docs": " compressed dyld information"},{"file": 33,"line": 887,"col": 4,"docs": " compressed dyld information only"},{"file": 33,"line": 890,"col": 4,"docs": " load upward dylib"},{"file": 33,"line": 893,"col": 4,"docs": " build for MacOSX min OS version"},{"file": 33,"line": 896,"col": 4,"docs": " build for iPhoneOS min OS version"},{"file": 33,"line": 899,"col": 4,"docs": " compressed table of function start addresses"},{"file": 33,"line": 902,"col": 4,"docs": " string for dyld to treat like environment variable"},{"file": 33,"line": 905,"col": 4,"docs": " replacement for LC_UNIXTHREAD"},{"file": 33,"line": 908,"col": 4,"docs": " table of non-instructions in __text"},{"file": 33,"line": 911,"col": 4,"docs": " source version used to build binary"},{"file": 33,"line": 914,"col": 4,"docs": " Code signing DRs copied from linked dylibs"},{"file": 33,"line": 917,"col": 4,"docs": " 64-bit encrypted segment information"},{"file": 33,"line": 920,"col": 4,"docs": " linker options in MH_OBJECT files"},{"file": 33,"line": 923,"col": 4,"docs": " optimization hints in MH_OBJECT files"},{"file": 33,"line": 926,"col": 4,"docs": " build for AppleTV min OS version"},{"file": 33,"line": 929,"col": 4,"docs": " build for Watch min OS version"},{"file": 33,"line": 932,"col": 4,"docs": " arbitrary data included within a Mach-O file"},{"file": 33,"line": 935,"col": 4,"docs": " build for platform min OS version"},{"file": 33,"line": 938,"col": 4,"docs": " the mach magic number"},{"file": 33,"line": 941,"col": 4,"docs": " NXSwapInt(MH_MAGIC)"},{"file": 33,"line": 944,"col": 4,"docs": " the 64-bit mach magic number"},{"file": 33,"line": 947,"col": 4,"docs": " NXSwapInt(MH_MAGIC_64)"},{"file": 33,"line": 950,"col": 4,"docs": " relocatable object file"},{"file": 33,"line": 953,"col": 4,"docs": " demand paged executable file"},{"file": 33,"line": 956,"col": 4,"docs": " fixed VM shared library file"},{"file": 33,"line": 959,"col": 4,"docs": " core file"},{"file": 33,"line": 962,"col": 4,"docs": " preloaded executable file"},{"file": 33,"line": 965,"col": 4,"docs": " dynamically bound shared library"},{"file": 33,"line": 968,"col": 4,"docs": " dynamic link editor"},{"file": 33,"line": 971,"col": 4,"docs": " dynamically bound bundle file"},{"file": 33,"line": 974,"col": 4,"docs": " shared library stub for static linking only, no section contents"},{"file": 33,"line": 977,"col": 4,"docs": " companion file with only debug sections"},{"file": 33,"line": 980,"col": 4,"docs": " x86_64 kexts"},{"file": 33,"line": 985,"col": 4,"docs": " the object file has no undefined references"},{"file": 33,"line": 988,"col": 4,"docs": " the object file is the output of an incremental link against a base file and can't be link edited again"},{"file": 33,"line": 991,"col": 4,"docs": " the object file is input for the dynamic linker and can't be staticly link edited again"},{"file": 33,"line": 994,"col": 4,"docs": " the object file's undefined references are bound by the dynamic linker when loaded."},{"file": 33,"line": 997,"col": 4,"docs": " the file has its dynamic undefined references prebound."},{"file": 33,"line": 1000,"col": 4,"docs": " the file has its read-only and read-write segments split"},{"file": 33,"line": 1003,"col": 4,"docs": " the shared library init routine is to be run lazily via catching memory faults to its writeable segments (obsolete)"},{"file": 33,"line": 1006,"col": 4,"docs": " the image is using two-level name space bindings"},{"file": 33,"line": 1009,"col": 4,"docs": " the executable is forcing all images to use flat name space bindings"},{"file": 33,"line": 1012,"col": 4,"docs": " this umbrella guarantees no multiple defintions of symbols in its sub-images so the two-level namespace hints can always be used."},{"file": 33,"line": 1015,"col": 4,"docs": " do not have dyld notify the prebinding agent about this executable"},{"file": 33,"line": 1018,"col": 4,"docs": " the binary is not prebound but can have its prebinding redone. only used when MH_PREBOUND is not set."},{"file": 33,"line": 1021,"col": 4,"docs": " indicates that this binary binds to all two-level namespace modules of its dependent libraries. only used when MH_PREBINDABLE and MH_TWOLEVEL are both set."},{"file": 33,"line": 1024,"col": 4,"docs": " safe to divide up the sections into sub-sections via symbols for dead code stripping"},{"file": 33,"line": 1027,"col": 4,"docs": " the binary has been canonicalized via the unprebind operation"},{"file": 33,"line": 1030,"col": 4,"docs": " the final linked image contains external weak symbols"},{"file": 33,"line": 1033,"col": 4,"docs": " the final linked image uses weak symbols"},{"file": 33,"line": 1036,"col": 4,"docs": " When this bit is set, all stacks in the task will be given stack execution privilege.  Only used in MH_EXECUTE filetypes."},{"file": 33,"line": 1039,"col": 4,"docs": " When this bit is set, the binary declares it is safe for use in processes with uid zero"},{"file": 33,"line": 1042,"col": 4,"docs": " When this bit is set, the binary declares it is safe for use in processes when issetugid() is true"},{"file": 33,"line": 1045,"col": 4,"docs": " When this bit is set on a dylib, the static linker does not need to examine dependent dylibs to see if any are re-exported"},{"file": 33,"line": 1048,"col": 4,"docs": " When this bit is set, the OS will load the main executable at a random address.  Only used in MH_EXECUTE filetypes."},{"file": 33,"line": 1051,"col": 4,"docs": " Only for use on dylibs.  When linking against a dylib that has this bit set, the static linker will automatically not create a LC_LOAD_DYLIB load command to the dylib if no symbols are being referenced from the dylib."},{"file": 33,"line": 1054,"col": 4,"docs": " Contains a section of type S_THREAD_LOCAL_VARIABLES"},{"file": 33,"line": 1057,"col": 4,"docs": " When this bit is set, the OS will run the main executable with a non-executable heap even on platforms (e.g. i386) that don't require it. Only used in MH_EXECUTE filetypes."},{"file": 33,"line": 1060,"col": 4,"docs": " The code was linked for use in an application extension."},{"file": 33,"line": 1063,"col": 4,"docs": " The external symbols listed in the nlist symbol table do not include all the symbols listed in the dyld info."},{"file": 33,"line": 1068,"col": 4,"docs": " the fat magic number"},{"file": 33,"line": 1071,"col": 4,"docs": " NXSwapLong(FAT_MAGIC)"},{"file": 33,"line": 1074,"col": 4,"docs": " the 64-bit fat magic number"},{"file": 33,"line": 1077,"col": 4,"docs": " NXSwapLong(FAT_MAGIC_64)"},{"file": 33,"line": 1084,"col": 4,"docs": " The flags field of a section structure is separated into two parts a section type and section attributes.  The section types are mutually exclusive (it can only have one type) but the section attributes are not (it may have more than one attribute). 256 section types"},{"file": 33,"line": 1087,"col": 4,"docs": "  24 section attributes"},{"file": 33,"line": 1090,"col": 4,"docs": " regular section"},{"file": 33,"line": 1093,"col": 4,"docs": " zero fill on demand section"},{"file": 33,"line": 1096,"col": 4,"docs": " section with only literal C string"},{"file": 33,"line": 1099,"col": 4,"docs": " section with only 4 byte literals"},{"file": 33,"line": 1102,"col": 4,"docs": " section with only 8 byte literals"},{"file": 33,"line": 1105,"col": 4,"docs": " section with only pointers to"},{"file": 33,"line": 1108,"col": 4,"docs": " if any of these bits set, a symbolic debugging entry"},{"file": 33,"line": 1111,"col": 4,"docs": " private external symbol bit"},{"file": 33,"line": 1114,"col": 4,"docs": " mask for the type bits"},{"file": 33,"line": 1117,"col": 4,"docs": " external symbol bit, set for external symbols"},{"file": 33,"line": 1120,"col": 4,"docs": " symbol is undefined"},{"file": 33,"line": 1123,"col": 4,"docs": " symbol is absolute"},{"file": 33,"line": 1126,"col": 4,"docs": " symbol is defined in the section number given in n_sect"},{"file": 33,"line": 1130,"col": 4,"docs": " symbol is undefined  and the image is using a prebound value  for the symbol"},{"file": 33,"line": 1135,"col": 4,"docs": " symbol is defined to be the same as another symbol; the n_value field is an index into the string table specifying the name of the other symbol"},{"file": 33,"line": 1138,"col": 4,"docs": " global symbol: name,,NO_SECT,type,0"},{"file": 33,"line": 1141,"col": 4,"docs": " procedure name (f77 kludge): name,,NO_SECT,0,0"},{"file": 33,"line": 1144,"col": 4,"docs": " procedure: name,,n_sect,linenumber,address"},{"file": 33,"line": 1147,"col": 4,"docs": " static symbol: name,,n_sect,type,address"},{"file": 33,"line": 1150,"col": 4,"docs": " .lcomm symbol: name,,n_sect,type,address"},{"file": 33,"line": 1153,"col": 4,"docs": " begin nsect sym: 0,,n_sect,0,address"},{"file": 33,"line": 1156,"col": 4,"docs": " AST file path: name,,NO_SECT,0,0"},{"file": 33,"line": 1159,"col": 4,"docs": " emitted with gcc2_compiled and in gcc source"},{"file": 33,"line": 1162,"col": 4,"docs": " register sym: name,,NO_SECT,type,register"},{"file": 33,"line": 1165,"col": 4,"docs": " src line: 0,,n_sect,linenumber,address"},{"file": 33,"line": 1168,"col": 4,"docs": " end nsect sym: 0,,n_sect,0,address"},{"file": 33,"line": 1171,"col": 4,"docs": " structure elt: name,,NO_SECT,type,struct_offset"},{"file": 33,"line": 1174,"col": 4,"docs": " source file name: name,,n_sect,0,address"},{"file": 33,"line": 1177,"col": 4,"docs": " object file name: name,,0,0,st_mtime"},{"file": 33,"line": 1180,"col": 4,"docs": " local sym: name,,NO_SECT,type,offset"},{"file": 33,"line": 1183,"col": 4,"docs": " include file beginning: name,,NO_SECT,0,sum"},{"file": 33,"line": 1186,"col": 4,"docs": " #included file name: name,,n_sect,0,address"},{"file": 33,"line": 1189,"col": 4,"docs": " compiler parameters: name,,NO_SECT,0,0"},{"file": 33,"line": 1192,"col": 4,"docs": " compiler version: name,,NO_SECT,0,0"},{"file": 33,"line": 1195,"col": 4,"docs": " compiler -O level: name,,NO_SECT,0,0"},{"file": 33,"line": 1198,"col": 4,"docs": " parameter: name,,NO_SECT,type,offset"},{"file": 33,"line": 1201,"col": 4,"docs": " include file end: name,,NO_SECT,0,0"},{"file": 33,"line": 1204,"col": 4,"docs": " alternate entry: name,,n_sect,linenumber,address"},{"file": 33,"line": 1207,"col": 4,"docs": " left bracket: 0,,NO_SECT,nesting level,address"},{"file": 33,"line": 1210,"col": 4,"docs": " deleted include file: name,,NO_SECT,0,sum"},{"file": 33,"line": 1213,"col": 4,"docs": " right bracket: 0,,NO_SECT,nesting level,address"},{"file": 33,"line": 1216,"col": 4,"docs": " begin common: name,,NO_SECT,0,0"},{"file": 33,"line": 1219,"col": 4,"docs": " end common: name,,n_sect,0,0"},{"file": 33,"line": 1222,"col": 4,"docs": " end common (local name): 0,,n_sect,0,address"},{"file": 33,"line": 1225,"col": 4,"docs": " second stab entry with length information"},{"file": 33,"line": 1239,"col": 4,"docs": " section with only non-lazy symbol pointers"},{"file": 33,"line": 1242,"col": 4,"docs": " section with only lazy symbol pointers"},{"file": 33,"line": 1245,"col": 4,"docs": " section with only symbol stubs, byte size of stub in the reserved2 field"},{"file": 33,"line": 1248,"col": 4,"docs": " section with only function pointers for initialization"},{"file": 33,"line": 1251,"col": 4,"docs": " section with only function pointers for termination"},{"file": 33,"line": 1254,"col": 4,"docs": " section contains symbols that are to be coalesced"},{"file": 33,"line": 1257,"col": 4,"docs": " zero fill on demand section (that can be larger than 4 gigabytes)"},{"file": 33,"line": 1260,"col": 4,"docs": " section with only pairs of function pointers for interposing"},{"file": 33,"line": 1263,"col": 4,"docs": " section with only 16 byte literals"},{"file": 33,"line": 1266,"col": 4,"docs": " section contains DTrace Object Format"},{"file": 33,"line": 1269,"col": 4,"docs": " section with only lazy symbol pointers to lazy loaded dylibs"},{"file": 33,"line": 1280,"col": 4,"docs": " a debug section"},{"file": 33,"line": 1283,"col": 4,"docs": " section contains only true machine instructions"},{"file": 33,"line": 1287,"col": 4,"docs": " section contains coalesced symbols that are not to be in a ranlib table of contents"},{"file": 33,"line": 1291,"col": 4,"docs": " ok to strip static symbols in this section in files with the MH_DYLDLINK flag"},{"file": 33,"line": 1294,"col": 4,"docs": " no dead stripping"},{"file": 33,"line": 1297,"col": 4,"docs": " blocks are live if they reference live blocks"},{"file": 33,"line": 1300,"col": 4,"docs": " used with i386 code stubs written on by dyld"},{"file": 33,"line": 1303,"col": 4,"docs": " section contains some machine instructions"},{"file": 33,"line": 1306,"col": 4,"docs": " section has external relocation entries"},{"file": 33,"line": 1309,"col": 4,"docs": " section has local relocation entries"},{"file": 33,"line": 1312,"col": 4,"docs": " template of initial values for TLVs"},{"file": 33,"line": 1315,"col": 4,"docs": " template of initial values for TLVs"},{"file": 33,"line": 1318,"col": 4,"docs": " TLV descriptors"},{"file": 33,"line": 1321,"col": 4,"docs": " pointers to TLV descriptors"},{"file": 33,"line": 1324,"col": 4,"docs": " functions to call to initialize TLV values"},{"file": 33,"line": 1327,"col": 4,"docs": " 32-bit offsets to initializers"},{"file": 33,"line": 1329,"col": 4},{"file": 33,"line": 1330,"col": 4},{"file": 33,"line": 1331,"col": 4},{"file": 33,"line": 1332,"col": 4},{"file": 33,"line": 1335,"col": 4,"docs": " CPU type targeting 64-bit Intel-based Macs"},{"file": 33,"line": 1338,"col": 4,"docs": " CPU type targeting 64-bit ARM-based Macs"},{"file": 33,"line": 1341,"col": 4,"docs": " All Intel-based Macs"},{"file": 33,"line": 1344,"col": 4,"docs": " All ARM-based Macs"},{"file": 33,"line": 1348,"col": 4,"docs": " No VM protection"},{"file": 33,"line": 1351,"col": 4,"docs": " VM read permission"},{"file": 33,"line": 1354,"col": 4,"docs": " VM write permission"},{"file": 33,"line": 1357,"col": 4,"docs": " VM execute permission"},{"file": 33,"line": 1360,"col": 4},{"file": 33,"line": 1361,"col": 4},{"file": 33,"line": 1362,"col": 4},{"file": 33,"line": 1364,"col": 4},{"file": 33,"line": 1365,"col": 4},{"file": 33,"line": 1366,"col": 4},{"file": 33,"line": 1367,"col": 4},{"file": 33,"line": 1368,"col": 4},{"file": 33,"line": 1369,"col": 4},{"file": 33,"line": 1370,"col": 4},{"file": 33,"line": 1371,"col": 4},{"file": 33,"line": 1372,"col": 4},{"file": 33,"line": 1373,"col": 4},{"file": 33,"line": 1374,"col": 4},{"file": 33,"line": 1377,"col": 4},{"file": 33,"line": 1378,"col": 4},{"file": 33,"line": 1379,"col": 4},{"file": 33,"line": 1381,"col": 4},{"file": 33,"line": 1382,"col": 4},{"file": 33,"line": 1383,"col": 4},{"file": 33,"line": 1385,"col": 4},{"file": 33,"line": 1386,"col": 4},{"file": 33,"line": 1388,"col": 4},{"file": 33,"line": 1389,"col": 4},{"file": 33,"line": 1390,"col": 4},{"file": 33,"line": 1391,"col": 4},{"file": 33,"line": 1392,"col": 4},{"file": 33,"line": 1393,"col": 4},{"file": 33,"line": 1394,"col": 4},{"file": 33,"line": 1395,"col": 4},{"file": 33,"line": 1396,"col": 4},{"file": 33,"line": 1397,"col": 4},{"file": 33,"line": 1398,"col": 4},{"file": 33,"line": 1399,"col": 4},{"file": 33,"line": 1400,"col": 4},{"file": 33,"line": 1401,"col": 4},{"file": 33,"line": 1402,"col": 4},{"file": 33,"line": 1404,"col": 4},{"file": 33,"line": 1436,"col": 4},{"file": 33,"line": 1472,"col": 4,"docs": " This symbol is a reference to an external non-lazy (data) symbol."},{"file": 33,"line": 1475,"col": 4,"docs": " This symbol is a reference to an external lazy symbol—that is, to a function call."},{"file": 33,"line": 1478,"col": 4,"docs": " This symbol is defined in this module."},{"file": 33,"line": 1481,"col": 4,"docs": " This symbol is defined in this module and is visible only to modules within this shared library."},{"file": 33,"line": 1485,"col": 4,"docs": " This symbol is defined in another module in this file, is a non-lazy (data) symbol, and is visible only to modules within this shared library."},{"file": 33,"line": 1489,"col": 4,"docs": " This symbol is defined in another module in this file, is a lazy (function) symbol, and is visible only to modules within this shared library."},{"file": 33,"line": 1494,"col": 4,"docs": " Must be set for any defined symbol that is referenced by dynamic-loader APIs (such as dlsym and NSLookupSymbolInImage) and not ordinary undefined symbol references. The strip tool uses this bit to avoid removing symbols that must exist: If the symbol has this bit set, strip does not strip it."},{"file": 33,"line": 1497,"col": 4,"docs": " Used by the dynamic linker at runtime. Do not set this bit."},{"file": 33,"line": 1502,"col": 4,"docs": " Indicates that this symbol is a weak reference. If the dynamic linker cannot find a definition for this symbol, it sets the address of this symbol to 0. The static linker sets this symbol given the appropriate weak-linking flags."},{"file": 33,"line": 1507,"col": 4,"docs": " Indicates that this symbol is a weak definition. If the static linker or the dynamic linker finds another (non-weak) definition for this symbol, the weak definition is ignored. Only symbols in a coalesced section (page 23) can be marked as a weak definition."},{"file": 33,"line": 1513,"col": 4,"docs": " The N_SYMBOL_RESOLVER bit of the n_desc field indicates that the that the function is actually a resolver function and should be called to get the address of the real function to use. This bit is only available in .o files (MH_OBJECT filetype)"},{"file": 33,"line": 1516,"col": 4},{"file": 33,"line": 1517,"col": 4},{"file": 33,"line": 1518,"col": 4},{"file": 33,"line": 1519,"col": 4},{"file": 33,"line": 1520,"col": 4},{"file": 33,"line": 1521,"col": 4},{"file": 33,"line": 1522,"col": 4},{"file": 33,"line": 1529,"col": 4},{"file": 33,"line": 1530,"col": 4},{"file": 33,"line": 1536,"col": 4,"docs": " Single Requirement blob"},{"file": 33,"line": 1538,"col": 4,"docs": " Requirements vector (internal requirements)"},{"file": 33,"line": 1540,"col": 4,"docs": " CodeDirectory blob"},{"file": 33,"line": 1542,"col": 4,"docs": " embedded form of signature data"},{"file": 33,"line": 1544,"col": 4,"docs": " XXX"},{"file": 33,"line": 1546,"col": 4,"docs": " Embedded entitlements"},{"file": 33,"line": 1548,"col": 4,"docs": " Multi-arch collection of embedded signatures"},{"file": 33,"line": 1550,"col": 4,"docs": " CMS Signature, among other things"},{"file": 33,"line": 1552,"col": 4},{"file": 33,"line": 1553,"col": 4},{"file": 33,"line": 1554,"col": 4},{"file": 33,"line": 1555,"col": 4},{"file": 33,"line": 1558,"col": 4,"docs": " Slot index for CodeDirectory"},{"file": 33,"line": 1559,"col": 4},{"file": 33,"line": 1560,"col": 4},{"file": 33,"line": 1561,"col": 4},{"file": 33,"line": 1562,"col": 4},{"file": 33,"line": 1563,"col": 4},{"file": 33,"line": 1566,"col": 4,"docs": " first alternate CodeDirectory, if any"},{"file": 33,"line": 1568,"col": 4,"docs": " Max number of alternate CD slots"},{"file": 33,"line": 1570,"col": 4,"docs": " One past the last"},{"file": 33,"line": 1573,"col": 4,"docs": " CMS Signature"},{"file": 33,"line": 1574,"col": 4},{"file": 33,"line": 1575,"col": 4},{"file": 33,"line": 1578,"col": 4,"docs": " Compat with amfi"},{"file": 33,"line": 1580,"col": 4,"docs": " Compat with amfi"},{"file": 33,"line": 1582,"col": 4},{"file": 33,"line": 1583,"col": 4},{"file": 33,"line": 1584,"col": 4},{"file": 33,"line": 1585,"col": 4},{"file": 33,"line": 1587,"col": 4},{"file": 33,"line": 1588,"col": 4},{"file": 33,"line": 1589,"col": 4},{"file": 33,"line": 1592,"col": 4,"docs": " Always - larger hashes are truncated"},{"file": 33,"line": 1594,"col": 4,"docs": " Max size of the hash we'll support"},{"file": 33,"line": 1596,"col": 4},{"file": 33,"line": 1597,"col": 4},{"file": 33,"line": 1598,"col": 4},{"file": 33,"line": 1600,"col": 4},{"file": 33,"line": 1602,"col": 4},{"file": 33,"line": 1605,"col": 4,"docs": " This CodeDirectory is tailored specfically at version 0x20400."},{"file": 33,"line": 1671,"col": 4,"docs": " Structure of an embedded-signature SuperBlob"},{"file": 33,"line": 1681,"col": 4,"docs": " This structure is followed by GenericBlobs in no particular order as indicated by offsets in index"},{"file": 33,"line": 1692,"col": 4},{"file": 33,"line": 1703,"col": 4,"docs": " The LC_DATA_IN_CODE load commands uses a linkedit_data_command to point to an array of data_in_code_entry entries. Each entry describes a range of data in a code section."},{"file": 34,"line": 6,"col": 4,"docs": " Euler's number (e)"},{"file": 34,"line": 9,"col": 4,"docs": " Archimedes' constant (π)"},{"file": 34,"line": 12,"col": 4,"docs": " Phi or Golden ratio constant (Φ) = (1 + sqrt(5))/2"},{"file": 34,"line": 15,"col": 4,"docs": " Circle constant (τ)"},{"file": 34,"line": 18,"col": 4,"docs": " log2(e)"},{"file": 34,"line": 21,"col": 4,"docs": " log10(e)"},{"file": 34,"line": 24,"col": 4,"docs": " ln(2)"},{"file": 34,"line": 27,"col": 4,"docs": " ln(10)"},{"file": 34,"line": 30,"col": 4,"docs": " 2/sqrt(π)"},{"file": 34,"line": 33,"col": 4,"docs": " sqrt(2)"},{"file": 34,"line": 36,"col": 4,"docs": " 1/sqrt(2)"},{"file": 34,"line": 39,"col": 4},{"file": 34,"line": 40,"col": 4},{"file": 34,"line": 41,"col": 4},{"file": 34,"line": 42,"col": 4},{"file": 34,"line": 43,"col": 4},{"file": 34,"line": 46,"col": 4},{"file": 34,"line": 47,"col": 4},{"file": 34,"line": 48,"col": 4},{"file": 34,"line": 49,"col": 4},{"file": 34,"line": 50,"col": 4},{"file": 34,"line": 52,"col": 4},{"file": 34,"line": 53,"col": 4},{"file": 34,"line": 54,"col": 4},{"file": 34,"line": 55,"col": 4},{"file": 34,"line": 56,"col": 4},{"file": 34,"line": 58,"col": 4},{"file": 34,"line": 59,"col": 4},{"file": 34,"line": 60,"col": 4},{"file": 34,"line": 61,"col": 4},{"file": 34,"line": 62,"col": 4},{"file": 34,"line": 64,"col": 4},{"file": 34,"line": 66,"col": 4},{"file": 34,"line": 67,"col": 4},{"file": 34,"line": 69,"col": 4},{"file": 34,"line": 70,"col": 4},{"file": 34,"line": 72,"col": 4},{"file": 34,"line": 73,"col": 4},{"file": 34,"line": 75,"col": 4},{"file": 34,"line": 76,"col": 4},{"file": 34,"line": 78,"col": 4},{"file": 34,"line": 79,"col": 4},{"file": 34,"line": 81,"col": 4},{"file": 34,"line": 82,"col": 4},{"file": 34,"line": 84,"col": 4},{"file": 34,"line": 85,"col": 4},{"file": 34,"line": 87,"col": 4},{"file": 34,"line": 88,"col": 4},{"file": 34,"line": 90,"col": 4},{"file": 34,"line": 91,"col": 4},{"file": 34,"line": 93,"col": 4},{"file": 34,"line": 94,"col": 4},{"file": 34,"line": 96,"col": 4},{"file": 34,"line": 97,"col": 4},{"file": 34,"line": 99,"col": 4},{"file": 34,"line": 100,"col": 4},{"file": 34,"line": 102,"col": 4},{"file": 34,"line": 103,"col": 4},{"file": 34,"line": 104,"col": 4},{"file": 34,"line": 118,"col": 4,"docs": " Performs an approximate comparison of two floating point values `x` and `y`. Returns true if the absolute difference between them is less or equal than the specified tolerance. The `tolerance` parameter is the absolute tolerance used when determining if the two numbers are close enough; a good value for this parameter is a small multiple of `epsilon(T)`. Note that this function is recommended for comparing small numbers around zero; using `approxEqRel` is suggested otherwise. NaN values are never considered equal to any value.","fields": [12160,12161,12162,12163]},{"file": 34,"line": 146,"col": 4,"docs": " Performs an approximate comparison of two floating point values `x` and `y`. Returns true if the absolute difference between them is less or equal than `max(|x|, |y|) * tolerance`, where `tolerance` is a positive number greater than zero. The `tolerance` parameter is the relative tolerance used when determining if the two numbers are close enough; a good value for this parameter is usually `sqrt(epsilon(T))`, meaning that the two numbers are considered equal if at least half of the digits are equal. Note that for comparisons of small numbers around zero this function won't give meaningful results, use `approxEqAbs` instead. NaN values are never considered equal to any value.","fields": [12164,12165,12166,12167]},{"file": 34,"line": 161,"col": 4,"docs": " Deprecated, use `approxEqAbs` or `approxEqRel`."},{"file": 34,"line": 194,"col": 4,"fields": [12168]},{"file": 34,"line": 203,"col": 4,"fields": []},{"file": 34,"line": 207,"col": 4,"fields": []},{"file": 34,"line": 211,"col": 4,"fields": []},{"file": 34,"line": 215,"col": 4,"fields": []},{"file": 34,"line": 219,"col": 4,"fields": []},{"file": 34,"line": 223,"col": 4},{"file": 34,"line": 224,"col": 4},{"file": 34,"line": 225,"col": 4},{"file": 34,"line": 226,"col": 4},{"file": 34,"line": 227,"col": 4},{"file": 34,"line": 228,"col": 4},{"file": 34,"line": 229,"col": 4},{"file": 34,"line": 230,"col": 4},{"file": 34,"line": 231,"col": 4},{"file": 34,"line": 232,"col": 4},{"file": 34,"line": 233,"col": 4},{"file": 34,"line": 234,"col": 4},{"file": 34,"line": 235,"col": 4},{"file": 34,"line": 236,"col": 4},{"file": 34,"line": 237,"col": 4},{"file": 34,"line": 238,"col": 4},{"file": 34,"line": 239,"col": 4},{"file": 34,"line": 240,"col": 4},{"file": 34,"line": 241,"col": 4},{"file": 34,"line": 242,"col": 4},{"file": 34,"line": 243,"col": 4},{"file": 34,"line": 244,"col": 4},{"file": 34,"line": 245,"col": 4},{"file": 34,"line": 246,"col": 4},{"file": 34,"line": 247,"col": 4},{"file": 34,"line": 248,"col": 4},{"file": 34,"line": 249,"col": 4},{"file": 34,"line": 250,"col": 4},{"file": 34,"line": 251,"col": 4},{"file": 34,"line": 252,"col": 4},{"file": 34,"line": 253,"col": 4},{"file": 34,"line": 254,"col": 4},{"file": 34,"line": 255,"col": 4},{"file": 34,"line": 256,"col": 4},{"file": 34,"line": 257,"col": 4},{"file": 34,"line": 258,"col": 4},{"file": 34,"line": 259,"col": 4},{"file": 34,"line": 260,"col": 4},{"file": 34,"line": 261,"col": 4},{"file": 34,"line": 262,"col": 4},{"file": 34,"line": 263,"col": 4},{"file": 34,"line": 264,"col": 4},{"file": 34,"line": 265,"col": 4},{"file": 34,"line": 266,"col": 4},{"file": 34,"line": 267,"col": 4},{"file": 34,"line": 268,"col": 4},{"file": 34,"line": 269,"col": 4},{"file": 34,"line": 270,"col": 4},{"file": 34,"line": 271,"col": 4},{"file": 34,"line": 273,"col": 4},{"file": 34,"line": 274,"col": 4},{"file": 34,"line": 276,"col": 4},{"file": 34,"line": 284,"col": 4,"docs": " Returns the number of bits in the mantissa of floating point type T.","fields": [12169]},{"file": 34,"line": 299,"col": 4,"docs": " Returns the number of bits in the exponent of floating point type T.","fields": [12170]},{"file": 34,"line": 387,"col": 4,"docs": " Finds the minimum of three numbers.","fields": [12171,12172,12173]},{"file": 34,"line": 426,"col": 4,"docs": " Limit val to the inclusive range [lower, upper]. ","fields": [12174,12175,12176]},{"file": 34,"line": 466,"col": 4,"fields": [12177]},{"file": 34,"line": 472,"col": 4,"docs": " Shifts a left by shift_amt. Returns an error on overflow. shift_amt is unsigned.","fields": [12178,12179,12180]},{"file": 34,"line": 479,"col": 4,"docs": " Shifts left. Overflowed bits are truncated. A negative shift amount results in a right shift.","fields": [12181,12182,12183]},{"file": 34,"line": 519,"col": 4,"docs": " Shifts right. Overflowed bits are truncated. A negative shift amount results in a left shift.","fields": [12184,12185,12186]},{"file": 34,"line": 559,"col": 4,"docs": " Rotates right. Only unsigned values can be rotated.  Negative shift values result in shift modulo the bit count.","fields": [12187,12188,12189]},{"file": 34,"line": 587,"col": 4,"docs": " Rotates left. Only unsigned values can be rotated.  Negative shift values result in shift modulo the bit count.","fields": [12190,12191,12192]},{"file": 34,"line": 627,"col": 4,"docs": " Returns an unsigned int type that can hold the number of bits in T.","fields": [12193]},{"file": 34,"line": 639,"col": 4,"docs": " Returns the smallest integer type that can hold both from and to.","fields": [12194,12195]},{"file": 34,"line": 716,"col": 4,"docs": " Returns the absolute value of x, where x is a value of an integer type.","fields": [12196]},{"file": 34,"line": 738,"col": 4},{"file": 34,"line": 751,"col": 4,"docs": " Divide numerator by denominator, rounding toward zero. Returns an error on overflow or when denominator is zero.","fields": [12197,12198,12199]},{"file": 34,"line": 775,"col": 4,"docs": " Divide numerator by denominator, rounding toward negative infinity. Returns an error on overflow or when denominator is zero.","fields": [12200,12201,12202]},{"file": 34,"line": 799,"col": 4,"docs": " Divide numerator by denominator, rounding toward positive infinity. Returns an error on overflow or when denominator is zero.","fields": [12203,12204,12205]},{"file": 34,"line": 854,"col": 4,"docs": " Divide numerator by denominator. Return an error if quotient is not an integer, denominator is zero, or on overflow.","fields": [12206,12207,12208]},{"file": 34,"line": 882,"col": 4,"docs": " Returns numerator modulo denominator, or an error if denominator is zero or negative. Negative numerators never result in negative return values.","fields": [12209,12210,12211]},{"file": 34,"line": 908,"col": 4,"docs": " Returns the remainder when numerator is divided by denominator, or an error if denominator is zero or negative. Negative numerators can give negative results.","fields": [12212,12213,12214]},{"file": 34,"line": 968,"col": 4,"docs": " Returns the negation of the integer parameter. Result is a signed integer.","fields": [12215]},{"file": 34,"line": 1014,"col": 4},{"file": 34,"line": 1017,"col": 4,"docs": " Align cast a pointer but return an error if it's the wrong alignment","fields": [12216,12217]},{"file": 34,"line": 1032,"col": 4,"docs": " Returns the nearest power of two less than or equal to value, or zero if value is less than or equal to zero.","fields": [12218,12219]},{"file": 34,"line": 1088,"col": 4,"docs": " Returns the next power of two (if the value is not already a power of two). Only unsigned integers can be used. Zero is not an allowed input. Asserts that the value fits.","fields": [12220,12221]},{"file": 34,"line": 1128,"col": 4,"docs": " Return the log base 2 of integer value x, rounding down to the nearest integer.","fields": [12222,12223]},{"file": 34,"line": 1137,"col": 4,"docs": " Return the log base 2 of integer value x, rounding up to the nearest integer.","fields": [12224,12225]},{"file": 34,"line": 1162,"col": 4,"docs": " Cast a value to a different type. If the value doesn't fit in, or can't be perfectly represented by, the new type, it will be converted to the closest possible representation.","fields": [12226,12227]},{"file": 34,"line": 1291,"col": 4,"docs": " See also `CompareOperator`."},{"file": 34,"line": 1340,"col": 4,"docs": " Given two numbers, this function returns the order they are with respect to each other.","fields": [12228,12229]},{"file": 34,"line": 1353,"col": 4,"docs": " See also `Order`."},{"file": 34,"line": 1371,"col": 4,"docs": " This function does the same thing as comparison operators, however the operator is a runtime-known enum value. Works on any operands that support comparison operators.","fields": [12230,12231,12232]},{"file": 34,"line": 1433,"col": 4,"docs": " Returns a mask of all ones if value is true, and a mask of all zeroes if value is false. Compiles to one instruction for register sized integers.","fields": [12233,12234]},{"file": 34,"line": 1478,"col": 4,"docs": " Return the mod of `num` with the smallest integer type","fields": [12235,12236]},{"file": 34,"line": 0,"col": 0},{"file": 34,"line": 1,"col": 0},{"file": 34,"line": 2,"col": 0},{"file": 34,"line": 3,"col": 0},{"file": 34,"line": 707,"col": 0,"fields": []},{"file": 34,"line": 733,"col": 0,"fields": []},{"file": 34,"line": 744,"col": 0,"fields": []},{"file": 34,"line": 762,"col": 0,"fields": []},{"file": 34,"line": 786,"col": 0,"fields": []},{"file": 34,"line": 823,"col": 0,"fields": []},{"file": 34,"line": 867,"col": 0,"fields": []},{"file": 34,"line": 893,"col": 0,"fields": []},{"file": 34,"line": 919,"col": 0,"fields": []},{"file": 34,"line": 1048,"col": 0,"fields": []},{"file": 34,"line": 1097,"col": 0,"fields": []},{"file": 34,"line": 1114,"col": 0,"fields": []},{"file": 35,"line": 7,"col": 4},{"file": 35,"line": 8,"col": 4},{"file": 35,"line": 12,"col": 4,"fields": [12237]},{"file": 35,"line": 55,"col": 4,"fields": [12238,12239]},{"file": 35,"line": 99,"col": 4,"fields": [12240]},{"file": 35,"line": 118,"col": 4,"docs": " Returns the alignment of type T. Note that if T is a pointer or function type the result is different than the one returned by @alignOf(T). If T is a pointer type the alignment of the type it points to is returned. If T is a function type the alignment a target-dependent value is returned.","fields": [12241]},{"file": 35,"line": 328,"col": 4,"fields": [12242]},{"file": 35,"line": 363,"col": 4,"fields": [12243]},{"file": 35,"line": 404,"col": 4,"fields": [12244,12245]},{"file": 35,"line": 440,"col": 4,"fields": [12246]},{"file": 35,"line": 485,"col": 4,"fields": [12247,12248]},{"file": 35,"line": 520,"col": 4,"fields": [12249]},{"file": 35,"line": 559,"col": 4,"fields": [12250]},{"file": 35,"line": 597,"col": 4},{"file": 35,"line": 622,"col": 4,"docs": "Returns the active tag of a tagged union","fields": [12251]},{"file": 35,"line": 649,"col": 4,"docs": "Given a tagged union type, and an enum, return the type of the union field corresponding to the enum tag.","fields": [12252,12253]},{"file": 35,"line": 814,"col": 4},{"file": 35,"line": 816,"col": 4,"fields": [12254,12255]},{"file": 35,"line": 828,"col": 4,"docs": " Given a type and a name, return the field index according to source order. Returns `null` if the field is not found.","fields": [12256,12257]},{"file": 35,"line": 836,"col": 4},{"file": 35,"line": 839,"col": 4,"docs": " Returns a slice of pointers to public declarations of a namespace.","fields": [12258,12259]},{"file": 35,"line": 857,"col": 4},{"file": 35,"line": 868,"col": 4,"fields": [12260]},{"file": 35,"line": 881,"col": 4,"fields": [12261,12262]},{"file": 35,"line": 897,"col": 4,"docs": " For a given function type, returns a tuple type which fields will correspond to the argument types. Examples: - `ArgsTuple(fn() void)` ⇒ `tuple { }` - `ArgsTuple(fn(a: u32) u32)` ⇒ `tuple { u32 }` - `ArgsTuple(fn(a: u32, b: f16) noreturn)` ⇒ `tuple { u32, f16 }`","fields": [12263]},{"file": 35,"line": 939,"col": 4,"docs": " For a given anonymous list of types, returns a new tuple type with those types as fields. Examples: - `Tuple(&[_]type {})` ⇒ `tuple { }` - `Tuple(&[_]type {f32})` ⇒ `tuple { f32 }` - `Tuple(&[_]type {f32,u32})` ⇒ `tuple { f32, u32 }`","fields": [12264]},{"file": 35,"line": 1003,"col": 4,"docs": " TODO: https://github.com/ziglang/zig/issues/425","fields": [12265,12266]},{"file": 35,"line": 1010,"col": 4,"docs": " Returns whether `error_union` contains an error.","fields": [12267]},{"file": 35,"line": 0,"col": 0},{"file": 35,"line": 1,"col": 0},{"file": 35,"line": 2,"col": 0},{"file": 35,"line": 3,"col": 0},{"file": 35,"line": 4,"col": 0},{"file": 35,"line": 5,"col": 0},{"file": 35,"line": 10,"col": 0},{"file": 35,"line": 213,"col": 0,"fields": []},{"file": 35,"line": 580,"col": 0,"fields": [12268,12269]},{"file": 35,"line": 645,"col": 0},{"file": 35,"line": 963,"col": 0},{"file": 36,"line": 27,"col": 4},{"file": 36,"line": 28,"col": 4},{"file": 36,"line": 29,"col": 4},{"file": 36,"line": 30,"col": 4},{"file": 36,"line": 31,"col": 4},{"file": 36,"line": 32,"col": 4},{"file": 36,"line": 33,"col": 4},{"file": 36,"line": 34,"col": 4},{"file": 36,"line": 35,"col": 4},{"file": 36,"line": 36,"col": 4},{"file": 36,"line": 37,"col": 4},{"file": 36,"line": 38,"col": 4},{"file": 36,"line": 56,"col": 4,"docs": " Applications can override the `system` API layer in their root source file. Otherwise, when linking libc, this is the C API. When not linking libc, it is the OS-specific system interface."},{"file": 36,"line": 67,"col": 4},{"file": 36,"line": 68,"col": 4},{"file": 36,"line": 69,"col": 4},{"file": 36,"line": 70,"col": 4},{"file": 36,"line": 71,"col": 4},{"file": 36,"line": 72,"col": 4},{"file": 36,"line": 73,"col": 4},{"file": 36,"line": 74,"col": 4},{"file": 36,"line": 75,"col": 4},{"file": 36,"line": 76,"col": 4},{"file": 36,"line": 77,"col": 4},{"file": 36,"line": 78,"col": 4},{"file": 36,"line": 79,"col": 4},{"file": 36,"line": 80,"col": 4},{"file": 36,"line": 81,"col": 4},{"file": 36,"line": 82,"col": 4},{"file": 36,"line": 83,"col": 4},{"file": 36,"line": 84,"col": 4},{"file": 36,"line": 85,"col": 4},{"file": 36,"line": 86,"col": 4},{"file": 36,"line": 87,"col": 4},{"file": 36,"line": 88,"col": 4},{"file": 36,"line": 89,"col": 4},{"file": 36,"line": 90,"col": 4},{"file": 36,"line": 91,"col": 4},{"file": 36,"line": 92,"col": 4},{"file": 36,"line": 93,"col": 4},{"file": 36,"line": 94,"col": 4},{"file": 36,"line": 95,"col": 4},{"file": 36,"line": 96,"col": 4},{"file": 36,"line": 97,"col": 4},{"file": 36,"line": 98,"col": 4},{"file": 36,"line": 99,"col": 4},{"file": 36,"line": 100,"col": 4},{"file": 36,"line": 101,"col": 4},{"file": 36,"line": 102,"col": 4},{"file": 36,"line": 103,"col": 4},{"file": 36,"line": 104,"col": 4},{"file": 36,"line": 105,"col": 4},{"file": 36,"line": 106,"col": 4},{"file": 36,"line": 107,"col": 4},{"file": 36,"line": 108,"col": 4},{"file": 36,"line": 109,"col": 4},{"file": 36,"line": 110,"col": 4},{"file": 36,"line": 111,"col": 4},{"file": 36,"line": 112,"col": 4},{"file": 36,"line": 113,"col": 4},{"file": 36,"line": 114,"col": 4},{"file": 36,"line": 115,"col": 4},{"file": 36,"line": 116,"col": 4},{"file": 36,"line": 117,"col": 4},{"file": 36,"line": 118,"col": 4},{"file": 36,"line": 119,"col": 4},{"file": 36,"line": 120,"col": 4},{"file": 36,"line": 121,"col": 4},{"file": 36,"line": 122,"col": 4},{"file": 36,"line": 123,"col": 4},{"file": 36,"line": 124,"col": 4},{"file": 36,"line": 125,"col": 4},{"file": 36,"line": 126,"col": 4},{"file": 36,"line": 127,"col": 4},{"file": 36,"line": 128,"col": 4},{"file": 36,"line": 129,"col": 4},{"file": 36,"line": 130,"col": 4},{"file": 36,"line": 131,"col": 4},{"file": 36,"line": 132,"col": 4},{"file": 36,"line": 133,"col": 4},{"file": 36,"line": 134,"col": 4},{"file": 36,"line": 135,"col": 4},{"file": 36,"line": 136,"col": 4},{"file": 36,"line": 137,"col": 4},{"file": 36,"line": 138,"col": 4},{"file": 36,"line": 139,"col": 4},{"file": 36,"line": 140,"col": 4},{"file": 36,"line": 141,"col": 4},{"file": 36,"line": 142,"col": 4},{"file": 36,"line": 143,"col": 4},{"file": 36,"line": 144,"col": 4},{"file": 36,"line": 145,"col": 4},{"file": 36,"line": 146,"col": 4},{"file": 36,"line": 147,"col": 4},{"file": 36,"line": 148,"col": 4},{"file": 36,"line": 149,"col": 4},{"file": 36,"line": 150,"col": 4},{"file": 36,"line": 151,"col": 4},{"file": 36,"line": 152,"col": 4},{"file": 36,"line": 153,"col": 4},{"file": 36,"line": 154,"col": 4},{"file": 36,"line": 155,"col": 4},{"file": 36,"line": 156,"col": 4},{"file": 36,"line": 157,"col": 4},{"file": 36,"line": 158,"col": 4},{"file": 36,"line": 159,"col": 4},{"file": 36,"line": 160,"col": 4},{"file": 36,"line": 161,"col": 4},{"file": 36,"line": 162,"col": 4},{"file": 36,"line": 163,"col": 4},{"file": 36,"line": 164,"col": 4},{"file": 36,"line": 165,"col": 4},{"file": 36,"line": 166,"col": 4},{"file": 36,"line": 167,"col": 4},{"file": 36,"line": 168,"col": 4},{"file": 36,"line": 169,"col": 4},{"file": 36,"line": 170,"col": 4},{"file": 36,"line": 171,"col": 4},{"file": 36,"line": 172,"col": 4},{"file": 36,"line": 173,"col": 4},{"file": 36,"line": 174,"col": 4},{"file": 36,"line": 176,"col": 4},{"file": 36,"line": 177,"col": 4},{"file": 36,"line": 178,"col": 4},{"file": 36,"line": 179,"col": 4},{"file": 36,"line": 181,"col": 4},{"file": 36,"line": 186,"col": 4},{"file": 36,"line": 191,"col": 4},{"file": 36,"line": 210,"col": 4},{"file": 36,"line": 215,"col": 4,"docs": " See also `getenv`. Populated by startup code before main(). TODO this is a footgun because the value will be undefined when using `zig build-lib`. https://github.com/ziglang/zig/issues/4524"},{"file": 36,"line": 220,"col": 4,"docs": " Populated by startup code before main(). Not available on Windows. See `std.process.args` for obtaining the process arguments."},{"file": 36,"line": 228,"col": 4,"docs": " To obtain errno, call this function with the return value of the system function call. For some systems this will obtain the value directly from the return code; for others it will use a thread-local errno variable. Therefore, this function only returns a well-defined value when it is called directly after the system function call which one wants to learn the errno value of."},{"file": 36,"line": 235,"col": 4,"docs": " Closes the file descriptor. This function is not capable of returning any indication of failure. An application which wants to ensure writes have succeeded before closing must call `fsync` before `close`. Note: The Zig standard library does not support POSIX thread cancellation.","fields": [12270]},{"file": 36,"line": 257,"col": 4},{"file": 36,"line": 270,"col": 4,"docs": " Changes the mode of the file referred to by the file descriptor. The process must have the correct privileges in order to do this successfully, or must have the effective user ID matching the owner of the file.","fields": [12271,12272]},{"file": 36,"line": 297,"col": 4},{"file": 36,"line": 311,"col": 4,"docs": " Changes the owner and group of the file referred to by the file descriptor. The process must have the correct privileges in order to do this successfully. The group may be changed by the owner of the directory to any group of which the owner is a member. If the owner or group is specified as `null`, the ID is not changed.","fields": [12273,12274,12275]},{"file": 36,"line": 338,"col": 4},{"file": 36,"line": 345,"col": 4,"docs": " Obtain a series of random bytes. These bytes can be used to seed user-space random number generators or for cryptographic purposes. When linking against libc, this calls the appropriate OS-specific library call. Otherwise it uses the zig standard library implementation.","fields": [12276]},{"file": 36,"line": 444,"col": 4},{"file": 36,"line": 446,"col": 4,"fields": [12277]},{"file": 36,"line": 474,"col": 4},{"file": 36,"line": 476,"col": 4,"fields": [12278,12279]},{"file": 36,"line": 487,"col": 4,"docs": " Exits the program cleanly with the specified status code.","fields": [12280]},{"file": 36,"line": 512,"col": 4},{"file": 36,"line": 541,"col": 4,"docs": " Returns the number of bytes that were read, which can be less than buf.len. If 0 bytes were read, that means EOF. If `fd` is opened in non blocking mode, the function will return error.WouldBlock when EAGAIN is received. Linux has a limit on how many bytes may be transferred in one `read` call, which is `0x7ffff000` on both 64-bit and 32-bit systems. This is due to using a signed C int as the return value, as well as stuffing the errno codes into the last `4096` values. This is noted on the `read` man page. The limit on Darwin is `0x7fffffff`, trying to read more than that returns EINVAL. The corresponding POSIX limit is `math.maxInt(isize)`.","fields": [12281,12282]},{"file": 36,"line": 608,"col": 4,"docs": " Number of bytes read is returned. Upon reading end-of-file, zero is returned. For POSIX systems, if `fd` is opened in non blocking mode, the function will return error.WouldBlock when EAGAIN is received. On Windows, if the application has a global event loop enabled, I/O Completion Ports are used to perform the I/O. `error.WouldBlock` is not possible on Windows. This operation is non-atomic on the following systems: * Windows On these systems, the read races with concurrent writes to the same file descriptor.","fields": [12283,12284]},{"file": 36,"line": 652,"col": 4},{"file": 36,"line": 668,"col": 4,"docs": " Number of bytes read is returned. Upon reading end-of-file, zero is returned. Retries when interrupted by a signal. For POSIX systems, if `fd` is opened in non blocking mode, the function will return error.WouldBlock when EAGAIN is received. On Windows, if the application has a global event loop enabled, I/O Completion Ports are used to perform the I/O. `error.WouldBlock` is not possible on Windows. Linux has a limit on how many bytes may be transferred in one `pread` call, which is `0x7ffff000` on both 64-bit and 32-bit systems. This is due to using a signed C int as the return value, as well as stuffing the errno codes into the last `4096` values. This is noted on the `read` man page. The limit on Darwin is `0x7fffffff`, trying to read more than that returns EINVAL. The corresponding POSIX limit is `math.maxInt(isize)`.","fields": [12285,12286,12287]},{"file": 36,"line": 735,"col": 4},{"file": 36,"line": 745,"col": 4,"fields": [12288,12289]},{"file": 36,"line": 816,"col": 4,"docs": " Number of bytes read is returned. Upon reading end-of-file, zero is returned. Retries when interrupted by a signal. For POSIX systems, if `fd` is opened in non blocking mode, the function will return error.WouldBlock when EAGAIN is received. On Windows, if the application has a global event loop enabled, I/O Completion Ports are used to perform the I/O. `error.WouldBlock` is not possible on Windows. This operation is non-atomic on the following systems: * Darwin * Windows On these systems, the read races with concurrent writes to the same file descriptor.","fields": [12290,12291,12292]},{"file": 36,"line": 878,"col": 4},{"file": 36,"line": 922,"col": 4,"docs": " Write to a file descriptor. Retries when interrupted by a signal. Returns the number of bytes written. If nonzero bytes were supplied, this will be nonzero. Note that a successful write() may transfer fewer than count bytes.  Such partial  writes  can occur  for  various reasons; for example, because there was insufficient space on the disk device to write all of the requested bytes, or because a blocked write() to a socket,  pipe,  or similar  was  interrupted by a signal handler after it had transferred some, but before it had transferred all of the requested bytes.  In the event of a partial write, the caller can  make another  write() call to transfer the remaining bytes.  The subsequent call will either transfer further bytes or may result in an error (e.g., if the disk is now full). For POSIX systems, if `fd` is opened in non blocking mode, the function will return error.WouldBlock when EAGAIN is received. On Windows, if the application has a global event loop enabled, I/O Completion Ports are used to perform the I/O. `error.WouldBlock` is not possible on Windows. Linux has a limit on how many bytes may be transferred in one `write` call, which is `0x7ffff000` on both 64-bit and 32-bit systems. This is due to using a signed C int as the return value, as well as stuffing the errno codes into the last `4096` values. This is noted on the `write` man page. The limit on Darwin is `0x7fffffff`, trying to read more than that returns EINVAL. The corresponding POSIX limit is `math.maxInt(isize)`.","fields": [12293,12294]},{"file": 36,"line": 999,"col": 4,"docs": " Write multiple buffers to a file descriptor. Retries when interrupted by a signal. Returns the number of bytes written. If nonzero bytes were supplied, this will be nonzero. Note that a successful write() may transfer fewer bytes than supplied.  Such partial  writes  can occur  for  various reasons; for example, because there was insufficient space on the disk device to write all of the requested bytes, or because a blocked write() to a socket,  pipe,  or similar  was  interrupted by a signal handler after it had transferred some, but before it had transferred all of the requested bytes.  In the event of a partial write, the caller can  make another  write() call to transfer the remaining bytes.  The subsequent call will either transfer further bytes or may result in an error (e.g., if the disk is now full). For POSIX systems, if `fd` is opened in non blocking mode, the function will return error.WouldBlock when EAGAIN is received.k`. On Windows, if the application has a global event loop enabled, I/O Completion Ports are used to perform the I/O. `error.WouldBlock` is not possible on Windows. If `iov.len` is larger than `IOV_MAX`, a partial write will occur.","fields": [12295,12296]},{"file": 36,"line": 1050,"col": 4},{"file": 36,"line": 1074,"col": 4,"docs": " Write to a file descriptor, with a position offset. Retries when interrupted by a signal. Returns the number of bytes written. If nonzero bytes were supplied, this will be nonzero. Note that a successful write() may transfer fewer bytes than supplied.  Such partial  writes  can occur  for  various reasons; for example, because there was insufficient space on the disk device to write all of the requested bytes, or because a blocked write() to a socket,  pipe,  or similar  was  interrupted by a signal handler after it had transferred some, but before it had transferred all of the requested bytes.  In the event of a partial write, the caller can  make another  write() call to transfer the remaining bytes.  The subsequent call will either transfer further bytes or may result in an error (e.g., if the disk is now full). For POSIX systems, if `fd` is opened in non blocking mode, the function will return error.WouldBlock when EAGAIN is received. On Windows, if the application has a global event loop enabled, I/O Completion Ports are used to perform the I/O. `error.WouldBlock` is not possible on Windows. Linux has a limit on how many bytes may be transferred in one `pwrite` call, which is `0x7ffff000` on both 64-bit and 32-bit systems. This is due to using a signed C int as the return value, as well as stuffing the errno codes into the last `4096` values. This is noted on the `write` man page. The limit on Darwin is `0x7fffffff`, trying to write more than that returns EINVAL. The corresponding POSIX limit is `math.maxInt(isize)`.","fields": [12297,12298,12299]},{"file": 36,"line": 1166,"col": 4,"docs": " Write multiple buffers to a file descriptor, with a position offset. Retries when interrupted by a signal. Returns the number of bytes written. If nonzero bytes were supplied, this will be nonzero. Note that a successful write() may transfer fewer than count bytes.  Such partial  writes  can occur  for  various reasons; for example, because there was insufficient space on the disk device to write all of the requested bytes, or because a blocked write() to a socket,  pipe,  or similar  was  interrupted by a signal handler after it had transferred some, but before it had transferred all of the requested bytes.  In the event of a partial write, the caller can  make another  write() call to transfer the remaining bytes.  The subsequent call will either transfer further bytes or may result in an error (e.g., if the disk is now full). If `fd` is opened in non blocking mode, the function will return error.WouldBlock when EAGAIN is received. The following systems do not have this syscall, and will return partial writes if more than one vector is provided: * Darwin * Windows If `iov.len` is larger than `IOV_MAX`, a partial write will occur.","fields": [12300,12301,12302]},{"file": 36,"line": 1234,"col": 4},{"file": 36,"line": 1282,"col": 4,"docs": " Open and possibly create a file. Keeps trying if it gets interrupted. See also `openZ`.","fields": [12303,12304,12305]},{"file": 36,"line": 1291,"col": 4},{"file": 36,"line": 1295,"col": 4,"docs": " Open and possibly create a file. Keeps trying if it gets interrupted. See also `open`.","fields": [12306,12307,12308]},{"file": 36,"line": 1373,"col": 4,"docs": " Windows-only. The path parameter is [WTF-16](https://simonsapin.github.io/wtf-8/#potentially-ill-formed-utf-16) encoded. Translates the POSIX open API call to a Windows API call. TODO currently, this function does not handle all flag combinations or makes use of perm argument.","fields": [12309,12310,12311]},{"file": 36,"line": 1387,"col": 4,"docs": " Open and possibly create a file. Keeps trying if it gets interrupted. `file_path` is relative to the open directory handle `dir_fd`. See also `openatZ`.","fields": [12312,12313,12314,12315]},{"file": 36,"line": 1400,"col": 4,"docs": " Open and possibly create a file in WASI.","fields": [12316,12317,12318,12319,12320,12321,12322]},{"file": 36,"line": 1431,"col": 4},{"file": 36,"line": 1436,"col": 4,"docs": " Open and possibly create a file. Keeps trying if it gets interrupted. `file_path` is relative to the open directory handle `dir_fd`. See also `openat`.","fields": [12323,12324,12325,12326]},{"file": 36,"line": 1483,"col": 4,"docs": " Windows-only. Similar to `openat` but with pathname argument null-terminated WTF16 encoded. TODO currently, this function does not handle all flag combinations or makes use of perm argument.","fields": [12327,12328,12329,12330]},{"file": 36,"line": 1494,"col": 4,"fields": [12331]},{"file": 36,"line": 1504,"col": 4,"fields": [12332,12333]},{"file": 36,"line": 1517,"col": 4},{"file": 36,"line": 1531,"col": 4},{"file": 36,"line": 1536,"col": 4,"docs": " Like `execve` except the parameters are null-terminated, matching the syscall API on all targets. This removes the need for an allocator. This function ignores PATH environment variable. See `execvpeZ` for that.","fields": [12334,12335,12336]},{"file": 36,"line": 1563,"col": 4},{"file": 36,"line": 1565,"col": 4},{"file": 36,"line": 1573,"col": 4,"docs": " Like `execvpeZ` except if `arg0_expand` is `.expand`, then `argv` is mutable, and `argv[0]` is expanded to be the same absolute path that is passed to the execve syscall. If this function returns with an error, `argv[0]` will be restored to the value it was when it was passed in.","fields": [12337,12338,12339,12340]},{"file": 36,"line": 1627,"col": 4,"docs": " Like `execvpe` except the parameters are null-terminated, matching the syscall API on all targets. This removes the need for an allocator. This function also uses the PATH environment variable to get the full path to the executable. If `file` is an absolute path, this is the same as `execveZ`.","fields": [12341,12342,12343]},{"file": 36,"line": 1637,"col": 4,"docs": " Get an environment variable. See also `getenvZ`.","fields": [12344]},{"file": 36,"line": 1682,"col": 4},{"file": 36,"line": 1686,"col": 4,"docs": " Get an environment variable with a null-terminated name. See also `getenv`.","fields": [12345]},{"file": 36,"line": 1739,"col": 4},{"file": 36,"line": 1769,"col": 4},{"file": 36,"line": 1792,"col": 4,"docs": " Creates a symbolic link named `sym_link_path` which contains the string `target_path`. A symbolic link (also known as a soft link) may point to an existing file or to a nonexistent one; the latter case is known as a dangling link. If `sym_link_path` exists, it will not be overwritten. See also `symlinkZ.","fields": [12346,12347]},{"file": 36,"line": 1804,"col": 4},{"file": 36,"line": 1808,"col": 4,"docs": " This is the same as `symlink` except the parameters are null-terminated pointers. See also `symlink`.","fields": [12348,12349]},{"file": 36,"line": 1838,"col": 4,"docs": " Similar to `symlink`, however, creates a symbolic link named `sym_link_path` which contains the string `target_path` **relative** to `newdirfd` directory handle. A symbolic link (also known as a soft link) may point to an existing file or to a nonexistent one; the latter case is known as a dangling link. If `sym_link_path` exists, it will not be overwritten. See also `symlinkatWasi`, `symlinkatZ` and `symlinkatW`.","fields": [12350,12351,12352]},{"file": 36,"line": 1850,"col": 4},{"file": 36,"line": 1854,"col": 4,"docs": " WASI-only. The same as `symlinkat` but targeting WASI. See also `symlinkat`.","fields": [12353,12354,12355]},{"file": 36,"line": 1878,"col": 4,"docs": " The same as `symlinkat` except the parameters are null-terminated pointers. See also `symlinkat`.","fields": [12356,12357,12358]},{"file": 36,"line": 1902,"col": 4},{"file": 36,"line": 1917,"col": 4,"fields": [12359,12360,12361]},{"file": 36,"line": 1939,"col": 4,"fields": [12362,12363,12364]},{"file": 36,"line": 1945,"col": 4},{"file": 36,"line": 1947,"col": 4,"fields": [12365,12366,12367,12368,12369]},{"file": 36,"line": 1976,"col": 4,"fields": [12370,12371,12372,12373,12374]},{"file": 36,"line": 1988,"col": 4},{"file": 36,"line": 2013,"col": 4,"docs": " Delete a name and possibly the file it refers to. See also `unlinkZ`.","fields": [12375]},{"file": 36,"line": 2025,"col": 4},{"file": 36,"line": 2028,"col": 4,"docs": " Same as `unlink` except the parameter is a null terminated UTF8-encoded string.","fields": [12376]},{"file": 36,"line": 2053,"col": 4,"docs": " Windows-only. Same as `unlink` except the parameter is null-terminated, WTF16 encoded.","fields": [12377]},{"file": 36,"line": 2057,"col": 4},{"file": 36,"line": 2064,"col": 4,"docs": " Delete a file name and possibly the file it refers to, based on an open directory handle. Asserts that the path parameter has no null bytes.","fields": [12378,12379,12380]},{"file": 36,"line": 2076,"col": 4},{"file": 36,"line": 2080,"col": 4,"docs": " WASI-only. Same as `unlinkat` but targeting WASI. See also `unlinkat`.","fields": [12381,12382,12383]},{"file": 36,"line": 2111,"col": 4,"docs": " Same as `unlinkat` but `file_path` is a null-terminated string.","fields": [12384,12385,12386]},{"file": 36,"line": 2141,"col": 4,"docs": " Same as `unlinkat` but `sub_path_w` is UTF16LE, NT prefixed. Windows only.","fields": [12387,12388,12389]},{"file": 36,"line": 2146,"col": 4},{"file": 36,"line": 2171,"col": 4,"docs": " Change the name or location of a file.","fields": [12390,12391]},{"file": 36,"line": 2185,"col": 4},{"file": 36,"line": 2188,"col": 4,"docs": " Same as `rename` except the parameters are null-terminated byte arrays.","fields": [12392,12393]},{"file": 36,"line": 2220,"col": 4,"docs": " Same as `rename` except the parameters are null-terminated UTF16LE encoded byte arrays. Assumes target is Windows.","fields": [12394,12395]},{"file": 36,"line": 2226,"col": 4,"docs": " Change the name or location of a file based on an open directory handle.","fields": [12396,12397,12398,12399]},{"file": 36,"line": 2247,"col": 4,"docs": " WASI-only. Same as `renameat` expect targeting WASI. See also `renameat`.","fields": [12400,12401,12402,12403]},{"file": 36,"line": 2274,"col": 4,"docs": " Same as `renameat` except the parameters are null-terminated byte arrays.","fields": [12404,12405,12406,12407]},{"file": 36,"line": 2312,"col": 4,"docs": " Same as `renameat` but Windows-only and the path parameters are [WTF-16](https://simonsapin.github.io/wtf-8/#potentially-ill-formed-utf-16) encoded.","fields": [12408,12409,12410,12411,12412]},{"file": 36,"line": 2368,"col": 4,"fields": [12413,12414,12415]},{"file": 36,"line": 2380,"col": 4},{"file": 36,"line": 2382,"col": 4,"fields": [12416,12417,12418]},{"file": 36,"line": 2405,"col": 4,"fields": [12419,12420,12421]},{"file": 36,"line": 2430,"col": 4,"fields": [12422,12423,12424]},{"file": 36,"line": 2447,"col": 4},{"file": 36,"line": 2468,"col": 4,"docs": " Create a directory. `mode` is ignored on Windows.","fields": [12425,12426]},{"file": 36,"line": 2481,"col": 4,"docs": " Same as `mkdir` but the parameter is a null-terminated UTF8-encoded string.","fields": [12427,12428]},{"file": 36,"line": 2506,"col": 4,"docs": " Windows-only. Same as `mkdir` but the parameters is  WTF16 encoded.","fields": [12429,12430]},{"file": 36,"line": 2523,"col": 4},{"file": 36,"line": 2538,"col": 4,"docs": " Deletes an empty directory.","fields": [12431]},{"file": 36,"line": 2550,"col": 4},{"file": 36,"line": 2553,"col": 4,"docs": " Same as `rmdir` except the parameter is null-terminated.","fields": [12432]},{"file": 36,"line": 2578,"col": 4,"docs": " Windows-only. Same as `rmdir` except the parameter is WTF16 encoded.","fields": [12433]},{"file": 36,"line": 2585,"col": 4},{"file": 36,"line": 2601,"col": 4,"docs": " Changes the current working directory of the calling process. `dir_path` is recommended to be a UTF-8 encoded string.","fields": [12434]},{"file": 36,"line": 2615,"col": 4},{"file": 36,"line": 2618,"col": 4,"docs": " Same as `chdir` except the parameter is null-terminated.","fields": [12435]},{"file": 36,"line": 2640,"col": 4,"docs": " Windows-only. Same as `chdir` except the paramter is WTF16 encoded.","fields": [12436]},{"file": 36,"line": 2647,"col": 4},{"file": 36,"line": 2653,"col": 4,"fields": [12437]},{"file": 36,"line": 2667,"col": 4},{"file": 36,"line": 2687,"col": 4,"docs": " Read value of a symbolic link. The return value is a slice of `out_buffer` from index 0.","fields": [12438,12439]},{"file": 36,"line": 2699,"col": 4},{"file": 36,"line": 2703,"col": 4,"docs": " Windows-only. Same as `readlink` except `file_path` is WTF16 encoded. See also `readlinkZ`.","fields": [12440,12441]},{"file": 36,"line": 2708,"col": 4,"docs": " Same as `readlink` except `file_path` is null-terminated.","fields": [12442,12443]},{"file": 36,"line": 2732,"col": 4,"docs": " Similar to `readlink` except reads value of a symbolink link **relative** to `dirfd` directory handle. The return value is a slice of `out_buffer` from index 0. See also `readlinkatWasi`, `realinkatZ` and `realinkatW`.","fields": [12444,12445,12446]},{"file": 36,"line": 2744,"col": 4},{"file": 36,"line": 2748,"col": 4,"docs": " WASI-only. Same as `readlinkat` but targets WASI. See also `readlinkat`.","fields": [12447,12448,12449]},{"file": 36,"line": 2768,"col": 4,"docs": " Windows-only. Same as `readlinkat` except `file_path` is null-terminated, WTF16 encoded. See also `readlinkat`.","fields": [12450,12451,12452]},{"file": 36,"line": 2774,"col": 4,"docs": " Same as `readlinkat` except `file_path` is null-terminated. See also `readlinkat`.","fields": [12453,12454,12455]},{"file": 36,"line": 2795,"col": 4},{"file": 36,"line": 2800,"col": 4},{"file": 36,"line": 2802,"col": 4,"fields": [12456]},{"file": 36,"line": 2812,"col": 4,"fields": [12457]},{"file": 36,"line": 2821,"col": 4,"fields": [12458,12459]},{"file": 36,"line": 2831,"col": 4,"fields": [12460]},{"file": 36,"line": 2841,"col": 4,"fields": [12461]},{"file": 36,"line": 2850,"col": 4,"fields": [12462,12463]},{"file": 36,"line": 2927,"col": 4},{"file": 36,"line": 2955,"col": 4,"fields": [12464,12465,12466]},{"file": 36,"line": 3012,"col": 4},{"file": 36,"line": 3027,"col": 4},{"file": 36,"line": 3030,"col": 4,"docs": " Shutdown socket send/receive operations","fields": [12467,12468]},{"file": 36,"line": 3066,"col": 4,"fields": [12469]},{"file": 36,"line": 3074,"col": 4},{"file": 36,"line": 3117,"col": 4,"docs": " addr is `*const T` where T is one of the sockaddr","fields": [12470,12471,12472]},{"file": 36,"line": 3159,"col": 4},{"file": 36,"line": 3187,"col": 4,"fields": [12473,12474]},{"file": 36,"line": 3218,"col": 4},{"file": 36,"line": 3260,"col": 4,"docs": " Accept a connection on a socket. If `sockfd` is opened in non blocking mode, the function will return error.WouldBlock when EAGAIN is received.","fields": [12475,12476,12477,12478]},{"file": 36,"line": 3342,"col": 4},{"file": 36,"line": 3356,"col": 4,"fields": [12479]},{"file": 36,"line": 3369,"col": 4},{"file": 36,"line": 3395,"col": 4,"fields": [12480,12481,12482,12483]},{"file": 36,"line": 3415,"col": 4,"docs": " Waits for an I/O event on an epoll file descriptor. Returns the number of file descriptors ready for the requested I/O, or zero if no file descriptor became ready during the requested timeout milliseconds.","fields": [12484,12485,12486]},{"file": 36,"line": 3430,"col": 4},{"file": 36,"line": 3436,"col": 4,"fields": [12487,12488]},{"file": 36,"line": 3450,"col": 4},{"file": 36,"line": 3463,"col": 4,"fields": [12489,12490,12491]},{"file": 36,"line": 3492,"col": 4,"fields": [12492,12493,12494]},{"file": 36,"line": 3521,"col": 4},{"file": 36,"line": 3571,"col": 4,"docs": " Initiate a connection on a socket. If `sockfd` is opened in non blocking mode, the function will return error.WouldBlock when EAGAIN or EINPROGRESS is received.","fields": [12495,12496,12497]},{"file": 36,"line": 3623,"col": 4,"fields": [12498]},{"file": 36,"line": 3658,"col": 4},{"file": 36,"line": 3663,"col": 4,"fields": [12499,12500]},{"file": 36,"line": 3681,"col": 4},{"file": 36,"line": 3690,"col": 4,"docs": " Return information about a file descriptor.","fields": [12501]},{"file": 36,"line": 3723,"col": 4},{"file": 36,"line": 3728,"col": 4,"docs": " Similar to `fstat`, but returns stat of a resource pointed to by `pathname` which is relative to `dirfd` handle. See also `fstatatZ` and `fstatatWasi`.","fields": [12502,12503,12504]},{"file": 36,"line": 3739,"col": 4},{"file": 36,"line": 3743,"col": 4,"docs": " WASI-only. Same as `fstatat` but targeting WASI. See also `fstatat`.","fields": [12505,12506,12507]},{"file": 36,"line": 3762,"col": 4,"docs": " Same as `fstatat` but `pathname` is null-terminated. See also `fstatat`.","fields": [12508,12509,12510]},{"file": 36,"line": 3785,"col": 4},{"file": 36,"line": 3793,"col": 4,"fields": []},{"file": 36,"line": 3803,"col": 4},{"file": 36,"line": 3821,"col": 4,"fields": [12511,12512,12513,12514]},{"file": 36,"line": 3851,"col": 4},{"file": 36,"line": 3858,"col": 4,"docs": " initialize an inotify instance","fields": [12515]},{"file": 36,"line": 3870,"col": 4},{"file": 36,"line": 3880,"col": 4,"docs": " add a watch to an initialized inotify instance","fields": [12516,12517,12518]},{"file": 36,"line": 3885,"col": 4},{"file": 36,"line": 3888,"col": 4,"docs": " Same as `inotify_add_watch` except pathname is null-terminated.","fields": [12519,12520,12521]},{"file": 36,"line": 3906,"col": 4,"docs": " remove an existing watch from an inotify instance","fields": [12522,12523]},{"file": 36,"line": 3915,"col": 4},{"file": 36,"line": 3930,"col": 4,"docs": " `memory.len` must be page-aligned.","fields": [12524,12525]},{"file": 36,"line": 3941,"col": 4},{"file": 36,"line": 3943,"col": 4,"fields": []},{"file": 36,"line": 3953,"col": 4},{"file": 36,"line": 3975,"col": 4,"docs": " Map files or devices into memory. `length` does not need to be aligned. Use of a mapped region can result in these signals: * SIGSEGV - Attempted write into a region mapped as read-only. * SIGBUS - Attempted  access to a portion of the buffer that does not correspond to the file","fields": [12526,12527,12528,12529,12530,12531]},{"file": 36,"line": 4019,"col": 4,"docs": " Deletes the mappings for the specified address range, causing further references to addresses within the range to generate invalid memory references. Note that while POSIX allows unmapping a region in the middle of an existing mapping, Zig's munmap function does not, for two reasons: * It violates the Zig principle that resource deallocation must succeed. * The Windows function, VirtualFree, has this restriction.","fields": [12532]},{"file": 36,"line": 4028,"col": 4},{"file": 36,"line": 4045,"col": 4,"docs": " check user's permissions for a file TODO currently this assumes `mode` is `F.OK` on Windows.","fields": [12533,12534]},{"file": 36,"line": 4055,"col": 4},{"file": 36,"line": 4058,"col": 4,"docs": " Same as `access` except `path` is null-terminated.","fields": [12535,12536]},{"file": 36,"line": 4084,"col": 4,"docs": " Call from Windows-specific code if you already have a UTF-16LE encoded, null terminated string. Otherwise use `access` or `accessC`. TODO currently this ignores `mode`.","fields": [12537,12538]},{"file": 36,"line": 4100,"col": 4,"docs": " Check user's permissions for a file, based on an open directory handle. TODO currently this ignores `mode` and `flags` on Windows.","fields": [12539,12540,12541,12542]},{"file": 36,"line": 4110,"col": 4,"docs": " Same as `faccessat` except the path parameter is null-terminated.","fields": [12543,12544,12545,12546]},{"file": 36,"line": 4135,"col": 4,"docs": " Same as `faccessat` except asserts the target is Windows and the path parameter is NtDll-prefixed, null-terminated, WTF-16 encoded. TODO currently this ignores `mode` and `flags`","fields": [12547,12548,12549,12550]},{"file": 36,"line": 4174,"col": 4},{"file": 36,"line": 4180,"col": 4,"docs": " Creates a unidirectional data channel that can be used for interprocess communication.","fields": []},{"file": 36,"line": 4192,"col": 4,"fields": [12551]},{"file": 36,"line": 4243,"col": 4},{"file": 36,"line": 4250,"col": 4,"fields": [12552,12553,12554,12555,12556]},{"file": 36,"line": 4275,"col": 4},{"file": 36,"line": 4277,"col": 4,"fields": [12557,12558,12559,12560,12561]},{"file": 36,"line": 4301,"col": 4,"fields": [12562,12563]},{"file": 36,"line": 4309,"col": 4},{"file": 36,"line": 4366,"col": 4,"docs": " Repositions read/write file offset relative to the current offset.","fields": [12564,12565]},{"file": 36,"line": 4413,"col": 4,"docs": " Repositions read/write file offset relative to the end.","fields": [12566,12567]},{"file": 36,"line": 4506,"col": 4},{"file": 36,"line": 4513,"col": 4,"fields": [12568,12569,12570]},{"file": 36,"line": 4581,"col": 4},{"file": 36,"line": 4592,"col": 4,"docs": " Depending on the operating system `flock` may or may not interact with `fcntl` locks made by other processes.","fields": [12571,12572]},{"file": 36,"line": 4608,"col": 4},{"file": 36,"line": 4641,"col": 4,"docs": " Return the canonicalized absolute pathname. Expands all symbolic links and resolves references to `.`, `..`, and extra `/` characters in `pathname`. The return value is a slice of `out_buffer`, but not necessarily from the beginning. See also `realpathZ` and `realpathW`.","fields": [12573,12574]},{"file": 36,"line": 4653,"col": 4},{"file": 36,"line": 4656,"col": 4,"docs": " Same as `realpath` except `pathname` is null-terminated.","fields": [12575,12576]},{"file": 36,"line": 4690,"col": 4,"docs": " Same as `realpath` except `pathname` is UTF16LE-encoded.","fields": [12577,12578]},{"file": 36,"line": 4730,"col": 4,"docs": " Return canonical path of handle `fd`. This function is very host-specific and is not universally supported by all hosts. For example, while it generally works on Linux, macOS or Windows, it is unsupported on FreeBSD, or WASI.","fields": [12579,12580]},{"file": 36,"line": 4783,"col": 4,"docs": " Spurious wakeups are possible and no precision of timing is guaranteed.","fields": [12581,12582]},{"file": 36,"line": 4807,"col": 4,"fields": [12583,12584,12585]},{"file": 36,"line": 4889,"col": 4},{"file": 36,"line": 4893,"col": 4,"docs": " TODO: change this to return the timespec as a return value TODO: look into making clk_id an enum","fields": [12586,12587]},{"file": 36,"line": 4934,"col": 4,"fields": [12588,12589]},{"file": 36,"line": 4956,"col": 4},{"file": 36,"line": 4958,"col": 4,"fields": [12590]},{"file": 36,"line": 4972,"col": 4,"docs": " Used to convert a slice to a null terminated slice on the stack. TODO https://github.com/ziglang/zig/issues/287","fields": [12591]},{"file": 36,"line": 4986,"col": 4,"docs": " Whether or not error.Unexpected will print its value and a stack trace. if this happens the fix is to add the error code to the corresponding switch expression, possibly introduce a new error in the error set, and send a patch to Zig."},{"file": 36,"line": 4988,"col": 4},{"file": 36,"line": 4997,"col": 4,"docs": " Call this when you made a syscall or something that sets errno and you get an unexpected error.","fields": [12592]},{"file": 36,"line": 5005,"col": 4},{"file": 36,"line": 5013,"col": 4,"fields": [12593,12594]},{"file": 36,"line": 5025,"col": 4,"docs": " Examine and change a signal action.","fields": [12595,12596,12597]},{"file": 36,"line": 5034,"col": 4},{"file": 36,"line": 5058,"col": 4,"fields": [12598,12599]},{"file": 36,"line": 5089,"col": 4},{"file": 36,"line": 5091,"col": 4,"fields": [12600]},{"file": 36,"line": 5111,"col": 4,"fields": []},{"file": 36,"line": 5120,"col": 4,"fields": [12601,12602,12603,12604,12605,12606,12607]},{"file": 36,"line": 5170,"col": 4},{"file": 36,"line": 5217,"col": 4},{"file": 36,"line": 5236,"col": 4,"fields": [12608,12609,12610]},{"file": 36,"line": 5307,"col": 4},{"file": 36,"line": 5334,"col": 4,"docs": " Transmit a message to another socket. The `sendto` call may be used only when the socket is in a connected state (so that the intended recipient  is  known). The  following call     send(sockfd, buf, len, flags); is equivalent to     sendto(sockfd, buf, len, flags, NULL, 0); If  sendto()  is used on a connection-mode (`SOCK.STREAM`, `SOCK.SEQPACKET`) socket, the arguments `dest_addr` and `addrlen` are asserted to be `null` and `0` respectively, and asserted that the socket was actually connected. Otherwise, the address of the target is given by `dest_addr` with `addrlen` specifying  its  size. If the message is too long to pass atomically through the underlying protocol, `SendError.MessageTooBig` is returned, and the message is not transmitted. There is no  indication  of  failure  to  deliver. When the message does not fit into the send buffer of  the  socket,  `sendto`  normally  blocks, unless  the socket has been placed in nonblocking I/O mode.  In nonblocking mode it would fail with `SendError.WouldBlock`.  The `select` call may be used  to  determine when it is possible to send more data.","fields": [12611,12612,12613,12614,12615]},{"file": 36,"line": 5426,"col": 4,"docs": " Transmit a message to another socket. The `send` call may be used only when the socket is in a connected state (so that the intended recipient  is  known).   The  only  difference  between `send` and `write` is the presence of flags.  With a zero flags argument, `send` is equivalent to  `write`.   Also,  the  following call     send(sockfd, buf, len, flags); is equivalent to     sendto(sockfd, buf, len, flags, NULL, 0); There is no  indication  of  failure  to  deliver. When the message does not fit into the send buffer of  the  socket,  `send`  normally  blocks, unless  the socket has been placed in nonblocking I/O mode.  In nonblocking mode it would fail with `SendError.WouldBlock`.  The `select` call may be used  to  determine when it is possible to send more data.","fields": [12616,12617,12618]},{"file": 36,"line": 5445,"col": 4},{"file": 36,"line": 5489,"col": 4,"docs": " Transfer data between file descriptors, with optional headers and trailers. Returns the number of bytes written, which can be zero. The `sendfile` call copies `in_len` bytes from one file descriptor to another. When possible, this is done within the operating system kernel, which can provide better performance characteristics than transferring data from kernel to user space and back, such as with `read` and `write` calls. When `in_len` is `0`, it means to copy until the end of the input file has been reached. Note, however, that partial writes are still possible in this case. `in_fd` must be a file descriptor opened for reading, and `out_fd` must be a file descriptor opened for writing. They may be any kind of file descriptor; however, if `in_fd` is not a regular file system file, it may cause this function to fall back to calling `read` and `write`, in which case atomicity guarantees no longer apply. Copying begins reading at `in_offset`. The input file descriptor seek position is ignored and not updated. If the output file descriptor has a seek position, it is updated as bytes are written. When `in_offset` is past the end of the input file, it successfully reads 0 bytes. `flags` has different meanings per operating system; refer to the respective man pages. These systems support atomically sending everything, including headers and trailers: * macOS * FreeBSD These systems support in-kernel data copying, but headers and trailers are not sent atomically: * Linux Other systems fall back to calling `read` / `write`. Linux has a limit on how many bytes may be transferred in one `sendfile` call, which is `0x7ffff000` on both 64-bit and 32-bit systems. This is due to using a signed C int as the return value, as well as stuffing the errno codes into the last `4096` values. This is noted on the `sendfile` man page. The limit on Darwin is `0x7fffffff`, trying to write more than that returns EINVAL. The corresponding POSIX limit on this is `math.maxInt(isize)`.","fields": [12619,12620,12621,12622,12623,12624,12625]},{"file": 36,"line": 5770,"col": 4},{"file": 36,"line": 5811,"col": 4,"docs": " Transfer data between file descriptors at specified offsets. Returns the number of bytes written, which can less than requested. The `copy_file_range` call copies `len` bytes from one file descriptor to another. When possible, this is done within the operating system kernel, which can provide better performance characteristics than transferring data from kernel to user space and back, such as with `pread` and `pwrite` calls. `fd_in` must be a file descriptor opened for reading, and `fd_out` must be a file descriptor opened for writing. They may be any kind of file descriptor; however, if `fd_in` is not a regular file system file, it may cause this function to fall back to calling `pread` and `pwrite`, in which case atomicity guarantees no longer apply. If `fd_in` and `fd_out` are the same, source and target ranges must not overlap. The file descriptor seek positions are ignored and not updated. When `off_in` is past the end of the input file, it successfully reads 0 bytes. `flags` has different meanings per operating system; refer to the respective man pages. These systems support in-kernel data copying: * Linux 4.5 (cross-filesystem 5.3) Other systems fall back to calling `pread` / `pwrite`. Maximum offsets on Linux are `math.maxInt(i64)`.","fields": [12626,12627,12628,12629,12630,12631]},{"file": 36,"line": 5857,"col": 4},{"file": 36,"line": 5865,"col": 4,"fields": [12632,12633]},{"file": 36,"line": 5895,"col": 4},{"file": 36,"line": 5903,"col": 4,"fields": [12634,12635,12636]},{"file": 36,"line": 5922,"col": 4},{"file": 36,"line": 5949,"col": 4,"fields": [12637,12638,12639]},{"file": 36,"line": 5955,"col": 4,"docs": " If `sockfd` is opened in non blocking mode, the function will return error.WouldBlock when EAGAIN is received.","fields": [12640,12641,12642,12643,12644]},{"file": 36,"line": 5999,"col": 4},{"file": 36,"line": 6001,"col": 4,"fields": [12645,12646,12647]},{"file": 36,"line": 6049,"col": 4},{"file": 36,"line": 6068,"col": 4},{"file": 36,"line": 6090,"col": 4,"docs": " Set a socket's options.","fields": [12648,12649,12650,12651]},{"file": 36,"line": 6122,"col": 4},{"file": 36,"line": 6132,"col": 4},{"file": 36,"line": 6134,"col": 4,"fields": [12652,12653]},{"file": 36,"line": 6152,"col": 4},{"file": 36,"line": 6153,"col": 4},{"file": 36,"line": 6163,"col": 4,"fields": [12654,12655]},{"file": 36,"line": 6168,"col": 4,"fields": [12656]},{"file": 36,"line": 6179,"col": 4},{"file": 36,"line": 6181,"col": 4,"fields": [12657]},{"file": 36,"line": 6194,"col": 4},{"file": 36,"line": 6196,"col": 4,"fields": [12658,12659,12660]},{"file": 36,"line": 6210,"col": 4},{"file": 36,"line": 6215,"col": 4,"fields": [12661,12662]},{"file": 36,"line": 6232,"col": 4,"fields": [12663,12664,12665]},{"file": 36,"line": 6246,"col": 4},{"file": 36,"line": 6254,"col": 4,"docs": " Write all pending file contents and metadata modifications to all filesystems.","fields": []},{"file": 36,"line": 6259,"col": 4,"docs": " Write all pending file contents and metadata modifications to the filesystem which contains the specified file.","fields": [12666]},{"file": 36,"line": 6272,"col": 4,"docs": " Write all pending file contents and metadata modifications for the specified file descriptor to the underlying filesystem.","fields": [12667]},{"file": 36,"line": 6296,"col": 4,"docs": " Write all pending file contents for the specified file descriptor to the underlying filesystem, but not necessarily the metadata.","fields": [12668]},{"file": 36,"line": 6314,"col": 4},{"file": 36,"line": 6329,"col": 4,"fields": [12669,12670]},{"file": 36,"line": 6356,"col": 4},{"file": 36,"line": 6358,"col": 4,"fields": [12671]},{"file": 36,"line": 6373,"col": 4},{"file": 36,"line": 6375,"col": 4,"fields": [12672,12673]},{"file": 36,"line": 6390,"col": 4},{"file": 36,"line": 6424,"col": 4,"docs": " Give advice about use of memory. This syscall is optional and is sometimes configured to be disabled.","fields": [12674,12675,12676]},{"file": 36,"line": 6438,"col": 4},{"file": 36,"line": 6492,"col": 4,"fields": [12677,12678,12679,12680,12681]},{"file": 36,"line": 16,"col": 0},{"file": 36,"line": 17,"col": 0},{"file": 36,"line": 18,"col": 0},{"file": 36,"line": 19,"col": 0},{"file": 36,"line": 20,"col": 0},{"file": 36,"line": 21,"col": 0},{"file": 36,"line": 22,"col": 0},{"file": 36,"line": 23,"col": 0},{"file": 36,"line": 24,"col": 0},{"file": 36,"line": 25,"col": 0},{"file": 36,"line": 393,"col": 0,"fields": [12682]},{"file": 36,"line": 1335,"col": 0,"fields": [12683]},{"file": 36,"line": 4531,"col": 0,"fields": [12684,12685]},{"file": 36,"line": 5447,"col": 0,"fields": [12686]},{"file": 36,"line": 5784,"col": 0},{"file": 36,"line": 6154,"col": 0,"fields": [12687]},{"file": 37,"line": 12,"col": 4},{"file": 37,"line": 13,"col": 4},{"file": 37,"line": 14,"col": 4},{"file": 37,"line": 15,"col": 4},{"file": 37,"line": 18,"col": 4,"docs": " The result is a slice of `out_buffer`, from index `0`.","fields": [12688]},{"file": 37,"line": 56,"col": 4,"docs": " Caller owns resulting `BufMap`.","fields": [12689]},{"file": 37,"line": 147,"col": 4},{"file": 37,"line": 156,"col": 4,"docs": " Caller must free returned memory.","fields": [12690,12691]},{"file": 37,"line": 185,"col": 4,"fields": [12692,12693]},{"file": 37,"line": 201,"col": 4},{"file": 37,"line": 228,"col": 4},{"file": 37,"line": 301,"col": 4},{"file": 37,"line": 444,"col": 4},{"file": 37,"line": 510,"col": 4,"fields": []},{"file": 37,"line": 515,"col": 4,"docs": " You must deinitialize iterator's internal buffers by calling `deinit` when done.","fields": [12694]},{"file": 37,"line": 541,"col": 4,"docs": " Caller must call argsFree on result.","fields": [12695]},{"file": 37,"line": 581,"col": 4,"fields": [12696,12697]},{"file": 37,"line": 619,"col": 4},{"file": 37,"line": 625,"col": 4,"docs": " POSIX function which gets a uid from username.","fields": [12698]},{"file": 37,"line": 634,"col": 4,"docs": " TODO this reads /etc/passwd. But sometimes the user/id mapping is in something else like NIS, AD, etc. See `man nss` or look at an strace for `id myuser`.","fields": [12699]},{"file": 37,"line": 720,"col": 4,"fields": []},{"file": 37,"line": 743,"col": 4,"docs": " Caller owns the result value and each inner slice. TODO Remove the `Allocator` requirement from this API, which will remove the `Allocator` requirement from `std.zig.system.NativeTargetInfo.detect`. Most likely this will require introducing a new, lower-level function which takes a callback function, and then this function which takes an allocator can exist on top of it.","fields": [12700]},{"file": 37,"line": 820,"col": 4,"docs": " Tells whether calling the `execv` or `execve` functions will be a compile error."},{"file": 37,"line": 825,"col": 4},{"file": 37,"line": 835,"col": 4,"docs": " Replaces the current process image with the executed process. This function must allocate memory to add a null terminating bytes on path and each arg. It must also convert to KEY=VALUE\\0 format for environment variables, and include null pointers after the args and after the environment variables. `argv[0]` is the executable path. This function also uses the PATH environment variable to get the full path to the executable. Due to the heap-allocation, it is illegal to call this function in a fork() child. For that use case, use the `std.os` functions directly.","fields": [12701,12702]},{"file": 37,"line": 847,"col": 4,"docs": " Replaces the current process image with the executed process. This function must allocate memory to add a null terminating bytes on path and each arg. It must also convert to KEY=VALUE\\0 format for environment variables, and include null pointers after the args and after the environment variables. `argv[0]` is the executable path. This function also uses the PATH environment variable to get the full path to the executable. Due to the heap-allocation, it is illegal to call this function in a fork() child. For that use case, use the `std.os` functions directly.","fields": [12703,12704,12705]},{"file": 37,"line": 0,"col": 0},{"file": 37,"line": 1,"col": 0},{"file": 37,"line": 2,"col": 0},{"file": 37,"line": 3,"col": 0},{"file": 37,"line": 4,"col": 0},{"file": 37,"line": 5,"col": 0},{"file": 37,"line": 6,"col": 0},{"file": 37,"line": 7,"col": 0},{"file": 37,"line": 8,"col": 0},{"file": 37,"line": 9,"col": 0},{"file": 37,"line": 10,"col": 0},{"file": 37,"line": 609,"col": 0,"fields": [12706,12707]},{"file": 38,"line": 13,"col": 4,"docs": " Contains constants for the C0 control codes of the ASCII encoding. https://en.wikipedia.org/wiki/C0_and_C1_control_codes"},{"file": 38,"line": 190,"col": 4,"fields": [12708]},{"file": 38,"line": 195,"col": 4,"fields": [12709]},{"file": 38,"line": 199,"col": 4,"fields": [12710]},{"file": 38,"line": 203,"col": 4,"fields": [12711]},{"file": 38,"line": 207,"col": 4,"fields": [12712]},{"file": 38,"line": 211,"col": 4,"fields": [12713]},{"file": 38,"line": 215,"col": 4,"fields": [12714]},{"file": 38,"line": 219,"col": 4,"fields": [12715]},{"file": 38,"line": 223,"col": 4,"fields": [12716]},{"file": 38,"line": 229,"col": 4,"docs": " All the values for which isSpace() returns true. This may be used with e.g. std.mem.trim() to trim whiteSpace."},{"file": 38,"line": 245,"col": 4,"fields": [12717]},{"file": 38,"line": 249,"col": 4,"fields": [12718]},{"file": 38,"line": 253,"col": 4,"fields": [12719]},{"file": 38,"line": 257,"col": 4,"fields": [12720]},{"file": 38,"line": 287,"col": 4,"docs": " Writes a lower case copy of `ascii_string` to `output`. Asserts `output.len >= ascii_string.len`.","fields": [12721,12722]},{"file": 38,"line": 303,"col": 4,"docs": " Allocates a lower case copy of `ascii_string`. Caller owns returned string and must free with `allocator`.","fields": [12723,12724]},{"file": 38,"line": 316,"col": 4,"docs": " Writes an upper case copy of `ascii_string` to `output`. Asserts `output.len >= ascii_string.len`.","fields": [12725,12726]},{"file": 38,"line": 332,"col": 4,"docs": " Allocates an upper case copy of `ascii_string`. Caller owns returned string and must free with `allocator`.","fields": [12727,12728]},{"file": 38,"line": 344,"col": 4,"docs": " Compares strings `a` and `b` case insensitively and returns whether they are equal.","fields": [12729,12730]},{"file": 38,"line": 358,"col": 4,"fields": [12731,12732]},{"file": 38,"line": 367,"col": 4,"fields": [12733,12734]},{"file": 38,"line": 378,"col": 4,"docs": " Finds `substr` in `container`, ignoring case, starting at `start_index`. TODO boyer-moore algorithm","fields": [12735,12736,12737]},{"file": 38,"line": 390,"col": 4,"docs": " Finds `substr` in `container`, ignoring case, starting at index 0.","fields": [12738,12739]},{"file": 38,"line": 404,"col": 4,"docs": " Compares two slices of numbers lexicographically. O(n).","fields": [12740,12741]},{"file": 38,"line": 419,"col": 4,"docs": " Returns true if lhs < rhs, false otherwise TODO rename \"IgnoreCase\" to \"Insensitive\" in this entire file.","fields": [12742,12743]},{"file": 38,"line": 9,"col": 0},{"file": 38,"line": 53,"col": 0},{"file": 38,"line": 68,"col": 0},{"file": 39,"line": 8,"col": 4},{"file": 39,"line": 11,"col": 4,"docs": " Spurious wakeups are possible and no precision of timing is guaranteed.","fields": [12744]},{"file": 39,"line": 57,"col": 4,"docs": " Get a calendar timestamp, in seconds, relative to UTC 1970-01-01. Precision of timing depends on the hardware and operating system. The return value is signed because it is possible to have a date that is before the epoch. See `std.os.clock_gettime` for a POSIX timestamp.","fields": []},{"file": 39,"line": 66,"col": 4,"docs": " Get a calendar timestamp, in milliseconds, relative to UTC 1970-01-01. Precision of timing depends on the hardware and operating system. The return value is signed because it is possible to have a date that is before the epoch. See `std.os.clock_gettime` for a POSIX timestamp.","fields": []},{"file": 39,"line": 76,"col": 4,"docs": " Get a calendar timestamp, in nanoseconds, relative to UTC 1970-01-01. Precision of timing depends on the hardware and operating system. On Windows this has a maximum granularity of 100 nanoseconds. The return value is signed because it is possible to have a date that is before the epoch. See `std.os.clock_gettime` for a POSIX timestamp.","fields": []},{"file": 39,"line": 100,"col": 4},{"file": 39,"line": 101,"col": 4},{"file": 39,"line": 102,"col": 4},{"file": 39,"line": 103,"col": 4},{"file": 39,"line": 104,"col": 4},{"file": 39,"line": 105,"col": 4},{"file": 39,"line": 106,"col": 4},{"file": 39,"line": 109,"col": 4},{"file": 39,"line": 110,"col": 4},{"file": 39,"line": 111,"col": 4},{"file": 39,"line": 112,"col": 4},{"file": 39,"line": 113,"col": 4},{"file": 39,"line": 114,"col": 4},{"file": 39,"line": 117,"col": 4},{"file": 39,"line": 118,"col": 4},{"file": 39,"line": 119,"col": 4},{"file": 39,"line": 120,"col": 4},{"file": 39,"line": 121,"col": 4},{"file": 39,"line": 124,"col": 4},{"file": 39,"line": 125,"col": 4},{"file": 39,"line": 126,"col": 4},{"file": 39,"line": 127,"col": 4},{"file": 39,"line": 137,"col": 4,"docs": " A monotonic high-performance timer. Timer.start() must be called to initialize the struct, which captures the counter frequency on windows and darwin, records the resolution, and gives the user an opportunity to check for the existnece of monotonic clocks without forcing them to check for error on each read. .resolution is in nanoseconds on all platforms but .start_time's meaning depends on the OS. On Windows and Darwin it is a hardware counter value that requires calculation to convert to a meaninful unit."},{"file": 39,"line": 0,"col": 0},{"file": 39,"line": 1,"col": 0},{"file": 39,"line": 2,"col": 0},{"file": 39,"line": 3,"col": 0},{"file": 39,"line": 4,"col": 0},{"file": 39,"line": 5,"col": 0},{"file": 39,"line": 6,"col": 0},{"file": 40,"line": 151,"col": 4,"docs": " Returns true if the given unicode codepoint can be encoded in UTF-8.","fields": [12745]},{"file": 40,"line": 194,"col": 4,"fields": [12746]},{"file": 40,"line": 221,"col": 4,"docs": " Utf8View iterates the code points of a utf-8 encoded string. ``` var utf8 = (try std.unicode.Utf8View.init(\"hi there\")).iterator(); while (utf8.nextCodepointSlice()) |codepoint| {   std.debug.warn(\"got codepoint {}\\n\", .{codepoint}); } ```"},{"file": 40,"line": 255,"col": 4},{"file": 40,"line": 298,"col": 4},{"file": 40,"line": 552,"col": 4,"docs": " Caller must free returned memory.","fields": [12747,12748]},{"file": 40,"line": 569,"col": 4,"docs": " Caller must free returned memory.","fields": [12749,12750]},{"file": 40,"line": 591,"col": 4,"docs": " Asserts that the output buffer is big enough. Returns end byte index into utf8.","fields": [12751,12752]},{"file": 40,"line": 663,"col": 4,"fields": [12753,12754]},{"file": 40,"line": 804,"col": 4,"docs": " Return a Formatter for a Utf16le string","fields": [12755]},{"file": 40,"line": 0,"col": 0},{"file": 40,"line": 1,"col": 0},{"file": 40,"line": 2,"col": 0},{"file": 40,"line": 3,"col": 0},{"file": 40,"line": 64,"col": 0},{"file": 40,"line": 80,"col": 0},{"file": 40,"line": 98,"col": 0},{"file": 40,"line": 122,"col": 0},{"file": 40,"line": 333,"col": 0,"fields": []},{"file": 40,"line": 359,"col": 0,"fields": []},{"file": 40,"line": 367,"col": 0,"fields": [12756,12757,12758]},{"file": 40,"line": 375,"col": 0,"fields": []},{"file": 40,"line": 395,"col": 0,"fields": []},{"file": 40,"line": 405,"col": 0,"fields": []},{"file": 40,"line": 425,"col": 0,"fields": []},{"file": 40,"line": 436,"col": 0,"fields": []},{"file": 40,"line": 455,"col": 0,"fields": []},{"file": 40,"line": 487,"col": 0,"fields": []},{"file": 40,"line": 500,"col": 0,"fields": []},{"file": 40,"line": 516,"col": 0,"fields": []},{"file": 40,"line": 536,"col": 0,"fields": [12759,12760]},{"file": 40,"line": 540,"col": 0,"fields": [12761,12762]},{"file": 40,"line": 544,"col": 0,"fields": [12763]},{"file": 40,"line": 780,"col": 0,"docs": " Print the given `utf16le` string","fields": [12764,12765,12766,12767]},{"file": 40,"line": 874,"col": 0,"fields": []},{"file": 40,"line": 886,"col": 0,"fields": []},{"file": 41,"line": 518,"col": 4,"fields": []},{"file": 41,"line": 556,"col": 4,"fields": []},{"file": 41,"line": 2,"col": 0},{"file": 41,"line": 3,"col": 0},{"file": 41,"line": 4,"col": 0},{"file": 41,"line": 5,"col": 0},{"file": 41,"line": 6,"col": 0},{"file": 41,"line": 7,"col": 0},{"file": 41,"line": 8,"col": 0},{"file": 41,"line": 9,"col": 0},{"file": 41,"line": 10,"col": 0},{"file": 41,"line": 12,"col": 0},{"file": 41,"line": 14,"col": 0},{"file": 41,"line": 85,"col": 0,"fields": []},{"file": 41,"line": 90,"col": 0,"fields": []},{"file": 41,"line": 94,"col": 0,"fields": []},{"file": 41,"line": 100,"col": 0,"fields": []},{"file": 41,"line": 105,"col": 0,"fields": [12768]},{"file": 41,"line": 173,"col": 0,"fields": [12769]},{"file": 41,"line": 193,"col": 0,"fields": []},{"file": 41,"line": 199,"col": 0,"fields": []},{"file": 41,"line": 208,"col": 0,"fields": [12770,12771]},{"file": 41,"line": 230,"col": 0,"fields": []},{"file": 41,"line": 306,"col": 0,"fields": []},{"file": 41,"line": 317,"col": 0,"fields": []},{"file": 41,"line": 330,"col": 0,"fields": []},{"file": 41,"line": 393,"col": 0,"fields": [12772]},{"file": 41,"line": 420,"col": 0,"fields": [12773,12774,12775]},{"file": 41,"line": 429,"col": 0,"fields": [12776,12777,12778]},{"file": 41,"line": 444,"col": 0,"fields": [12779,12780]},{"file": 41,"line": 450,"col": 0},{"file": 41,"line": 454,"col": 0,"fields": []},{"file": 41,"line": 483,"col": 0,"fields": []},{"file": 41,"line": 508,"col": 0,"fields": [12781]},{"file": 42,"line": 21,"col": 4},{"file": 42,"line": 30,"col": 4,"docs": " Sets the event if not already set and wakes up all the threads waiting on the event. It is safe to call `set` multiple times before calling `wait`. However it is illegal to call `set` after `wait` is called until the event is `reset`. This function is thread-safe.","fields": [12782]},{"file": 42,"line": 45,"col": 4,"docs": " Resets the event to its original, unset state. This function is *not* thread-safe. It is equivalent to calling `deinit` followed by `init` but without the possibility of failure.","fields": [12783]},{"file": 42,"line": 49,"col": 4},{"file": 42,"line": 58,"col": 4,"docs": " Wait for the event to be set by blocking the current thread. A timeout in nanoseconds can be provided as a hint for how long the thread should block on the unset event before returning `TimedWaitResult.timed_out`. Thread-safe. No precision of timing is guaranteed. Upon return from `timedWait`, the only function available to be called in `StaticResetEvent` is `reset`.","fields": [12784,12785]},{"file": 42,"line": 64,"col": 4,"docs": " For single-threaded builds, we use this to detect deadlocks. In unsafe modes this ends up being no-ops."},{"file": 42,"line": 115,"col": 4},{"file": 42,"line": 9,"col": 0},{"file": 42,"line": 10,"col": 0},{"file": 42,"line": 11,"col": 0},{"file": 42,"line": 12,"col": 0},{"file": 42,"line": 13,"col": 0},{"file": 42,"line": 14,"col": 0},{"file": 42,"line": 15,"col": 0},{"file": 42,"line": 16,"col": 0},{"file": 42,"line": 17,"col": 0},{"file": 15,"line": 235,"col": 8,"fields": [12786]},{"file": 43,"line": 8,"col": 4},{"file": 43,"line": 44,"col": 4,"docs": " Set to resizeFn if in-place resize is not supported.","fields": [12787,12788,12789,12790,12791,12792]},{"file": 43,"line": 183,"col": 4,"fields": [12793,12794,12795,12796,12797]},{"file": 43,"line": 194,"col": 4,"fields": [12798,12799,12800,12801,12802,12803]},{"file": 43,"line": 228,"col": 4,"docs": " Allocates an array of `n + 1` items of type `T` and sets the first `n` items to `undefined` and the last item to `sentinel`. Depending on the Allocator implementation, it may be required to call `free` once the memory is no longer needed, to avoid a resource leak. If the `Allocator` implementation is unknown, then correct code will call `free` when done. For allocating a single item, see `create`.","fields": [12804,12805,12806,12807]},{"file": 43,"line": 248,"col": 4,"fields": [12808,12809,12810,12811,12812]},{"file": 43,"line": 259,"col": 4},{"file": 43,"line": 329,"col": 4,"docs": " This function requests a new byte size for an existing allocation, which can be larger, smaller, or the same size as the old memory allocation. This function is preferred over `shrink`, because it can fail, even when shrinking. This gives the allocator a chance to perform a cheap shrink operation if possible, or otherwise return OutOfMemory, indicating that the caller should keep their capacity, for example in `std.ArrayList.shrink`. If you need guaranteed success, call `shrink`. If `new_n` is 0, this is the same as `free` and it always succeeds.","fields": [12813,12814,12815]},{"file": 43,"line": 348,"col": 4,"docs": " This is the same as `realloc`, except caller may additionally request a new alignment, which can be larger, smaller, or the same as the old allocation.","fields": [12816,12817,12818,12819,12820]},{"file": 43,"line": 403,"col": 4,"docs": " This is the same as `shrink`, except caller may additionally request a new alignment, which must be smaller or the same as the old allocation.","fields": [12821,12822,12823,12824]},{"file": 43,"line": 462,"col": 4,"docs": " Copies `m` to newly allocated memory, with a null-terminated element. Caller owns the memory.","fields": [12825,12826,12827]},{"file": 43,"line": 2,"col": 0},{"file": 43,"line": 3,"col": 0},{"file": 43,"line": 4,"col": 0},{"file": 43,"line": 5,"col": 0},{"file": 43,"line": 6,"col": 0},{"file": 43,"line": 212,"col": 0,"fields": [12828,12829,12830]},{"file": 25,"line": 353,"col": 4},{"file": 21,"line": 293,"col": 4},{"file": 21,"line": 322,"col": 4,"fields": [12831,12832]},{"file": 44,"line": 14,"col": 4},{"file": 44,"line": 15,"col": 4},{"file": 44,"line": 16,"col": 4},{"file": 44,"line": 18,"col": 4},{"file": 44,"line": 19,"col": 4},{"file": 44,"line": 20,"col": 4},{"file": 44,"line": 22,"col": 4},{"file": 44,"line": 23,"col": 4},{"file": 44,"line": 24,"col": 4},{"file": 44,"line": 107,"col": 4,"docs": " Naively combines a series of paths with the native path seperator and null terminator. Allocates memory for the result, which must be freed by the caller.","fields": [12833,12834]},{"file": 44,"line": 189,"col": 4},{"file": 44,"line": 191,"col": 4,"fields": [12835]},{"file": 44,"line": 234,"col": 4,"fields": [12836]},{"file": 44,"line": 242,"col": 4},{"file": 44,"line": 244,"col": 4,"fields": [12837]},{"file": 44,"line": 248,"col": 4,"fields": [12838]},{"file": 44,"line": 252,"col": 4},{"file": 44,"line": 254,"col": 4,"fields": [12839]},{"file": 44,"line": 297,"col": 4},{"file": 44,"line": 388,"col": 4,"fields": [12840]},{"file": 44,"line": 396,"col": 4,"fields": [12841]},{"file": 44,"line": 655,"col": 4,"docs": " This function is like a series of `cd` statements executed one after another. It resolves \".\" and \"..\". The result does not have a trailing path separator. If all paths are relative it uses the current working directory as a starting point. Note: all usage of this function should be audited due to the existence of symlinks. Without performing actual syscalls, resolving `..` could be incorrect.","fields": [12842,12843]},{"file": 44,"line": 816,"col": 4,"docs": " Strip the last component from a file path. If the path is a file in the current directory (no directory component) then returns null. If the path is the root directory, returns null.","fields": [12844]},{"file": 44,"line": 824,"col": 4,"fields": [12845]},{"file": 44,"line": 858,"col": 4,"fields": [12846]},{"file": 44,"line": 958,"col": 4,"fields": [12847]},{"file": 44,"line": 1066,"col": 4,"docs": " Returns the relative path from `from` to `to`. If `from` and `to` each resolve to the same path (after calling `resolve` on each), a zero-length string is returned. On Windows this canonicalizes the drive to a capital letter and paths to `\\\\`.","fields": [12848,12849,12850]},{"file": 44,"line": 1074,"col": 4,"fields": [12851,12852,12853]},{"file": 44,"line": 1147,"col": 4,"fields": [12854,12855,12856]},{"file": 44,"line": 1263,"col": 4,"docs": " Returns the extension of the file name (if any). This function will search for the file extension (separated by a `.`) and will return the text after the `.`. Files that end with `.` are considered to have no extension, files that start with `.` Examples: - `\"main.zig\"`     ⇒ `\".zig\"` - `\"src/main.zig\"` ⇒ `\".zig\"` - `\".gitignore\"`   ⇒ `\"\"` - `\"keep.\"`        ⇒ `\".\"` - `\"src.keep.me\"`  ⇒ `\".me\"` - `\"/src/keep.me\"`  ⇒ `\".me\"` - `\"/src/keep.me/\"`  ⇒ `\".me\"` The returned slice is guaranteed to have its pointer within the start and end pointer address range of `path`, even if it is length zero.","fields": [12857]},{"file": 44,"line": 0,"col": 0},{"file": 44,"line": 1,"col": 0},{"file": 44,"line": 2,"col": 0},{"file": 44,"line": 3,"col": 0},{"file": 44,"line": 4,"col": 0},{"file": 44,"line": 5,"col": 0},{"file": 44,"line": 6,"col": 0},{"file": 44,"line": 7,"col": 0},{"file": 44,"line": 8,"col": 0},{"file": 44,"line": 9,"col": 0},{"file": 44,"line": 10,"col": 0},{"file": 44,"line": 11,"col": 0},{"file": 44,"line": 12,"col": 0},{"file": 44,"line": 112,"col": 0,"fields": [12858,12859,12860]},{"file": 44,"line": 123,"col": 0,"fields": [12861,12862,12863]},{"file": 44,"line": 289,"col": 0,"fields": [12864,12865]},{"file": 44,"line": 293,"col": 0,"fields": [12866,12867]},{"file": 44,"line": 400,"col": 0,"fields": [12868,12869]},{"file": 44,"line": 798,"col": 0,"fields": [12870,12871]},{"file": 44,"line": 804,"col": 0,"fields": [12872,12873]},{"file": 44,"line": 934,"col": 0,"fields": [12874,12875]},{"file": 44,"line": 942,"col": 0,"fields": [12876,12877]},{"file": 44,"line": 1050,"col": 0,"fields": [12878,12879]},{"file": 44,"line": 1054,"col": 0,"fields": [12880,12881]},{"file": 44,"line": 1058,"col": 0,"fields": [12882,12883]},{"file": 44,"line": 1238,"col": 0,"fields": [12884,12885,12886]},{"file": 44,"line": 1244,"col": 0,"fields": [12887,12888,12889]},{"file": 44,"line": 1270,"col": 0,"fields": [12890,12891]},{"file": 20,"line": 492,"col": 8},{"file": 20,"line": 520,"col": 8,"fields": [12892]},{"file": 42,"line": 123,"col": 8,"docs": " This function is provided so that this type can be re-used inside `std.Thread.ResetEvent`.","fields": [12893]},{"file": 42,"line": 129,"col": 8,"docs": " This function is provided so that this type can be re-used inside `std.Thread.ResetEvent`.","fields": [12894]},{"file": 42,"line": 133,"col": 8,"fields": [12895]},{"file": 42,"line": 161,"col": 8,"fields": [12896]},{"file": 42,"line": 165,"col": 8},{"file": 42,"line": 171,"col": 8},{"file": 42,"line": 192,"col": 8},{"file": 42,"line": 228,"col": 8},{"file": 42,"line": 118,"col": 4},{"file": 42,"line": 119,"col": 4},{"file": 45,"line": 7,"col": 4,"docs": " This allocator takes an existing allocator, wraps it, and provides an interface where you can allocate without freeing, and then free it all together."},{"file": 45,"line": 0,"col": 0},{"file": 45,"line": 1,"col": 0},{"file": 45,"line": 2,"col": 0},{"file": 45,"line": 3,"col": 0},{"file": 46,"line": 20,"col": 4},{"file": 46,"line": 21,"col": 4},{"file": 46,"line": 22,"col": 4},{"file": 46,"line": 23,"col": 4},{"file": 46,"line": 24,"col": 4},{"file": 46,"line": 25,"col": 4},{"file": 46,"line": 26,"col": 4},{"file": 46,"line": 27,"col": 4},{"file": 46,"line": 28,"col": 4},{"file": 46,"line": 29,"col": 4},{"file": 46,"line": 31,"col": 4},{"file": 46,"line": 33,"col": 4},{"file": 46,"line": 46,"col": 4},{"file": 46,"line": 129,"col": 4},{"file": 46,"line": 131,"col": 4,"fields": [12897,12898,12899]},{"file": 46,"line": 139,"col": 4,"fields": [12900,12901,12902,12903]},{"file": 46,"line": 144,"col": 4,"fields": [12904,12905,12906,12907]},{"file": 46,"line": 155,"col": 4},{"file": 46,"line": 161,"col": 4,"docs": " A Zig wrapper around `NtDeviceIoControlFile` and `NtFsControlFile` syscalls. It implements similar behavior to `DeviceIoControl` and is meant to serve as a direct substitute for that call. TODO work out if we need to expose other arguments to the underlying syscalls.","fields": [12908,12909,12910,12911]},{"file": 46,"line": 214,"col": 4,"fields": [12912,12913,12914]},{"file": 46,"line": 225,"col": 4},{"file": 46,"line": 227,"col": 4,"fields": [12915,12916,12917]},{"file": 46,"line": 235,"col": 4},{"file": 46,"line": 240,"col": 4,"docs": " Call RtlGenRandom() instead of CryptGetRandom() on Windows https://github.com/rust-lang-nursery/rand/issues/111 https://bugzilla.mozilla.org/show_bug.cgi?id=504270","fields": [12918]},{"file": 46,"line": 257,"col": 4},{"file": 46,"line": 263,"col": 4,"fields": [12919,12920]},{"file": 46,"line": 267,"col": 4,"fields": [12921,12922,12923]},{"file": 46,"line": 279,"col": 4,"fields": [12924,12925,12926,12927]},{"file": 46,"line": 307,"col": 4},{"file": 46,"line": 309,"col": 4,"fields": [12928,12929,12930,12931]},{"file": 46,"line": 324,"col": 4},{"file": 46,"line": 326,"col": 4,"fields": [12932,12933,12934,12935]},{"file": 46,"line": 339,"col": 4},{"file": 46,"line": 346,"col": 4,"fields": [12936,12937,12938,12939,12940]},{"file": 46,"line": 375,"col": 4},{"file": 46,"line": 382,"col": 4,"fields": [12941,12942,12943,12944]},{"file": 46,"line": 416,"col": 4,"fields": [12945]},{"file": 46,"line": 420,"col": 4},{"file": 46,"line": 503,"col": 4},{"file": 46,"line": 595,"col": 4},{"file": 46,"line": 606,"col": 4,"fields": [12946]},{"file": 46,"line": 632,"col": 4},{"file": 46,"line": 660,"col": 4},{"file": 46,"line": 675,"col": 4,"docs": " Needs either: - `SeCreateSymbolicLinkPrivilege` privilege or - Developer mode on Windows 10 otherwise fails with `error.AccessDenied`. In which case `sym_link_path` may still be created on the file system but will lack reparse processing data applied to it.","fields": [12947,12948,12949,12950]},{"file": 46,"line": 729,"col": 4},{"file": 46,"line": 737,"col": 4,"fields": [12951,12952,12953]},{"file": 46,"line": 831,"col": 4},{"file": 46,"line": 842,"col": 4},{"file": 46,"line": 847,"col": 4,"fields": [12954,12955]},{"file": 46,"line": 906,"col": 4},{"file": 46,"line": 908,"col": 4,"fields": [12956,12957,12958]},{"file": 46,"line": 914,"col": 4,"fields": [12959,12960,12961]},{"file": 46,"line": 924,"col": 4},{"file": 46,"line": 929,"col": 4,"fields": [12962]},{"file": 46,"line": 939,"col": 4},{"file": 46,"line": 957,"col": 4,"docs": " The SetFilePointerEx function with the `dwMoveMethod` parameter set to `FILE_CURRENT`.","fields": [12963,12964]},{"file": 46,"line": 968,"col": 4,"docs": " The SetFilePointerEx function with the `dwMoveMethod` parameter set to `FILE_END`.","fields": [12965,12966]},{"file": 46,"line": 993,"col": 4,"fields": [12967,12968]},{"file": 46,"line": 1041,"col": 4},{"file": 46,"line": 1051,"col": 4,"docs": " Specifies how to format volume path in the result of `GetFinalPathNameByHandle`. Defaults to DOS volume names."},{"file": 46,"line": 1065,"col": 4,"docs": " Returns canonical (normalized) path of handle. Use `GetFinalPathNameByHandleFormat` to specify whether the path is meant to include NT or DOS volume name (e.g., `\\Device\\HarddiskVolume0\\foo.txt` versus `C:\\foo.txt`). If DOS volume name format is selected, note that this function does *not* prepend `\\\\?\\` prefix to the resultant path.","fields": [12969,12970,12971]},{"file": 46,"line": 1201,"col": 4},{"file": 46,"line": 1203,"col": 4,"fields": [12972,12973,12974]},{"file": 46,"line": 1218,"col": 4},{"file": 46,"line": 1230,"col": 4},{"file": 46,"line": 1236,"col": 4,"fields": [12975]},{"file": 46,"line": 1241,"col": 4,"fields": [12976]},{"file": 46,"line": 1254,"col": 4,"fields": [12977,12978]},{"file": 46,"line": 1268,"col": 4,"fields": []},{"file": 46,"line": 1305,"col": 4,"docs": " Microsoft requires WSAStartup to be called to initialize, or else WSASocketW will return WSANOTINITIALISED. Since this is a standard library, we do not have the luxury of putting initialization code anywhere, because we would not want to pay the cost of calling WSAStartup if there ended up being no networking. Also, if Zig code is used as a library, Zig is not in charge of the start code, and we couldn't put in any initialization code even if we wanted to. The documentation for WSAStartup mentions that there must be a matching WSACleanup call. It is not possible for the Zig Standard Library to honor this for the same reason - there is nowhere to put deinitialization code. So, API users of the zig std lib have two options:  * (recommended) The simple, cross-platform way: just call `WSASocketW`    and don't worry about it. Zig will call WSAStartup() in a thread-safe    manner and never deinitialize networking. This is ideal for an    application which has the capability to do networking.  * The getting-your-hands-dirty way: call `WSAStartup()` before doing    networking, so that the error handling code for WSANOTINITIALISED never    gets run, which then allows the application or library to call `WSACleanup()`.    This could make sense for a library, which has init and deinit    functions for the whole library's lifetime.","fields": [12979,12980,12981,12982,12983,12984]},{"file": 46,"line": 1349,"col": 4,"fields": [12985,12986,12987]},{"file": 46,"line": 1353,"col": 4,"fields": [12988,12989]},{"file": 46,"line": 1357,"col": 4,"fields": [12990]},{"file": 46,"line": 1367,"col": 4,"fields": [12991,12992,12993]},{"file": 46,"line": 1372,"col": 4,"fields": [12994,12995,12996]},{"file": 46,"line": 1376,"col": 4,"fields": [12997,12998,12999]},{"file": 46,"line": 1380,"col": 4,"fields": [13000,13001,13002]},{"file": 46,"line": 1393,"col": 4,"fields": [13003,13004,13005,13006,13007,13008]},{"file": 46,"line": 1403,"col": 4,"fields": [13009,13010,13011,13012,13013,13014]},{"file": 46,"line": 1414,"col": 4,"fields": [13015,13016,13017]},{"file": 46,"line": 1418,"col": 4,"fields": [13018,13019,13020,13021,13022,13023]},{"file": 46,"line": 1449,"col": 4,"fields": [13024,13025,13026]},{"file": 46,"line": 1459,"col": 4},{"file": 46,"line": 1461,"col": 4,"fields": [13027,13028]},{"file": 46,"line": 1469,"col": 4},{"file": 46,"line": 1483,"col": 4},{"file": 46,"line": 1493,"col": 4,"fields": [13029,13030]},{"file": 46,"line": 1506,"col": 4,"fields": [13031,13032]},{"file": 46,"line": 1515,"col": 4},{"file": 46,"line": 1517,"col": 4,"fields": []},{"file": 46,"line": 1521,"col": 4,"fields": [13033]},{"file": 46,"line": 1525,"col": 4},{"file": 46,"line": 1530,"col": 4,"fields": [13034,13035,13036]},{"file": 46,"line": 1541,"col": 4},{"file": 46,"line": 1548,"col": 4,"fields": [13037,13038,13039,13040,13041,13042,13043,13044,13045,13046]},{"file": 46,"line": 1583,"col": 4},{"file": 46,"line": 1588,"col": 4,"fields": [13047]},{"file": 46,"line": 1599,"col": 4,"fields": [13048]},{"file": 46,"line": 1621,"col": 4,"fields": [13049,13050,13051,13052]},{"file": 46,"line": 1625,"col": 4,"fields": [13053,13054,13055]},{"file": 46,"line": 1629,"col": 4,"fields": [13056]},{"file": 46,"line": 1633,"col": 4,"fields": [13057]},{"file": 46,"line": 1637,"col": 4},{"file": 46,"line": 1639,"col": 4,"fields": [13058]},{"file": 46,"line": 1652,"col": 4},{"file": 46,"line": 1654,"col": 4,"fields": [13059,13060,13061,13062]},{"file": 46,"line": 1668,"col": 4},{"file": 46,"line": 1706,"col": 4},{"file": 46,"line": 1710,"col": 4,"fields": [13063,13064,13065,13066,13067]},{"file": 46,"line": 1753,"col": 4,"docs": " A file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 A.M. January 1, 1601 Coordinated Universal Time (UTC). This function returns the number of nanoseconds since the canonical epoch, which is the POSIX one (Jan 01, 1970 AD).","fields": [13068]},{"file": 46,"line": 1758,"col": 4,"fields": [13069]},{"file": 46,"line": 1763,"col": 4,"fields": [13070]},{"file": 46,"line": 1769,"col": 4,"docs": " Converts a number of nanoseconds since the POSIX epoch to a Windows FILETIME.","fields": [13071]},{"file": 46,"line": 1777,"col": 4},{"file": 46,"line": 1787,"col": 4,"docs": " The error type for `removeDotDirsSanitized`"},{"file": 46,"line": 1863,"col": 4,"docs": " Same as `sliceToPrefixedFileW` but accepts a pointer to a null-terminated path.","fields": [13072]},{"file": 46,"line": 1917,"col": 4,"docs": " Assumes an absolute path.","fields": [13073]},{"file": 46,"line": 1949,"col": 4,"docs": " Loads a Winsock extension function in runtime specified by a GUID.","fields": [13074,13075,13076]},{"file": 46,"line": 2003,"col": 4,"fields": [13077]},{"file": 46,"line": 2017,"col": 4,"fields": [13078,13079]},{"file": 46,"line": 2024,"col": 4,"fields": [13080,13081]},{"file": 46,"line": 2032,"col": 4},{"file": 46,"line": 2033,"col": 4},{"file": 46,"line": 2034,"col": 4},{"file": 46,"line": 2035,"col": 4},{"file": 46,"line": 2038,"col": 4,"docs": " The standard input device. Initially, this is the console input buffer, CONIN$."},{"file": 46,"line": 2041,"col": 4,"docs": " The standard output device. Initially, this is the active console screen buffer, CONOUT$."},{"file": 46,"line": 2044,"col": 4,"docs": " The standard error device. Initially, this is the active console screen buffer, CONOUT$."},{"file": 46,"line": 2046,"col": 4},{"file": 46,"line": 2051,"col": 4},{"file": 46,"line": 2052,"col": 4},{"file": 46,"line": 2053,"col": 4},{"file": 46,"line": 2054,"col": 4},{"file": 46,"line": 2055,"col": 4},{"file": 46,"line": 2056,"col": 4},{"file": 46,"line": 2057,"col": 4},{"file": 46,"line": 2058,"col": 4},{"file": 46,"line": 2059,"col": 4},{"file": 46,"line": 2060,"col": 4},{"file": 46,"line": 2061,"col": 4},{"file": 46,"line": 2062,"col": 4},{"file": 46,"line": 2063,"col": 4},{"file": 46,"line": 2064,"col": 4},{"file": 46,"line": 2065,"col": 4},{"file": 46,"line": 2066,"col": 4},{"file": 46,"line": 2067,"col": 4},{"file": 46,"line": 2068,"col": 4},{"file": 46,"line": 2069,"col": 4},{"file": 46,"line": 2070,"col": 4},{"file": 46,"line": 2071,"col": 4},{"file": 46,"line": 2072,"col": 4},{"file": 46,"line": 2073,"col": 4},{"file": 46,"line": 2074,"col": 4},{"file": 46,"line": 2075,"col": 4},{"file": 46,"line": 2076,"col": 4},{"file": 46,"line": 2077,"col": 4},{"file": 46,"line": 2078,"col": 4},{"file": 46,"line": 2079,"col": 4},{"file": 46,"line": 2080,"col": 4},{"file": 46,"line": 2081,"col": 4},{"file": 46,"line": 2082,"col": 4},{"file": 46,"line": 2083,"col": 4},{"file": 46,"line": 2084,"col": 4},{"file": 46,"line": 2085,"col": 4},{"file": 46,"line": 2086,"col": 4},{"file": 46,"line": 2087,"col": 4},{"file": 46,"line": 2088,"col": 4},{"file": 46,"line": 2089,"col": 4},{"file": 46,"line": 2090,"col": 4},{"file": 46,"line": 2091,"col": 4},{"file": 46,"line": 2092,"col": 4},{"file": 46,"line": 2093,"col": 4},{"file": 46,"line": 2094,"col": 4},{"file": 46,"line": 2095,"col": 4},{"file": 46,"line": 2096,"col": 4},{"file": 46,"line": 2097,"col": 4},{"file": 46,"line": 2099,"col": 4},{"file": 46,"line": 2100,"col": 4},{"file": 46,"line": 2101,"col": 4},{"file": 46,"line": 2103,"col": 4},{"file": 46,"line": 2105,"col": 4},{"file": 46,"line": 2106,"col": 4},{"file": 46,"line": 2108,"col": 4},{"file": 46,"line": 2109,"col": 4},{"file": 46,"line": 2110,"col": 4},{"file": 46,"line": 2111,"col": 4},{"file": 46,"line": 2112,"col": 4},{"file": 46,"line": 2113,"col": 4},{"file": 46,"line": 2114,"col": 4},{"file": 46,"line": 2115,"col": 4},{"file": 46,"line": 2116,"col": 4},{"file": 46,"line": 2117,"col": 4},{"file": 46,"line": 2118,"col": 4},{"file": 46,"line": 2119,"col": 4},{"file": 46,"line": 2120,"col": 4},{"file": 46,"line": 2121,"col": 4},{"file": 46,"line": 2122,"col": 4},{"file": 46,"line": 2123,"col": 4},{"file": 46,"line": 2124,"col": 4},{"file": 46,"line": 2125,"col": 4},{"file": 46,"line": 2126,"col": 4},{"file": 46,"line": 2127,"col": 4},{"file": 46,"line": 2128,"col": 4},{"file": 46,"line": 2129,"col": 4},{"file": 46,"line": 2130,"col": 4},{"file": 46,"line": 2131,"col": 4},{"file": 46,"line": 2132,"col": 4},{"file": 46,"line": 2133,"col": 4},{"file": 46,"line": 2134,"col": 4},{"file": 46,"line": 2135,"col": 4},{"file": 46,"line": 2136,"col": 4},{"file": 46,"line": 2137,"col": 4},{"file": 46,"line": 2138,"col": 4},{"file": 46,"line": 2139,"col": 4},{"file": 46,"line": 2140,"col": 4},{"file": 46,"line": 2141,"col": 4},{"file": 46,"line": 2142,"col": 4},{"file": 46,"line": 2143,"col": 4},{"file": 46,"line": 2144,"col": 4},{"file": 46,"line": 2145,"col": 4},{"file": 46,"line": 2146,"col": 4},{"file": 46,"line": 2147,"col": 4},{"file": 46,"line": 2148,"col": 4},{"file": 46,"line": 2149,"col": 4},{"file": 46,"line": 2150,"col": 4},{"file": 46,"line": 2151,"col": 4},{"file": 46,"line": 2152,"col": 4},{"file": 46,"line": 2153,"col": 4},{"file": 46,"line": 2154,"col": 4},{"file": 46,"line": 2155,"col": 4},{"file": 46,"line": 2156,"col": 4},{"file": 46,"line": 2157,"col": 4},{"file": 46,"line": 2158,"col": 4},{"file": 46,"line": 2159,"col": 4},{"file": 46,"line": 2160,"col": 4},{"file": 46,"line": 2161,"col": 4},{"file": 46,"line": 2162,"col": 4},{"file": 46,"line": 2163,"col": 4},{"file": 46,"line": 2164,"col": 4},{"file": 46,"line": 2165,"col": 4},{"file": 46,"line": 2166,"col": 4},{"file": 46,"line": 2167,"col": 4},{"file": 46,"line": 2169,"col": 4},{"file": 46,"line": 2170,"col": 4},{"file": 46,"line": 2171,"col": 4},{"file": 46,"line": 2172,"col": 4},{"file": 46,"line": 2173,"col": 4},{"file": 46,"line": 2174,"col": 4},{"file": 46,"line": 2175,"col": 4},{"file": 46,"line": 2176,"col": 4},{"file": 46,"line": 2177,"col": 4},{"file": 46,"line": 2178,"col": 4},{"file": 46,"line": 2179,"col": 4},{"file": 46,"line": 2180,"col": 4},{"file": 46,"line": 2181,"col": 4},{"file": 46,"line": 2182,"col": 4},{"file": 46,"line": 2183,"col": 4},{"file": 46,"line": 2184,"col": 4},{"file": 46,"line": 2185,"col": 4},{"file": 46,"line": 2186,"col": 4},{"file": 46,"line": 2187,"col": 4},{"file": 46,"line": 2188,"col": 4},{"file": 46,"line": 2189,"col": 4},{"file": 46,"line": 2190,"col": 4},{"file": 46,"line": 2191,"col": 4},{"file": 46,"line": 2192,"col": 4},{"file": 46,"line": 2193,"col": 4},{"file": 46,"line": 2196,"col": 4,"docs": " https://docs.microsoft.com/en-us/windows-hardware/drivers/kernel/buffer-descriptions-for-i-o-control-codes"},{"file": 46,"line": 2203,"col": 4},{"file": 46,"line": 2204,"col": 4},{"file": 46,"line": 2205,"col": 4},{"file": 46,"line": 2208,"col": 4,"docs": " https://docs.microsoft.com/en-us/windows-hardware/drivers/kernel/defining-i-o-control-codes","fields": [13082,13083,13084,13085]},{"file": 46,"line": 2215,"col": 4},{"file": 46,"line": 2217,"col": 4},{"file": 46,"line": 2219,"col": 4},{"file": 46,"line": 2231,"col": 4},{"file": 46,"line": 2239,"col": 4},{"file": 46,"line": 2247,"col": 4},{"file": 46,"line": 2251,"col": 4},{"file": 46,"line": 2255,"col": 4},{"file": 46,"line": 2259,"col": 4},{"file": 46,"line": 2263,"col": 4},{"file": 46,"line": 2267,"col": 4},{"file": 46,"line": 2271,"col": 4},{"file": 46,"line": 2275,"col": 4},{"file": 46,"line": 2280,"col": 4},{"file": 46,"line": 2287,"col": 4},{"file": 46,"line": 2296,"col": 4},{"file": 46,"line": 2375,"col": 4},{"file": 46,"line": 2388,"col": 4},{"file": 46,"line": 2395,"col": 4},{"file": 46,"line": 2398,"col": 4},{"file": 46,"line": 2399,"col": 4},{"file": 46,"line": 2400,"col": 4},{"file": 46,"line": 2401,"col": 4},{"file": 46,"line": 2402,"col": 4},{"file": 46,"line": 2403,"col": 4},{"file": 46,"line": 2404,"col": 4},{"file": 46,"line": 2405,"col": 4},{"file": 46,"line": 2406,"col": 4},{"file": 46,"line": 2407,"col": 4},{"file": 46,"line": 2408,"col": 4},{"file": 46,"line": 2409,"col": 4},{"file": 46,"line": 2410,"col": 4},{"file": 46,"line": 2411,"col": 4},{"file": 46,"line": 2412,"col": 4},{"file": 46,"line": 2413,"col": 4},{"file": 46,"line": 2414,"col": 4},{"file": 46,"line": 2415,"col": 4},{"file": 46,"line": 2416,"col": 4},{"file": 46,"line": 2417,"col": 4},{"file": 46,"line": 2418,"col": 4},{"file": 46,"line": 2419,"col": 4},{"file": 46,"line": 2421,"col": 4},{"file": 46,"line": 2434,"col": 4},{"file": 46,"line": 2440,"col": 4,"docs": " Return the normalized drive name. This is the default."},{"file": 46,"line": 2443,"col": 4,"docs": " Return the opened file name (not normalized)."},{"file": 46,"line": 2446,"col": 4,"docs": " Return the path with the drive letter. This is the default."},{"file": 46,"line": 2449,"col": 4,"docs": " Return the path with a volume GUID path instead of the drive name."},{"file": 46,"line": 2452,"col": 4,"docs": " Return the path with no drive information."},{"file": 46,"line": 2455,"col": 4,"docs": " Return the path with the volume device path."},{"file": 46,"line": 2457,"col": 4},{"file": 46,"line": 2463,"col": 4},{"file": 46,"line": 2464,"col": 4},{"file": 46,"line": 2465,"col": 4},{"file": 46,"line": 2467,"col": 4},{"file": 46,"line": 2468,"col": 4},{"file": 46,"line": 2470,"col": 4},{"file": 46,"line": 2471,"col": 4},{"file": 46,"line": 2473,"col": 4},{"file": 46,"line": 2474,"col": 4},{"file": 46,"line": 2476,"col": 4},{"file": 46,"line": 2477,"col": 4},{"file": 46,"line": 2478,"col": 4},{"file": 46,"line": 2479,"col": 4},{"file": 46,"line": 2481,"col": 4},{"file": 46,"line": 2482,"col": 4},{"file": 46,"line": 2483,"col": 4},{"file": 46,"line": 2485,"col": 4},{"file": 46,"line": 2486,"col": 4},{"file": 46,"line": 2487,"col": 4},{"file": 46,"line": 2488,"col": 4},{"file": 46,"line": 2489,"col": 4},{"file": 46,"line": 2490,"col": 4},{"file": 46,"line": 2491,"col": 4},{"file": 46,"line": 2492,"col": 4},{"file": 46,"line": 2493,"col": 4},{"file": 46,"line": 2496,"col": 4},{"file": 46,"line": 2497,"col": 4},{"file": 46,"line": 2498,"col": 4},{"file": 46,"line": 2499,"col": 4},{"file": 46,"line": 2500,"col": 4},{"file": 46,"line": 2501,"col": 4},{"file": 46,"line": 2502,"col": 4},{"file": 46,"line": 2505,"col": 4},{"file": 46,"line": 2506,"col": 4},{"file": 46,"line": 2507,"col": 4},{"file": 46,"line": 2508,"col": 4},{"file": 46,"line": 2509,"col": 4},{"file": 46,"line": 2510,"col": 4},{"file": 46,"line": 2511,"col": 4},{"file": 46,"line": 2512,"col": 4},{"file": 46,"line": 2513,"col": 4},{"file": 46,"line": 2514,"col": 4},{"file": 46,"line": 2515,"col": 4},{"file": 46,"line": 2516,"col": 4},{"file": 46,"line": 2517,"col": 4},{"file": 46,"line": 2518,"col": 4},{"file": 46,"line": 2520,"col": 4},{"file": 46,"line": 2521,"col": 4},{"file": 46,"line": 2522,"col": 4},{"file": 46,"line": 2523,"col": 4},{"file": 46,"line": 2524,"col": 4},{"file": 46,"line": 2525,"col": 4},{"file": 46,"line": 2526,"col": 4},{"file": 46,"line": 2527,"col": 4},{"file": 46,"line": 2528,"col": 4},{"file": 46,"line": 2529,"col": 4},{"file": 46,"line": 2530,"col": 4},{"file": 46,"line": 2531,"col": 4},{"file": 46,"line": 2532,"col": 4},{"file": 46,"line": 2533,"col": 4},{"file": 46,"line": 2534,"col": 4},{"file": 46,"line": 2535,"col": 4},{"file": 46,"line": 2536,"col": 4},{"file": 46,"line": 2537,"col": 4},{"file": 46,"line": 2538,"col": 4},{"file": 46,"line": 2539,"col": 4},{"file": 46,"line": 2541,"col": 4},{"file": 46,"line": 2542,"col": 4},{"file": 46,"line": 2543,"col": 4},{"file": 46,"line": 2544,"col": 4},{"file": 46,"line": 2545,"col": 4},{"file": 46,"line": 2547,"col": 4},{"file": 46,"line": 2548,"col": 4},{"file": 46,"line": 2549,"col": 4},{"file": 46,"line": 2550,"col": 4},{"file": 46,"line": 2551,"col": 4},{"file": 46,"line": 2552,"col": 4},{"file": 46,"line": 2553,"col": 4},{"file": 46,"line": 2554,"col": 4},{"file": 46,"line": 2555,"col": 4},{"file": 46,"line": 2556,"col": 4},{"file": 46,"line": 2557,"col": 4},{"file": 46,"line": 2558,"col": 4},{"file": 46,"line": 2559,"col": 4},{"file": 46,"line": 2560,"col": 4},{"file": 46,"line": 2561,"col": 4},{"file": 46,"line": 2562,"col": 4},{"file": 46,"line": 2563,"col": 4},{"file": 46,"line": 2564,"col": 4},{"file": 46,"line": 2565,"col": 4},{"file": 46,"line": 2568,"col": 4},{"file": 46,"line": 2569,"col": 4},{"file": 46,"line": 2571,"col": 4},{"file": 46,"line": 2572,"col": 4},{"file": 46,"line": 2574,"col": 4},{"file": 46,"line": 2581,"col": 4},{"file": 46,"line": 2602,"col": 4},{"file": 46,"line": 2603,"col": 4},{"file": 46,"line": 2604,"col": 4},{"file": 46,"line": 2605,"col": 4},{"file": 46,"line": 2606,"col": 4},{"file": 46,"line": 2607,"col": 4},{"file": 46,"line": 2608,"col": 4},{"file": 46,"line": 2609,"col": 4},{"file": 46,"line": 2610,"col": 4},{"file": 46,"line": 2611,"col": 4},{"file": 46,"line": 2612,"col": 4},{"file": 46,"line": 2613,"col": 4},{"file": 46,"line": 2614,"col": 4},{"file": 46,"line": 2615,"col": 4},{"file": 46,"line": 2617,"col": 4},{"file": 46,"line": 2619,"col": 4},{"file": 46,"line": 2621,"col": 4},{"file": 46,"line": 2622,"col": 4},{"file": 46,"line": 2623,"col": 4},{"file": 46,"line": 2624,"col": 4},{"file": 46,"line": 2625,"col": 4},{"file": 46,"line": 2627,"col": 4},{"file": 46,"line": 2628,"col": 4},{"file": 46,"line": 2630,"col": 4},{"file": 46,"line": 2631,"col": 4},{"file": 46,"line": 2632,"col": 4},{"file": 46,"line": 2633,"col": 4},{"file": 46,"line": 2634,"col": 4},{"file": 46,"line": 2635,"col": 4},{"file": 46,"line": 2637,"col": 4},{"file": 46,"line": 2638,"col": 4},{"file": 46,"line": 2639,"col": 4},{"file": 46,"line": 2641,"col": 4},{"file": 46,"line": 2642,"col": 4},{"file": 46,"line": 2643,"col": 4},{"file": 46,"line": 2644,"col": 4},{"file": 46,"line": 2647,"col": 4},{"file": 46,"line": 2648,"col": 4},{"file": 46,"line": 2649,"col": 4},{"file": 46,"line": 2650,"col": 4},{"file": 46,"line": 2651,"col": 4},{"file": 46,"line": 2652,"col": 4},{"file": 46,"line": 2653,"col": 4},{"file": 46,"line": 2654,"col": 4},{"file": 46,"line": 2657,"col": 4},{"file": 46,"line": 2658,"col": 4},{"file": 46,"line": 2659,"col": 4},{"file": 46,"line": 2660,"col": 4},{"file": 46,"line": 2661,"col": 4},{"file": 46,"line": 2662,"col": 4},{"file": 46,"line": 2663,"col": 4},{"file": 46,"line": 2664,"col": 4},{"file": 46,"line": 2665,"col": 4},{"file": 46,"line": 2666,"col": 4},{"file": 46,"line": 2667,"col": 4},{"file": 46,"line": 2668,"col": 4},{"file": 46,"line": 2669,"col": 4},{"file": 46,"line": 2672,"col": 4},{"file": 46,"line": 2673,"col": 4},{"file": 46,"line": 2674,"col": 4},{"file": 46,"line": 2675,"col": 4},{"file": 46,"line": 2677,"col": 4},{"file": 46,"line": 2678,"col": 4},{"file": 46,"line": 2680,"col": 4},{"file": 46,"line": 2693,"col": 4},{"file": 46,"line": 2698,"col": 4},{"file": 46,"line": 2717,"col": 4},{"file": 46,"line": 2719,"col": 4},{"file": 46,"line": 2720,"col": 4},{"file": 46,"line": 2770,"col": 4},{"file": 46,"line": 2772,"col": 4},{"file": 46,"line": 2773,"col": 4},{"file": 46,"line": 2774,"col": 4},{"file": 46,"line": 2775,"col": 4},{"file": 46,"line": 2776,"col": 4},{"file": 46,"line": 2777,"col": 4},{"file": 46,"line": 2778,"col": 4},{"file": 46,"line": 2779,"col": 4},{"file": 46,"line": 2780,"col": 4},{"file": 46,"line": 2781,"col": 4},{"file": 46,"line": 2782,"col": 4},{"file": 46,"line": 2784,"col": 4},{"file": 46,"line": 2785,"col": 4},{"file": 46,"line": 2786,"col": 4},{"file": 46,"line": 2787,"col": 4},{"file": 46,"line": 2788,"col": 4},{"file": 46,"line": 2789,"col": 4},{"file": 46,"line": 2790,"col": 4},{"file": 46,"line": 2791,"col": 4},{"file": 46,"line": 2792,"col": 4},{"file": 46,"line": 2793,"col": 4},{"file": 46,"line": 2794,"col": 4},{"file": 46,"line": 2796,"col": 4},{"file": 46,"line": 2797,"col": 4},{"file": 46,"line": 2798,"col": 4},{"file": 46,"line": 2799,"col": 4},{"file": 46,"line": 2800,"col": 4},{"file": 46,"line": 2801,"col": 4},{"file": 46,"line": 2802,"col": 4},{"file": 46,"line": 2803,"col": 4},{"file": 46,"line": 2804,"col": 4},{"file": 46,"line": 2805,"col": 4},{"file": 46,"line": 2806,"col": 4},{"file": 46,"line": 2808,"col": 4},{"file": 46,"line": 2815,"col": 4},{"file": 46,"line": 2822,"col": 4},{"file": 46,"line": 2827,"col": 4},{"file": 46,"line": 2832,"col": 4},{"file": 46,"line": 2834,"col": 4},{"file": 46,"line": 2835,"col": 4},{"file": 46,"line": 2843,"col": 4},{"file": 46,"line": 2844,"col": 4},{"file": 46,"line": 2846,"col": 4},{"file": 46,"line": 2848,"col": 4},{"file": 46,"line": 2850,"col": 4},{"file": 46,"line": 2851,"col": 4},{"file": 46,"line": 2852,"col": 4},{"file": 46,"line": 2853,"col": 4},{"file": 46,"line": 2856,"col": 4},{"file": 46,"line": 2858,"col": 4},{"file": 46,"line": 2866,"col": 4},{"file": 46,"line": 2867,"col": 4},{"file": 46,"line": 2868,"col": 4},{"file": 46,"line": 2869,"col": 4},{"file": 46,"line": 2870,"col": 4},{"file": 46,"line": 2872,"col": 4},{"file": 46,"line": 2874,"col": 4},{"file": 46,"line": 2875,"col": 4},{"file": 46,"line": 2876,"col": 4},{"file": 46,"line": 2877,"col": 4},{"file": 46,"line": 2878,"col": 4},{"file": 46,"line": 2879,"col": 4},{"file": 46,"line": 2880,"col": 4},{"file": 46,"line": 2881,"col": 4},{"file": 46,"line": 2883,"col": 4},{"file": 46,"line": 2891,"col": 4},{"file": 46,"line": 2892,"col": 4},{"file": 46,"line": 2893,"col": 4},{"file": 46,"line": 2894,"col": 4},{"file": 46,"line": 2896,"col": 4},{"file": 46,"line": 2901,"col": 4},{"file": 46,"line": 2913,"col": 4},{"file": 46,"line": 2922,"col": 4},{"file": 46,"line": 2923,"col": 4},{"file": 46,"line": 2924,"col": 4},{"file": 46,"line": 2925,"col": 4},{"file": 46,"line": 2927,"col": 4},{"file": 46,"line": 2931,"col": 4},{"file": 46,"line": 2933,"col": 4},{"file": 46,"line": 2934,"col": 4},{"file": 46,"line": 2935,"col": 4},{"file": 46,"line": 2936,"col": 4},{"file": 46,"line": 2937,"col": 4},{"file": 46,"line": 2948,"col": 4,"docs": " > The maximum path of 32,767 characters is approximate, because the \"\\\\?\\\" > prefix may be expanded to a longer string by the system at run time, and > this expansion applies to the total length. from https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#maximum-path-length-limitation"},{"file": 46,"line": 2950,"col": 4},{"file": 46,"line": 2951,"col": 4},{"file": 46,"line": 2952,"col": 4},{"file": 46,"line": 2953,"col": 4},{"file": 46,"line": 2954,"col": 4},{"file": 46,"line": 2955,"col": 4},{"file": 46,"line": 2956,"col": 4},{"file": 46,"line": 2958,"col": 4},{"file": 46,"line": 2959,"col": 4},{"file": 46,"line": 2960,"col": 4},{"file": 46,"line": 2961,"col": 4},{"file": 46,"line": 2962,"col": 4},{"file": 46,"line": 2964,"col": 4},{"file": 46,"line": 3192,"col": 4},{"file": 46,"line": 3197,"col": 4},{"file": 46,"line": 3199,"col": 4},{"file": 46,"line": 3208,"col": 4},{"file": 46,"line": 3209,"col": 4},{"file": 46,"line": 3210,"col": 4},{"file": 46,"line": 3211,"col": 4},{"file": 46,"line": 3212,"col": 4},{"file": 46,"line": 3213,"col": 4},{"file": 46,"line": 3214,"col": 4},{"file": 46,"line": 3215,"col": 4},{"file": 46,"line": 3217,"col": 4},{"file": 46,"line": 3223,"col": 4},{"file": 46,"line": 3224,"col": 4},{"file": 46,"line": 3225,"col": 4},{"file": 46,"line": 3226,"col": 4},{"file": 46,"line": 3227,"col": 4},{"file": 46,"line": 3229,"col": 4},{"file": 46,"line": 3246,"col": 4,"docs": " Process Environment Block Microsoft documentation of this is incomplete, the fields here are taken from various resources including:  - https://github.com/wine-mirror/wine/blob/1aff1e6a370ee8c0213a0fd4b220d121da8527aa/include/winternl.h#L269  - https://www.geoffchappell.com/studies/windows/win32/ntdll/structs/peb/index.htm"},{"file": 46,"line": 3407,"col": 4,"docs": " The `PEB_LDR_DATA` structure is the main record of what modules are loaded in a process. It is essentially the head of three double-linked lists of `LDR_DATA_TABLE_ENTRY` structures which each represent one loaded module. Microsoft documentation of this is incomplete, the fields here are taken from various resources including:  - https://www.geoffchappell.com/studies/windows/win32/ntdll/structs/peb_ldr_data.htm"},{"file": 46,"line": 3435,"col": 4},{"file": 46,"line": 3466,"col": 4},{"file": 46,"line": 3473,"col": 4},{"file": 46,"line": 3475,"col": 4},{"file": 46,"line": 3491,"col": 4},{"file": 46,"line": 3493,"col": 4},{"file": 46,"line": 3495,"col": 4},{"file": 46,"line": 3500,"col": 4},{"file": 46,"line": 3502,"col": 4},{"file": 46,"line": 3508,"col": 4},{"file": 46,"line": 3513,"col": 4},{"file": 46,"line": 3526,"col": 4},{"file": 46,"line": 3540,"col": 4},{"file": 46,"line": 3557,"col": 4},{"file": 46,"line": 3565,"col": 4},{"file": 46,"line": 3566,"col": 4},{"file": 46,"line": 3568,"col": 4},{"file": 46,"line": 3574,"col": 4},{"file": 46,"line": 3582,"col": 4},{"file": 46,"line": 3584,"col": 4},{"file": 46,"line": 3590,"col": 4},{"file": 46,"line": 3598,"col": 4},{"file": 46,"line": 3605,"col": 4},{"file": 46,"line": 3606,"col": 4},{"file": 46,"line": 3607,"col": 4},{"file": 46,"line": 3608,"col": 4},{"file": 46,"line": 3609,"col": 4},{"file": 46,"line": 3610,"col": 4},{"file": 46,"line": 3612,"col": 4},{"file": 46,"line": 3613,"col": 4},{"file": 46,"line": 3615,"col": 4},{"file": 46,"line": 3626,"col": 4},{"file": 46,"line": 3631,"col": 4},{"file": 46,"line": 3633,"col": 4},{"file": 46,"line": 3643,"col": 4},{"file": 46,"line": 3647,"col": 4},{"file": 46,"line": 3648,"col": 4},{"file": 46,"line": 3649,"col": 4},{"file": 46,"line": 3650,"col": 4},{"file": 46,"line": 3652,"col": 4},{"file": 46,"line": 3653,"col": 4},{"file": 46,"line": 3655,"col": 4},{"file": 46,"line": 3656,"col": 4},{"file": 46,"line": 3657,"col": 4},{"file": 46,"line": 3658,"col": 4},{"file": 46,"line": 3659,"col": 4},{"file": 46,"line": 3661,"col": 4},{"file": 46,"line": 3020,"col": 12},{"file": 46,"line": 3025,"col": 12},{"file": 46,"line": 3044,"col": 12},{"file": 46,"line": 6,"col": 0},{"file": 46,"line": 7,"col": 0},{"file": 46,"line": 8,"col": 0},{"file": 46,"line": 9,"col": 0},{"file": 46,"line": 10,"col": 0},{"file": 46,"line": 11,"col": 0},{"file": 46,"line": 12,"col": 0},{"file": 46,"line": 821,"col": 0,"fields": [13086,13087,13088]},{"file": 46,"line": 1281,"col": 0},{"file": 46,"line": 1447,"col": 0},{"file": 46,"line": 1944,"col": 0,"fields": [13089,13090]},{"file": 47,"line": 1,"col": 4,"docs": " NTSTATUS codes from https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-erref/596a1078-e883-4972-9bbc-49e60bebca55?"},{"file": 48,"line": 130,"col": 4,"docs": " Fast non-cryptographic 64bit hash function. See https://github.com/wangyi-fudan/wyhash"},{"file": 48,"line": 0,"col": 0},{"file": 48,"line": 1,"col": 0},{"file": 48,"line": 3,"col": 0},{"file": 48,"line": 37,"col": 0},{"file": 48,"line": 173,"col": 0},{"file": 12,"line": 484,"col": 8},{"file": 12,"line": 503,"col": 8,"fields": [13091,13092]},{"file": 12,"line": 513,"col": 8,"fields": [13093]},{"file": 12,"line": 537,"col": 8,"fields": [13094,13095,13096,13097]},{"file": 49,"line": 8,"col": 4},{"file": 49,"line": 10,"col": 4,"fields": [13098]},{"file": 49,"line": 67,"col": 4,"fields": [13099]},{"file": 49,"line": 132,"col": 4,"fields": [13100]},{"file": 49,"line": 153,"col": 4,"fields": [13101]},{"file": 49,"line": 171,"col": 4,"fields": [13102]},{"file": 49,"line": 189,"col": 4,"fields": [13103]},{"file": 49,"line": 203,"col": 4,"fields": [13104]},{"file": 49,"line": 233,"col": 4,"fields": [13105]},{"file": 49,"line": 263,"col": 4,"fields": [13106]},{"file": 49,"line": 324,"col": 4,"fields": [13107]},{"file": 49,"line": 340,"col": 4,"fields": [13108]},{"file": 49,"line": 379,"col": 4,"fields": [13109]},{"file": 49,"line": 404,"col": 4,"docs": " Returns true if the passed type will coerce to []const u8. Any of the following are considered strings: ``` []const u8, [:S]const u8, *const [N]u8, *const [N:S]u8, []u8, [:S]u8, *[:S]u8, *[N:S]u8. ``` These types are not considered strings: ``` u8, [N]u8, [*]const u8, [*:0]const u8, [*]const [N]u8, []const u16, []const i8, *const u8, ?[]const u8, ?*const [N]u8. ```","fields": [13110]},{"file": 49,"line": 470,"col": 4,"fields": [13111,13112]},{"file": 49,"line": 496,"col": 4,"fields": [13113,13114]},{"file": 49,"line": 522,"col": 4,"fields": [13115,13116]},{"file": 49,"line": 0,"col": 0},{"file": 49,"line": 1,"col": 0},{"file": 49,"line": 2,"col": 0},{"file": 49,"line": 3,"col": 0},{"file": 49,"line": 4,"col": 0},{"file": 49,"line": 6,"col": 0},{"file": 48,"line": 136,"col": 8,"fields": [13117]},{"file": 48,"line": 144,"col": 8,"fields": [13118,13119]},{"file": 48,"line": 162,"col": 8,"fields": [13120]},{"file": 3,"line": 116,"col": 16,"docs": " Latest Windows version that the Zig Standard Library is aware of"},{"file": 3,"line": 120,"col": 16,"docs": " Compared against build numbers reported by the runtime to distinguish win10 versions, where 0x0A000000 + index corresponds to the WindowsVersion u32 value."},{"file": 3,"line": 135,"col": 16,"docs": " Returns whether the first version `self` is newer (greater) than or equal to the second version `ver`.","fields": [13121,13122]},{"file": 3,"line": 139,"col": 16},{"file": 3,"line": 158,"col": 16,"docs": " This function is defined to serialize a Zig source code representation of this type, that, when parsed, will deserialize into the same data.","fields": [13123,13124,13125,13126]},{"file": 3,"line": 185,"col": 16,"fields": [13127,13128]},{"file": 3,"line": 191,"col": 16,"docs": " Checks if system is guaranteed to be at least `version` or older than `version`. Returns `null` if a runtime check is required.","fields": [13129,13130]},{"file": 3,"line": 228,"col": 16,"docs": " The default `VersionRange` represents the range that the Zig Standard Library bases its abstractions on.","fields": [13131]},{"file": 8,"line": 979,"col": 8},{"file": 8,"line": 988,"col": 8},{"file": 8,"line": 997,"col": 8},{"file": 8,"line": 1007,"col": 8},{"file": 8,"line": 1018,"col": 8},{"file": 8,"line": 1079,"col": 8},{"file": 8,"line": 1100,"col": 8},{"file": 8,"line": 1114,"col": 8},{"file": 8,"line": 1132,"col": 8},{"file": 8,"line": 1150,"col": 8},{"file": 8,"line": 1166,"col": 8},{"file": 8,"line": 1184,"col": 8},{"file": 8,"line": 1200,"col": 8},{"file": 8,"line": 1214,"col": 8},{"file": 8,"line": 1230,"col": 8},{"file": 8,"line": 1254,"col": 8},{"file": 8,"line": 1275,"col": 8},{"file": 8,"line": 1302,"col": 8},{"file": 8,"line": 1335,"col": 8},{"file": 8,"line": 1369,"col": 8},{"file": 8,"line": 1408,"col": 8},{"file": 8,"line": 1432,"col": 8},{"file": 8,"line": 1474,"col": 8},{"file": 8,"line": 1498,"col": 8},{"file": 8,"line": 1530,"col": 8},{"file": 8,"line": 1540,"col": 8},{"file": 8,"line": 1554,"col": 8},{"file": 8,"line": 1605,"col": 8},{"file": 8,"line": 1657,"col": 8},{"file": 8,"line": 1709,"col": 8},{"file": 8,"line": 1727,"col": 8},{"file": 8,"line": 1766,"col": 8},{"file": 8,"line": 1795,"col": 8},{"file": 8,"line": 1813,"col": 8},{"file": 8,"line": 1840,"col": 8},{"file": 8,"line": 1854,"col": 8},{"file": 8,"line": 1865,"col": 8},{"file": 8,"line": 1900,"col": 8},{"file": 8,"line": 1936,"col": 8},{"file": 8,"line": 1975,"col": 8},{"file": 8,"line": 2033,"col": 8},{"file": 8,"line": 2094,"col": 8},{"file": 8,"line": 2123,"col": 8},{"file": 8,"line": 2134,"col": 8},{"file": 8,"line": 2145,"col": 8},{"file": 8,"line": 2156,"col": 8},{"file": 8,"line": 2174,"col": 8},{"file": 8,"line": 2192,"col": 8},{"file": 8,"line": 2231,"col": 8},{"file": 8,"line": 2271,"col": 8},{"file": 8,"line": 2281,"col": 8},{"file": 8,"line": 2299,"col": 8},{"file": 8,"line": 2315,"col": 8},{"file": 8,"line": 2333,"col": 8},{"file": 8,"line": 2351,"col": 8},{"file": 8,"line": 2369,"col": 8},{"file": 8,"line": 2379,"col": 8},{"file": 8,"line": 2393,"col": 8},{"file": 8,"line": 2408,"col": 8},{"file": 8,"line": 2423,"col": 8},{"file": 8,"line": 2438,"col": 8},{"file": 8,"line": 2453,"col": 8},{"file": 8,"line": 2468,"col": 8},{"file": 8,"line": 2479,"col": 8},{"file": 8,"line": 2491,"col": 8},{"file": 8,"line": 2506,"col": 8},{"file": 8,"line": 2564,"col": 8},{"file": 8,"line": 2591,"col": 8},{"file": 8,"line": 2667,"col": 8},{"file": 8,"line": 2696,"col": 8},{"file": 8,"line": 2747,"col": 8},{"file": 8,"line": 2794,"col": 8},{"file": 8,"line": 2845,"col": 8},{"file": 8,"line": 2874,"col": 8},{"file": 8,"line": 2937,"col": 8},{"file": 8,"line": 2975,"col": 8},{"file": 8,"line": 2994,"col": 8},{"file": 8,"line": 3004,"col": 8},{"file": 8,"line": 3014,"col": 8},{"file": 8,"line": 3033,"col": 8},{"file": 8,"line": 3058,"col": 8},{"file": 8,"line": 3092,"col": 8},{"file": 8,"line": 3129,"col": 8},{"file": 8,"line": 3144,"col": 8},{"file": 8,"line": 3189,"col": 8},{"file": 8,"line": 3237,"col": 8},{"file": 3,"line": 627,"col": 16,"docs": " A bit set of all the features."},{"file": 3,"line": 1235,"col": 16,"fields": [13132,13133]},{"file": 3,"line": 1245,"col": 16,"fields": [13134]},{"file": 3,"line": 1282,"col": 16,"fields": [13135]},{"file": 12,"line": 618,"col": 8},{"file": 12,"line": 420,"col": 16,"docs": " This data structure is used by the Zig language code generation and therefore must be kept in sync with the compiler implementation."},{"file": 18,"line": 40,"col": 8},{"file": 18,"line": 42,"col": 8},{"file": 18,"line": 110,"col": 8},{"file": 18,"line": 115,"col": 8,"docs": " TODO copy elision / named return values so that the threads referencing *Loop have the correct pointer value. https://github.com/ziglang/zig/issues/2761 and https://github.com/ziglang/zig/issues/2765","fields": [13136]},{"file": 18,"line": 129,"col": 8,"docs": " After initialization, call run(). TODO copy elision / named return values so that the threads referencing *Loop have the correct pointer value. https://github.com/ziglang/zig/issues/2761 and https://github.com/ziglang/zig/issues/2765","fields": [13137]},{"file": 18,"line": 139,"col": 8,"docs": " After initialization, call run(). This is the same as `initThreadPool` using `Thread.getCpuCount` to determine the thread pool size. TODO copy elision / named return values so that the threads referencing *Loop have the correct pointer value. https://github.com/ziglang/zig/issues/2761 and https://github.com/ziglang/zig/issues/2765","fields": [13138]},{"file": 18,"line": 148,"col": 8,"docs": " Thread count is the total thread count. The thread pool size will be max(thread_count - 1, 0)","fields": [13139,13140]},{"file": 18,"line": 197,"col": 8,"fields": [13141]},{"file": 18,"line": 468,"col": 8,"docs": " resume_node must live longer than the anyframe that it holds a reference to. flags must contain EPOLLET","fields": [13142,13143,13144,13145]},{"file": 18,"line": 480,"col": 8,"fields": [13146,13147,13148,13149,13150]},{"file": 18,"line": 489,"col": 8,"fields": [13151,13152]},{"file": 18,"line": 494,"col": 8,"fields": [13153,13154,13155]},{"file": 18,"line": 546,"col": 8,"fields": [13156,13157]},{"file": 18,"line": 558,"col": 8,"fields": [13158,13159]},{"file": 18,"line": 570,"col": 8,"fields": [13160,13161]},{"file": 18,"line": 583,"col": 8,"fields": [13162,13163,13164,13165]},{"file": 18,"line": 606,"col": 8,"docs": " resume_node must live longer than the anyframe that it holds a reference to.","fields": [13166,13167,13168,13169,13170]},{"file": 18,"line": 621,"col": 8,"fields": [13171,13172,13173]},{"file": 18,"line": 686,"col": 8,"docs": " Bring your own linked list node. This means it can't fail.","fields": [13174,13175]},{"file": 18,"line": 692,"col": 8,"fields": [13176,13177]},{"file": 18,"line": 698,"col": 8,"fields": [13178]},{"file": 18,"line": 729,"col": 8,"docs": " Runs the provided function asynchronously. The function's frame is allocated with `allocator` and freed when the function returns. `func` must return void and it can be an async function. Yields to the event loop, running the function on the next tick.","fields": [13179,13180,13181,13182]},{"file": 18,"line": 757,"col": 8,"docs": " Yielding lets the event loop run, starting any unstarted async operations. Note that async operations automatically start when a function yields for any other reason, for example, when async I/O is performed. This function is intended to be used only when CPU bound tasks would be waiting in the event loop but never get started because no async I/O is performed.","fields": [13183]},{"file": 18,"line": 770,"col": 8,"docs": " If the build is multi-threaded and there is an event loop, then it calls `yield`. Otherwise, does nothing.","fields": []},{"file": 18,"line": 779,"col": 8,"docs": " call finishOneEvent when done","fields": [13184]},{"file": 18,"line": 783,"col": 8,"fields": [13185]},{"file": 18,"line": 826,"col": 8,"fields": [13186,13187]},{"file": 18,"line": 950,"col": 8,"docs": " ------- I/0 APIs -------","fields": [13188,13189,13190,13191,13192]},{"file": 18,"line": 983,"col": 8,"fields": [13193,13194,13195,13196]},{"file": 18,"line": 994,"col": 8,"docs": " Performs an async `os.open` using a separate thread.","fields": [13197,13198,13199,13200]},{"file": 18,"line": 1015,"col": 8,"docs": " Performs an async `os.opent` using a separate thread.","fields": [13201,13202,13203,13204,13205]},{"file": 18,"line": 1037,"col": 8,"docs": " Performs an async `os.close` using a separate thread.","fields": [13206,13207]},{"file": 18,"line": 1051,"col": 8,"docs": " Performs an async `os.read` using a separate thread. `fd` must block and not return EAGAIN.","fields": [13208,13209,13210,13211]},{"file": 18,"line": 1084,"col": 8,"docs": " Performs an async `os.readv` using a separate thread. `fd` must block and not return EAGAIN.","fields": [13212,13213,13214,13215]},{"file": 18,"line": 1117,"col": 8,"docs": " Performs an async `os.pread` using a separate thread. `fd` must block and not return EAGAIN.","fields": [13216,13217,13218,13219,13220]},{"file": 18,"line": 1151,"col": 8,"docs": " Performs an async `os.preadv` using a separate thread. `fd` must block and not return EAGAIN.","fields": [13221,13222,13223,13224,13225]},{"file": 18,"line": 1185,"col": 8,"docs": " Performs an async `os.write` using a separate thread. `fd` must block and not return EAGAIN.","fields": [13226,13227,13228,13229]},{"file": 18,"line": 1218,"col": 8,"docs": " Performs an async `os.writev` using a separate thread. `fd` must block and not return EAGAIN.","fields": [13230,13231,13232,13233]},{"file": 18,"line": 1251,"col": 8,"docs": " Performs an async `os.pwrite` using a separate thread. `fd` must block and not return EAGAIN.","fields": [13234,13235,13236,13237,13238]},{"file": 18,"line": 1285,"col": 8,"docs": " Performs an async `os.pwritev` using a separate thread. `fd` must block and not return EAGAIN.","fields": [13239,13240,13241,13242,13243]},{"file": 18,"line": 1317,"col": 8,"fields": [13244,13245,13246,13247,13248,13249]},{"file": 18,"line": 1338,"col": 8,"fields": [13250,13251,13252,13253,13254,13255]},{"file": 18,"line": 1359,"col": 8,"docs": " Performs an async `os.faccessatZ` using a separate thread. `fd` must block and not return EAGAIN.","fields": [13256,13257,13258,13259,13260]},{"file": 18,"line": 1565,"col": 8},{"file": 18,"line": 105,"col": 4},{"file": 18,"line": 106,"col": 4},{"file": 18,"line": 204,"col": 4},{"file": 18,"line": 208,"col": 4},{"file": 18,"line": 210,"col": 4,"fields": [13261,13262]},{"file": 18,"line": 449,"col": 4,"fields": [13263]},{"file": 18,"line": 635,"col": 4,"fields": [13264]},{"file": 18,"line": 844,"col": 4},{"file": 18,"line": 1386,"col": 4,"fields": [13265]},{"file": 18,"line": 1479,"col": 4,"fields": [13266,13267]},{"file": 18,"line": 1485,"col": 4,"fields": [13268,13269]},{"file": 18,"line": 1491,"col": 4,"fields": [13270]},{"file": 18,"line": 1544,"col": 4},{"file": 18,"line": 1554,"col": 4},{"file": 18,"line": 1559,"col": 4},{"file": 18,"line": 1598,"col": 20},{"file": 18,"line": 1606,"col": 20},{"file": 18,"line": 1614,"col": 20},{"file": 18,"line": 1622,"col": 20},{"file": 18,"line": 1631,"col": 20},{"file": 18,"line": 1640,"col": 20},{"file": 18,"line": 1649,"col": 20},{"file": 18,"line": 1658,"col": 20},{"file": 18,"line": 1667,"col": 20},{"file": 18,"line": 1677,"col": 20},{"file": 18,"line": 1691,"col": 20},{"file": 20,"line": 397,"col": 8,"docs": " TODO runtime crash when I make the actual type of Flags this"},{"file": 50,"line": 0,"col": 4},{"file": 50,"line": 1,"col": 4},{"file": 50,"line": 2,"col": 4},{"file": 50,"line": 3,"col": 4},{"file": 50,"line": 4,"col": 4},{"file": 50,"line": 5,"col": 4},{"file": 50,"line": 6,"col": 4},{"file": 50,"line": 7,"col": 4},{"file": 50,"line": 8,"col": 4},{"file": 50,"line": 9,"col": 4},{"file": 50,"line": 10,"col": 4},{"file": 50,"line": 11,"col": 4},{"file": 50,"line": 12,"col": 4},{"file": 50,"line": 13,"col": 4},{"file": 50,"line": 14,"col": 4},{"file": 50,"line": 15,"col": 4},{"file": 50,"line": 16,"col": 4},{"file": 50,"line": 17,"col": 4},{"file": 50,"line": 18,"col": 4},{"file": 50,"line": 19,"col": 4},{"file": 50,"line": 20,"col": 4},{"file": 50,"line": 21,"col": 4},{"file": 50,"line": 22,"col": 4},{"file": 50,"line": 23,"col": 4},{"file": 50,"line": 24,"col": 4},{"file": 50,"line": 25,"col": 4},{"file": 50,"line": 26,"col": 4},{"file": 50,"line": 27,"col": 4},{"file": 50,"line": 28,"col": 4},{"file": 50,"line": 29,"col": 4},{"file": 50,"line": 30,"col": 4},{"file": 50,"line": 31,"col": 4},{"file": 50,"line": 32,"col": 4},{"file": 50,"line": 33,"col": 4},{"file": 50,"line": 34,"col": 4},{"file": 50,"line": 35,"col": 4},{"file": 50,"line": 36,"col": 4},{"file": 50,"line": 37,"col": 4},{"file": 50,"line": 38,"col": 4},{"file": 50,"line": 39,"col": 4},{"file": 50,"line": 40,"col": 4},{"file": 50,"line": 41,"col": 4},{"file": 50,"line": 42,"col": 4},{"file": 50,"line": 43,"col": 4},{"file": 50,"line": 44,"col": 4},{"file": 50,"line": 45,"col": 4},{"file": 50,"line": 46,"col": 4},{"file": 50,"line": 47,"col": 4},{"file": 50,"line": 48,"col": 4},{"file": 50,"line": 51,"col": 4},{"file": 50,"line": 52,"col": 4},{"file": 50,"line": 53,"col": 4},{"file": 50,"line": 54,"col": 4},{"file": 50,"line": 55,"col": 4},{"file": 50,"line": 56,"col": 4},{"file": 50,"line": 57,"col": 4},{"file": 50,"line": 58,"col": 4},{"file": 50,"line": 59,"col": 4},{"file": 50,"line": 60,"col": 4},{"file": 50,"line": 63,"col": 4},{"file": 50,"line": 64,"col": 4},{"file": 50,"line": 65,"col": 4},{"file": 50,"line": 67,"col": 4},{"file": 50,"line": 68,"col": 4},{"file": 50,"line": 71,"col": 4},{"file": 50,"line": 74,"col": 4},{"file": 50,"line": 75,"col": 4},{"file": 50,"line": 76,"col": 4},{"file": 50,"line": 79,"col": 4},{"file": 50,"line": 80,"col": 4},{"file": 50,"line": 81,"col": 4},{"file": 50,"line": 82,"col": 4},{"file": 50,"line": 83,"col": 4},{"file": 50,"line": 87,"col": 4},{"file": 50,"line": 93,"col": 4},{"file": 50,"line": 94,"col": 4},{"file": 50,"line": 99,"col": 4},{"file": 50,"line": 100,"col": 4},{"file": 50,"line": 102,"col": 4},{"file": 50,"line": 103,"col": 4},{"file": 50,"line": 104,"col": 4},{"file": 50,"line": 106,"col": 4},{"file": 50,"line": 107,"col": 4},{"file": 51,"line": 0,"col": 4},{"file": 51,"line": 1,"col": 4},{"file": 51,"line": 2,"col": 4},{"file": 51,"line": 3,"col": 4},{"file": 51,"line": 4,"col": 4},{"file": 51,"line": 5,"col": 4},{"file": 51,"line": 6,"col": 4},{"file": 51,"line": 7,"col": 4},{"file": 51,"line": 8,"col": 4},{"file": 51,"line": 9,"col": 4},{"file": 51,"line": 10,"col": 4},{"file": 51,"line": 11,"col": 4},{"file": 51,"line": 12,"col": 4},{"file": 51,"line": 13,"col": 4},{"file": 51,"line": 14,"col": 4},{"file": 51,"line": 15,"col": 4},{"file": 51,"line": 16,"col": 4},{"file": 51,"line": 17,"col": 4},{"file": 51,"line": 18,"col": 4},{"file": 51,"line": 19,"col": 4},{"file": 51,"line": 20,"col": 4},{"file": 51,"line": 21,"col": 4},{"file": 51,"line": 22,"col": 4},{"file": 51,"line": 23,"col": 4},{"file": 51,"line": 24,"col": 4},{"file": 51,"line": 25,"col": 4},{"file": 51,"line": 26,"col": 4},{"file": 51,"line": 27,"col": 4},{"file": 51,"line": 28,"col": 4},{"file": 51,"line": 29,"col": 4},{"file": 51,"line": 30,"col": 4},{"file": 51,"line": 31,"col": 4},{"file": 51,"line": 32,"col": 4},{"file": 51,"line": 33,"col": 4},{"file": 51,"line": 34,"col": 4},{"file": 51,"line": 35,"col": 4},{"file": 51,"line": 36,"col": 4},{"file": 51,"line": 37,"col": 4},{"file": 51,"line": 38,"col": 4},{"file": 51,"line": 39,"col": 4},{"file": 51,"line": 40,"col": 4},{"file": 51,"line": 41,"col": 4},{"file": 51,"line": 42,"col": 4},{"file": 51,"line": 43,"col": 4},{"file": 51,"line": 44,"col": 4},{"file": 51,"line": 45,"col": 4},{"file": 51,"line": 46,"col": 4},{"file": 51,"line": 47,"col": 4},{"file": 51,"line": 48,"col": 4},{"file": 51,"line": 49,"col": 4},{"file": 51,"line": 50,"col": 4},{"file": 51,"line": 51,"col": 4},{"file": 51,"line": 52,"col": 4},{"file": 51,"line": 53,"col": 4},{"file": 51,"line": 54,"col": 4},{"file": 51,"line": 55,"col": 4},{"file": 51,"line": 56,"col": 4},{"file": 51,"line": 57,"col": 4},{"file": 51,"line": 58,"col": 4},{"file": 51,"line": 59,"col": 4},{"file": 51,"line": 60,"col": 4},{"file": 51,"line": 61,"col": 4},{"file": 51,"line": 64,"col": 4},{"file": 51,"line": 65,"col": 4},{"file": 51,"line": 66,"col": 4},{"file": 51,"line": 67,"col": 4},{"file": 51,"line": 68,"col": 4},{"file": 51,"line": 69,"col": 4},{"file": 51,"line": 70,"col": 4},{"file": 51,"line": 71,"col": 4},{"file": 51,"line": 72,"col": 4},{"file": 51,"line": 73,"col": 4},{"file": 51,"line": 74,"col": 4},{"file": 51,"line": 75,"col": 4},{"file": 51,"line": 76,"col": 4},{"file": 51,"line": 77,"col": 4},{"file": 51,"line": 78,"col": 4},{"file": 51,"line": 79,"col": 4},{"file": 51,"line": 80,"col": 4},{"file": 51,"line": 81,"col": 4},{"file": 51,"line": 82,"col": 4},{"file": 51,"line": 83,"col": 4},{"file": 51,"line": 84,"col": 4},{"file": 51,"line": 85,"col": 4},{"file": 51,"line": 86,"col": 4},{"file": 51,"line": 87,"col": 4},{"file": 51,"line": 88,"col": 4},{"file": 51,"line": 89,"col": 4},{"file": 51,"line": 90,"col": 4},{"file": 51,"line": 93,"col": 4},{"file": 51,"line": 94,"col": 4},{"file": 51,"line": 95,"col": 4},{"file": 51,"line": 96,"col": 4},{"file": 51,"line": 97,"col": 4},{"file": 51,"line": 98,"col": 4},{"file": 51,"line": 101,"col": 4},{"file": 51,"line": 103,"col": 4},{"file": 51,"line": 104,"col": 4},{"file": 51,"line": 107,"col": 4},{"file": 51,"line": 108,"col": 4},{"file": 51,"line": 109,"col": 4},{"file": 51,"line": 110,"col": 4},{"file": 51,"line": 111,"col": 4},{"file": 51,"line": 112,"col": 4},{"file": 51,"line": 113,"col": 4},{"file": 51,"line": 114,"col": 4},{"file": 51,"line": 115,"col": 4},{"file": 51,"line": 116,"col": 4},{"file": 51,"line": 117,"col": 4},{"file": 51,"line": 120,"col": 4},{"file": 51,"line": 121,"col": 4},{"file": 51,"line": 122,"col": 4},{"file": 51,"line": 123,"col": 4},{"file": 51,"line": 124,"col": 4},{"file": 51,"line": 125,"col": 4},{"file": 51,"line": 126,"col": 4},{"file": 51,"line": 127,"col": 4},{"file": 51,"line": 128,"col": 4},{"file": 51,"line": 129,"col": 4},{"file": 51,"line": 130,"col": 4},{"file": 51,"line": 131,"col": 4},{"file": 51,"line": 132,"col": 4},{"file": 51,"line": 133,"col": 4},{"file": 51,"line": 134,"col": 4},{"file": 51,"line": 135,"col": 4},{"file": 51,"line": 136,"col": 4},{"file": 51,"line": 137,"col": 4},{"file": 51,"line": 138,"col": 4},{"file": 51,"line": 139,"col": 4},{"file": 51,"line": 140,"col": 4},{"file": 51,"line": 141,"col": 4},{"file": 51,"line": 144,"col": 4},{"file": 51,"line": 145,"col": 4},{"file": 51,"line": 146,"col": 4},{"file": 51,"line": 147,"col": 4},{"file": 51,"line": 148,"col": 4},{"file": 51,"line": 149,"col": 4},{"file": 51,"line": 150,"col": 4},{"file": 51,"line": 153,"col": 4},{"file": 51,"line": 154,"col": 4},{"file": 51,"line": 155,"col": 4},{"file": 51,"line": 156,"col": 4},{"file": 51,"line": 157,"col": 4},{"file": 51,"line": 158,"col": 4},{"file": 51,"line": 159,"col": 4},{"file": 51,"line": 162,"col": 4},{"file": 51,"line": 165,"col": 4},{"file": 51,"line": 168,"col": 4},{"file": 51,"line": 169,"col": 4},{"file": 51,"line": 170,"col": 4},{"file": 51,"line": 171,"col": 4},{"file": 51,"line": 172,"col": 4},{"file": 51,"line": 173,"col": 4},{"file": 51,"line": 174,"col": 4},{"file": 51,"line": 175,"col": 4},{"file": 51,"line": 177,"col": 4},{"file": 51,"line": 179,"col": 4},{"file": 51,"line": 180,"col": 4},{"file": 51,"line": 181,"col": 4},{"file": 51,"line": 182,"col": 4},{"file": 51,"line": 183,"col": 4},{"file": 51,"line": 184,"col": 4},{"file": 51,"line": 186,"col": 4},{"file": 51,"line": 190,"col": 4},{"file": 51,"line": 191,"col": 4},{"file": 51,"line": 193,"col": 4},{"file": 51,"line": 195,"col": 4},{"file": 51,"line": 196,"col": 4},{"file": 51,"line": 197,"col": 4},{"file": 21,"line": 15,"col": 8},{"file": 21,"line": 16,"col": 8},{"file": 21,"line": 17,"col": 8},{"file": 21,"line": 18,"col": 8},{"file": 21,"line": 19,"col": 8},{"file": 21,"line": 20,"col": 8},{"file": 21,"line": 21,"col": 8},{"file": 21,"line": 22,"col": 8},{"file": 21,"line": 23,"col": 8},{"file": 21,"line": 24,"col": 8},{"file": 21,"line": 25,"col": 8},{"file": 21,"line": 26,"col": 8},{"file": 21,"line": 27,"col": 8},{"file": 21,"line": 28,"col": 8},{"file": 21,"line": 29,"col": 8},{"file": 21,"line": 30,"col": 8},{"file": 21,"line": 31,"col": 8},{"file": 21,"line": 32,"col": 8},{"file": 21,"line": 33,"col": 8},{"file": 21,"line": 34,"col": 8},{"file": 21,"line": 35,"col": 8},{"file": 21,"line": 36,"col": 8},{"file": 21,"line": 37,"col": 8},{"file": 21,"line": 38,"col": 8},{"file": 21,"line": 39,"col": 8},{"file": 21,"line": 42,"col": 8},{"file": 21,"line": 43,"col": 8},{"file": 21,"line": 47,"col": 8},{"file": 21,"line": 48,"col": 8},{"file": 21,"line": 139,"col": 8},{"file": 21,"line": 140,"col": 8},{"file": 21,"line": 144,"col": 8},{"file": 21,"line": 145,"col": 8},{"file": 21,"line": 146,"col": 8},{"file": 21,"line": 147,"col": 8},{"file": 21,"line": 148,"col": 8},{"file": 21,"line": 149,"col": 8},{"file": 21,"line": 150,"col": 8},{"file": 21,"line": 151,"col": 8},{"file": 21,"line": 152,"col": 8},{"file": 21,"line": 153,"col": 8},{"file": 21,"line": 154,"col": 8},{"file": 21,"line": 155,"col": 8},{"file": 21,"line": 156,"col": 8},{"file": 21,"line": 160,"col": 8},{"file": 21,"line": 161,"col": 8},{"file": 21,"line": 162,"col": 8},{"file": 21,"line": 163,"col": 8},{"file": 21,"line": 164,"col": 8},{"file": 21,"line": 165,"col": 8},{"file": 52,"line": 35,"col": 4,"docs": " Write a single unsigned integer as unsigned LEB128 to the given writer.","fields": [13271,13272]},{"file": 52,"line": 111,"col": 4,"docs": " Write a single signed integer as signed LEB128 to the given writer.","fields": [13273,13274]},{"file": 52,"line": 139,"col": 4,"docs": " This is an \"advanced\" function. It allows one to use a fixed amount of memory to store a ULEB128. This defeats the entire purpose of using this data encoding; it will no longer use fewer bytes to store smaller numbers. The advantage of using a fixed width is that it makes fields have a predictable size and so depending on the use case this tradeoff can be worthwhile. An example use case of this is in emitting DWARF info where one wants to make a ULEB128 field \"relocatable\", meaning that it becomes possible to later go back and patch the number to be a different value without shifting all the following code.","fields": [13275,13276,13277]},{"file": 52,"line": 0,"col": 0},{"file": 52,"line": 1,"col": 0},{"file": 52,"line": 177,"col": 0,"fields": [13278,13279]},{"file": 52,"line": 182,"col": 0,"fields": [13280,13281]},{"file": 52,"line": 187,"col": 0,"fields": [13282,13283]},{"file": 52,"line": 193,"col": 0,"fields": [13284,13285]},{"file": 52,"line": 199,"col": 0,"fields": [13286,13287,13288]},{"file": 52,"line": 207,"col": 0,"fields": [13289,13290,13291]},{"file": 52,"line": 302,"col": 0,"fields": [13292]},{"file": 53,"line": 40,"col": 4,"fields": [13293]},{"file": 53,"line": 44,"col": 4,"fields": [13294,13295]},{"file": 53,"line": 125,"col": 4,"fields": [13296]},{"file": 53,"line": 27,"col": 0},{"file": 53,"line": 28,"col": 0},{"file": 53,"line": 29,"col": 0},{"file": 53,"line": 30,"col": 0},{"file": 53,"line": 31,"col": 0},{"file": 53,"line": 32,"col": 0},{"file": 53,"line": 34,"col": 0},{"file": 53,"line": 35,"col": 0},{"file": 53,"line": 38,"col": 0,"docs": " the minimum alignment for the `*StaticResetEvent` created by wait*()"},{"file": 53,"line": 48,"col": 0,"fields": [13297,13298]},{"file": 54,"line": 19,"col": 4},{"file": 54,"line": 28,"col": 4},{"file": 54,"line": 31,"col": 4,"docs": " After `init`, it is legal to call any other function.","fields": [13299]},{"file": 54,"line": 37,"col": 4,"docs": " This function is not thread-safe. After `deinit`, the only legal function to call is `init`.","fields": [13300]},{"file": 54,"line": 45,"col": 4,"docs": " Sets the event if not already set and wakes up all the threads waiting on the event. It is safe to call `set` multiple times before calling `wait`. However it is illegal to call `set` after `wait` is called until the event is `reset`. This function is thread-safe.","fields": [13301]},{"file": 54,"line": 52,"col": 4,"docs": " Resets the event to its original, unset state. This function is *not* thread-safe. It is equivalent to calling `deinit` followed by `init` but without the possibility of failure.","fields": [13302]},{"file": 54,"line": 60,"col": 4,"docs": " Wait for the event to be set by blocking the current thread. Thread-safe. No spurious wakeups. Upon return from `wait`, the only functions available to be called in `ResetEvent` are `reset` and `deinit`.","fields": [13303]},{"file": 54,"line": 64,"col": 4},{"file": 54,"line": 73,"col": 4,"docs": " Wait for the event to be set by blocking the current thread. A timeout in nanoseconds can be provided as a hint for how long the thread should block on the unset event before returning `TimedWaitResult.timed_out`. Thread-safe. No precision of timing is guaranteed. Upon return from `wait`, the only functions available to be called in `ResetEvent` are `reset` and `deinit`.","fields": [13304,13305]},{"file": 54,"line": 80,"col": 4,"docs": " Apple has decided to not support POSIX semaphores, so we go with a different approach using Grand Central Dispatch. This API is exposed by libSystem so it is guaranteed to be available on all Darwin platforms."},{"file": 54,"line": 121,"col": 4,"docs": " POSIX semaphores must be initialized at runtime because they are allowed to be implemented as file descriptors, in which case initialization would require a syscall to open the fd."},{"file": 54,"line": 8,"col": 0},{"file": 54,"line": 9,"col": 0},{"file": 54,"line": 10,"col": 0},{"file": 54,"line": 11,"col": 0},{"file": 54,"line": 12,"col": 0},{"file": 54,"line": 13,"col": 0},{"file": 54,"line": 14,"col": 0},{"file": 54,"line": 15,"col": 0},{"file": 22,"line": 416,"col": 8},{"file": 22,"line": 414,"col": 4},{"file": 22,"line": 422,"col": 4,"fields": []},{"file": 22,"line": 429,"col": 4},{"file": 22,"line": 441,"col": 4,"fields": [13306,13307,13308]},{"file": 22,"line": 495,"col": 4,"fields": [13309]},{"file": 22,"line": 499,"col": 4,"fields": [13310]},{"file": 22,"line": 508,"col": 4,"fields": [13311]},{"file": 55,"line": 1,"col": 0},{"file": 55,"line": 2,"col": 0},{"file": 55,"line": 3,"col": 0},{"file": 26,"line": 490,"col": 8},{"file": 26,"line": 500,"col": 8},{"file": 26,"line": 955,"col": 4,"docs": " Returns the address from the macho file","fields": [13312]},{"file": 26,"line": 959,"col": 4,"fields": [13313,13314,13315]},{"file": 42,"line": 229,"col": 12,"fields": [13316,13317]},{"file": 42,"line": 278,"col": 8},{"file": 42,"line": 279,"col": 8},{"file": 42,"line": 280,"col": 8},{"file": 42,"line": 172,"col": 8,"fields": [13318,13319]},{"file": 56,"line": 59,"col": 4,"fields": [13320,13321]},{"file": 56,"line": 60,"col": 4,"fields": [13322]},{"file": 56,"line": 62,"col": 4,"fields": [13323]},{"file": 56,"line": 63,"col": 4,"fields": [13324,13325]},{"file": 56,"line": 65,"col": 4,"fields": [13326]},{"file": 56,"line": 67,"col": 4,"fields": [13327,13328]},{"file": 56,"line": 68,"col": 4,"fields": [13329]},{"file": 56,"line": 70,"col": 4,"fields": [13330,13331,13332,13333]},{"file": 56,"line": 77,"col": 4,"fields": [13334,13335,13336,13337,13338,13339,13340]},{"file": 56,"line": 87,"col": 4,"fields": [13341,13342,13343,13344]},{"file": 56,"line": 94,"col": 4,"fields": [13345,13346,13347,13348,13349,13350,13351,13352]},{"file": 56,"line": 105,"col": 4,"fields": [13353,13354,13355,13356,13357,13358,13359,13360,13361,13362]},{"file": 56,"line": 118,"col": 4,"fields": [13363,13364,13365]},{"file": 56,"line": 120,"col": 4,"fields": [13366,13367,13368,13369]},{"file": 56,"line": 122,"col": 4,"fields": [13370,13371,13372,13373,13374,13375]},{"file": 56,"line": 124,"col": 4,"fields": [13376,13377,13378,13379,13380,13381,13382,13383]},{"file": 56,"line": 135,"col": 4,"fields": [13384]},{"file": 56,"line": 137,"col": 4,"fields": [13385,13386,13387,13388,13389,13390,13391]},{"file": 56,"line": 139,"col": 4,"fields": [13392]},{"file": 56,"line": 141,"col": 4,"fields": [13393,13394]},{"file": 56,"line": 142,"col": 4,"fields": [13395]},{"file": 56,"line": 143,"col": 4,"fields": [13396,13397]},{"file": 56,"line": 145,"col": 4,"fields": [13398,13399,13400,13401,13402,13403,13404]},{"file": 56,"line": 147,"col": 4,"fields": [13405]},{"file": 56,"line": 149,"col": 4,"fields": []},{"file": 56,"line": 150,"col": 4,"fields": []},{"file": 56,"line": 152,"col": 4,"fields": [13406,13407]},{"file": 56,"line": 154,"col": 4,"fields": []},{"file": 56,"line": 156,"col": 4,"fields": [13408,13409]},{"file": 56,"line": 157,"col": 4,"fields": [13410,13411,13412,13413,13414]},{"file": 56,"line": 158,"col": 4,"fields": [13415,13416,13417,13418,13419]},{"file": 56,"line": 159,"col": 4,"fields": [13420,13421,13422,13423,13424]},{"file": 56,"line": 160,"col": 4,"fields": [13425,13426]},{"file": 56,"line": 162,"col": 4,"fields": [13427,13428]},{"file": 56,"line": 164,"col": 4,"fields": []},{"file": 56,"line": 165,"col": 4,"fields": []},{"file": 56,"line": 167,"col": 4,"fields": []},{"file": 56,"line": 169,"col": 4,"fields": []},{"file": 56,"line": 171,"col": 4,"fields": []},{"file": 56,"line": 173,"col": 4,"fields": [13429,13430,13431]},{"file": 56,"line": 175,"col": 4,"fields": [13432,13433]},{"file": 56,"line": 177,"col": 4,"fields": [13434,13435]},{"file": 56,"line": 179,"col": 4,"fields": [13436]},{"file": 56,"line": 181,"col": 4,"fields": [13437,13438,13439]},{"file": 56,"line": 183,"col": 4,"fields": [13440]},{"file": 56,"line": 185,"col": 4,"fields": []},{"file": 56,"line": 186,"col": 4,"fields": [13441]},{"file": 56,"line": 188,"col": 4,"fields": [13442,13443]},{"file": 56,"line": 193,"col": 4,"fields": [13444,13445,13446,13447]},{"file": 56,"line": 200,"col": 4,"fields": [13448,13449,13450,13451]},{"file": 56,"line": 207,"col": 4,"fields": [13452,13453,13454,13455]},{"file": 56,"line": 214,"col": 4,"fields": [13456,13457,13458,13459]},{"file": 56,"line": 216,"col": 4,"fields": []},{"file": 56,"line": 217,"col": 4,"fields": [13460,13461,13462,13463,13464]},{"file": 56,"line": 218,"col": 4,"fields": [13465,13466,13467,13468,13469,13470]},{"file": 56,"line": 227,"col": 4,"fields": [13471]},{"file": 56,"line": 228,"col": 4,"fields": [13472]},{"file": 56,"line": 230,"col": 4,"fields": [13473,13474,13475]},{"file": 56,"line": 231,"col": 4,"fields": [13476]},{"file": 56,"line": 232,"col": 4,"fields": [13477,13478,13479,13480]},{"file": 56,"line": 233,"col": 4,"fields": [13481,13482,13483]},{"file": 56,"line": 234,"col": 4,"fields": [13484,13485]},{"file": 56,"line": 235,"col": 4,"fields": [13486,13487,13488]},{"file": 56,"line": 237,"col": 4,"fields": [13489]},{"file": 56,"line": 239,"col": 4,"fields": [13490,13491,13492]},{"file": 56,"line": 241,"col": 4,"fields": [13493,13494,13495]},{"file": 56,"line": 243,"col": 4,"fields": [13496,13497,13498]},{"file": 56,"line": 245,"col": 4,"fields": [13499,13500,13501,13502]},{"file": 56,"line": 246,"col": 4,"fields": [13503,13504,13505]},{"file": 56,"line": 248,"col": 4,"fields": [13506]},{"file": 56,"line": 250,"col": 4,"fields": [13507,13508,13509]},{"file": 56,"line": 256,"col": 4,"fields": [13510,13511,13512,13513]},{"file": 56,"line": 258,"col": 4,"fields": [13514]},{"file": 56,"line": 260,"col": 4,"fields": [13515]},{"file": 56,"line": 262,"col": 4,"fields": [13516,13517,13518,13519,13520,13521,13522,13523]},{"file": 56,"line": 273,"col": 4,"fields": [13524,13525,13526,13527,13528]},{"file": 56,"line": 281,"col": 4,"fields": [13529]},{"file": 56,"line": 283,"col": 4,"fields": [13530,13531]},{"file": 56,"line": 285,"col": 4,"fields": [13532,13533]},{"file": 56,"line": 290,"col": 4,"fields": [13534]},{"file": 56,"line": 292,"col": 4,"fields": [13535,13536]},{"file": 56,"line": 297,"col": 4,"fields": [13537,13538,13539,13540]},{"file": 56,"line": 304,"col": 4,"fields": [13541,13542,13543,13544]},{"file": 56,"line": 311,"col": 4,"fields": [13545,13546,13547]},{"file": 56,"line": 313,"col": 4,"fields": [13548]},{"file": 56,"line": 315,"col": 4,"fields": []},{"file": 56,"line": 317,"col": 4,"fields": [13549,13550]},{"file": 56,"line": 319,"col": 4,"fields": []},{"file": 56,"line": 321,"col": 4,"fields": [13551]},{"file": 56,"line": 323,"col": 4,"fields": [13552,13553]},{"file": 56,"line": 325,"col": 4,"fields": [13554,13555,13556]},{"file": 56,"line": 327,"col": 4,"fields": [13557,13558,13559,13560]},{"file": 56,"line": 329,"col": 4,"fields": [13561,13562,13563,13564,13565]},{"file": 56,"line": 337,"col": 4,"fields": [13566,13567,13568,13569,13570]},{"file": 56,"line": 345,"col": 4,"fields": [13571,13572,13573,13574,13575]},{"file": 56,"line": 347,"col": 4,"fields": [13576]},{"file": 56,"line": 349,"col": 4,"fields": [13577,13578]},{"file": 56,"line": 351,"col": 4,"fields": [13579]},{"file": 56,"line": 353,"col": 4,"fields": [13580]},{"file": 56,"line": 354,"col": 4,"fields": [13581]},{"file": 56,"line": 355,"col": 4,"fields": [13582]},{"file": 56,"line": 356,"col": 4,"fields": [13583]},{"file": 56,"line": 358,"col": 4,"fields": [13584,13585,13586,13587]},{"file": 56,"line": 360,"col": 4,"fields": [13588]},{"file": 56,"line": 361,"col": 4,"fields": [13589,13590,13591]},{"file": 56,"line": 362,"col": 4,"fields": [13592,13593]},{"file": 56,"line": 363,"col": 4,"fields": [13594,13595]},{"file": 56,"line": 364,"col": 4,"fields": [13596,13597,13598,13599]},{"file": 56,"line": 365,"col": 4,"fields": [13600,13601,13602,13603,13604]},{"file": 56,"line": 366,"col": 4,"fields": [13605,13606,13607]},{"file": 56,"line": 367,"col": 4,"fields": [13608,13609,13610]},{"file": 56,"line": 368,"col": 4,"fields": [13611,13612,13613]},{"file": 56,"line": 369,"col": 4,"fields": [13614,13615,13616]},{"file": 56,"line": 370,"col": 4,"fields": [13617,13618,13619]},{"file": 56,"line": 371,"col": 4,"fields": [13620,13621,13622,13623]},{"file": 56,"line": 372,"col": 4,"fields": [13624,13625,13626,13627]},{"file": 56,"line": 373,"col": 4,"fields": [13628,13629,13630,13631]},{"file": 56,"line": 374,"col": 4,"fields": [13632,13633,13634,13635]},{"file": 56,"line": 375,"col": 4,"fields": [13636,13637,13638,13639]},{"file": 56,"line": 376,"col": 4,"fields": [13640,13641,13642,13643]},{"file": 56,"line": 377,"col": 4,"fields": [13644,13645,13646,13647]},{"file": 56,"line": 378,"col": 4,"fields": [13648,13649]},{"file": 56,"line": 379,"col": 4,"fields": [13650,13651,13652]},{"file": 56,"line": 380,"col": 4,"fields": [13653,13654,13655]},{"file": 56,"line": 381,"col": 4,"fields": [13656,13657,13658]},{"file": 56,"line": 382,"col": 4,"fields": [13659,13660,13661]},{"file": 56,"line": 383,"col": 4,"fields": [13662,13663,13664]},{"file": 56,"line": 384,"col": 4,"fields": [13665]},{"file": 56,"line": 385,"col": 4,"fields": [13666,13667,13668]},{"file": 56,"line": 386,"col": 4,"fields": [13669,13670,13671]},{"file": 56,"line": 388,"col": 4,"fields": [13672]},{"file": 56,"line": 390,"col": 4,"fields": [13673]},{"file": 56,"line": 391,"col": 4,"fields": [13674]},{"file": 56,"line": 392,"col": 4,"fields": [13675,13676,13677,13678]},{"file": 56,"line": 399,"col": 4,"fields": [13679]},{"file": 56,"line": 400,"col": 4,"fields": [13680]},{"file": 56,"line": 401,"col": 4,"fields": [13681]},{"file": 56,"line": 403,"col": 4,"fields": [13682,13683]},{"file": 56,"line": 404,"col": 4,"fields": [13684,13685]},{"file": 56,"line": 0,"col": 0},{"file": 56,"line": 1,"col": 0},{"file": 56,"line": 3,"col": 0},{"file": 56,"line": 4,"col": 0},{"file": 56,"line": 5,"col": 0},{"file": 56,"line": 6,"col": 0},{"file": 56,"line": 7,"col": 0},{"file": 56,"line": 8,"col": 0},{"file": 56,"line": 9,"col": 0},{"file": 56,"line": 10,"col": 0},{"file": 56,"line": 11,"col": 0},{"file": 56,"line": 12,"col": 0},{"file": 56,"line": 13,"col": 0},{"file": 56,"line": 14,"col": 0},{"file": 56,"line": 15,"col": 0},{"file": 56,"line": 16,"col": 0},{"file": 56,"line": 17,"col": 0},{"file": 56,"line": 18,"col": 0},{"file": 56,"line": 19,"col": 0},{"file": 56,"line": 20,"col": 0},{"file": 56,"line": 21,"col": 0},{"file": 56,"line": 22,"col": 0},{"file": 56,"line": 23,"col": 0},{"file": 56,"line": 24,"col": 0},{"file": 56,"line": 25,"col": 0},{"file": 56,"line": 26,"col": 0},{"file": 56,"line": 27,"col": 0},{"file": 56,"line": 28,"col": 0},{"file": 56,"line": 29,"col": 0},{"file": 56,"line": 30,"col": 0},{"file": 56,"line": 31,"col": 0},{"file": 56,"line": 32,"col": 0},{"file": 56,"line": 33,"col": 0},{"file": 56,"line": 34,"col": 0},{"file": 56,"line": 35,"col": 0},{"file": 56,"line": 36,"col": 0},{"file": 56,"line": 37,"col": 0},{"file": 56,"line": 38,"col": 0},{"file": 56,"line": 39,"col": 0},{"file": 56,"line": 40,"col": 0},{"file": 56,"line": 41,"col": 0},{"file": 56,"line": 42,"col": 0},{"file": 56,"line": 43,"col": 0},{"file": 56,"line": 44,"col": 0},{"file": 56,"line": 45,"col": 0},{"file": 56,"line": 46,"col": 0},{"file": 56,"line": 47,"col": 0},{"file": 56,"line": 48,"col": 0},{"file": 56,"line": 49,"col": 0},{"file": 56,"line": 50,"col": 0},{"file": 56,"line": 51,"col": 0},{"file": 56,"line": 52,"col": 0},{"file": 56,"line": 53,"col": 0},{"file": 56,"line": 54,"col": 0},{"file": 56,"line": 55,"col": 0},{"file": 56,"line": 56,"col": 0},{"file": 56,"line": 57,"col": 0},{"file": 57,"line": 25,"col": 4,"fields": [13686]},{"file": 57,"line": 28,"col": 4,"fields": [13687,13688,13689,13690]},{"file": 57,"line": 34,"col": 4,"fields": [13691,13692,13693,13694,13695]},{"file": 57,"line": 41,"col": 4,"fields": [13696,13697,13698,13699,13700]},{"file": 57,"line": 49,"col": 4,"fields": [13701,13702]},{"file": 57,"line": 54,"col": 4,"fields": [13703,13704,13705,13706,13707,13708,13709,13710,13711,13712,13713]},{"file": 57,"line": 67,"col": 4,"fields": [13714,13715,13716,13717,13718,13719,13720,13721,13722,13723]},{"file": 57,"line": 79,"col": 4,"fields": [13724,13725,13726,13727,13728,13729,13730,13731,13732,13733]},{"file": 57,"line": 91,"col": 4,"fields": [13734]},{"file": 57,"line": 92,"col": 4,"fields": [13735,13736,13737,13738]},{"file": 57,"line": 98,"col": 4,"fields": [13739]},{"file": 57,"line": 100,"col": 4,"fields": [13740,13741,13742,13743,13744,13745,13746,13747,13748,13749,13750]},{"file": 57,"line": 114,"col": 4,"fields": [13751,13752,13753,13754]},{"file": 57,"line": 121,"col": 4,"fields": [13755,13756,13757,13758]},{"file": 57,"line": 128,"col": 4,"fields": [13759,13760,13761,13762]},{"file": 57,"line": 135,"col": 4,"fields": [13763]},{"file": 57,"line": 137,"col": 4,"fields": [13764,13765,13766,13767,13768]},{"file": 57,"line": 145,"col": 4,"fields": [13769]},{"file": 57,"line": 149,"col": 4,"fields": [13770]},{"file": 57,"line": 153,"col": 4,"fields": [13771,13772,13773,13774]},{"file": 57,"line": 160,"col": 4,"fields": [13775,13776,13777,13778,13779,13780,13781,13782,13783,13784]},{"file": 57,"line": 173,"col": 4,"fields": [13785,13786,13787,13788,13789]},{"file": 57,"line": 0,"col": 0},{"file": 57,"line": 1,"col": 0},{"file": 57,"line": 3,"col": 0},{"file": 57,"line": 4,"col": 0},{"file": 57,"line": 5,"col": 0},{"file": 57,"line": 6,"col": 0},{"file": 57,"line": 7,"col": 0},{"file": 57,"line": 8,"col": 0},{"file": 57,"line": 9,"col": 0},{"file": 57,"line": 10,"col": 0},{"file": 57,"line": 11,"col": 0},{"file": 57,"line": 12,"col": 0},{"file": 57,"line": 13,"col": 0},{"file": 57,"line": 14,"col": 0},{"file": 57,"line": 15,"col": 0},{"file": 57,"line": 16,"col": 0},{"file": 57,"line": 17,"col": 0},{"file": 57,"line": 18,"col": 0},{"file": 57,"line": 19,"col": 0},{"file": 57,"line": 20,"col": 0},{"file": 57,"line": 21,"col": 0},{"file": 57,"line": 22,"col": 0},{"file": 57,"line": 23,"col": 0},{"file": 12,"line": 488,"col": 12,"fields": [13790,13791]},{"file": 12,"line": 496,"col": 12,"docs": " Checks if system is guaranteed to be at least `version` or older than `version`. Returns `null` if a runtime check is required.","fields": [13792,13793]},{"file": 3,"line": 143,"col": 20,"fields": [13794,13795]},{"file": 3,"line": 149,"col": 20,"docs": " Checks if system is guaranteed to be at least `version` or older than `version`. Returns `null` if a runtime check is required.","fields": [13796,13797]},{"file": 18,"line": 853,"col": 8,"docs": " Initialize the delay queue by spawning the timer thread and starting any timer resources.","fields": [13798]},{"file": 18,"line": 868,"col": 8,"docs": " Entry point for the timer thread which waits for timer entries to expire and reschedules them.","fields": [13799]},{"file": 18,"line": 891,"col": 8},{"file": 22,"line": 435,"col": 8,"fields": [13800]},{"file": 18,"line": 894,"col": 12},{"file": 18,"line": 905,"col": 12,"docs": " Registers the entry into the queue of waiting frames","fields": [13801,13802]},{"file": 18,"line": 910,"col": 12,"docs": " Dequeues one expired event relative to `now`","fields": [13803,13804]},{"file": 18,"line": 921,"col": 12,"docs": " Returns an estimate for the amount of time to wait until the next waiting entry expires.","fields": [13805]},{"file": 18,"line": 926,"col": 12,"fields": [13806]},{"file": 36,"line": 879,"col": 4},{"file": 36,"line": 880,"col": 4},{"file": 36,"line": 881,"col": 4},{"file": 36,"line": 882,"col": 4},{"file": 36,"line": 884,"col": 4,"docs": " In WASI, this error may occur when the file descriptor does not hold the required rights to write to it."},{"file": 36,"line": 887,"col": 4},{"file": 36,"line": 888,"col": 4},{"file": 36,"line": 889,"col": 4},{"file": 36,"line": 890,"col": 4},{"file": 36,"line": 892,"col": 4,"docs": " This error occurs when no global event loop is configured, and reading from the file descriptor would block."},{"file": 36,"line": 896,"col": 4,"docs": " Connection reset by peer."},{"file": 36,"line": 4989,"col": 4,"docs": " The Operating System returned an undocumented error code. This error is in theory not possible, but it would be better to handle this error than to invoke undefined behavior."},{"file": 36,"line": 513,"col": 4},{"file": 36,"line": 514,"col": 4},{"file": 36,"line": 515,"col": 4},{"file": 36,"line": 516,"col": 4},{"file": 36,"line": 517,"col": 4},{"file": 36,"line": 518,"col": 4},{"file": 36,"line": 519,"col": 4},{"file": 36,"line": 520,"col": 4},{"file": 36,"line": 522,"col": 4,"docs": " This error occurs when no global event loop is configured, and reading from the file descriptor would block."},{"file": 36,"line": 526,"col": 4,"docs": " In WASI, this error occurs when the file descriptor does not hold the required rights to read from it."},{"file": 36,"line": 4310,"col": 4},{"file": 36,"line": 4312,"col": 4,"docs": " In WASI, this error may occur when the file descriptor does not hold the required rights to seek on it."},{"file": 5,"line": 57,"col": 8},{"file": 5,"line": 58,"col": 8},{"file": 5,"line": 59,"col": 8},{"file": 5,"line": 60,"col": 8},{"file": 5,"line": 61,"col": 8},{"file": 5,"line": 62,"col": 8},{"file": 5,"line": 63,"col": 8,"docs": " On Windows, file paths must be valid Unicode."},{"file": 5,"line": 65,"col": 8,"docs": " On Windows, file paths cannot contain these characters: '/', '*', '?', '\"', '<', '>', '|'"},{"file": 5,"line": 68,"col": 8},{"file": 36,"line": 1238,"col": 4},{"file": 36,"line": 1239,"col": 4},{"file": 36,"line": 1240,"col": 4},{"file": 36,"line": 1241,"col": 4},{"file": 36,"line": 1247,"col": 4,"docs": " Insufficient kernel memory was available, or the named file is a FIFO and per-user hard limit on memory allocation for pipes has been reached."},{"file": 36,"line": 1252,"col": 4,"docs": " The file is too large to be opened. This error is unreachable for 64-bit targets, as well as when opening directories."},{"file": 36,"line": 1256,"col": 4,"docs": " The path refers to directory but the `O.DIRECTORY` flag was not provided."},{"file": 36,"line": 1259,"col": 4,"docs": " A new path cannot be created because the device has no room for the new file. This error is only reachable when the `O.CREAT` flag is provided."},{"file": 36,"line": 1263,"col": 4,"docs": " A component used as a directory in the path was not, in fact, a directory, or `O.DIRECTORY` was specified and the path was not a directory."},{"file": 36,"line": 1269,"col": 4},{"file": 36,"line": 1271,"col": 4,"docs": " The underlying filesystem does not support file locks"},{"file": 36,"line": 1277,"col": 4},{"file": 36,"line": 3682,"col": 4},{"file": 40,"line": 81,"col": 4},{"file": 40,"line": 82,"col": 4},{"file": 40,"line": 101,"col": 4},{"file": 40,"line": 125,"col": 4},{"file": 46,"line": 504,"col": 4},{"file": 46,"line": 505,"col": 4},{"file": 46,"line": 506,"col": 4},{"file": 46,"line": 507,"col": 4},{"file": 46,"line": 508,"col": 4},{"file": 43,"line": 8,"col": 24},{"file": 34,"line": 992,"col": 49},{"file": 25,"line": 153,"col": 32},{"file": 25,"line": 139,"col": 24},{"file": 25,"line": 129,"col": 24},{"file": 9,"line": 44,"col": 48},{"file": 28,"line": 1545,"col": 4,"docs": " The result cannot fit in the type specified"},{"file": 28,"line": 1548,"col": 4,"docs": " The input was empty or had a byte that was not a digit"},{"file": 9,"line": 203,"col": 50},{"file": 25,"line": 162,"col": 24},{"file": 25,"line": 332,"col": 24},{"file": 21,"line": 461,"col": 53},{"file": 26,"line": 1084,"col": 24},{"file": 36,"line": 1741,"col": 4},{"file": 36,"line": 1740,"col": 4},{"file": 20,"line": 937,"col": 24},{"file": 20,"line": 923,"col": 36},{"file": 20,"line": 881,"col": 24},{"file": 20,"line": 619,"col": 24},{"file": 20,"line": 1050,"col": 24},{"file": 9,"line": 322,"col": 16,"docs": " An integer was read, but it did not match any of the tags in the supplied enum."},{"file": 21,"line": 471,"col": 64},{"file": 40,"line": 179,"col": 43},{"file": 40,"line": 25,"col": 21},{"file": 31,"line": 238,"col": 95},{"file": 46,"line": 421,"col": 4},{"file": 46,"line": 422,"col": 4},{"file": 46,"line": 423,"col": 4},{"file": 34,"line": 454,"col": 48},{"file": 46,"line": 633,"col": 4},{"file": 46,"line": 634,"col": 4},{"file": 46,"line": 1787,"col": 37},{"file": 46,"line": 1218,"col": 35},{"file": 34,"line": 1072,"col": 57},{"file": 40,"line": 99,"col": 4},{"file": 40,"line": 100,"col": 4},{"file": 40,"line": 123,"col": 4},{"file": 40,"line": 124,"col": 4},{"file": 46,"line": 1469,"col": 36},{"file": 34,"line": 448,"col": 48},{"file": 46,"line": 34,"col": 4},{"file": 46,"line": 35,"col": 4},{"file": 46,"line": 36,"col": 4},{"file": 46,"line": 37,"col": 4},{"file": 46,"line": 38,"col": 4},{"file": 46,"line": 39,"col": 4},{"file": 46,"line": 40,"col": 4},{"file": 46,"line": 41,"col": 4},{"file": 46,"line": 42,"col": 4},{"file": 46,"line": 43,"col": 4},{"file": 46,"line": 939,"col": 38},{"file": 28,"line": 1760,"col": 44},{"file": 34,"line": 461,"col": 48},{"file": 40,"line": 316,"col": 50},{"file": 40,"line": 318,"col": 62},{"file": 40,"line": 322,"col": 24},{"file": 40,"line": 12,"col": 16},{"file": 40,"line": 48,"col": 57},{"file": 46,"line": 1483,"col": 47},{"file": 42,"line": 271,"col": 32},{"file": 39,"line": 149,"col": 28},{"file": 36,"line": 6050,"col": 4,"docs": " The system is not configured to allow yielding"},{"file": 36,"line": 652,"col": 42},{"file": 36,"line": 1050,"col": 44},{"file": 36,"line": 1235,"col": 4,"docs": " In WASI, this error may occur when the file descriptor does not hold the required rights to open a new resource relative to it."},{"file": 36,"line": 1242,"col": 4},{"file": 36,"line": 1244,"col": 4,"docs": " The path exceeded `MAX_PATH_BYTES` bytes."},{"file": 36,"line": 1267,"col": 4,"docs": " The path already exists and the `O.CREAT` and `O.EXCL` flags were provided."},{"file": 36,"line": 1274,"col": 4},{"file": 36,"line": 1275,"col": 4},{"file": 36,"line": 3684,"col": 4,"docs": " In WASI, this error may occur when the file descriptor does not hold the required rights to get its filestat information."},{"file": 36,"line": 4029,"col": 4},{"file": 36,"line": 4030,"col": 4},{"file": 36,"line": 4031,"col": 4},{"file": 36,"line": 4032,"col": 4},{"file": 36,"line": 4033,"col": 4},{"file": 36,"line": 4034,"col": 4},{"file": 36,"line": 4035,"col": 4},{"file": 36,"line": 4036,"col": 4},{"file": 36,"line": 4037,"col": 4},{"file": 36,"line": 4039,"col": 4,"docs": " On Windows, file paths must be valid Unicode."},{"file": 36,"line": 4582,"col": 4},{"file": 36,"line": 4584,"col": 4,"docs": " The kernel ran out of memory for allocating file locks"},{"file": 36,"line": 4587,"col": 4,"docs": " The underlying filesystem does not support file locks"},{"file": 12,"line": 693,"col": 21,"name": "msg"},{"file": 12,"line": 693,"col": 38,"name": "error_return_trace"},{"file": 0,"line": 4,"col": 18,"name": "a"},{"file": 0,"line": 4,"col": 26,"name": "b"},{"file": 3,"line": 715,"col": 38,"name": "features"},{"file": 3,"line": 654,"col": 34,"name": "set"},{"file": 3,"line": 654,"col": 45,"name": "arch_feature_index"},{"file": 41,"line": 178,"col": 4,"name": "hinstDLL"},{"file": 41,"line": 179,"col": 4,"name": "fdwReason"},{"file": 41,"line": 180,"col": 4,"name": "lpReserved"},{"file": 26,"line": 224,"col": 14,"name": "ok"},{"file": 26,"line": 271,"col": 17,"name": "trace"},{"file": 26,"line": 271,"col": 56,"name": "first_trace_addr"},{"file": 26,"line": 271,"col": 82,"name": "msg"},{"file": 15,"line": 42,"col": 12,"name": "m"},{"file": 5,"line": 604,"col": 17,"name": "self"},{"file": 5,"line": 604,"col": 29,"name": "bytes"},{"file": 5,"line": 868,"col": 18,"name": "file"},{"file": 4,"line": 26,"col": 21,"name": "self"},{"file": 4,"line": 26,"col": 33,"name": "format","comptime": true},{"file": 4,"line": 26,"col": 62,"name": "args"},{"file": 26,"line": 196,"col": 22,"name": "stack_trace"},{"file": 26,"line": 105,"col": 29,"name": "start_addr"},{"file": 15,"line": 46,"col": 14,"name": "m"},{"file": 42,"line": 38,"col": 12,"name": "ev"},{"file": 15,"line": 239,"col": 16,"name": "m"},{"file": 46,"line": 512,"col": 4,"name": "handle"},{"file": 46,"line": 513,"col": 4,"name": "bytes"},{"file": 46,"line": 514,"col": 4,"name": "offset"},{"file": 46,"line": 515,"col": 4,"name": "io_mode"},{"file": 28,"line": 73,"col": 4,"name": "writer"},{"file": 28,"line": 74,"col": 4,"name": "fmt","comptime": true},{"file": 28,"line": 75,"col": 4,"name": "args"},{"file": 4,"line": 19,"col": 24,"name": "self"},{"file": 4,"line": 19,"col": 36,"name": "bytes"},{"file": 28,"line": 412,"col": 4,"name": "value"},{"file": 28,"line": 413,"col": 4,"name": "fmt","comptime": true},{"file": 28,"line": 414,"col": 4,"name": "options"},{"file": 28,"line": 415,"col": 4,"name": "writer"},{"file": 28,"line": 416,"col": 4,"name": "max_depth"},{"file": 6,"line": 25,"col": 16,"name": "ctx"},{"file": 6,"line": 25,"col": 30,"name": "key"},{"file": 6,"line": 40,"col": 15,"name": "ctx"},{"file": 6,"line": 40,"col": 29,"name": "a"},{"file": 6,"line": 40,"col": 35,"name": "b"},{"file": 26,"line": 666,"col": 25,"name": "allocator"},{"file": 26,"line": 341,"col": 4,"name": "stack_trace"},{"file": 26,"line": 342,"col": 4,"name": "out_stream"},{"file": 26,"line": 343,"col": 4,"name": "allocator"},{"file": 26,"line": 344,"col": 4,"name": "debug_info"},{"file": 26,"line": 345,"col": 4,"name": "tty_config"},{"file": 34,"line": 333,"col": 11,"name": "x"},{"file": 34,"line": 333,"col": 23,"name": "y"},{"file": 26,"line": 580,"col": 28,"name": "debug_info"},{"file": 26,"line": 580,"col": 52,"name": "out_stream"},{"file": 26,"line": 580,"col": 73,"name": "address"},{"file": 26,"line": 580,"col": 89,"name": "tty_config"},{"file": 26,"line": 1003,"col": 31,"name": "self"},{"file": 26,"line": 1003,"col": 49,"name": "address"},{"file": 3,"line": 1405,"col": 20,"name": "self"},{"file": 3,"line": 59,"col": 28,"name": "tag"},{"file": 26,"line": 1072,"col": 25,"name": "self"},{"file": 26,"line": 1072,"col": 43,"name": "address"},{"file": 43,"line": 179,"col": 13,"name": "self"},{"file": 43,"line": 179,"col": 31,"name": "T","comptime": true},{"file": 43,"line": 179,"col": 49,"name": "n"},{"file": 34,"line": 992,"col": 12,"name": "T","comptime": true},{"file": 34,"line": 992,"col": 30,"name": "x"},{"file": 43,"line": 443,"col": 12,"name": "self"},{"file": 43,"line": 443,"col": 30,"name": "memory"},{"file": 6,"line": 577,"col": 19,"name": "self"},{"file": 6,"line": 577,"col": 31,"name": "key"},{"file": 13,"line": 193,"col": 12,"name": "T","comptime": true},{"file": 13,"line": 193,"col": 30,"name": "dest"},{"file": 13,"line": 193,"col": 41,"name": "source"},{"file": 43,"line": 155,"col": 14,"name": "self"},{"file": 43,"line": 155,"col": 32,"name": "T","comptime": true},{"file": 29,"line": 2276,"col": 25,"name": "absolute_path_w"},{"file": 29,"line": 2276,"col": 55,"name": "flags"},{"file": 43,"line": 163,"col": 15,"name": "self"},{"file": 43,"line": 163,"col": 33,"name": "ptr"},{"file": 26,"line": 692,"col": 21,"name": "allocator"},{"file": 26,"line": 692,"col": 48,"name": "coff_file"},{"file": 5,"line": 181,"col": 17,"name": "self"},{"file": 25,"line": 109,"col": 16,"name": "allocator"},{"file": 25,"line": 109,"col": 43,"name": "in_file"},{"file": 25,"line": 121,"col": 22,"name": "self"},{"file": 5,"line": 467,"col": 16,"name": "self"},{"file": 5,"line": 467,"col": 28,"name": "buffer"},{"file": 5,"line": 862,"col": 18,"name": "file"},{"file": 9,"line": 42,"col": 25,"name": "self"},{"file": 9,"line": 42,"col": 37,"name": "buf"},{"file": 9,"line": 31,"col": 23,"name": "self"},{"file": 9,"line": 31,"col": 35,"name": "buffer"},{"file": 13,"line": 527,"col": 11,"name": "T","comptime": true},{"file": 13,"line": 527,"col": 29,"name": "a"},{"file": 13,"line": 527,"col": 43,"name": "b"},{"file": 5,"line": 245,"col": 18,"name": "self"},{"file": 5,"line": 245,"col": 30,"name": "offset"},{"file": 9,"line": 256,"col": 29,"name": "self"},{"file": 9,"line": 256,"col": 41,"name": "T","comptime": true},{"file": 9,"line": 238,"col": 30,"name": "self"},{"file": 9,"line": 238,"col": 42,"name": "num_bytes","comptime": true},{"file": 3,"line": 1018,"col": 26,"name": "arch"},{"file": 13,"line": 1329,"col": 21,"name": "T","comptime": true},{"file": 13,"line": 1329,"col": 39,"name": "bytes"},{"file": 25,"line": 178,"col": 26,"name": "self"},{"file": 5,"line": 252,"col": 18,"name": "self"},{"file": 25,"line": 274,"col": 24,"name": "self"},{"file": 7,"line": 334,"col": 42,"name": "self"},{"file": 7,"line": 334,"col": 55,"name": "new_capacity"},{"file": 7,"line": 419,"col": 30,"name": "self"},{"file": 43,"line": 337,"col": 22,"name": "self"},{"file": 43,"line": 337,"col": 40,"name": "old_mem"},{"file": 43,"line": 337,"col": 58,"name": "new_n"},{"file": 13,"line": 1032,"col": 21,"name": "T","comptime": true},{"file": 13,"line": 1032,"col": 39,"name": "slice"},{"file": 13,"line": 1032,"col": 57,"name": "value"},{"file": 28,"line": 1589,"col": 16,"name": "T","comptime": true},{"file": 28,"line": 1589,"col": 34,"name": "buf"},{"file": 28,"line": 1589,"col": 51,"name": "radix"},{"file": 25,"line": 159,"col": 27,"name": "self"},{"file": 25,"line": 159,"col": 40,"name": "offset"},{"file": 25,"line": 159,"col": 55,"name": "buf"},{"file": 9,"line": 188,"col": 39,"name": "self"},{"file": 9,"line": 188,"col": 51,"name": "buf"},{"file": 9,"line": 188,"col": 62,"name": "delimiter"},{"file": 9,"line": 224,"col": 24,"name": "self"},{"file": 9,"line": 24,"col": 20,"name": "self"},{"file": 9,"line": 24,"col": 32,"name": "buffer"},{"file": 13,"line": 220,"col": 11,"name": "T","comptime": true},{"file": 13,"line": 220,"col": 29,"name": "dest"},{"file": 13,"line": 220,"col": 40,"name": "value"},{"file": 7,"line": 181,"col": 36,"name": "self"},{"file": 7,"line": 181,"col": 49,"name": "item"},{"file": 25,"line": 316,"col": 22,"name": "self"},{"file": 25,"line": 316,"col": 35,"name": "name","comptime": true},{"file": 25,"line": 326,"col": 26,"name": "self"},{"file": 25,"line": 326,"col": 39,"name": "name","comptime": true},{"file": 25,"line": 326,"col": 66,"name": "allocator"},{"file": 21,"line": 1094,"col": 26,"name": "di"},{"file": 21,"line": 1094,"col": 42,"name": "allocator"},{"file": 7,"line": 49,"col": 20,"name": "allocator"},{"file": 21,"line": 622,"col": 24,"name": "di"},{"file": 10,"line": 115,"col": 25,"name": "buffer"},{"file": 10,"line": 46,"col": 20,"name": "self"},{"file": 10,"line": 46,"col": 33,"name": "dest"},{"file": 10,"line": 34,"col": 22,"name": "self"},{"file": 10,"line": 77,"col": 22,"name": "self"},{"file": 10,"line": 77,"col": 35,"name": "pos"},{"file": 10,"line": 81,"col": 22,"name": "self"},{"file": 10,"line": 81,"col": 35,"name": "amt"},{"file": 10,"line": 101,"col": 22,"name": "self"},{"file": 10,"line": 97,"col": 25,"name": "self"},{"file": 10,"line": 42,"col": 30,"name": "self"},{"file": 11,"line": 26,"col": 25,"name": "self"},{"file": 11,"line": 18,"col": 22,"name": "self"},{"file": 11,"line": 18,"col": 34,"name": "pos"},{"file": 21,"line": 455,"col": 18,"name": "in_stream"},{"file": 21,"line": 455,"col": 38,"name": "endian"},{"file": 21,"line": 455,"col": 66,"name": "is_64"},{"file": 9,"line": 266,"col": 23,"name": "self"},{"file": 9,"line": 266,"col": 35,"name": "T","comptime": true},{"file": 9,"line": 266,"col": 53,"name": "endian"},{"file": 13,"line": 1383,"col": 15,"name": "T","comptime": true},{"file": 13,"line": 1383,"col": 33,"name": "bytes"},{"file": 13,"line": 1383,"col": 88,"name": "endian"},{"file": 11,"line": 30,"col": 22,"name": "self"},{"file": 21,"line": 841,"col": 22,"name": "di"},{"file": 21,"line": 841,"col": 38,"name": "abbrev_offset"},{"file": 7,"line": 173,"col": 22,"name": "self"},{"file": 7,"line": 173,"col": 35,"name": "item"},{"file": 21,"line": 854,"col": 24,"name": "di"},{"file": 21,"line": 854,"col": 40,"name": "offset"},{"file": 21,"line": 606,"col": 21,"name": "self"},{"file": 52,"line": 5,"col": 19,"name": "T","comptime": true},{"file": 52,"line": 5,"col": 37,"name": "reader"},{"file": 7,"line": 67,"col": 22,"name": "self"},{"file": 7,"line": 361,"col": 22,"name": "self"},{"file": 7,"line": 314,"col": 35,"name": "self"},{"file": 7,"line": 314,"col": 48,"name": "new_capacity"},{"file": 7,"line": 371,"col": 36,"name": "self"},{"file": 21,"line": 885,"col": 16,"name": "di"},{"file": 21,"line": 885,"col": 32,"name": "in_stream"},{"file": 21,"line": 885,"col": 52,"name": "abbrev_table"},{"file": 21,"line": 885,"col": 86,"name": "is_64"},{"file": 21,"line": 586,"col": 23,"name": "abbrev_table"},{"file": 21,"line": 586,"col": 57,"name": "abbrev_code"},{"file": 7,"line": 267,"col": 22,"name": "self"},{"file": 7,"line": 267,"col": 35,"name": "new_len"},{"file": 21,"line": 537,"col": 18,"name": "allocator"},{"file": 21,"line": 537,"col": 45,"name": "in_stream"},{"file": 21,"line": 537,"col": 65,"name": "form_id"},{"file": 21,"line": 537,"col": 79,"name": "endian"},{"file": 21,"line": 537,"col": 107,"name": "is_64"},{"file": 21,"line": 298,"col": 15,"name": "self"},{"file": 21,"line": 298,"col": 33,"name": "id"},{"file": 21,"line": 338,"col": 25,"name": "self"},{"file": 21,"line": 338,"col": 43,"name": "di"},{"file": 21,"line": 338,"col": 59,"name": "id"},{"file": 21,"line": 1075,"col": 17,"name": "di"},{"file": 21,"line": 1075,"col": 33,"name": "offset"},{"file": 21,"line": 330,"col": 18,"name": "self"},{"file": 21,"line": 330,"col": 36,"name": "id"},{"file": 21,"line": 305,"col": 19,"name": "self"},{"file": 21,"line": 305,"col": 37,"name": "id"},{"file": 21,"line": 282,"col": 20,"name": "self"},{"file": 21,"line": 726,"col": 27,"name": "di"},{"file": 25,"line": 213,"col": 22,"name": "self"},{"file": 25,"line": 213,"col": 35,"name": "buffer"},{"file": 9,"line": 309,"col": 26,"name": "self"},{"file": 9,"line": 309,"col": 38,"name": "T","comptime": true},{"file": 13,"line": 2824,"col": 20,"name": "slice"},{"file": 44,"line": 453,"col": 15,"name": "allocator"},{"file": 44,"line": 453,"col": 38,"name": "paths"},{"file": 44,"line": 469,"col": 22,"name": "allocator"},{"file": 44,"line": 469,"col": 45,"name": "paths"},{"file": 37,"line": 23,"col": 19,"name": "allocator"},{"file": 44,"line": 309,"col": 24,"name": "path"},{"file": 44,"line": 434,"col": 14,"name": "byte"},{"file": 44,"line": 411,"col": 26,"name": "kind"},{"file": 44,"line": 411,"col": 50,"name": "p1"},{"file": 44,"line": 411,"col": 66,"name": "p2"},{"file": 13,"line": 1622,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 1622,"col": 34,"name": "buffer"},{"file": 13,"line": 1622,"col": 53,"name": "delimiter_bytes"},{"file": 13,"line": 1806,"col": 20,"name": "self"},{"file": 36,"line": 1745,"col": 14,"name": "out_buffer"},{"file": 43,"line": 455,"col": 12,"name": "allocator"},{"file": 43,"line": 455,"col": 35,"name": "T","comptime": true},{"file": 43,"line": 455,"col": 53,"name": "m"},{"file": 43,"line": 392,"col": 14,"name": "self"},{"file": 43,"line": 392,"col": 32,"name": "old_mem"},{"file": 43,"line": 392,"col": 50,"name": "new_n"},{"file": 20,"line": 503,"col": 16,"name": "allocator"},{"file": 20,"line": 503,"col": 43,"name": "path"},{"file": 29,"line": 920,"col": 20,"name": "self"},{"file": 29,"line": 920,"col": 31,"name": "sub_path"},{"file": 29,"line": 920,"col": 53,"name": "flags"},{"file": 20,"line": 861,"col": 12,"name": "allocator"},{"file": 20,"line": 861,"col": 39,"name": "file"},{"file": 5,"line": 257,"col": 21,"name": "self"},{"file": 20,"line": 946,"col": 22,"name": "size"},{"file": 20,"line": 946,"col": 33,"name": "block_size"},{"file": 20,"line": 1005,"col": 12,"name": "block_size"},{"file": 20,"line": 1005,"col": 29,"name": "file"},{"file": 20,"line": 1005,"col": 41,"name": "blocks"},{"file": 20,"line": 1016,"col": 12,"name": "self"},{"file": 20,"line": 1016,"col": 30,"name": "buffer"},{"file": 20,"line": 1071,"col": 18,"name": "self"},{"file": 20,"line": 606,"col": 27,"name": "self"},{"file": 20,"line": 850,"col": 21,"name": "self"},{"file": 20,"line": 850,"col": 33,"name": "stream"},{"file": 20,"line": 635,"col": 27,"name": "cap"},{"file": 20,"line": 463,"col": 23,"name": "stream"},{"file": 20,"line": 463,"col": 40,"name": "allocator"},{"file": 7,"line": 110,"col": 28,"name": "self"},{"file": 35,"line": 293,"col": 22,"name": "p"},{"file": 35,"line": 293,"col": 34,"name": "sentinel_val","comptime": true},{"file": 13,"line": 650,"col": 13,"name": "ptr"},{"file": 20,"line": 844,"col": 25,"name": "self"},{"file": 20,"line": 844,"col": 37,"name": "id"},{"file": 20,"line": 526,"col": 26,"name": "self"},{"file": 9,"line": 128,"col": 12,"name": "self"},{"file": 9,"line": 129,"col": 12,"name": "allocator"},{"file": 9,"line": 130,"col": 12,"name": "delimiter"},{"file": 9,"line": 131,"col": 12,"name": "max_size"},{"file": 9,"line": 102,"col": 12,"name": "self"},{"file": 9,"line": 103,"col": 12,"name": "array_list"},{"file": 9,"line": 104,"col": 12,"name": "delimiter"},{"file": 9,"line": 105,"col": 12,"name": "max_size"},{"file": 7,"line": 292,"col": 39,"name": "self"},{"file": 7,"line": 292,"col": 52,"name": "new_len"},{"file": 20,"line": 1047,"col": 18,"name": "self"},{"file": 20,"line": 1047,"col": 36,"name": "len"},{"file": 9,"line": 320,"col": 24,"name": "self"},{"file": 9,"line": 320,"col": 36,"name": "Enum","comptime": true},{"file": 9,"line": 320,"col": 57,"name": "endian"},{"file": 6,"line": 538,"col": 28,"name": "self"},{"file": 6,"line": 538,"col": 41,"name": "key"},{"file": 6,"line": 538,"col": 49,"name": "value"},{"file": 6,"line": 973,"col": 35,"name": "self"},{"file": 6,"line": 973,"col": 48,"name": "allocator"},{"file": 6,"line": 973,"col": 71,"name": "key"},{"file": 6,"line": 973,"col": 79,"name": "value"},{"file": 6,"line": 973,"col": 89,"name": "ctx"},{"file": 6,"line": 1367,"col": 31,"name": "self"},{"file": 6,"line": 1367,"col": 50,"name": "key"},{"file": 6,"line": 1367,"col": 58,"name": "ctx"},{"file": 6,"line": 1409,"col": 24,"name": "self"},{"file": 6,"line": 1409,"col": 37,"name": "allocator"},{"file": 6,"line": 1409,"col": 60,"name": "new_count"},{"file": 6,"line": 1409,"col": 77,"name": "ctx"},{"file": 6,"line": 1445,"col": 16,"name": "self"},{"file": 6,"line": 1445,"col": 29,"name": "allocator"},{"file": 6,"line": 1445,"col": 52,"name": "new_capacity"},{"file": 6,"line": 1445,"col": 72,"name": "ctx"},{"file": 6,"line": 869,"col": 27,"name": "size"},{"file": 6,"line": 1403,"col": 16,"name": "self"},{"file": 34,"line": 402,"col": 11,"name": "x"},{"file": 34,"line": 402,"col": 23,"name": "y"},{"file": 6,"line": 925,"col": 24,"name": "self"},{"file": 34,"line": 1025,"col": 20,"name": "v"},{"file": 6,"line": 1476,"col": 20,"name": "self"},{"file": 6,"line": 1476,"col": 33,"name": "allocator"},{"file": 6,"line": 1476,"col": 56,"name": "new_capacity"},{"file": 13,"line": 2921,"col": 20,"name": "addr"},{"file": 13,"line": 2921,"col": 33,"name": "alignment"},{"file": 43,"line": 239,"col": 4,"name": "self"},{"file": 43,"line": 240,"col": 4,"name": "T","comptime": true},{"file": 43,"line": 242,"col": 4,"docs": " null means naturally aligned","name": "alignment","comptime": true},{"file": 43,"line": 243,"col": 4,"name": "n"},{"file": 6,"line": 864,"col": 22,"name": "self"},{"file": 6,"line": 864,"col": 35,"name": "allocator"},{"file": 6,"line": 1397,"col": 25,"name": "self"},{"file": 6,"line": 917,"col": 16,"name": "self"},{"file": 6,"line": 921,"col": 18,"name": "self"},{"file": 6,"line": 755,"col": 26,"name": "self"},{"file": 6,"line": 1000,"col": 49,"name": "self"},{"file": 6,"line": 1000,"col": 62,"name": "key"},{"file": 6,"line": 1000,"col": 70,"name": "value"},{"file": 6,"line": 1000,"col": 80,"name": "ctx"},{"file": 13,"line": 2234,"col": 12,"name": "T","comptime": true},{"file": 13,"line": 2234,"col": 30,"name": "a"},{"file": 13,"line": 2234,"col": 37,"name": "b"},{"file": 26,"line": 611,"col": 4,"name": "out_stream"},{"file": 26,"line": 612,"col": 4,"name": "line_info"},{"file": 26,"line": 613,"col": 4,"name": "address"},{"file": 26,"line": 614,"col": 4,"name": "symbol_name"},{"file": 26,"line": 615,"col": 4,"name": "compile_unit_name"},{"file": 26,"line": 616,"col": 4,"name": "tty_config"},{"file": 26,"line": 617,"col": 4,"name": "printLineFromFile","comptime": true},{"file": 26,"line": 1398,"col": 34,"name": "self"},{"file": 26,"line": 1398,"col": 50,"name": "address"},{"file": 26,"line": 1462,"col": 22,"name": "address"},{"file": 26,"line": 1462,"col": 36,"name": "di"},{"file": 20,"line": 791,"col": 21,"name": "self"},{"file": 20,"line": 791,"col": 33,"name": "index"},{"file": 44,"line": 950,"col": 16,"name": "path"},{"file": 20,"line": 670,"col": 25,"name": "self"},{"file": 20,"line": 670,"col": 37,"name": "module"},{"file": 20,"line": 670,"col": 54,"name": "address"},{"file": 20,"line": 694,"col": 29,"name": "self"},{"file": 20,"line": 694,"col": 41,"name": "module"},{"file": 20,"line": 694,"col": 58,"name": "address"},{"file": 20,"line": 1053,"col": 18,"name": "self"},{"file": 20,"line": 1053,"col": 36,"name": "len"},{"file": 21,"line": 793,"col": 27,"name": "di"},{"file": 21,"line": 793,"col": 43,"name": "target_address"},{"file": 21,"line": 313,"col": 24,"name": "self"},{"file": 21,"line": 313,"col": 42,"name": "id"},{"file": 21,"line": 610,"col": 25,"name": "di"},{"file": 21,"line": 610,"col": 41,"name": "address"},{"file": 21,"line": 905,"col": 29,"name": "di"},{"file": 21,"line": 905,"col": 45,"name": "compile_unit"},{"file": 21,"line": 905,"col": 72,"name": "target_address"},{"file": 9,"line": 232,"col": 30,"name": "self"},{"file": 21,"line": 398,"col": 16,"name": "is_stmt"},{"file": 21,"line": 398,"col": 31,"name": "include_dirs"},{"file": 21,"line": 398,"col": 65,"name": "file_entries"},{"file": 21,"line": 398,"col": 102,"name": "target_address"},{"file": 11,"line": 22,"col": 22,"name": "self"},{"file": 11,"line": 22,"col": 34,"name": "amt"},{"file": 21,"line": 422,"col": 26,"name": "self"},{"file": 44,"line": 101,"col": 12,"name": "allocator"},{"file": 44,"line": 101,"col": 35,"name": "paths"},{"file": 44,"line": 37,"col": 17,"name": "allocator"},{"file": 44,"line": 37,"col": 40,"name": "separator"},{"file": 44,"line": 37,"col": 55,"name": "sepPredicate"},{"file": 44,"line": 37,"col": 83,"name": "paths"},{"file": 44,"line": 37,"col": 110,"name": "zero"},{"file": 44,"line": 27,"col": 13,"name": "byte"},{"file": 21,"line": 379,"col": 17,"name": "self"},{"file": 52,"line": 54,"col": 19,"name": "T","comptime": true},{"file": 52,"line": 54,"col": 37,"name": "reader"},{"file": 26,"line": 44,"col": 18,"name": "self"},{"file": 26,"line": 450,"col": 4,"name": "out_stream"},{"file": 26,"line": 451,"col": 4,"name": "debug_info"},{"file": 26,"line": 452,"col": 4,"name": "tty_config"},{"file": 26,"line": 453,"col": 4,"name": "start_addr"},{"file": 26,"line": 470,"col": 4,"name": "out_stream"},{"file": 26,"line": 471,"col": 4,"name": "debug_info"},{"file": 26,"line": 472,"col": 4,"name": "tty_config"},{"file": 26,"line": 473,"col": 4,"name": "start_addr"},{"file": 15,"line": 243,"col": 18,"name": "m"},{"file": 42,"line": 140,"col": 16,"name": "ev"},{"file": 46,"line": 1982,"col": 23,"name": "err"},{"file": 4,"line": 15,"col": 21,"name": "self"},{"file": 4,"line": 15,"col": 33,"name": "bytes"},{"file": 28,"line": 634,"col": 4,"name": "value"},{"file": 28,"line": 635,"col": 4,"name": "fmt","comptime": true},{"file": 28,"line": 636,"col": 4,"name": "options"},{"file": 28,"line": 637,"col": 4,"name": "writer"},{"file": 28,"line": 655,"col": 4,"name": "value"},{"file": 28,"line": 656,"col": 4,"name": "fmt","comptime": true},{"file": 28,"line": 657,"col": 4,"name": "options"},{"file": 28,"line": 658,"col": 4,"name": "writer"},{"file": 28,"line": 1313,"col": 4,"name": "value"},{"file": 28,"line": 1314,"col": 4,"name": "base"},{"file": 28,"line": 1315,"col": 4,"name": "case"},{"file": 28,"line": 1316,"col": 4,"name": "options"},{"file": 28,"line": 1317,"col": 4,"name": "writer"},{"file": 34,"line": 933,"col": 15,"name": "x"},{"file": 28,"line": 1773,"col": 19,"name": "digit"},{"file": 28,"line": 1773,"col": 30,"name": "case"},{"file": 28,"line": 933,"col": 4,"name": "buf"},{"file": 28,"line": 934,"col": 4,"name": "options"},{"file": 28,"line": 935,"col": 4,"name": "writer"},{"file": 40,"line": 162,"col": 27,"name": "s"},{"file": 40,"line": 18,"col": 30,"name": "first_byte"},{"file": 40,"line": 70,"col": 18,"name": "bytes"},{"file": 4,"line": 35,"col": 31,"name": "self"},{"file": 4,"line": 35,"col": 43,"name": "byte"},{"file": 4,"line": 35,"col": 53,"name": "n"},{"file": 28,"line": 884,"col": 4,"name": "bytes"},{"file": 28,"line": 885,"col": 4,"name": "fmt","comptime": true},{"file": 28,"line": 886,"col": 4,"name": "options"},{"file": 28,"line": 887,"col": 4,"name": "writer"},{"file": 48,"line": 168,"col": 16,"name": "seed"},{"file": 48,"line": 168,"col": 27,"name": "input"},{"file": 13,"line": 2565,"col": 15,"name": "ptr"},{"file": 35,"line": 676,"col": 11,"name": "a"},{"file": 35,"line": 676,"col": 23,"name": "b"},{"file": 26,"line": 991,"col": 16,"name": "allocator"},{"file": 45,"line": 33,"col": 16,"name": "child_allocator"},{"file": 3,"line": 1401,"col": 18,"name": "self"},{"file": 3,"line": 838,"col": 26,"name": "arch"},{"file": 31,"line": 238,"col": 13,"name": "allocator"},{"file": 31,"line": 238,"col": 36,"name": "n"},{"file": 31,"line": 238,"col": 46,"name": "alignment"},{"file": 31,"line": 238,"col": 62,"name": "len_align"},{"file": 31,"line": 238,"col": 78,"name": "ra"},{"file": 31,"line": 337,"col": 8,"name": "allocator"},{"file": 31,"line": 338,"col": 8,"name": "buf_unaligned"},{"file": 31,"line": 339,"col": 8,"name": "buf_align"},{"file": 31,"line": 340,"col": 8,"name": "new_size"},{"file": 31,"line": 341,"col": 8,"name": "len_align"},{"file": 31,"line": 342,"col": 8,"name": "return_address"},{"file": 37,"line": 176,"col": 25,"name": "key","comptime": true},{"file": 5,"line": 198,"col": 35,"name": "self"},{"file": 5,"line": 193,"col": 17,"name": "self"},{"file": 43,"line": 262,"col": 4,"name": "self"},{"file": 43,"line": 263,"col": 4,"name": "T","comptime": true},{"file": 43,"line": 265,"col": 4,"docs": " null means naturally aligned","name": "alignment","comptime": true},{"file": 43,"line": 266,"col": 4,"name": "n"},{"file": 43,"line": 267,"col": 4,"name": "exact"},{"file": 43,"line": 268,"col": 4,"name": "return_address"},{"file": 43,"line": 474,"col": 4,"name": "self"},{"file": 43,"line": 475,"col": 4,"name": "buf"},{"file": 43,"line": 476,"col": 4,"name": "buf_align"},{"file": 43,"line": 477,"col": 4,"name": "new_len"},{"file": 43,"line": 478,"col": 4,"name": "len_align"},{"file": 43,"line": 479,"col": 4,"name": "return_address"},{"file": 6,"line": 1227,"col": 26,"name": "self"},{"file": 6,"line": 1227,"col": 38,"name": "key"},{"file": 6,"line": 1227,"col": 46,"name": "ctx"},{"file": 44,"line": 238,"col": 30,"name": "path"},{"file": 29,"line": 1040,"col": 21,"name": "self"},{"file": 29,"line": 1040,"col": 32,"name": "sub_path_w"},{"file": 29,"line": 1040,"col": 57,"name": "flags"},{"file": 46,"line": 412,"col": 19,"name": "hObject"},{"file": 46,"line": 428,"col": 16,"name": "in_hFile"},{"file": 46,"line": 428,"col": 34,"name": "buffer"},{"file": 46,"line": 428,"col": 48,"name": "offset"},{"file": 46,"line": 428,"col": 62,"name": "io_mode"},{"file": 36,"line": 4318,"col": 17,"name": "fd"},{"file": 36,"line": 4318,"col": 27,"name": "offset"},{"file": 36,"line": 4460,"col": 21,"name": "fd"},{"file": 43,"line": 359,"col": 4,"name": "self"},{"file": 43,"line": 360,"col": 4,"name": "old_mem"},{"file": 43,"line": 361,"col": 4,"name": "new_alignment","comptime": true},{"file": 43,"line": 362,"col": 4,"name": "new_n"},{"file": 43,"line": 363,"col": 4,"name": "exact"},{"file": 43,"line": 364,"col": 4,"name": "return_address"},{"file": 13,"line": 1046,"col": 24,"name": "T","comptime": true},{"file": 13,"line": 1046,"col": 42,"name": "slice"},{"file": 13,"line": 1046,"col": 60,"name": "start_index"},{"file": 13,"line": 1046,"col": 80,"name": "value"},{"file": 28,"line": 1648,"col": 4,"name": "T","comptime": true},{"file": 28,"line": 1649,"col": 4,"name": "buf"},{"file": 28,"line": 1650,"col": 4,"name": "radix"},{"file": 28,"line": 1651,"col": 4,"name": "sign","comptime": true},{"file": 13,"line": 621,"col": 12,"name": "ptr"},{"file": 34,"line": 454,"col": 11,"name": "T","comptime": true},{"file": 34,"line": 454,"col": 29,"name": "a"},{"file": 34,"line": 454,"col": 35,"name": "b"},{"file": 13,"line": 1337,"col": 22,"name": "T","comptime": true},{"file": 13,"line": 1337,"col": 40,"name": "bytes"},{"file": 21,"line": 476,"col": 15,"name": "in_stream"},{"file": 21,"line": 476,"col": 35,"name": "endian"},{"file": 21,"line": 476,"col": 63,"name": "is_64"},{"file": 21,"line": 489,"col": 23,"name": "allocator"},{"file": 21,"line": 489,"col": 50,"name": "in_stream"},{"file": 21,"line": 489,"col": 70,"name": "endian"},{"file": 21,"line": 489,"col": 98,"name": "size"},{"file": 21,"line": 483,"col": 26,"name": "allocator"},{"file": 21,"line": 483,"col": 53,"name": "in_stream"},{"file": 21,"line": 483,"col": 73,"name": "size"},{"file": 21,"line": 494,"col": 26,"name": "allocator"},{"file": 21,"line": 494,"col": 53,"name": "in_stream"},{"file": 21,"line": 494,"col": 73,"name": "signed"},{"file": 21,"line": 494,"col": 87,"name": "endian"},{"file": 21,"line": 494,"col": 115,"name": "size","comptime": true},{"file": 21,"line": 468,"col": 18,"name": "allocator"},{"file": 21,"line": 468,"col": 45,"name": "in_stream"},{"file": 21,"line": 468,"col": 65,"name": "size"},{"file": 21,"line": 522,"col": 21,"name": "allocator"},{"file": 21,"line": 522,"col": 48,"name": "in_stream"},{"file": 21,"line": 522,"col": 68,"name": "endian"},{"file": 21,"line": 522,"col": 96,"name": "size"},{"file": 44,"line": 230,"col": 25,"name": "path"},{"file": 13,"line": 1779,"col": 18,"name": "T","comptime": true},{"file": 13,"line": 1779,"col": 36,"name": "haystack"},{"file": 13,"line": 1779,"col": 57,"name": "needle"},{"file": 44,"line": 441,"col": 22,"name": "s1"},{"file": 44,"line": 441,"col": 38,"name": "s2"},{"file": 13,"line": 1834,"col": 23,"name": "self"},{"file": 13,"line": 1834,"col": 35,"name": "byte"},{"file": 46,"line": 638,"col": 27,"name": "buffer"},{"file": 43,"line": 416,"col": 4,"name": "self"},{"file": 43,"line": 417,"col": 4,"name": "old_mem"},{"file": 43,"line": 418,"col": 4,"name": "new_alignment","comptime": true},{"file": 43,"line": 419,"col": 4,"name": "new_n"},{"file": 43,"line": 420,"col": 4,"name": "return_address"},{"file": 46,"line": 1869,"col": 28,"name": "s"},{"file": 44,"line": 199,"col": 18,"name": "path"},{"file": 40,"line": 691,"col": 21,"name": "utf16le"},{"file": 40,"line": 691,"col": 37,"name": "utf8"},{"file": 13,"line": 2460,"col": 22,"name": "T","comptime": true},{"file": 13,"line": 2460,"col": 40,"name": "x"},{"file": 46,"line": 1847,"col": 21,"name": "T","comptime": true},{"file": 46,"line": 1847,"col": 39,"name": "path"},{"file": 46,"line": 1906,"col": 20,"name": "path"},{"file": 46,"line": 1906,"col": 42,"name": "out"},{"file": 46,"line": 1781,"col": 16,"name": "self"},{"file": 46,"line": 1220,"col": 21,"name": "hFile"},{"file": 13,"line": 925,"col": 12,"name": "ptr"},{"file": 6,"line": 1370,"col": 31,"name": "self"},{"file": 6,"line": 1370,"col": 50,"name": "key"},{"file": 6,"line": 1370,"col": 64,"name": "ctx"},{"file": 34,"line": 1072,"col": 22,"name": "T","comptime": true},{"file": 34,"line": 1072,"col": 40,"name": "value"},{"file": 6,"line": 913,"col": 18,"name": "self"},{"file": 13,"line": 2927,"col": 27,"name": "T","comptime": true},{"file": 13,"line": 2927,"col": 45,"name": "addr"},{"file": 13,"line": 2927,"col": 54,"name": "alignment"},{"file": 6,"line": 1509,"col": 22,"name": "self"},{"file": 6,"line": 1509,"col": 35,"name": "allocator"},{"file": 6,"line": 759,"col": 31,"name": "self"},{"file": 6,"line": 763,"col": 35,"name": "hash"},{"file": 6,"line": 769,"col": 24,"name": "self"},{"file": 6,"line": 769,"col": 41,"name": "fp"},{"file": 26,"line": 506,"col": 24,"name": "conf"},{"file": 26,"line": 506,"col": 38,"name": "out_stream"},{"file": 26,"line": 506,"col": 59,"name": "color"},{"file": 26,"line": 916,"col": 26,"name": "out_stream"},{"file": 26,"line": 916,"col": 47,"name": "line_info"},{"file": 4,"line": 30,"col": 25,"name": "self"},{"file": 4,"line": 30,"col": 37,"name": "byte"},{"file": 44,"line": 979,"col": 23,"name": "path"},{"file": 26,"line": 33,"col": 18,"name": "self"},{"file": 42,"line": 147,"col": 21,"name": "ev"},{"file": 42,"line": 147,"col": 39,"name": "timeout"},{"file": 40,"line": 84,"col": 19,"name": "bytes"},{"file": 40,"line": 103,"col": 19,"name": "bytes"},{"file": 40,"line": 127,"col": 19,"name": "bytes"},{"file": 48,"line": 119,"col": 16,"name": "seed"},{"file": 48,"line": 119,"col": 27,"name": "input"},{"file": 6,"line": 394,"col": 20,"name": "allocator"},{"file": 45,"line": 19,"col": 23,"name": "self"},{"file": 45,"line": 19,"col": 36,"name": "child_allocator"},{"file": 46,"line": 1471,"col": 20,"name": "addr"},{"file": 46,"line": 1471,"col": 35,"name": "size"},{"file": 46,"line": 1471,"col": 48,"name": "alloc_type"},{"file": 46,"line": 1471,"col": 67,"name": "flProtect"},{"file": 13,"line": 2997,"col": 17,"name": "addr"},{"file": 13,"line": 2997,"col": 30,"name": "alignment"},{"file": 31,"line": 228,"col": 25,"name": "full_len"},{"file": 31,"line": 228,"col": 42,"name": "len"},{"file": 31,"line": 228,"col": 54,"name": "len_align"},{"file": 46,"line": 1479,"col": 19,"name": "lpAddress"},{"file": 46,"line": 1479,"col": 39,"name": "dwSize"},{"file": 46,"line": 1479,"col": 54,"name": "dwFreeType"},{"file": 40,"line": 762,"col": 18,"name": "utf8"},{"file": 36,"line": 1701,"col": 15,"name": "key"},{"file": 36,"line": 2905,"col": 19,"name": "handle"},{"file": 36,"line": 2861,"col": 14,"name": "handle"},{"file": 34,"line": 448,"col": 11,"name": "T","comptime": true},{"file": 34,"line": 448,"col": 29,"name": "a"},{"file": 34,"line": 448,"col": 35,"name": "b"},{"file": 6,"line": 1230,"col": 26,"name": "self"},{"file": 6,"line": 1230,"col": 38,"name": "key"},{"file": 6,"line": 1230,"col": 52,"name": "ctx"},{"file": 44,"line": 207,"col": 25,"name": "T","comptime": true},{"file": 44,"line": 207,"col": 43,"name": "path"},{"file": 46,"line": 61,"col": 16,"name": "sub_path_w"},{"file": 46,"line": 61,"col": 41,"name": "options"},{"file": 46,"line": 1674,"col": 4,"name": "FileHandle"},{"file": 46,"line": 1675,"col": 4,"name": "Event"},{"file": 46,"line": 1676,"col": 4,"name": "ApcRoutine"},{"file": 46,"line": 1677,"col": 4,"name": "ApcContext"},{"file": 46,"line": 1678,"col": 4,"name": "IoStatusBlock"},{"file": 46,"line": 1679,"col": 4,"name": "ByteOffset"},{"file": 46,"line": 1680,"col": 4,"name": "Length"},{"file": 46,"line": 1681,"col": 4,"name": "Key"},{"file": 46,"line": 1682,"col": 4,"name": "FailImmediately"},{"file": 46,"line": 1683,"col": 4,"name": "ExclusiveLock"},{"file": 46,"line": 2009,"col": 24,"name": "status"},{"file": 46,"line": 942,"col": 30,"name": "handle"},{"file": 46,"line": 942,"col": 46,"name": "offset"},{"file": 46,"line": 979,"col": 36,"name": "handle"},{"file": 43,"line": 83,"col": 4,"name": "self"},{"file": 43,"line": 88,"col": 4,"docs": " Guaranteed to be the same as what was returned from most recent call to `allocFn` or `resizeFn`. If `old_mem.len == 0` then this is a new allocation and `new_byte_count` is guaranteed to be >= 1.","name": "old_mem"},{"file": 43,"line": 93,"col": 4,"docs": " If `old_mem.len == 0` then this is `undefined`, otherwise: Guaranteed to be the same as what was passed to `allocFn`. Guaranteed to be >= 1. Guaranteed to be a power of 2.","name": "old_alignment"},{"file": 43,"line": 96,"col": 4,"docs": " If `new_byte_count` is 0 then this is a free and it is guaranteed that `old_mem.len != 0`.","name": "new_byte_count"},{"file": 43,"line": 100,"col": 4,"docs": " Guaranteed to be >= 1. Guaranteed to be a power of 2. Returned slice's pointer must have this alignment.","name": "new_alignment"},{"file": 43,"line": 104,"col": 4,"docs": " 0 indicates the length of the slice returned MUST match `new_byte_count` exactly non-zero means the length of the returned slice must be aligned by `len_align` `new_len` must be aligned by `len_align`","name": "len_align"},{"file": 43,"line": 105,"col": 4,"name": "return_address"},{"file": 13,"line": 2736,"col": 20,"name": "T","comptime": true},{"file": 13,"line": 2736,"col": 38,"name": "bytes"},{"file": 28,"line": 1760,"col": 19,"name": "c"},{"file": 28,"line": 1760,"col": 26,"name": "radix"},{"file": 34,"line": 461,"col": 11,"name": "T","comptime": true},{"file": 34,"line": 461,"col": 29,"name": "a"},{"file": 34,"line": 461,"col": 35,"name": "b"},{"file": 13,"line": 865,"col": 11,"name": "value"},{"file": 9,"line": 271,"col": 26,"name": "self"},{"file": 9,"line": 271,"col": 38,"name": "ReturnType","comptime": true},{"file": 9,"line": 271,"col": 65,"name": "endian"},{"file": 9,"line": 271,"col": 93,"name": "size"},{"file": 13,"line": 1306,"col": 18,"name": "ReturnType","comptime": true},{"file": 13,"line": 1306,"col": 45,"name": "bytes"},{"file": 13,"line": 1306,"col": 64,"name": "endian"},{"file": 40,"line": 302,"col": 16,"name": "s"},{"file": 40,"line": 309,"col": 25,"name": "it"},{"file": 40,"line": 7,"col": 35,"name": "c"},{"file": 40,"line": 34,"col": 18,"name": "c"},{"file": 40,"line": 34,"col": 26,"name": "out"},{"file": 13,"line": 2329,"col": 21,"name": "T","comptime": true},{"file": 13,"line": 2329,"col": 39,"name": "slice"},{"file": 13,"line": 2329,"col": 51,"name": "needle"},{"file": 13,"line": 2329,"col": 62,"name": "replacement"},{"file": 13,"line": 2338,"col": 26,"name": "T","comptime": true},{"file": 13,"line": 2338,"col": 44,"name": "slice"},{"file": 13,"line": 2338,"col": 56,"name": "elem"},{"file": 46,"line": 1794,"col": 30,"name": "T","comptime": true},{"file": 46,"line": 1794,"col": 48,"name": "path"},{"file": 13,"line": 975,"col": 23,"name": "Elem","comptime": true},{"file": 13,"line": 975,"col": 44,"name": "sentinel","comptime": true},{"file": 13,"line": 975,"col": 69,"name": "ptr"},{"file": 6,"line": 1101,"col": 27,"name": "self"},{"file": 6,"line": 1101,"col": 39,"name": "key"},{"file": 6,"line": 1101,"col": 53,"name": "ctx"},{"file": 34,"line": 1060,"col": 29,"name": "T","comptime": true},{"file": 34,"line": 1060,"col": 47,"name": "value"},{"file": 13,"line": 2974,"col": 28,"name": "T","comptime": true},{"file": 13,"line": 2974,"col": 46,"name": "addr"},{"file": 13,"line": 2974,"col": 55,"name": "alignment"},{"file": 46,"line": 1485,"col": 31,"name": "hConsoleOutput"},{"file": 46,"line": 1485,"col": 55,"name": "wAttributes"},{"file": 42,"line": 240,"col": 20,"name": "waiters"},{"file": 42,"line": 240,"col": 35,"name": "timeout"},{"file": 42,"line": 177,"col": 16,"name": "waiters"},{"file": 42,"line": 177,"col": 31,"name": "timeout"},{"file": 39,"line": 205,"col": 16,"name": "self"},{"file": 48,"line": 41,"col": 16,"name": "seed"},{"file": 48,"line": 62,"col": 18,"name": "self"},{"file": 48,"line": 62,"col": 42,"name": "b"},{"file": 48,"line": 73,"col": 17,"name": "self"},{"file": 48,"line": 73,"col": 41,"name": "b"},{"file": 45,"line": 62,"col": 13,"name": "allocator"},{"file": 45,"line": 62,"col": 36,"name": "n"},{"file": 45,"line": 62,"col": 46,"name": "ptr_align"},{"file": 45,"line": 62,"col": 62,"name": "len_align"},{"file": 45,"line": 62,"col": 78,"name": "ra"},{"file": 45,"line": 47,"col": 18,"name": "self"},{"file": 45,"line": 47,"col": 41,"name": "prev_len"},{"file": 45,"line": 47,"col": 58,"name": "minimum_size"},{"file": 16,"line": 73,"col": 23,"name": "list"},{"file": 16,"line": 73,"col": 36,"name": "new_node"},{"file": 43,"line": 304,"col": 14,"name": "self"},{"file": 43,"line": 304,"col": 32,"name": "old_mem"},{"file": 43,"line": 304,"col": 50,"name": "new_n"},{"file": 45,"line": 93,"col": 14,"name": "allocator"},{"file": 45,"line": 93,"col": 37,"name": "buf"},{"file": 45,"line": 93,"col": 48,"name": "buf_align"},{"file": 45,"line": 93,"col": 64,"name": "new_len"},{"file": 45,"line": 93,"col": 80,"name": "len_align"},{"file": 45,"line": 93,"col": 96,"name": "ret_addr"},{"file": 13,"line": 3001,"col": 24,"name": "T","comptime": true},{"file": 13,"line": 3001,"col": 42,"name": "addr"},{"file": 13,"line": 3001,"col": 51,"name": "alignment"},{"file": 13,"line": 121,"col": 21,"name": "full_len"},{"file": 13,"line": 121,"col": 38,"name": "alloc_len"},{"file": 13,"line": 121,"col": 56,"name": "len_align"},{"file": 38,"line": 265,"col": 15,"name": "c"},{"file": 13,"line": 1079,"col": 15,"name": "T","comptime": true},{"file": 13,"line": 1079,"col": 33,"name": "haystack"},{"file": 13,"line": 1079,"col": 54,"name": "needle"},{"file": 43,"line": 135,"col": 4,"name": "self"},{"file": 43,"line": 136,"col": 4,"name": "old_mem"},{"file": 43,"line": 137,"col": 4,"name": "old_align"},{"file": 43,"line": 138,"col": 4,"name": "new_len"},{"file": 43,"line": 139,"col": 4,"name": "new_alignment"},{"file": 43,"line": 140,"col": 4,"name": "len_align"},{"file": 43,"line": 141,"col": 4,"name": "return_address"},{"file": 39,"line": 235,"col": 29,"name": "self"},{"file": 39,"line": 235,"col": 42,"name": "duration"},{"file": 48,"line": 48,"col": 13,"name": "self"},{"file": 48,"line": 48,"col": 37,"name": "b"},{"file": 48,"line": 26,"col": 8,"name": "a"},{"file": 48,"line": 26,"col": 16,"name": "b"},{"file": 48,"line": 26,"col": 24,"name": "seed"},{"file": 48,"line": 11,"col": 14,"name": "bytes","comptime": true},{"file": 48,"line": 11,"col": 34,"name": "data"},{"file": 48,"line": 16,"col": 23,"name": "data"},{"file": 48,"line": 30,"col": 8,"name": "a"},{"file": 48,"line": 30,"col": 16,"name": "b"},{"file": 48,"line": 30,"col": 24,"name": "seed"},{"file": 48,"line": 20,"col": 7,"name": "a"},{"file": 48,"line": 20,"col": 15,"name": "b"},{"file": 13,"line": 2959,"col": 29,"name": "i"},{"file": 13,"line": 2959,"col": 39,"name": "alignment"},{"file": 38,"line": 241,"col": 15,"name": "c"},{"file": 13,"line": 1162,"col": 18,"name": "T","comptime": true},{"file": 13,"line": 1162,"col": 36,"name": "haystack"},{"file": 13,"line": 1162,"col": 57,"name": "start_index"},{"file": 13,"line": 1162,"col": 77,"name": "needle"},{"file": 39,"line": 248,"col": 14,"name": "a"},{"file": 39,"line": 248,"col": 22,"name": "b"},{"file": 39,"line": 248,"col": 30,"name": "c"},{"file": 34,"line": 1273,"col": 15,"name": "T","comptime": true},{"file": 34,"line": 1273,"col": 33,"name": "a"},{"file": 34,"line": 1273,"col": 39,"name": "b"},{"file": 13,"line": 2968,"col": 21,"name": "addr"},{"file": 13,"line": 2968,"col": 34,"name": "alignment"},{"file": 38,"line": 186,"col": 11,"name": "c"},{"file": 38,"line": 186,"col": 18,"name": "t"},{"file": 49,"line": 547,"col": 31,"name": "T","comptime": true},{"file": 13,"line": 1097,"col": 24,"name": "T","comptime": true},{"file": 13,"line": 1097,"col": 42,"name": "haystack"},{"file": 13,"line": 1097,"col": 63,"name": "start_index"},{"file": 13,"line": 1097,"col": 83,"name": "needle"},{"file": 13,"line": 1119,"col": 32,"name": "pattern"},{"file": 13,"line": 1119,"col": 53,"name": "table"},{"file": 6,"line": 76,"col": 16,"name": "self"},{"file": 6,"line": 76,"col": 31,"name": "s"},{"file": 6,"line": 80,"col": 15,"name": "self"},{"file": 6,"line": 80,"col": 30,"name": "a"},{"file": 6,"line": 80,"col": 45,"name": "b"},{"file": 6,"line": 90,"col": 18,"name": "s"},{"file": 6,"line": 86,"col": 17,"name": "a"},{"file": 6,"line": 86,"col": 32,"name": "b"},{"file": 3,"line": 712,"col": 35,"name": "F","comptime": true},{"file": 35,"line": 859,"col": 11,"name": "signedness","comptime": true},{"file": 35,"line": 859,"col": 56,"name": "bit_count","comptime": true},{"file": 34,"line": 615,"col": 15,"name": "T","comptime": true},{"file": 4,"line": 5,"col": 4,"name": "Context","comptime": true},{"file": 4,"line": 6,"col": 4,"name": "WriteError","comptime": true},{"file": 4,"line": 7,"col": 4,"name": "writeFn","comptime": true},{"file": 6,"line": 55,"col": 19,"name": "K","comptime": true},{"file": 6,"line": 12,"col": 21,"name": "K","comptime": true},{"file": 6,"line": 12,"col": 39,"name": "Context","comptime": true},{"file": 6,"line": 38,"col": 20,"name": "K","comptime": true},{"file": 6,"line": 38,"col": 38,"name": "Context","comptime": true},{"file": 6,"line": 135,"col": 21,"name": "RawContext","comptime": true},{"file": 6,"line": 135,"col": 48,"name": "PseudoKey","comptime": true},{"file": 6,"line": 135,"col": 74,"name": "Key","comptime": true},{"file": 6,"line": 135,"col": 94,"name": "Hash","comptime": true},{"file": 6,"line": 359,"col": 4,"name": "K","comptime": true},{"file": 6,"line": 360,"col": 4,"name": "V","comptime": true},{"file": 6,"line": 361,"col": 4,"name": "Context","comptime": true},{"file": 6,"line": 362,"col": 4,"name": "max_load_percentage","comptime": true},{"file": 6,"line": 47,"col": 19,"name": "K","comptime": true},{"file": 6,"line": 47,"col": 37,"name": "V","comptime": true},{"file": 6,"line": 674,"col": 4,"name": "K","comptime": true},{"file": 6,"line": 675,"col": 4,"name": "V","comptime": true},{"file": 6,"line": 676,"col": 4,"name": "Context","comptime": true},{"file": 6,"line": 677,"col": 4,"name": "max_load_percentage","comptime": true},{"file": 34,"line": 314,"col": 11,"name": "A","comptime": true},{"file": 34,"line": 314,"col": 29,"name": "B","comptime": true},{"file": 7,"line": 23,"col": 24,"name": "T","comptime": true},{"file": 7,"line": 23,"col": 42,"name": "alignment","comptime": true},{"file": 7,"line": 12,"col": 17,"name": "T","comptime": true},{"file": 9,"line": 7,"col": 4,"name": "Context","comptime": true},{"file": 9,"line": 8,"col": 4,"name": "ReadError","comptime": true},{"file": 9,"line": 12,"col": 4,"docs": " Returns the number of bytes read. It may be less than buffer.len. If the number of bytes read is 0, it means end of stream. End of stream is not an error condition.","name": "readFn","comptime": true},{"file": 13,"line": 563,"col": 12,"name": "T","comptime": true},{"file": 10,"line": 119,"col": 19,"name": "T","comptime": true},{"file": 10,"line": 8,"col": 25,"name": "Buffer","comptime": true},{"file": 11,"line": 3,"col": 4,"name": "Context","comptime": true},{"file": 11,"line": 4,"col": 4,"name": "SeekErrorType","comptime": true},{"file": 11,"line": 5,"col": 4,"name": "GetSeekPosErrorType","comptime": true},{"file": 11,"line": 6,"col": 4,"name": "seekToFn","comptime": true},{"file": 11,"line": 7,"col": 4,"name": "seekByFn","comptime": true},{"file": 11,"line": 8,"col": 4,"name": "getPosFn","comptime": true},{"file": 11,"line": 9,"col": 4,"name": "getEndPosFn","comptime": true},{"file": 35,"line": 599,"col": 11,"name": "T","comptime": true},{"file": 49,"line": 99,"col": 10,"name": "id","comptime": true},{"file": 49,"line": 101,"col": 21,"name": "T","comptime": true},{"file": 49,"line": 248,"col": 15,"name": "T","comptime": true},{"file": 49,"line": 116,"col": 15,"name": "id","comptime": true},{"file": 49,"line": 118,"col": 21,"name": "T","comptime": true},{"file": 49,"line": 218,"col": 23,"name": "T","comptime": true},{"file": 35,"line": 140,"col": 13,"name": "T","comptime": true},{"file": 13,"line": 2539,"col": 16,"name": "source","comptime": true},{"file": 13,"line": 2539,"col": 39,"name": "size","comptime": true},{"file": 13,"line": 2539,"col": 89,"name": "child","comptime": true},{"file": 13,"line": 2815,"col": 26,"name": "sliceType","comptime": true},{"file": 13,"line": 1797,"col": 21,"name": "T","comptime": true},{"file": 34,"line": 1213,"col": 14,"name": "T","comptime": true},{"file": 35,"line": 159,"col": 12,"name": "T","comptime": true},{"file": 35,"line": 226,"col": 16,"name": "T","comptime": true},{"file": 35,"line": 226,"col": 34,"name": "sentinel_val","comptime": true},{"file": 34,"line": 412,"col": 12,"name": "x"},{"file": 34,"line": 412,"col": 24,"name": "y"},{"file": 34,"line": 412,"col": 36,"name": "z"},{"file": 14,"line": 9,"col": 13,"name": "T","comptime": true},{"file": 16,"line": 161,"col": 17,"name": "T","comptime": true},{"file": 17,"line": 6,"col": 14,"name": "T","comptime": true},{"file": 16,"line": 14,"col": 24,"name": "T","comptime": true},{"file": 19,"line": 8,"col": 13,"name": "T","comptime": true},{"file": 49,"line": 45,"col": 13,"name": "name","comptime": true},{"file": 49,"line": 47,"col": 21,"name": "T","comptime": true},{"file": 49,"line": 354,"col": 19,"name": "T","comptime": true},{"file": 13,"line": 2555,"col": 21,"name": "P","comptime": true},{"file": 34,"line": 1221,"col": 14,"name": "T","comptime": true},{"file": 40,"line": 752,"col": 34,"name": "utf8","comptime": true},{"file": 35,"line": 190,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 2722,"col": 26,"name": "T","comptime": true},{"file": 13,"line": 2722,"col": 44,"name": "bytesType","comptime": true},{"file": 6,"line": 65,"col": 21,"name": "V","comptime": true},{"file": 49,"line": 308,"col": 18,"name": "T","comptime": true},{"file": 17,"line": 108,"col": 22,"name": "condition","comptime": true},{"file": 17,"line": 108,"col": 48,"name": "functions","comptime": true},{"file": 49,"line": 287,"col": 16,"name": "T","comptime": true},{"file": 8,"line": 7,"col": 4,"name": "16bit_mode"},{"file": 8,"line": 8,"col": 4,"name": "32bit_mode"},{"file": 8,"line": 9,"col": 4,"name": "3dnow"},{"file": 8,"line": 10,"col": 4,"name": "3dnowa"},{"file": 8,"line": 11,"col": 4,"name": "64bit"},{"file": 8,"line": 12,"col": 4,"name": "adx"},{"file": 8,"line": 13,"col": 4,"name": "aes"},{"file": 8,"line": 14,"col": 4,"name": "amx_bf16"},{"file": 8,"line": 15,"col": 4,"name": "amx_int8"},{"file": 8,"line": 16,"col": 4,"name": "amx_tile"},{"file": 8,"line": 17,"col": 4,"name": "avx"},{"file": 8,"line": 18,"col": 4,"name": "avx2"},{"file": 8,"line": 19,"col": 4,"name": "avx512bf16"},{"file": 8,"line": 20,"col": 4,"name": "avx512bitalg"},{"file": 8,"line": 21,"col": 4,"name": "avx512bw"},{"file": 8,"line": 22,"col": 4,"name": "avx512cd"},{"file": 8,"line": 23,"col": 4,"name": "avx512dq"},{"file": 8,"line": 24,"col": 4,"name": "avx512er"},{"file": 8,"line": 25,"col": 4,"name": "avx512f"},{"file": 8,"line": 26,"col": 4,"name": "avx512ifma"},{"file": 8,"line": 27,"col": 4,"name": "avx512pf"},{"file": 8,"line": 28,"col": 4,"name": "avx512vbmi"},{"file": 8,"line": 29,"col": 4,"name": "avx512vbmi2"},{"file": 8,"line": 30,"col": 4,"name": "avx512vl"},{"file": 8,"line": 31,"col": 4,"name": "avx512vnni"},{"file": 8,"line": 32,"col": 4,"name": "avx512vp2intersect"},{"file": 8,"line": 33,"col": 4,"name": "avx512vpopcntdq"},{"file": 8,"line": 34,"col": 4,"name": "avxvnni"},{"file": 8,"line": 35,"col": 4,"name": "bmi"},{"file": 8,"line": 36,"col": 4,"name": "bmi2"},{"file": 8,"line": 37,"col": 4,"name": "branchfusion"},{"file": 8,"line": 38,"col": 4,"name": "cldemote"},{"file": 8,"line": 39,"col": 4,"name": "clflushopt"},{"file": 8,"line": 40,"col": 4,"name": "clwb"},{"file": 8,"line": 41,"col": 4,"name": "clzero"},{"file": 8,"line": 42,"col": 4,"name": "cmov"},{"file": 8,"line": 43,"col": 4,"name": "cx16"},{"file": 8,"line": 44,"col": 4,"name": "cx8"},{"file": 8,"line": 45,"col": 4,"name": "enqcmd"},{"file": 8,"line": 46,"col": 4,"name": "ermsb"},{"file": 8,"line": 47,"col": 4,"name": "f16c"},{"file": 8,"line": 48,"col": 4,"name": "false_deps_lzcnt_tzcnt"},{"file": 8,"line": 49,"col": 4,"name": "false_deps_popcnt"},{"file": 8,"line": 50,"col": 4,"name": "fast_11bytenop"},{"file": 8,"line": 51,"col": 4,"name": "fast_15bytenop"},{"file": 8,"line": 52,"col": 4,"name": "fast_7bytenop"},{"file": 8,"line": 53,"col": 4,"name": "fast_bextr"},{"file": 8,"line": 54,"col": 4,"name": "fast_gather"},{"file": 8,"line": 55,"col": 4,"name": "fast_hops"},{"file": 8,"line": 56,"col": 4,"name": "fast_lzcnt"},{"file": 8,"line": 57,"col": 4,"name": "fast_movbe"},{"file": 8,"line": 58,"col": 4,"name": "fast_scalar_fsqrt"},{"file": 8,"line": 59,"col": 4,"name": "fast_scalar_shift_masks"},{"file": 8,"line": 60,"col": 4,"name": "fast_shld_rotate"},{"file": 8,"line": 61,"col": 4,"name": "fast_variable_crosslane_shuffle"},{"file": 8,"line": 62,"col": 4,"name": "fast_variable_perlane_shuffle"},{"file": 8,"line": 63,"col": 4,"name": "fast_vector_fsqrt"},{"file": 8,"line": 64,"col": 4,"name": "fast_vector_shift_masks"},{"file": 8,"line": 65,"col": 4,"name": "fma"},{"file": 8,"line": 66,"col": 4,"name": "fma4"},{"file": 8,"line": 67,"col": 4,"name": "fsgsbase"},{"file": 8,"line": 68,"col": 4,"name": "fsrm"},{"file": 8,"line": 69,"col": 4,"name": "fxsr"},{"file": 8,"line": 70,"col": 4,"name": "gfni"},{"file": 8,"line": 71,"col": 4,"name": "hreset"},{"file": 8,"line": 72,"col": 4,"name": "idivl_to_divb"},{"file": 8,"line": 73,"col": 4,"name": "idivq_to_divl"},{"file": 8,"line": 74,"col": 4,"name": "invpcid"},{"file": 8,"line": 75,"col": 4,"name": "kl"},{"file": 8,"line": 76,"col": 4,"name": "lea_sp"},{"file": 8,"line": 77,"col": 4,"name": "lea_uses_ag"},{"file": 8,"line": 78,"col": 4,"name": "lvi_cfi"},{"file": 8,"line": 79,"col": 4,"name": "lvi_load_hardening"},{"file": 8,"line": 80,"col": 4,"name": "lwp"},{"file": 8,"line": 81,"col": 4,"name": "lzcnt"},{"file": 8,"line": 82,"col": 4,"name": "macrofusion"},{"file": 8,"line": 83,"col": 4,"name": "mmx"},{"file": 8,"line": 84,"col": 4,"name": "movbe"},{"file": 8,"line": 85,"col": 4,"name": "movdir64b"},{"file": 8,"line": 86,"col": 4,"name": "movdiri"},{"file": 8,"line": 87,"col": 4,"name": "mwaitx"},{"file": 8,"line": 88,"col": 4,"name": "nopl"},{"file": 8,"line": 89,"col": 4,"name": "pad_short_functions"},{"file": 8,"line": 90,"col": 4,"name": "pclmul"},{"file": 8,"line": 91,"col": 4,"name": "pconfig"},{"file": 8,"line": 92,"col": 4,"name": "pku"},{"file": 8,"line": 93,"col": 4,"name": "popcnt"},{"file": 8,"line": 94,"col": 4,"name": "prefer_128_bit"},{"file": 8,"line": 95,"col": 4,"name": "prefer_256_bit"},{"file": 8,"line": 96,"col": 4,"name": "prefer_mask_registers"},{"file": 8,"line": 97,"col": 4,"name": "prefetchwt1"},{"file": 8,"line": 98,"col": 4,"name": "prfchw"},{"file": 8,"line": 99,"col": 4,"name": "ptwrite"},{"file": 8,"line": 100,"col": 4,"name": "rdpid"},{"file": 8,"line": 101,"col": 4,"name": "rdrnd"},{"file": 8,"line": 102,"col": 4,"name": "rdseed"},{"file": 8,"line": 103,"col": 4,"name": "retpoline"},{"file": 8,"line": 104,"col": 4,"name": "retpoline_external_thunk"},{"file": 8,"line": 105,"col": 4,"name": "retpoline_indirect_branches"},{"file": 8,"line": 106,"col": 4,"name": "retpoline_indirect_calls"},{"file": 8,"line": 107,"col": 4,"name": "rtm"},{"file": 8,"line": 108,"col": 4,"name": "sahf"},{"file": 8,"line": 109,"col": 4,"name": "serialize"},{"file": 8,"line": 110,"col": 4,"name": "seses"},{"file": 8,"line": 111,"col": 4,"name": "sgx"},{"file": 8,"line": 112,"col": 4,"name": "sha"},{"file": 8,"line": 113,"col": 4,"name": "shstk"},{"file": 8,"line": 114,"col": 4,"name": "slow_3ops_lea"},{"file": 8,"line": 115,"col": 4,"name": "slow_incdec"},{"file": 8,"line": 116,"col": 4,"name": "slow_lea"},{"file": 8,"line": 117,"col": 4,"name": "slow_pmaddwd"},{"file": 8,"line": 118,"col": 4,"name": "slow_pmulld"},{"file": 8,"line": 119,"col": 4,"name": "slow_shld"},{"file": 8,"line": 120,"col": 4,"name": "slow_two_mem_ops"},{"file": 8,"line": 121,"col": 4,"name": "slow_unaligned_mem_16"},{"file": 8,"line": 122,"col": 4,"name": "slow_unaligned_mem_32"},{"file": 8,"line": 123,"col": 4,"name": "soft_float"},{"file": 8,"line": 124,"col": 4,"name": "sse"},{"file": 8,"line": 125,"col": 4,"name": "sse2"},{"file": 8,"line": 126,"col": 4,"name": "sse3"},{"file": 8,"line": 127,"col": 4,"name": "sse4_1"},{"file": 8,"line": 128,"col": 4,"name": "sse4_2"},{"file": 8,"line": 129,"col": 4,"name": "sse4a"},{"file": 8,"line": 130,"col": 4,"name": "sse_unaligned_mem"},{"file": 8,"line": 131,"col": 4,"name": "ssse3"},{"file": 8,"line": 132,"col": 4,"name": "tbm"},{"file": 8,"line": 133,"col": 4,"name": "tsxldtrk"},{"file": 8,"line": 134,"col": 4,"name": "uintr"},{"file": 8,"line": 135,"col": 4,"name": "use_aa"},{"file": 8,"line": 136,"col": 4,"name": "use_glm_div_sqrt_costs"},{"file": 8,"line": 137,"col": 4,"name": "vaes"},{"file": 8,"line": 138,"col": 4,"name": "vpclmulqdq"},{"file": 8,"line": 139,"col": 4,"name": "vzeroupper"},{"file": 8,"line": 140,"col": 4,"name": "waitpkg"},{"file": 8,"line": 141,"col": 4,"name": "wbnoinvd"},{"file": 8,"line": 142,"col": 4,"name": "widekl"},{"file": 8,"line": 143,"col": 4,"name": "x87"},{"file": 8,"line": 144,"col": 4,"name": "xop"},{"file": 8,"line": 145,"col": 4,"name": "xsave"},{"file": 8,"line": 146,"col": 4,"name": "xsavec"},{"file": 8,"line": 147,"col": 4,"name": "xsaveopt"},{"file": 8,"line": 148,"col": 4,"name": "xsaves"},{"file": 12,"line": 451,"col": 4,"name": "signed"},{"file": 12,"line": 452,"col": 4,"name": "unsigned"},{"file": 4,"line": 10,"col": 8,"name": "context"},{"file": 5,"line": 14,"col": 4,"docs": " The OS-specific file descriptor or file handle.","name": "handle"},{"file": 5,"line": 21,"col": 4,"docs": " On some systems, such as Linux, file system file descriptors are incapable of non-blocking I/O. This forces us to perform asynchronous I/O on a dedicated thread, to achieve non-blocking file-system I/O. To do this, `File` must be aware of whether it is a file system file descriptor, or, more specifically, whether the I/O is always blocking.","name": "capable_io_mode"},{"file": 5,"line": 28,"col": 4,"docs": " Furthermore, even when `std.io.mode` is async, it is still sometimes desirable to perform blocking I/O, although not by default. For example, when printing a stack trace to stderr. This field tracks both by acting as an overriding I/O mode. When not building in async I/O mode, the type only has the `.blocking` tag, making it a zero-bit type.","name": "intended_io_mode"},{"file": 6,"line": 366,"col": 8,"name": "unmanaged"},{"file": 6,"line": 367,"col": 8,"name": "allocator"},{"file": 6,"line": 368,"col": 8,"name": "ctx"},{"file": 6,"line": 694,"col": 8,"docs": " Pointer to the metadata.","name": "metadata"},{"file": 6,"line": 697,"col": 8,"docs": " Current number of elements in the hashmap.","name": "size"},{"file": 6,"line": 703,"col": 8,"docs": " Number of available slots before a grow is needed to satisfy the `max_load_percentage`.","name": "available"},{"file": 7,"line": 40,"col": 8,"docs": " Contents of the list. Pointers to elements in this slice are **invalid after resizing operations** on the ArrayList, unless the operation explicitly either: (1) states otherwise or (2) lists the invalidated pointers. The allocator used determines how element pointers are invalidated, so the behavior may vary between lists. To avoid illegal behavior, take into account the above paragraph plus the explicit statements given in each method.","name": "items"},{"file": 7,"line": 43,"col": 8,"docs": " How many T values this list can hold without allocating additional memory.","name": "capacity"},{"file": 7,"line": 44,"col": 8,"name": "allocator"},{"file": 21,"line": 249,"col": 4,"name": "offset"},{"file": 21,"line": 250,"col": 4,"name": "table"},{"file": 21,"line": 254,"col": 4,"name": "has_children"},{"file": 21,"line": 255,"col": 4,"name": "abbrev_code"},{"file": 21,"line": 256,"col": 4,"name": "tag_id"},{"file": 21,"line": 257,"col": 4,"name": "attrs"},{"file": 21,"line": 261,"col": 4,"name": "attr_id"},{"file": 21,"line": 262,"col": 4,"name": "form_id"},{"file": 21,"line": 239,"col": 4,"name": "version"},{"file": 21,"line": 240,"col": 4,"name": "is_64"},{"file": 21,"line": 241,"col": 4,"name": "die"},{"file": 21,"line": 242,"col": 4,"name": "pc_range"},{"file": 21,"line": 294,"col": 8,"name": "id"},{"file": 21,"line": 295,"col": 8,"name": "value"},{"file": 21,"line": 234,"col": 4,"name": "pc_range"},{"file": 21,"line": 235,"col": 4,"name": "name"},{"file": 25,"line": 375,"col": 4,"name": "header"},{"file": 3,"line": 17,"col": 12,"name": "freestanding"},{"file": 3,"line": 18,"col": 12,"name": "ananas"},{"file": 3,"line": 19,"col": 12,"name": "cloudabi"},{"file": 3,"line": 20,"col": 12,"name": "dragonfly"},{"file": 3,"line": 21,"col": 12,"name": "freebsd"},{"file": 3,"line": 22,"col": 12,"name": "fuchsia"},{"file": 3,"line": 23,"col": 12,"name": "ios"},{"file": 3,"line": 24,"col": 12,"name": "kfreebsd"},{"file": 3,"line": 25,"col": 12,"name": "linux"},{"file": 3,"line": 26,"col": 12,"name": "lv2"},{"file": 3,"line": 27,"col": 12,"name": "macos"},{"file": 3,"line": 28,"col": 12,"name": "netbsd"},{"file": 3,"line": 29,"col": 12,"name": "openbsd"},{"file": 3,"line": 30,"col": 12,"name": "solaris"},{"file": 3,"line": 31,"col": 12,"name": "windows"},{"file": 3,"line": 32,"col": 12,"name": "zos"},{"file": 3,"line": 33,"col": 12,"name": "haiku"},{"file": 3,"line": 34,"col": 12,"name": "minix"},{"file": 3,"line": 35,"col": 12,"name": "rtems"},{"file": 3,"line": 36,"col": 12,"name": "nacl"},{"file": 3,"line": 37,"col": 12,"name": "aix"},{"file": 3,"line": 38,"col": 12,"name": "cuda"},{"file": 3,"line": 39,"col": 12,"name": "nvcl"},{"file": 3,"line": 40,"col": 12,"name": "amdhsa"},{"file": 3,"line": 41,"col": 12,"name": "ps4"},{"file": 3,"line": 42,"col": 12,"name": "elfiamcu"},{"file": 3,"line": 43,"col": 12,"name": "tvos"},{"file": 3,"line": 44,"col": 12,"name": "watchos"},{"file": 3,"line": 45,"col": 12,"name": "mesa3d"},{"file": 3,"line": 46,"col": 12,"name": "contiki"},{"file": 3,"line": 47,"col": 12,"name": "amdpal"},{"file": 3,"line": 48,"col": 12,"name": "hermit"},{"file": 3,"line": 49,"col": 12,"name": "hurd"},{"file": 3,"line": 50,"col": 12,"name": "wasi"},{"file": 3,"line": 51,"col": 12,"name": "emscripten"},{"file": 3,"line": 52,"col": 12,"name": "uefi"},{"file": 3,"line": 53,"col": 12,"name": "opencl"},{"file": 3,"line": 54,"col": 12,"name": "glsl450"},{"file": 3,"line": 55,"col": 12,"name": "vulkan"},{"file": 3,"line": 56,"col": 12,"name": "plan9"},{"file": 3,"line": 57,"col": 12,"name": "other"},{"file": 3,"line": 8,"col": 4,"name": "cpu"},{"file": 3,"line": 9,"col": 4,"name": "os"},{"file": 3,"line": 10,"col": 4,"name": "abi"},{"file": 9,"line": 17,"col": 8,"name": "context"},{"file": 12,"line": 444,"col": 4,"name": "Big"},{"file": 12,"line": 445,"col": 4,"name": "Little"},{"file": 3,"line": 750,"col": 12,"name": "arm"},{"file": 3,"line": 751,"col": 12,"name": "armeb"},{"file": 3,"line": 752,"col": 12,"name": "aarch64"},{"file": 3,"line": 753,"col": 12,"name": "aarch64_be"},{"file": 3,"line": 754,"col": 12,"name": "aarch64_32"},{"file": 3,"line": 755,"col": 12,"name": "arc"},{"file": 3,"line": 756,"col": 12,"name": "avr"},{"file": 3,"line": 757,"col": 12,"name": "bpfel"},{"file": 3,"line": 758,"col": 12,"name": "bpfeb"},{"file": 3,"line": 759,"col": 12,"name": "csky"},{"file": 3,"line": 760,"col": 12,"name": "hexagon"},{"file": 3,"line": 761,"col": 12,"name": "m68k"},{"file": 3,"line": 762,"col": 12,"name": "mips"},{"file": 3,"line": 763,"col": 12,"name": "mipsel"},{"file": 3,"line": 764,"col": 12,"name": "mips64"},{"file": 3,"line": 765,"col": 12,"name": "mips64el"},{"file": 3,"line": 766,"col": 12,"name": "msp430"},{"file": 3,"line": 767,"col": 12,"name": "powerpc"},{"file": 3,"line": 768,"col": 12,"name": "powerpcle"},{"file": 3,"line": 769,"col": 12,"name": "powerpc64"},{"file": 3,"line": 770,"col": 12,"name": "powerpc64le"},{"file": 3,"line": 771,"col": 12,"name": "r600"},{"file": 3,"line": 772,"col": 12,"name": "amdgcn"},{"file": 3,"line": 773,"col": 12,"name": "riscv32"},{"file": 3,"line": 774,"col": 12,"name": "riscv64"},{"file": 3,"line": 775,"col": 12,"name": "sparc"},{"file": 3,"line": 776,"col": 12,"name": "sparcv9"},{"file": 3,"line": 777,"col": 12,"name": "sparcel"},{"file": 3,"line": 778,"col": 12,"name": "s390x"},{"file": 3,"line": 779,"col": 12,"name": "tce"},{"file": 3,"line": 780,"col": 12,"name": "tcele"},{"file": 3,"line": 781,"col": 12,"name": "thumb"},{"file": 3,"line": 782,"col": 12,"name": "thumbeb"},{"file": 3,"line": 783,"col": 12,"name": "i386"},{"file": 3,"line": 784,"col": 12,"name": "x86_64"},{"file": 3,"line": 785,"col": 12,"name": "xcore"},{"file": 3,"line": 786,"col": 12,"name": "nvptx"},{"file": 3,"line": 787,"col": 12,"name": "nvptx64"},{"file": 3,"line": 788,"col": 12,"name": "le32"},{"file": 3,"line": 789,"col": 12,"name": "le64"},{"file": 3,"line": 790,"col": 12,"name": "amdil"},{"file": 3,"line": 791,"col": 12,"name": "amdil64"},{"file": 3,"line": 792,"col": 12,"name": "hsail"},{"file": 3,"line": 793,"col": 12,"name": "hsail64"},{"file": 3,"line": 794,"col": 12,"name": "spir"},{"file": 3,"line": 795,"col": 12,"name": "spir64"},{"file": 3,"line": 796,"col": 12,"name": "kalimba"},{"file": 3,"line": 797,"col": 12,"name": "shave"},{"file": 3,"line": 798,"col": 12,"name": "lanai"},{"file": 3,"line": 799,"col": 12,"name": "wasm32"},{"file": 3,"line": 800,"col": 12,"name": "wasm64"},{"file": 3,"line": 801,"col": 12,"name": "renderscript32"},{"file": 3,"line": 802,"col": 12,"name": "renderscript64"},{"file": 3,"line": 803,"col": 12,"name": "ve"},{"file": 3,"line": 806,"col": 12,"name": "spu_2"},{"file": 3,"line": 807,"col": 12,"name": "spirv32"},{"file": 3,"line": 808,"col": 12,"name": "spirv64"},{"file": 10,"line": 11,"col": 8,"docs": " `Buffer` is either a `[]u8` or `[]const u8`.","name": "buffer"},{"file": 10,"line": 12,"col": 8,"name": "pos"},{"file": 11,"line": 12,"col": 8,"name": "context"},{"file": 12,"line": 197,"col": 4,"name": "Type"},{"file": 12,"line": 198,"col": 4,"name": "Void"},{"file": 12,"line": 199,"col": 4,"name": "Bool"},{"file": 12,"line": 200,"col": 4,"name": "NoReturn"},{"file": 12,"line": 201,"col": 4,"name": "Int"},{"file": 12,"line": 202,"col": 4,"name": "Float"},{"file": 12,"line": 203,"col": 4,"name": "Pointer"},{"file": 12,"line": 204,"col": 4,"name": "Array"},{"file": 12,"line": 205,"col": 4,"name": "Struct"},{"file": 12,"line": 206,"col": 4,"name": "ComptimeFloat"},{"file": 12,"line": 207,"col": 4,"name": "ComptimeInt"},{"file": 12,"line": 208,"col": 4,"name": "Undefined"},{"file": 12,"line": 209,"col": 4,"name": "Null"},{"file": 12,"line": 210,"col": 4,"name": "Optional"},{"file": 12,"line": 211,"col": 4,"name": "ErrorUnion"},{"file": 12,"line": 212,"col": 4,"name": "ErrorSet"},{"file": 12,"line": 213,"col": 4,"name": "Enum"},{"file": 12,"line": 214,"col": 4,"name": "Union"},{"file": 12,"line": 215,"col": 4,"name": "Fn"},{"file": 12,"line": 216,"col": 4,"name": "BoundFn"},{"file": 12,"line": 217,"col": 4,"name": "Opaque"},{"file": 12,"line": 218,"col": 4,"name": "Frame"},{"file": 12,"line": 219,"col": 4,"name": "AnyFrame"},{"file": 12,"line": 220,"col": 4,"name": "Vector"},{"file": 12,"line": 221,"col": 4,"name": "EnumLiteral"},{"file": 12,"line": 256,"col": 12,"name": "One"},{"file": 12,"line": 257,"col": 12,"name": "Many"},{"file": 12,"line": 258,"col": 12,"name": "Slice"},{"file": 12,"line": 259,"col": 12,"name": "C"},{"file": 13,"line": 1799,"col": 8,"name": "buffer"},{"file": 13,"line": 1800,"col": 8,"name": "delimiter_bytes"},{"file": 13,"line": 1801,"col": 8,"name": "index"},{"file": 20,"line": 493,"col": 8,"name": "mod_info"},{"file": 20,"line": 494,"col": 8,"name": "module_name"},{"file": 20,"line": 495,"col": 8,"name": "obj_file_name"},{"file": 20,"line": 497,"col": 8,"name": "populated"},{"file": 20,"line": 498,"col": 8,"name": "symbols"},{"file": 20,"line": 499,"col": 8,"name": "subsect_info"},{"file": 20,"line": 500,"col": 8,"name": "checksum_offset"},{"file": 20,"line": 42,"col": 4,"docs": " COFF Section index, 1-based","name": "Section"},{"file": 20,"line": 43,"col": 4,"name": "Padding1"},{"file": 20,"line": 44,"col": 4,"name": "Offset"},{"file": 20,"line": 45,"col": 4,"name": "Size"},{"file": 20,"line": 46,"col": 4,"name": "Characteristics"},{"file": 20,"line": 47,"col": 4,"name": "ModuleIndex"},{"file": 20,"line": 48,"col": 4,"name": "Padding2"},{"file": 20,"line": 49,"col": 4,"name": "DataCrc"},{"file": 20,"line": 50,"col": 4,"name": "RelocCrc"},{"file": 21,"line": 349,"col": 4,"name": "file_name"},{"file": 21,"line": 350,"col": 4,"name": "dir_index"},{"file": 21,"line": 351,"col": 4,"name": "mtime"},{"file": 21,"line": 352,"col": 4,"name": "len_bytes"},{"file": 14,"line": 11,"col": 8,"name": "head"},{"file": 14,"line": 12,"col": 8,"name": "tail"},{"file": 14,"line": 13,"col": 8,"name": "mutex"},{"file": 16,"line": 172,"col": 8,"name": "first"},{"file": 16,"line": 173,"col": 8,"name": "last"},{"file": 16,"line": 174,"col": 8,"name": "len"},{"file": 17,"line": 8,"col": 8,"name": "value"},{"file": 22,"line": 320,"col": 4,"name": "running"},{"file": 22,"line": 321,"col": 4,"name": "detached"},{"file": 22,"line": 322,"col": 4,"name": "completed"},{"file": 18,"line": 1566,"col": 8,"name": "msg"},{"file": 18,"line": 1567,"col": 8,"name": "finish"},{"file": 16,"line": 67,"col": 8,"name": "first"},{"file": 19,"line": 10,"col": 8,"name": "root"},{"file": 19,"line": 11,"col": 8,"name": "lock"},{"file": 18,"line": 77,"col": 16,"name": "base"},{"file": 18,"line": 78,"col": 16,"name": "completion_key"},{"file": 25,"line": 364,"col": 4,"name": "characteristiccs"},{"file": 25,"line": 365,"col": 4,"name": "time_date_stamp"},{"file": 25,"line": 366,"col": 4,"name": "major_version"},{"file": 25,"line": 367,"col": 4,"name": "minor_version"},{"file": 25,"line": 368,"col": 4,"name": "type"},{"file": 25,"line": 369,"col": 4,"name": "size_of_data"},{"file": 25,"line": 370,"col": 4,"name": "address_of_raw_data"},{"file": 25,"line": 371,"col": 4,"name": "pointer_to_raw_data"},{"file": 20,"line": 955,"col": 4,"name": "FileMagic"},{"file": 20,"line": 961,"col": 4,"docs": " The block size of the internal file system. Valid values are 512, 1024, 2048, and 4096 bytes. Certain aspects of the MSF file layout vary depending on the block sizes. For the purposes of LLVM, we handle only block sizes of 4KiB, and all further discussion assumes a block size of 4KiB.","name": "BlockSize"},{"file": 20,"line": 967,"col": 4,"docs": " The index of a block within the file, at which begins a bitfield representing the set of all blocks within the file which are “free” (i.e. the data within that block is not used). See The Free Block Map for more information. Important: FreeBlockMapBlock can only be 1 or 2!","name": "FreeBlockMapBlock"},{"file": 20,"line": 971,"col": 4,"docs": " The total number of blocks in the file. NumBlocks * BlockSize should equal the size of the file on disk.","name": "NumBlocks"},{"file": 20,"line": 976,"col": 4,"docs": " The size of the stream directory, in bytes. The stream directory contains information about each stream’s size and the set of blocks that it occupies. It will be described in more detail later.","name": "NumDirectoryBytes"},{"file": 20,"line": 978,"col": 4,"name": "Unknown"},{"file": 20,"line": 994,"col": 4,"docs": " The index of a block within the MSF file. At this block is an array of ulittle32_t’s listing the blocks that the stream directory resides on. For large MSF files, the stream directory (which describes the block layout of each stream) may not fit entirely on a single block. As a result, this extra layer of indirection is introduced, whereby this block contains the list of blocks that the stream directory occupies, and the stream directory itself can be stitched together accordingly. The number of ulittle32_t’s in this array is given by ceil(NumDirectoryBytes / BlockSize).","name": "BlockMapAddr"},{"file": 20,"line": 632,"col": 16,"name": "Size"},{"file": 20,"line": 633,"col": 16,"name": "Capacity"},{"file": 20,"line": 18,"col": 4,"name": "VersionSignature"},{"file": 20,"line": 19,"col": 4,"name": "VersionHeader"},{"file": 20,"line": 20,"col": 4,"name": "Age"},{"file": 20,"line": 21,"col": 4,"name": "GlobalStreamIndex"},{"file": 20,"line": 22,"col": 4,"name": "BuildNumber"},{"file": 20,"line": 23,"col": 4,"name": "PublicStreamIndex"},{"file": 20,"line": 24,"col": 4,"name": "PdbDllVersion"},{"file": 20,"line": 25,"col": 4,"name": "SymRecordStream"},{"file": 20,"line": 26,"col": 4,"name": "PdbDllRbld"},{"file": 20,"line": 27,"col": 4,"name": "ModInfoSize"},{"file": 20,"line": 28,"col": 4,"name": "SectionContributionSize"},{"file": 20,"line": 29,"col": 4,"name": "SectionMapSize"},{"file": 20,"line": 30,"col": 4,"name": "SourceInfoSize"},{"file": 20,"line": 31,"col": 4,"name": "TypeServerSize"},{"file": 20,"line": 32,"col": 4,"name": "MFCTypeServerIndex"},{"file": 20,"line": 33,"col": 4,"name": "OptionalDbgHeaderSize"},{"file": 20,"line": 34,"col": 4,"name": "ECSubstreamSize"},{"file": 20,"line": 35,"col": 4,"name": "Flags"},{"file": 20,"line": 36,"col": 4,"name": "Machine"},{"file": 20,"line": 37,"col": 4,"name": "Padding"},{"file": 20,"line": 54,"col": 4,"name": "Unused1"},{"file": 20,"line": 55,"col": 4,"name": "SectionContr"},{"file": 20,"line": 56,"col": 4,"name": "Flags"},{"file": 20,"line": 57,"col": 4,"name": "ModuleSymStream"},{"file": 20,"line": 58,"col": 4,"name": "SymByteSize"},{"file": 20,"line": 59,"col": 4,"name": "C11ByteSize"},{"file": 20,"line": 60,"col": 4,"name": "C13ByteSize"},{"file": 20,"line": 61,"col": 4,"name": "SourceFileCount"},{"file": 20,"line": 62,"col": 4,"name": "Padding"},{"file": 20,"line": 63,"col": 4,"name": "Unused2"},{"file": 20,"line": 64,"col": 4,"name": "SourceFileNameIndex"},{"file": 20,"line": 65,"col": 4,"name": "PdbFilePathNameIndex"},{"file": 21,"line": 594,"col": 4,"name": "endian"},{"file": 21,"line": 596,"col": 4,"name": "debug_info"},{"file": 21,"line": 597,"col": 4,"name": "debug_abbrev"},{"file": 21,"line": 598,"col": 4,"name": "debug_str"},{"file": 21,"line": 599,"col": 4,"name": "debug_line"},{"file": 21,"line": 600,"col": 4,"name": "debug_ranges"},{"file": 21,"line": 602,"col": 4,"name": "abbrev_table_list"},{"file": 21,"line": 603,"col": 4,"name": "compile_unit_list"},{"file": 21,"line": 604,"col": 4,"name": "func_list"},{"file": 3,"line": 628,"col": 16,"name": "ints"},{"file": 12,"line": 54,"col": 4,"name": "index"},{"file": 12,"line": 55,"col": 4,"name": "instruction_addresses"},{"file": 32,"line": 34,"col": 56,"name": "blocking"},{"file": 28,"line": 20,"col": 4,"name": "precision"},{"file": 28,"line": 21,"col": 4,"name": "width"},{"file": 28,"line": 22,"col": 4,"name": "alignment"},{"file": 28,"line": 23,"col": 4,"name": "fill"},{"file": 26,"line": 501,"col": 8,"name": "no_color"},{"file": 26,"line": 502,"col": 8,"name": "escape_codes"},{"file": 26,"line": 504,"col": 8,"name": "windows_api"},{"file": 5,"line": 75,"col": 8,"name": "read"},{"file": 5,"line": 76,"col": 8,"name": "write"},{"file": 5,"line": 102,"col": 8,"docs": " Open the file with an advisory lock to coordinate with other processes accessing it at the same time. An exclusive lock will prevent other processes from acquiring a lock. A shared lock will prevent other processes from acquiring a exclusive lock, but does not prevent other process from getting their own shared locks. The lock is advisory, except on Linux in very specific cirsumstances[1]. This means that a process that does not respect the locking API can still get access to the file, despite the lock. On these operating systems, the lock is acquired atomically with opening the file: * Darwin * DragonFlyBSD * FreeBSD * Haiku * NetBSD * OpenBSD On these operating systems, the lock is acquired via a separate syscall after opening the file: * Linux * Windows [1]: https://www.kernel.org/doc/Documentation/filesystems/mandatory-locking.txt","name": "lock"},{"file": 5,"line": 110,"col": 8,"docs": " Sets whether or not to wait until the file is locked to return. If set to true, `error.WouldBlock` will be returned. Otherwise, the file will wait until the file is available to proceed. In async I/O mode, non-blocking at the OS level is determined by `intended_io_mode`, and `true` means `error.WouldBlock` is returned, and `false` means `error.WouldBlock` is handled by the event loop.","name": "lock_nonblocking"},{"file": 5,"line": 115,"col": 8,"docs": " Setting this to `.blocking` prevents `O.NONBLOCK` from being passed even if `std.io.is_async`. It allows the use of `nosuspend` when calling functions related to opening the file, reading, writing, and locking.","name": "intended_io_mode"},{"file": 5,"line": 119,"col": 8,"docs": " Set this to allow the opened file to automatically become the controlling TTY for the current process.","name": "allow_ctty"},{"file": 25,"line": 99,"col": 4,"name": "in_file"},{"file": 25,"line": 100,"col": 4,"name": "allocator"},{"file": 25,"line": 102,"col": 4,"name": "coff_header"},{"file": 25,"line": 103,"col": 4,"name": "pe_header"},{"file": 25,"line": 104,"col": 4,"name": "sections"},{"file": 25,"line": 106,"col": 4,"name": "guid"},{"file": 25,"line": 107,"col": 4,"name": "age"},{"file": 44,"line": 298,"col": 4,"name": "is_abs"},{"file": 44,"line": 299,"col": 4,"name": "kind"},{"file": 44,"line": 300,"col": 4,"name": "disk_designator"},{"file": 44,"line": 303,"col": 8,"name": "None"},{"file": 44,"line": 304,"col": 8,"name": "Drive"},{"file": 44,"line": 305,"col": 8,"name": "NetworkShare"},{"file": 29,"line": 291,"col": 4,"name": "fd"},{"file": 20,"line": 998,"col": 4,"name": "in_file"},{"file": 20,"line": 999,"col": 4,"name": "pos"},{"file": 20,"line": 1000,"col": 4,"name": "blocks"},{"file": 20,"line": 1001,"col": 4,"name": "block_size"},{"file": 20,"line": 104,"col": 4,"name": "Pdb"},{"file": 20,"line": 105,"col": 4,"name": "Tpi"},{"file": 20,"line": 106,"col": 4,"name": "Dbi"},{"file": 20,"line": 107,"col": 4,"name": "Ipi"},{"file": 6,"line": 752,"col": 12,"name": "fingerprint"},{"file": 6,"line": 753,"col": 12,"name": "used"},{"file": 21,"line": 356,"col": 4,"name": "address"},{"file": 21,"line": 357,"col": 4,"name": "file"},{"file": 21,"line": 358,"col": 4,"name": "line"},{"file": 21,"line": 359,"col": 4,"name": "column"},{"file": 21,"line": 360,"col": 4,"name": "is_stmt"},{"file": 21,"line": 361,"col": 4,"name": "basic_block"},{"file": 21,"line": 362,"col": 4,"name": "end_sequence"},{"file": 21,"line": 364,"col": 4,"name": "default_is_stmt"},{"file": 21,"line": 365,"col": 4,"name": "target_address"},{"file": 21,"line": 366,"col": 4,"name": "include_dirs"},{"file": 21,"line": 367,"col": 4,"name": "file_entries"},{"file": 21,"line": 369,"col": 4,"name": "prev_valid"},{"file": 21,"line": 370,"col": 4,"name": "prev_address"},{"file": 21,"line": 371,"col": 4,"name": "prev_file"},{"file": 21,"line": 372,"col": 4,"name": "prev_line"},{"file": 21,"line": 373,"col": 4,"name": "prev_column"},{"file": 21,"line": 374,"col": 4,"name": "prev_is_stmt"},{"file": 21,"line": 375,"col": 4,"name": "prev_basic_block"},{"file": 21,"line": 376,"col": 4,"name": "prev_end_sequence"},{"file": 26,"line": 40,"col": 4,"name": "symbol_name"},{"file": 26,"line": 41,"col": 4,"name": "compile_unit_name"},{"file": 26,"line": 42,"col": 4,"name": "line_info"},{"file": 58,"line": 3,"col": 4,"docs": " The operation completed successfully.","name": "SUCCESS"},{"file": 58,"line": 5,"col": 4,"docs": " Incorrect function.","name": "INVALID_FUNCTION"},{"file": 58,"line": 7,"col": 4,"docs": " The system cannot find the file specified.","name": "FILE_NOT_FOUND"},{"file": 58,"line": 9,"col": 4,"docs": " The system cannot find the path specified.","name": "PATH_NOT_FOUND"},{"file": 58,"line": 11,"col": 4,"docs": " The system cannot open the file.","name": "TOO_MANY_OPEN_FILES"},{"file": 58,"line": 13,"col": 4,"docs": " Access is denied.","name": "ACCESS_DENIED"},{"file": 58,"line": 15,"col": 4,"docs": " The handle is invalid.","name": "INVALID_HANDLE"},{"file": 58,"line": 17,"col": 4,"docs": " The storage control blocks were destroyed.","name": "ARENA_TRASHED"},{"file": 58,"line": 19,"col": 4,"docs": " Not enough storage is available to process this command.","name": "NOT_ENOUGH_MEMORY"},{"file": 58,"line": 21,"col": 4,"docs": " The storage control block address is invalid.","name": "INVALID_BLOCK"},{"file": 58,"line": 23,"col": 4,"docs": " The environment is incorrect.","name": "BAD_ENVIRONMENT"},{"file": 58,"line": 25,"col": 4,"docs": " An attempt was made to load a program with an incorrect format.","name": "BAD_FORMAT"},{"file": 58,"line": 27,"col": 4,"docs": " The access code is invalid.","name": "INVALID_ACCESS"},{"file": 58,"line": 29,"col": 4,"docs": " The data is invalid.","name": "INVALID_DATA"},{"file": 58,"line": 31,"col": 4,"docs": " Not enough storage is available to complete this operation.","name": "OUTOFMEMORY"},{"file": 58,"line": 33,"col": 4,"docs": " The system cannot find the drive specified.","name": "INVALID_DRIVE"},{"file": 58,"line": 35,"col": 4,"docs": " The directory cannot be removed.","name": "CURRENT_DIRECTORY"},{"file": 58,"line": 37,"col": 4,"docs": " The system cannot move the file to a different disk drive.","name": "NOT_SAME_DEVICE"},{"file": 58,"line": 39,"col": 4,"docs": " There are no more files.","name": "NO_MORE_FILES"},{"file": 58,"line": 41,"col": 4,"docs": " The media is write protected.","name": "WRITE_PROTECT"},{"file": 58,"line": 43,"col": 4,"docs": " The system cannot find the device specified.","name": "BAD_UNIT"},{"file": 58,"line": 45,"col": 4,"docs": " The device is not ready.","name": "NOT_READY"},{"file": 58,"line": 47,"col": 4,"docs": " The device does not recognize the command.","name": "BAD_COMMAND"},{"file": 58,"line": 49,"col": 4,"docs": " Data error (cyclic redundancy check).","name": "CRC"},{"file": 58,"line": 51,"col": 4,"docs": " The program issued a command but the command length is incorrect.","name": "BAD_LENGTH"},{"file": 58,"line": 53,"col": 4,"docs": " The drive cannot locate a specific area or track on the disk.","name": "SEEK"},{"file": 58,"line": 55,"col": 4,"docs": " The specified disk or diskette cannot be accessed.","name": "NOT_DOS_DISK"},{"file": 58,"line": 57,"col": 4,"docs": " The drive cannot find the sector requested.","name": "SECTOR_NOT_FOUND"},{"file": 58,"line": 59,"col": 4,"docs": " The printer is out of paper.","name": "OUT_OF_PAPER"},{"file": 58,"line": 61,"col": 4,"docs": " The system cannot write to the specified device.","name": "WRITE_FAULT"},{"file": 58,"line": 63,"col": 4,"docs": " The system cannot read from the specified device.","name": "READ_FAULT"},{"file": 58,"line": 65,"col": 4,"docs": " A device attached to the system is not functioning.","name": "GEN_FAILURE"},{"file": 58,"line": 67,"col": 4,"docs": " The process cannot access the file because it is being used by another process.","name": "SHARING_VIOLATION"},{"file": 58,"line": 69,"col": 4,"docs": " The process cannot access the file because another process has locked a portion of the file.","name": "LOCK_VIOLATION"},{"file": 58,"line": 72,"col": 4,"docs": " The wrong diskette is in the drive. Insert %2 (Volume Serial Number: %3) into drive %1.","name": "WRONG_DISK"},{"file": 58,"line": 74,"col": 4,"docs": " Too many files opened for sharing.","name": "SHARING_BUFFER_EXCEEDED"},{"file": 58,"line": 76,"col": 4,"docs": " Reached the end of the file.","name": "HANDLE_EOF"},{"file": 58,"line": 78,"col": 4,"docs": " The disk is full.","name": "HANDLE_DISK_FULL"},{"file": 58,"line": 80,"col": 4,"docs": " The request is not supported.","name": "NOT_SUPPORTED"},{"file": 58,"line": 84,"col": 4,"docs": " Windows cannot find the network path. Verify that the network path is correct and the destination computer is not busy or turned off. If Windows still cannot find the network path, contact your network administrator.","name": "REM_NOT_LIST"},{"file": 58,"line": 88,"col": 4,"docs": " You were not connected because a duplicate name exists on the network. If joining a domain, go to System in Control Panel to change the computer name and try again. If joining a workgroup, choose another workgroup name.","name": "DUP_NAME"},{"file": 58,"line": 90,"col": 4,"docs": " The network path was not found.","name": "BAD_NETPATH"},{"file": 58,"line": 92,"col": 4,"docs": " The network is busy.","name": "NETWORK_BUSY"},{"file": 58,"line": 94,"col": 4,"docs": " The specified network resource or device is no longer available.","name": "DEV_NOT_EXIST"},{"file": 58,"line": 96,"col": 4,"docs": " The network BIOS command limit has been reached.","name": "TOO_MANY_CMDS"},{"file": 58,"line": 98,"col": 4,"docs": " A network adapter hardware error occurred.","name": "ADAP_HDW_ERR"},{"file": 58,"line": 100,"col": 4,"docs": " The specified server cannot perform the requested operation.","name": "BAD_NET_RESP"},{"file": 58,"line": 102,"col": 4,"docs": " An unexpected network error occurred.","name": "UNEXP_NET_ERR"},{"file": 58,"line": 104,"col": 4,"docs": " The remote adapter is not compatible.","name": "BAD_REM_ADAP"},{"file": 58,"line": 106,"col": 4,"docs": " The printer queue is full.","name": "PRINTQ_FULL"},{"file": 58,"line": 108,"col": 4,"docs": " Space to store the file waiting to be printed is not available on the server.","name": "NO_SPOOL_SPACE"},{"file": 58,"line": 110,"col": 4,"docs": " Your file waiting to be printed was deleted.","name": "PRINT_CANCELLED"},{"file": 58,"line": 112,"col": 4,"docs": " The specified network name is no longer available.","name": "NETNAME_DELETED"},{"file": 58,"line": 114,"col": 4,"docs": " Network access is denied.","name": "NETWORK_ACCESS_DENIED"},{"file": 58,"line": 116,"col": 4,"docs": " The network resource type is not correct.","name": "BAD_DEV_TYPE"},{"file": 58,"line": 118,"col": 4,"docs": " The network name cannot be found.","name": "BAD_NET_NAME"},{"file": 58,"line": 120,"col": 4,"docs": " The name limit for the local computer network adapter card was exceeded.","name": "TOO_MANY_NAMES"},{"file": 58,"line": 122,"col": 4,"docs": " The network BIOS session limit was exceeded.","name": "TOO_MANY_SESS"},{"file": 58,"line": 124,"col": 4,"docs": " The remote server has been paused or is in the process of being started.","name": "SHARING_PAUSED"},{"file": 58,"line": 126,"col": 4,"docs": " No more connections can be made to this remote computer at this time because there are already as many connections as the computer can accept.","name": "REQ_NOT_ACCEP"},{"file": 58,"line": 128,"col": 4,"docs": " The specified printer or disk device has been paused.","name": "REDIR_PAUSED"},{"file": 58,"line": 130,"col": 4,"docs": " The file exists.","name": "FILE_EXISTS"},{"file": 58,"line": 132,"col": 4,"docs": " The directory or file cannot be created.","name": "CANNOT_MAKE"},{"file": 58,"line": 134,"col": 4,"docs": " Fail on INT 24.","name": "FAIL_I24"},{"file": 58,"line": 136,"col": 4,"docs": " Storage to process this request is not available.","name": "OUT_OF_STRUCTURES"},{"file": 58,"line": 138,"col": 4,"docs": " The local device name is already in use.","name": "ALREADY_ASSIGNED"},{"file": 58,"line": 140,"col": 4,"docs": " The specified network password is not correct.","name": "INVALID_PASSWORD"},{"file": 58,"line": 142,"col": 4,"docs": " The parameter is incorrect.","name": "INVALID_PARAMETER"},{"file": 58,"line": 144,"col": 4,"docs": " A write fault occurred on the network.","name": "NET_WRITE_FAULT"},{"file": 58,"line": 146,"col": 4,"docs": " The system cannot start another process at this time.","name": "NO_PROC_SLOTS"},{"file": 58,"line": 148,"col": 4,"docs": " Cannot create another system semaphore.","name": "TOO_MANY_SEMAPHORES"},{"file": 58,"line": 150,"col": 4,"docs": " The exclusive semaphore is owned by another process.","name": "EXCL_SEM_ALREADY_OWNED"},{"file": 58,"line": 152,"col": 4,"docs": " The semaphore is set and cannot be closed.","name": "SEM_IS_SET"},{"file": 58,"line": 154,"col": 4,"docs": " The semaphore cannot be set again.","name": "TOO_MANY_SEM_REQUESTS"},{"file": 58,"line": 156,"col": 4,"docs": " Cannot request exclusive semaphores at interrupt time.","name": "INVALID_AT_INTERRUPT_TIME"},{"file": 58,"line": 158,"col": 4,"docs": " The previous ownership of this semaphore has ended.","name": "SEM_OWNER_DIED"},{"file": 58,"line": 160,"col": 4,"docs": " Insert the diskette for drive %1.","name": "SEM_USER_LIMIT"},{"file": 58,"line": 162,"col": 4,"docs": " The program stopped because an alternate diskette was not inserted.","name": "DISK_CHANGE"},{"file": 58,"line": 164,"col": 4,"docs": " The disk is in use or locked by another process.","name": "DRIVE_LOCKED"},{"file": 58,"line": 166,"col": 4,"docs": " The pipe has been ended.","name": "BROKEN_PIPE"},{"file": 58,"line": 168,"col": 4,"docs": " The system cannot open the device or file specified.","name": "OPEN_FAILED"},{"file": 58,"line": 170,"col": 4,"docs": " The file name is too long.","name": "BUFFER_OVERFLOW"},{"file": 58,"line": 172,"col": 4,"docs": " There is not enough space on the disk.","name": "DISK_FULL"},{"file": 58,"line": 174,"col": 4,"docs": " No more internal file identifiers available.","name": "NO_MORE_SEARCH_HANDLES"},{"file": 58,"line": 176,"col": 4,"docs": " The target internal file identifier is incorrect.","name": "INVALID_TARGET_HANDLE"},{"file": 58,"line": 178,"col": 4,"docs": " The IOCTL call made by the application program is not correct.","name": "INVALID_CATEGORY"},{"file": 58,"line": 180,"col": 4,"docs": " The verify-on-write switch parameter value is not correct.","name": "INVALID_VERIFY_SWITCH"},{"file": 58,"line": 182,"col": 4,"docs": " The system does not support the command requested.","name": "BAD_DRIVER_LEVEL"},{"file": 58,"line": 184,"col": 4,"docs": " This function is not supported on this system.","name": "CALL_NOT_IMPLEMENTED"},{"file": 58,"line": 186,"col": 4,"docs": " The semaphore timeout period has expired.","name": "SEM_TIMEOUT"},{"file": 58,"line": 188,"col": 4,"docs": " The data area passed to a system call is too small.","name": "INSUFFICIENT_BUFFER"},{"file": 58,"line": 190,"col": 4,"docs": " The filename, directory name, or volume label syntax is incorrect.","name": "INVALID_NAME"},{"file": 58,"line": 192,"col": 4,"docs": " The system call level is not correct.","name": "INVALID_LEVEL"},{"file": 58,"line": 194,"col": 4,"docs": " The disk has no volume label.","name": "NO_VOLUME_LABEL"},{"file": 58,"line": 196,"col": 4,"docs": " The specified module could not be found.","name": "MOD_NOT_FOUND"},{"file": 58,"line": 198,"col": 4,"docs": " The specified procedure could not be found.","name": "PROC_NOT_FOUND"},{"file": 58,"line": 200,"col": 4,"docs": " There are no child processes to wait for.","name": "WAIT_NO_CHILDREN"},{"file": 58,"line": 202,"col": 4,"docs": " The %1 application cannot be run in Win32 mode.","name": "CHILD_NOT_COMPLETE"},{"file": 58,"line": 204,"col": 4,"docs": " Attempt to use a file handle to an open disk partition for an operation other than raw disk I/O.","name": "DIRECT_ACCESS_HANDLE"},{"file": 58,"line": 206,"col": 4,"docs": " An attempt was made to move the file pointer before the beginning of the file.","name": "NEGATIVE_SEEK"},{"file": 58,"line": 208,"col": 4,"docs": " The file pointer cannot be set on the specified device or file.","name": "SEEK_ON_DEVICE"},{"file": 58,"line": 210,"col": 4,"docs": " A JOIN or SUBST command cannot be used for a drive that contains previously joined drives.","name": "IS_JOIN_TARGET"},{"file": 58,"line": 212,"col": 4,"docs": " An attempt was made to use a JOIN or SUBST command on a drive that has already been joined.","name": "IS_JOINED"},{"file": 58,"line": 214,"col": 4,"docs": " An attempt was made to use a JOIN or SUBST command on a drive that has already been substituted.","name": "IS_SUBSTED"},{"file": 58,"line": 216,"col": 4,"docs": " The system tried to delete the JOIN of a drive that is not joined.","name": "NOT_JOINED"},{"file": 58,"line": 218,"col": 4,"docs": " The system tried to delete the substitution of a drive that is not substituted.","name": "NOT_SUBSTED"},{"file": 58,"line": 220,"col": 4,"docs": " The system tried to join a drive to a directory on a joined drive.","name": "JOIN_TO_JOIN"},{"file": 58,"line": 222,"col": 4,"docs": " The system tried to substitute a drive to a directory on a substituted drive.","name": "SUBST_TO_SUBST"},{"file": 58,"line": 224,"col": 4,"docs": " The system tried to join a drive to a directory on a substituted drive.","name": "JOIN_TO_SUBST"},{"file": 58,"line": 226,"col": 4,"docs": " The system tried to SUBST a drive to a directory on a joined drive.","name": "SUBST_TO_JOIN"},{"file": 58,"line": 228,"col": 4,"docs": " The system cannot perform a JOIN or SUBST at this time.","name": "BUSY_DRIVE"},{"file": 58,"line": 230,"col": 4,"docs": " The system cannot join or substitute a drive to or for a directory on the same drive.","name": "SAME_DRIVE"},{"file": 58,"line": 232,"col": 4,"docs": " The directory is not a subdirectory of the root directory.","name": "DIR_NOT_ROOT"},{"file": 58,"line": 234,"col": 4,"docs": " The directory is not empty.","name": "DIR_NOT_EMPTY"},{"file": 58,"line": 236,"col": 4,"docs": " The path specified is being used in a substitute.","name": "IS_SUBST_PATH"},{"file": 58,"line": 238,"col": 4,"docs": " Not enough resources are available to process this command.","name": "IS_JOIN_PATH"},{"file": 58,"line": 240,"col": 4,"docs": " The path specified cannot be used at this time.","name": "PATH_BUSY"},{"file": 58,"line": 242,"col": 4,"docs": " An attempt was made to join or substitute a drive for which a directory on the drive is the target of a previous substitute.","name": "IS_SUBST_TARGET"},{"file": 58,"line": 244,"col": 4,"docs": " System trace information was not specified in your CONFIG.SYS file, or tracing is disallowed.","name": "SYSTEM_TRACE"},{"file": 58,"line": 246,"col": 4,"docs": " The number of specified semaphore events for DosMuxSemWait is not correct.","name": "INVALID_EVENT_COUNT"},{"file": 58,"line": 248,"col": 4,"docs": " DosMuxSemWait did not execute; too many semaphores are already set.","name": "TOO_MANY_MUXWAITERS"},{"file": 58,"line": 250,"col": 4,"docs": " The DosMuxSemWait list is not correct.","name": "INVALID_LIST_FORMAT"},{"file": 58,"line": 252,"col": 4,"docs": " The volume label you entered exceeds the label character limit of the target file system.","name": "LABEL_TOO_LONG"},{"file": 58,"line": 254,"col": 4,"docs": " Cannot create another thread.","name": "TOO_MANY_TCBS"},{"file": 58,"line": 256,"col": 4,"docs": " The recipient process has refused the signal.","name": "SIGNAL_REFUSED"},{"file": 58,"line": 258,"col": 4,"docs": " The segment is already discarded and cannot be locked.","name": "DISCARDED"},{"file": 58,"line": 260,"col": 4,"docs": " The segment is already unlocked.","name": "NOT_LOCKED"},{"file": 58,"line": 262,"col": 4,"docs": " The address for the thread ID is not correct.","name": "BAD_THREADID_ADDR"},{"file": 58,"line": 264,"col": 4,"docs": " One or more arguments are not correct.","name": "BAD_ARGUMENTS"},{"file": 58,"line": 266,"col": 4,"docs": " The specified path is invalid.","name": "BAD_PATHNAME"},{"file": 58,"line": 268,"col": 4,"docs": " A signal is already pending.","name": "SIGNAL_PENDING"},{"file": 58,"line": 270,"col": 4,"docs": " No more threads can be created in the system.","name": "MAX_THRDS_REACHED"},{"file": 58,"line": 272,"col": 4,"docs": " Unable to lock a region of a file.","name": "LOCK_FAILED"},{"file": 58,"line": 274,"col": 4,"docs": " The requested resource is in use.","name": "BUSY"},{"file": 58,"line": 276,"col": 4,"docs": " Device's command support detection is in progress.","name": "DEVICE_SUPPORT_IN_PROGRESS"},{"file": 58,"line": 278,"col": 4,"docs": " A lock request was not outstanding for the supplied cancel region.","name": "CANCEL_VIOLATION"},{"file": 58,"line": 280,"col": 4,"docs": " The file system does not support atomic changes to the lock type.","name": "ATOMIC_LOCKS_NOT_SUPPORTED"},{"file": 58,"line": 282,"col": 4,"docs": " The system detected a segment number that was not correct.","name": "INVALID_SEGMENT_NUMBER"},{"file": 58,"line": 284,"col": 4,"docs": " The operating system cannot run %1.","name": "INVALID_ORDINAL"},{"file": 58,"line": 286,"col": 4,"docs": " Cannot create a file when that file already exists.","name": "ALREADY_EXISTS"},{"file": 58,"line": 288,"col": 4,"docs": " The flag passed is not correct.","name": "INVALID_FLAG_NUMBER"},{"file": 58,"line": 290,"col": 4,"docs": " The specified system semaphore name was not found.","name": "SEM_NOT_FOUND"},{"file": 58,"line": 292,"col": 4,"docs": " The operating system cannot run %1.","name": "INVALID_STARTING_CODESEG"},{"file": 58,"line": 294,"col": 4,"docs": " The operating system cannot run %1.","name": "INVALID_STACKSEG"},{"file": 58,"line": 296,"col": 4,"docs": " The operating system cannot run %1.","name": "INVALID_MODULETYPE"},{"file": 58,"line": 298,"col": 4,"docs": " Cannot run %1 in Win32 mode.","name": "INVALID_EXE_SIGNATURE"},{"file": 58,"line": 300,"col": 4,"docs": " The operating system cannot run %1.","name": "EXE_MARKED_INVALID"},{"file": 58,"line": 302,"col": 4,"docs": " %1 is not a valid Win32 application.","name": "BAD_EXE_FORMAT"},{"file": 58,"line": 304,"col": 4,"docs": " The operating system cannot run %1.","name": "ITERATED_DATA_EXCEEDS_64k"},{"file": 58,"line": 306,"col": 4,"docs": " The operating system cannot run %1.","name": "INVALID_MINALLOCSIZE"},{"file": 58,"line": 308,"col": 4,"docs": " The operating system cannot run this application program.","name": "DYNLINK_FROM_INVALID_RING"},{"file": 58,"line": 310,"col": 4,"docs": " The operating system is not presently configured to run this application.","name": "IOPL_NOT_ENABLED"},{"file": 58,"line": 312,"col": 4,"docs": " The operating system cannot run %1.","name": "INVALID_SEGDPL"},{"file": 58,"line": 314,"col": 4,"docs": " The operating system cannot run this application program.","name": "AUTODATASEG_EXCEEDS_64k"},{"file": 58,"line": 316,"col": 4,"docs": " The code segment cannot be greater than or equal to 64K.","name": "RING2SEG_MUST_BE_MOVABLE"},{"file": 58,"line": 318,"col": 4,"docs": " The operating system cannot run %1.","name": "RELOC_CHAIN_XEEDS_SEGLIM"},{"file": 58,"line": 320,"col": 4,"docs": " The operating system cannot run %1.","name": "INFLOOP_IN_RELOC_CHAIN"},{"file": 58,"line": 322,"col": 4,"docs": " The system could not find the environment option that was entered.","name": "ENVVAR_NOT_FOUND"},{"file": 58,"line": 324,"col": 4,"docs": " No process in the command subtree has a signal handler.","name": "NO_SIGNAL_SENT"},{"file": 58,"line": 326,"col": 4,"docs": " The filename or extension is too long.","name": "FILENAME_EXCED_RANGE"},{"file": 58,"line": 328,"col": 4,"docs": " The ring 2 stack is in use.","name": "RING2_STACK_IN_USE"},{"file": 58,"line": 330,"col": 4,"docs": " The global filename characters, * or ?, are entered incorrectly or too many global filename characters are specified.","name": "META_EXPANSION_TOO_LONG"},{"file": 58,"line": 332,"col": 4,"docs": " The signal being posted is not correct.","name": "INVALID_SIGNAL_NUMBER"},{"file": 58,"line": 334,"col": 4,"docs": " The signal handler cannot be set.","name": "THREAD_1_INACTIVE"},{"file": 58,"line": 336,"col": 4,"docs": " The segment is locked and cannot be reallocated.","name": "LOCKED"},{"file": 58,"line": 338,"col": 4,"docs": " Too many dynamic-link modules are attached to this program or dynamic-link module.","name": "TOO_MANY_MODULES"},{"file": 58,"line": 340,"col": 4,"docs": " Cannot nest calls to LoadModule.","name": "NESTING_NOT_ALLOWED"},{"file": 58,"line": 343,"col": 4,"docs": " This version of %1 is not compatible with the version of Windows you're running. Check your computer's system information and then contact the software publisher.","name": "EXE_MACHINE_TYPE_MISMATCH"},{"file": 58,"line": 345,"col": 4,"docs": " The image file %1 is signed, unable to modify.","name": "EXE_CANNOT_MODIFY_SIGNED_BINARY"},{"file": 58,"line": 347,"col": 4,"docs": " The image file %1 is strong signed, unable to modify.","name": "EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY"},{"file": 58,"line": 349,"col": 4,"docs": " This file is checked out or locked for editing by another user.","name": "FILE_CHECKED_OUT"},{"file": 58,"line": 351,"col": 4,"docs": " The file must be checked out before saving changes.","name": "CHECKOUT_REQUIRED"},{"file": 58,"line": 353,"col": 4,"docs": " The file type being saved or retrieved has been blocked.","name": "BAD_FILE_TYPE"},{"file": 58,"line": 355,"col": 4,"docs": " The file size exceeds the limit allowed and cannot be saved.","name": "FILE_TOO_LARGE"},{"file": 58,"line": 357,"col": 4,"docs": " Access Denied. Before opening files in this location, you must first add the web site to your trusted sites list, browse to the web site, and select the option to login automatically.","name": "FORMS_AUTH_REQUIRED"},{"file": 58,"line": 359,"col": 4,"docs": " Operation did not complete successfully because the file contains a virus or potentially unwanted software.","name": "VIRUS_INFECTED"},{"file": 58,"line": 362,"col": 4,"docs": " This file contains a virus or potentially unwanted software and cannot be opened. Due to the nature of this virus or potentially unwanted software, the file has been removed from this location.","name": "VIRUS_DELETED"},{"file": 58,"line": 364,"col": 4,"docs": " The pipe is local.","name": "PIPE_LOCAL"},{"file": 58,"line": 366,"col": 4,"docs": " The pipe state is invalid.","name": "BAD_PIPE"},{"file": 58,"line": 368,"col": 4,"docs": " All pipe instances are busy.","name": "PIPE_BUSY"},{"file": 58,"line": 370,"col": 4,"docs": " The pipe is being closed.","name": "NO_DATA"},{"file": 58,"line": 372,"col": 4,"docs": " No process is on the other end of the pipe.","name": "PIPE_NOT_CONNECTED"},{"file": 58,"line": 374,"col": 4,"docs": " More data is available.","name": "MORE_DATA"},{"file": 58,"line": 376,"col": 4,"docs": " The session was canceled.","name": "VC_DISCONNECTED"},{"file": 58,"line": 378,"col": 4,"docs": " The specified extended attribute name was invalid.","name": "INVALID_EA_NAME"},{"file": 58,"line": 380,"col": 4,"docs": " The extended attributes are inconsistent.","name": "EA_LIST_INCONSISTENT"},{"file": 58,"line": 382,"col": 4,"docs": " The wait operation timed out.","name": "IMEOUT"},{"file": 58,"line": 384,"col": 4,"docs": " No more data is available.","name": "NO_MORE_ITEMS"},{"file": 58,"line": 386,"col": 4,"docs": " The copy functions cannot be used.","name": "CANNOT_COPY"},{"file": 58,"line": 388,"col": 4,"docs": " The directory name is invalid.","name": "DIRECTORY"},{"file": 58,"line": 390,"col": 4,"docs": " The extended attributes did not fit in the buffer.","name": "EAS_DIDNT_FIT"},{"file": 58,"line": 392,"col": 4,"docs": " The extended attribute file on the mounted file system is corrupt.","name": "EA_FILE_CORRUPT"},{"file": 58,"line": 394,"col": 4,"docs": " The extended attribute table file is full.","name": "EA_TABLE_FULL"},{"file": 58,"line": 396,"col": 4,"docs": " The specified extended attribute handle is invalid.","name": "INVALID_EA_HANDLE"},{"file": 58,"line": 398,"col": 4,"docs": " The mounted file system does not support extended attributes.","name": "EAS_NOT_SUPPORTED"},{"file": 58,"line": 400,"col": 4,"docs": " Attempt to release mutex not owned by caller.","name": "NOT_OWNER"},{"file": 58,"line": 402,"col": 4,"docs": " Too many posts were made to a semaphore.","name": "TOO_MANY_POSTS"},{"file": 58,"line": 404,"col": 4,"docs": " Only part of a ReadProcessMemory or WriteProcessMemory request was completed.","name": "PARTIAL_COPY"},{"file": 58,"line": 406,"col": 4,"docs": " The oplock request is denied.","name": "OPLOCK_NOT_GRANTED"},{"file": 58,"line": 408,"col": 4,"docs": " An invalid oplock acknowledgment was received by the system.","name": "INVALID_OPLOCK_PROTOCOL"},{"file": 58,"line": 410,"col": 4,"docs": " The volume is too fragmented to complete this operation.","name": "DISK_TOO_FRAGMENTED"},{"file": 58,"line": 412,"col": 4,"docs": " The file cannot be opened because it is in the process of being deleted.","name": "DELETE_PENDING"},{"file": 58,"line": 414,"col": 4,"docs": " Short name settings may not be changed on this volume due to the global registry setting.","name": "INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING"},{"file": 58,"line": 416,"col": 4,"docs": " Short names are not enabled on this volume.","name": "SHORT_NAMES_NOT_ENABLED_ON_VOLUME"},{"file": 58,"line": 418,"col": 4,"docs": " The security stream for the given volume is in an inconsistent state. Please run CHKDSK on the volume.","name": "SECURITY_STREAM_IS_INCONSISTENT"},{"file": 58,"line": 420,"col": 4,"docs": " A requested file lock operation cannot be processed due to an invalid byte range.","name": "INVALID_LOCK_RANGE"},{"file": 58,"line": 422,"col": 4,"docs": " The subsystem needed to support the image type is not present.","name": "IMAGE_SUBSYSTEM_NOT_PRESENT"},{"file": 58,"line": 424,"col": 4,"docs": " The specified file already has a notification GUID associated with it.","name": "NOTIFICATION_GUID_ALREADY_DEFINED"},{"file": 58,"line": 426,"col": 4,"docs": " An invalid exception handler routine has been detected.","name": "INVALID_EXCEPTION_HANDLER"},{"file": 58,"line": 428,"col": 4,"docs": " Duplicate privileges were specified for the token.","name": "DUPLICATE_PRIVILEGES"},{"file": 58,"line": 430,"col": 4,"docs": " No ranges for the specified operation were able to be processed.","name": "NO_RANGES_PROCESSED"},{"file": 58,"line": 432,"col": 4,"docs": " Operation is not allowed on a file system internal file.","name": "NOT_ALLOWED_ON_SYSTEM_FILE"},{"file": 58,"line": 434,"col": 4,"docs": " The physical resources of this disk have been exhausted.","name": "DISK_RESOURCES_EXHAUSTED"},{"file": 58,"line": 436,"col": 4,"docs": " The token representing the data is invalid.","name": "INVALID_TOKEN"},{"file": 58,"line": 438,"col": 4,"docs": " The device does not support the command feature.","name": "DEVICE_FEATURE_NOT_SUPPORTED"},{"file": 58,"line": 440,"col": 4,"docs": " The system cannot find message text for message number 0x%1 in the message file for %2.","name": "MR_MID_NOT_FOUND"},{"file": 58,"line": 442,"col": 4,"docs": " The scope specified was not found.","name": "SCOPE_NOT_FOUND"},{"file": 58,"line": 444,"col": 4,"docs": " The Central Access Policy specified is not defined on the target machine.","name": "UNDEFINED_SCOPE"},{"file": 58,"line": 446,"col": 4,"docs": " The Central Access Policy obtained from Active Directory is invalid.","name": "INVALID_CAP"},{"file": 58,"line": 448,"col": 4,"docs": " The device is unreachable.","name": "DEVICE_UNREACHABLE"},{"file": 58,"line": 450,"col": 4,"docs": " The target device has insufficient resources to complete the operation.","name": "DEVICE_NO_RESOURCES"},{"file": 58,"line": 452,"col": 4,"docs": " A data integrity checksum error occurred. Data in the file stream is corrupt.","name": "DATA_CHECKSUM_ERROR"},{"file": 58,"line": 454,"col": 4,"docs": " An attempt was made to modify both a KERNEL and normal Extended Attribute (EA) in the same operation.","name": "INTERMIXED_KERNEL_EA_OPERATION"},{"file": 58,"line": 456,"col": 4,"docs": " Device does not support file-level TRIM.","name": "FILE_LEVEL_TRIM_NOT_SUPPORTED"},{"file": 58,"line": 458,"col": 4,"docs": " The command specified a data offset that does not align to the device's granularity/alignment.","name": "OFFSET_ALIGNMENT_VIOLATION"},{"file": 58,"line": 460,"col": 4,"docs": " The command specified an invalid field in its parameter list.","name": "INVALID_FIELD_IN_PARAMETER_LIST"},{"file": 58,"line": 462,"col": 4,"docs": " An operation is currently in progress with the device.","name": "OPERATION_IN_PROGRESS"},{"file": 58,"line": 464,"col": 4,"docs": " An attempt was made to send down the command via an invalid path to the target device.","name": "BAD_DEVICE_PATH"},{"file": 58,"line": 466,"col": 4,"docs": " The command specified a number of descriptors that exceeded the maximum supported by the device.","name": "TOO_MANY_DESCRIPTORS"},{"file": 58,"line": 468,"col": 4,"docs": " Scrub is disabled on the specified file.","name": "SCRUB_DATA_DISABLED"},{"file": 58,"line": 470,"col": 4,"docs": " The storage device does not provide redundancy.","name": "NOT_REDUNDANT_STORAGE"},{"file": 58,"line": 472,"col": 4,"docs": " An operation is not supported on a resident file.","name": "RESIDENT_FILE_NOT_SUPPORTED"},{"file": 58,"line": 474,"col": 4,"docs": " An operation is not supported on a compressed file.","name": "COMPRESSED_FILE_NOT_SUPPORTED"},{"file": 58,"line": 476,"col": 4,"docs": " An operation is not supported on a directory.","name": "DIRECTORY_NOT_SUPPORTED"},{"file": 58,"line": 478,"col": 4,"docs": " The specified copy of the requested data could not be read.","name": "NOT_READ_FROM_COPY"},{"file": 58,"line": 480,"col": 4,"docs": " No action was taken as a system reboot is required.","name": "FAIL_NOACTION_REBOOT"},{"file": 58,"line": 482,"col": 4,"docs": " The shutdown operation failed.","name": "FAIL_SHUTDOWN"},{"file": 58,"line": 484,"col": 4,"docs": " The restart operation failed.","name": "FAIL_RESTART"},{"file": 58,"line": 486,"col": 4,"docs": " The maximum number of sessions has been reached.","name": "MAX_SESSIONS_REACHED"},{"file": 58,"line": 488,"col": 4,"docs": " The thread is already in background processing mode.","name": "THREAD_MODE_ALREADY_BACKGROUND"},{"file": 58,"line": 490,"col": 4,"docs": " The thread is not in background processing mode.","name": "THREAD_MODE_NOT_BACKGROUND"},{"file": 58,"line": 492,"col": 4,"docs": " The process is already in background processing mode.","name": "PROCESS_MODE_ALREADY_BACKGROUND"},{"file": 58,"line": 494,"col": 4,"docs": " The process is not in background processing mode.","name": "PROCESS_MODE_NOT_BACKGROUND"},{"file": 58,"line": 496,"col": 4,"docs": " Attempt to access invalid address.","name": "INVALID_ADDRESS"},{"file": 58,"line": 498,"col": 4,"docs": " User profile cannot be loaded.","name": "USER_PROFILE_LOAD"},{"file": 58,"line": 500,"col": 4,"docs": " Arithmetic result exceeded 32 bits.","name": "ARITHMETIC_OVERFLOW"},{"file": 58,"line": 502,"col": 4,"docs": " There is a process on other end of the pipe.","name": "PIPE_CONNECTED"},{"file": 58,"line": 504,"col": 4,"docs": " Waiting for a process to open the other end of the pipe.","name": "PIPE_LISTENING"},{"file": 58,"line": 506,"col": 4,"docs": " Application verifier has found an error in the current process.","name": "VERIFIER_STOP"},{"file": 58,"line": 508,"col": 4,"docs": " An error occurred in the ABIOS subsystem.","name": "ABIOS_ERROR"},{"file": 58,"line": 510,"col": 4,"docs": " A warning occurred in the WX86 subsystem.","name": "WX86_WARNING"},{"file": 58,"line": 512,"col": 4,"docs": " An error occurred in the WX86 subsystem.","name": "WX86_ERROR"},{"file": 58,"line": 514,"col": 4,"docs": " An attempt was made to cancel or set a timer that has an associated APC and the subject thread is not the thread that originally set the timer with an associated APC routine.","name": "TIMER_NOT_CANCELED"},{"file": 58,"line": 516,"col": 4,"docs": " Unwind exception code.","name": "UNWIND"},{"file": 58,"line": 518,"col": 4,"docs": " An invalid or unaligned stack was encountered during an unwind operation.","name": "BAD_STACK"},{"file": 58,"line": 520,"col": 4,"docs": " An invalid unwind target was encountered during an unwind operation.","name": "INVALID_UNWIND_TARGET"},{"file": 58,"line": 522,"col": 4,"docs": " Invalid Object Attributes specified to NtCreatePort or invalid Port Attributes specified to NtConnectPort","name": "INVALID_PORT_ATTRIBUTES"},{"file": 58,"line": 524,"col": 4,"docs": " Length of message passed to NtRequestPort or NtRequestWaitReplyPort was longer than the maximum message allowed by the port.","name": "PORT_MESSAGE_TOO_LONG"},{"file": 58,"line": 526,"col": 4,"docs": " An attempt was made to lower a quota limit below the current usage.","name": "INVALID_QUOTA_LOWER"},{"file": 58,"line": 528,"col": 4,"docs": " An attempt was made to attach to a device that was already attached to another device.","name": "DEVICE_ALREADY_ATTACHED"},{"file": 58,"line": 530,"col": 4,"docs": " An attempt was made to execute an instruction at an unaligned address and the host system does not support unaligned instruction references.","name": "INSTRUCTION_MISALIGNMENT"},{"file": 58,"line": 532,"col": 4,"docs": " Profiling not started.","name": "PROFILING_NOT_STARTED"},{"file": 58,"line": 534,"col": 4,"docs": " Profiling not stopped.","name": "PROFILING_NOT_STOPPED"},{"file": 58,"line": 536,"col": 4,"docs": " The passed ACL did not contain the minimum required information.","name": "COULD_NOT_INTERPRET"},{"file": 58,"line": 538,"col": 4,"docs": " The number of active profiling objects is at the maximum and no more may be started.","name": "PROFILING_AT_LIMIT"},{"file": 58,"line": 540,"col": 4,"docs": " Used to indicate that an operation cannot continue without blocking for I/O.","name": "CANT_WAIT"},{"file": 58,"line": 542,"col": 4,"docs": " Indicates that a thread attempted to terminate itself by default (called NtTerminateThread with NULL) and it was the last thread in the current process.","name": "CANT_TERMINATE_SELF"},{"file": 58,"line": 545,"col": 4,"docs": " If an MM error is returned which is not defined in the standard FsRtl filter, it is converted to one of the following errors which is guaranteed to be in the filter. In this case information is lost, however, the filter correctly handles the exception.","name": "UNEXPECTED_MM_CREATE_ERR"},{"file": 58,"line": 548,"col": 4,"docs": " If an MM error is returned which is not defined in the standard FsRtl filter, it is converted to one of the following errors which is guaranteed to be in the filter. In this case information is lost, however, the filter correctly handles the exception.","name": "UNEXPECTED_MM_MAP_ERROR"},{"file": 58,"line": 551,"col": 4,"docs": " If an MM error is returned which is not defined in the standard FsRtl filter, it is converted to one of the following errors which is guaranteed to be in the filter. In this case information is lost, however, the filter correctly handles the exception.","name": "UNEXPECTED_MM_EXTEND_ERR"},{"file": 58,"line": 553,"col": 4,"docs": " A malformed function table was encountered during an unwind operation.","name": "BAD_FUNCTION_TABLE"},{"file": 58,"line": 556,"col": 4,"docs": " Indicates that an attempt was made to assign protection to a file system file or directory and one of the SIDs in the security descriptor could not be translated into a GUID that could be stored by the file system. This causes the protection attempt to fail, which may cause a file creation attempt to fail.","name": "NO_GUID_TRANSLATION"},{"file": 58,"line": 558,"col": 4,"docs": " Indicates that an attempt was made to grow an LDT by setting its size, or that the size was not an even number of selectors.","name": "INVALID_LDT_SIZE"},{"file": 58,"line": 560,"col": 4,"docs": " Indicates that the starting value for the LDT information was not an integral multiple of the selector size.","name": "INVALID_LDT_OFFSET"},{"file": 58,"line": 562,"col": 4,"docs": " Indicates that the user supplied an invalid descriptor when trying to set up Ldt descriptors.","name": "INVALID_LDT_DESCRIPTOR"},{"file": 58,"line": 565,"col": 4,"docs": " Indicates a process has too many threads to perform the requested action. For example, assignment of a primary token may only be performed when a process has zero or one threads.","name": "TOO_MANY_THREADS"},{"file": 58,"line": 567,"col": 4,"docs": " An attempt was made to operate on a thread within a specific process, but the thread specified is not in the process specified.","name": "THREAD_NOT_IN_PROCESS"},{"file": 58,"line": 569,"col": 4,"docs": " Page file quota was exceeded.","name": "PAGEFILE_QUOTA_EXCEEDED"},{"file": 58,"line": 571,"col": 4,"docs": " The Netlogon service cannot start because another Netlogon service running in the domain conflicts with the specified role.","name": "LOGON_SERVER_CONFLICT"},{"file": 58,"line": 573,"col": 4,"docs": " The SAM database on a Windows Server is significantly out of synchronization with the copy on the Domain Controller. A complete synchronization is required.","name": "SYNCHRONIZATION_REQUIRED"},{"file": 58,"line": 575,"col": 4,"docs": " The NtCreateFile API failed. This error should never be returned to an application, it is a place holder for the Windows Lan Manager Redirector to use in its internal error mapping routines.","name": "NET_OPEN_FAILED"},{"file": 58,"line": 577,"col": 4,"docs": " {Privilege Failed} The I/O permissions for the process could not be changed.","name": "IO_PRIVILEGE_FAILED"},{"file": 58,"line": 579,"col": 4,"docs": " {Application Exit by CTRL+C} The application terminated as a result of a CTRL+C.","name": "CONTROL_C_EXIT"},{"file": 58,"line": 581,"col": 4,"docs": " {Missing System File} The required system file %hs is bad or missing.","name": "MISSING_SYSTEMFILE"},{"file": 58,"line": 583,"col": 4,"docs": " {Application Error} The exception %s (0x%08lx) occurred in the application at location 0x%08lx.","name": "UNHANDLED_EXCEPTION"},{"file": 58,"line": 585,"col": 4,"docs": " {Application Error} The application was unable to start correctly (0x%lx). Click OK to close the application.","name": "APP_INIT_FAILURE"},{"file": 58,"line": 587,"col": 4,"docs": " {Unable to Create Paging File} The creation of the paging file %hs failed (%lx). The requested size was %ld.","name": "PAGEFILE_CREATE_FAILED"},{"file": 58,"line": 590,"col": 4,"docs": " Windows cannot verify the digital signature for this file. A recent hardware or software change might have installed a file that is signed incorrectly or damaged, or that might be malicious software from an unknown source.","name": "INVALID_IMAGE_HASH"},{"file": 58,"line": 592,"col": 4,"docs": " {No Paging File Specified} No paging file was specified in the system configuration.","name": "NO_PAGEFILE"},{"file": 58,"line": 594,"col": 4,"docs": " {EXCEPTION} A real-mode application issued a floating-point instruction and floating-point hardware is not present.","name": "ILLEGAL_FLOAT_CONTEXT"},{"file": 58,"line": 596,"col": 4,"docs": " An event pair synchronization operation was performed using the thread specific client/server event pair object, but no event pair object was associated with the thread.","name": "NO_EVENT_PAIR"},{"file": 58,"line": 598,"col": 4,"docs": " A Windows Server has an incorrect configuration.","name": "DOMAIN_CTRLR_CONFIG_ERROR"},{"file": 58,"line": 602,"col": 4,"docs": " An illegal character was encountered. For a multi-byte character set this includes a lead byte without a succeeding trail byte. For the Unicode character set this includes the characters 0xFFFF and 0xFFFE.","name": "ILLEGAL_CHARACTER"},{"file": 58,"line": 604,"col": 4,"docs": " The Unicode character is not defined in the Unicode character set installed on the system.","name": "UNDEFINED_CHARACTER"},{"file": 58,"line": 606,"col": 4,"docs": " The paging file cannot be created on a floppy diskette.","name": "FLOPPY_VOLUME"},{"file": 58,"line": 608,"col": 4,"docs": " The system BIOS failed to connect a system interrupt to the device or bus for which the device is connected.","name": "BIOS_FAILED_TO_CONNECT_INTERRUPT"},{"file": 58,"line": 610,"col": 4,"docs": " This operation is only allowed for the Primary Domain Controller of the domain.","name": "BACKUP_CONTROLLER"},{"file": 58,"line": 612,"col": 4,"docs": " An attempt was made to acquire a mutant such that its maximum count would have been exceeded.","name": "MUTANT_LIMIT_EXCEEDED"},{"file": 58,"line": 614,"col": 4,"docs": " A volume has been accessed for which a file system driver is required that has not yet been loaded.","name": "FS_DRIVER_REQUIRED"},{"file": 58,"line": 616,"col": 4,"docs": " {Registry File Failure} The registry cannot load the hive (file): %hs or its log or alternate. It is corrupt, absent, or not writable.","name": "CANNOT_LOAD_REGISTRY_FILE"},{"file": 58,"line": 619,"col": 4,"docs": " {Unexpected Failure in DebugActiveProcess} An unexpected failure occurred while processing a DebugActiveProcess API request. You may choose OK to terminate the process, or Cancel to ignore the error.","name": "DEBUG_ATTACH_FAILED"},{"file": 58,"line": 621,"col": 4,"docs": " {Fatal System Error} The %hs system process terminated unexpectedly with a status of 0x%08x (0x%08x 0x%08x). The system has been shut down.","name": "SYSTEM_PROCESS_TERMINATED"},{"file": 58,"line": 623,"col": 4,"docs": " {Data Not Accepted} The TDI client could not handle the data received during an indication.","name": "DATA_NOT_ACCEPTED"},{"file": 58,"line": 625,"col": 4,"docs": " NTVDM encountered a hard error.","name": "VDM_HARD_ERROR"},{"file": 58,"line": 627,"col": 4,"docs": " {Cancel Timeout} The driver %hs failed to complete a cancelled I/O request in the allotted time.","name": "DRIVER_CANCEL_TIMEOUT"},{"file": 58,"line": 629,"col": 4,"docs": " {Reply Message Mismatch} An attempt was made to reply to an LPC message, but the thread specified by the client ID in the message was not waiting on that message.","name": "REPLY_MESSAGE_MISMATCH"},{"file": 58,"line": 632,"col": 4,"docs": " {Delayed Write Failed} Windows was unable to save all the data for the file %hs. The data has been lost. This error may be caused by a failure of your computer hardware or network connection. Please try to save this file elsewhere.","name": "LOST_WRITEBEHIND_DATA"},{"file": 58,"line": 635,"col": 4,"docs": " The parameter(s) passed to the server in the client/server shared memory window were invalid. Too much data may have been put in the shared memory window.","name": "CLIENT_SERVER_PARAMETERS_INVALID"},{"file": 58,"line": 637,"col": 4,"docs": " The stream is not a tiny stream.","name": "NOT_TINY_STREAM"},{"file": 58,"line": 639,"col": 4,"docs": " The request must be handled by the stack overflow code.","name": "STACK_OVERFLOW_READ"},{"file": 58,"line": 642,"col": 4,"docs": " Internal OFS status codes indicating how an allocation operation is handled. Either it is retried after the containing onode is moved or the extent stream is converted to a large stream.","name": "CONVERT_TO_LARGE"},{"file": 58,"line": 644,"col": 4,"docs": " The attempt to find the object found an object matching by ID on the volume but it is out of the scope of the handle used for the operation.","name": "FOUND_OUT_OF_SCOPE"},{"file": 58,"line": 646,"col": 4,"docs": " The bucket array must be grown. Retry transaction after doing so.","name": "ALLOCATE_BUCKET"},{"file": 58,"line": 648,"col": 4,"docs": " The user/kernel marshalling buffer has overflowed.","name": "MARSHALL_OVERFLOW"},{"file": 58,"line": 650,"col": 4,"docs": " The supplied variant structure contains invalid data.","name": "INVALID_VARIANT"},{"file": 58,"line": 652,"col": 4,"docs": " The specified buffer contains ill-formed data.","name": "BAD_COMPRESSION_BUFFER"},{"file": 58,"line": 654,"col": 4,"docs": " {Audit Failed} An attempt to generate a security audit failed.","name": "AUDIT_FAILED"},{"file": 58,"line": 656,"col": 4,"docs": " The timer resolution was not previously set by the current process.","name": "TIMER_RESOLUTION_NOT_SET"},{"file": 58,"line": 658,"col": 4,"docs": " There is insufficient account information to log you on.","name": "INSUFFICIENT_LOGON_INFO"},{"file": 58,"line": 664,"col": 4,"docs": " {Invalid DLL Entrypoint} The dynamic link library %hs is not written correctly. The stack pointer has been left in an inconsistent state. The entrypoint should be declared as WINAPI or STDCALL. Select YES to fail the DLL load. Select NO to continue execution. Selecting NO may cause the application to operate incorrectly.","name": "BAD_DLL_ENTRYPOINT"},{"file": 58,"line": 670,"col": 4,"docs": " {Invalid Service Callback Entrypoint} The %hs service is not written correctly. The stack pointer has been left in an inconsistent state. The callback entrypoint should be declared as WINAPI or STDCALL. Selecting OK will cause the service to continue operation. However, the service process may operate incorrectly.","name": "BAD_SERVICE_ENTRYPOINT"},{"file": 58,"line": 672,"col": 4,"docs": " There is an IP address conflict with another system on the network.","name": "IP_ADDRESS_CONFLICT1"},{"file": 58,"line": 674,"col": 4,"docs": " There is an IP address conflict with another system on the network.","name": "IP_ADDRESS_CONFLICT2"},{"file": 58,"line": 676,"col": 4,"docs": " {Low On Registry Space} The system has reached the maximum size allowed for the system part of the registry. Additional storage requests will be ignored.","name": "REGISTRY_QUOTA_LIMIT"},{"file": 58,"line": 678,"col": 4,"docs": " A callback return system service cannot be executed when no callback is active.","name": "NO_CALLBACK_ACTIVE"},{"file": 58,"line": 680,"col": 4,"docs": " The password provided is too short to meet the policy of your user account. Please choose a longer password.","name": "PWD_TOO_SHORT"},{"file": 58,"line": 684,"col": 4,"docs": " The policy of your user account does not allow you to change passwords too frequently. This is done to prevent users from changing back to a familiar, but potentially discovered, password. If you feel your password has been compromised then please contact your administrator immediately to have a new one assigned.","name": "PWD_TOO_RECENT"},{"file": 58,"line": 688,"col": 4,"docs": " You have attempted to change your password to one that you have used in the past. The policy of your user account does not allow this. Please select a password that you have not previously used.","name": "PWD_HISTORY_CONFLICT"},{"file": 58,"line": 690,"col": 4,"docs": " The specified compression format is unsupported.","name": "UNSUPPORTED_COMPRESSION"},{"file": 58,"line": 692,"col": 4,"docs": " The specified hardware profile configuration is invalid.","name": "INVALID_HW_PROFILE"},{"file": 58,"line": 694,"col": 4,"docs": " The specified Plug and Play registry device path is invalid.","name": "INVALID_PLUGPLAY_DEVICE_PATH"},{"file": 58,"line": 696,"col": 4,"docs": " The specified quota list is internally inconsistent with its descriptor.","name": "QUOTA_LIST_INCONSISTENT"},{"file": 58,"line": 699,"col": 4,"docs": " {Windows Evaluation Notification} The evaluation period for this installation of Windows has expired. This system will shutdown in 1 hour. To restore access to this installation of Windows, please upgrade this installation using a licensed distribution of this product.","name": "EVALUATION_EXPIRATION"},{"file": 58,"line": 703,"col": 4,"docs": " {Illegal System DLL Relocation} The system DLL %hs was relocated in memory. The application will not run properly. The relocation occurred because the DLL %hs occupied an address range reserved for Windows system DLLs. The vendor supplying the DLL should be contacted for a new DLL.","name": "ILLEGAL_DLL_RELOCATION"},{"file": 58,"line": 705,"col": 4,"docs": " {DLL Initialization Failed} The application failed to initialize because the window station is shutting down.","name": "DLL_INIT_FAILED_LOGOFF"},{"file": 58,"line": 707,"col": 4,"docs": " The validation process needs to continue on to the next step.","name": "VALIDATE_CONTINUE"},{"file": 58,"line": 709,"col": 4,"docs": " There are no more matches for the current index enumeration.","name": "NO_MORE_MATCHES"},{"file": 58,"line": 711,"col": 4,"docs": " The range could not be added to the range list because of a conflict.","name": "RANGE_LIST_CONFLICT"},{"file": 58,"line": 713,"col": 4,"docs": " The server process is running under a SID different than that required by client.","name": "SERVER_SID_MISMATCH"},{"file": 58,"line": 715,"col": 4,"docs": " A group marked use for deny only cannot be enabled.","name": "CANT_ENABLE_DENY_ONLY"},{"file": 58,"line": 717,"col": 4,"docs": " {EXCEPTION} Multiple floating point faults.","name": "FLOAT_MULTIPLE_FAULTS"},{"file": 58,"line": 719,"col": 4,"docs": " {EXCEPTION} Multiple floating point traps.","name": "FLOAT_MULTIPLE_TRAPS"},{"file": 58,"line": 721,"col": 4,"docs": " The requested interface is not supported.","name": "NOINTERFACE"},{"file": 58,"line": 724,"col": 4,"docs": " {System Standby Failed} The driver %hs does not support standby mode. Updating this driver may allow the system to go to standby mode.","name": "DRIVER_FAILED_SLEEP"},{"file": 58,"line": 726,"col": 4,"docs": " The system file %1 has become corrupt and has been replaced.","name": "CORRUPT_SYSTEM_FILE"},{"file": 58,"line": 730,"col": 4,"docs": " {Virtual Memory Minimum Too Low} Your system is low on virtual memory. Windows is increasing the size of your virtual memory paging file. During this process, memory requests for some applications may be denied. For more information, see Help.","name": "COMMITMENT_MINIMUM"},{"file": 58,"line": 732,"col": 4,"docs": " A device was removed so enumeration must be restarted.","name": "PNP_RESTART_ENUMERATION"},{"file": 58,"line": 735,"col": 4,"docs": " {Fatal System Error} The system image %s is not properly signed. The file has been replaced with the signed file. The system has been shut down.","name": "SYSTEM_IMAGE_BAD_SIGNATURE"},{"file": 58,"line": 737,"col": 4,"docs": " Device will not start without a reboot.","name": "PNP_REBOOT_REQUIRED"},{"file": 58,"line": 739,"col": 4,"docs": " There is not enough power to complete the requested operation.","name": "INSUFFICIENT_POWER"},{"file": 58,"line": 741,"col": 4,"docs": " ERROR_MULTIPLE_FAULT_VIOLATION","name": "MULTIPLE_FAULT_VIOLATION"},{"file": 58,"line": 743,"col": 4,"docs": " The system is in the process of shutting down.","name": "SYSTEM_SHUTDOWN"},{"file": 58,"line": 745,"col": 4,"docs": " An attempt to remove a processes DebugPort was made, but a port was not already associated with the process.","name": "PORT_NOT_SET"},{"file": 58,"line": 747,"col": 4,"docs": " This version of Windows is not compatible with the behavior version of directory forest, domain or domain controller.","name": "DS_VERSION_CHECK_FAILURE"},{"file": 58,"line": 749,"col": 4,"docs": " The specified range could not be found in the range list.","name": "RANGE_NOT_FOUND"},{"file": 58,"line": 751,"col": 4,"docs": " The driver was not loaded because the system is booting into safe mode.","name": "NOT_SAFE_MODE_DRIVER"},{"file": 58,"line": 753,"col": 4,"docs": " The driver was not loaded because it failed its initialization call.","name": "FAILED_DRIVER_ENTRY"},{"file": 58,"line": 756,"col": 4,"docs": " The \"%hs\" encountered an error while applying power or reading the device configuration. This may be caused by a failure of your hardware or by a poor connection.","name": "DEVICE_ENUMERATION_ERROR"},{"file": 58,"line": 758,"col": 4,"docs": " The create operation failed because the name contained at least one mount point which resolves to a volume to which the specified device object is not attached.","name": "MOUNT_POINT_NOT_RESOLVED"},{"file": 58,"line": 760,"col": 4,"docs": " The device object parameter is either not a valid device object or is not attached to the volume specified by the file name.","name": "INVALID_DEVICE_OBJECT_PARAMETER"},{"file": 58,"line": 763,"col": 4,"docs": " A Machine Check Error has occurred. Please check the system eventlog for additional information.","name": "MCA_OCCURED"},{"file": 58,"line": 765,"col": 4,"docs": " There was error [%2] processing the driver database.","name": "DRIVER_DATABASE_ERROR"},{"file": 58,"line": 767,"col": 4,"docs": " System hive size has exceeded its limit.","name": "SYSTEM_HIVE_TOO_LARGE"},{"file": 58,"line": 769,"col": 4,"docs": " The driver could not be loaded because a previous version of the driver is still in memory.","name": "DRIVER_FAILED_PRIOR_UNLOAD"},{"file": 58,"line": 771,"col": 4,"docs": " {Volume Shadow Copy Service} Please wait while the Volume Shadow Copy Service prepares volume %hs for hibernation.","name": "VOLSNAP_PREPARE_HIBERNATE"},{"file": 58,"line": 774,"col": 4,"docs": " The system has failed to hibernate (The error code is %hs). Hibernation will be disabled until the system is restarted.","name": "HIBERNATION_FAILURE"},{"file": 58,"line": 776,"col": 4,"docs": " The password provided is too long to meet the policy of your user account. Please choose a shorter password.","name": "PWD_TOO_LONG"},{"file": 58,"line": 778,"col": 4,"docs": " The requested operation could not be completed due to a file system limitation.","name": "FILE_SYSTEM_LIMITATION"},{"file": 58,"line": 780,"col": 4,"docs": " An assertion failure has occurred.","name": "ASSERTION_FAILURE"},{"file": 58,"line": 782,"col": 4,"docs": " An error occurred in the ACPI subsystem.","name": "ACPI_ERROR"},{"file": 58,"line": 784,"col": 4,"docs": " WOW Assertion Error.","name": "WOW_ASSERTION"},{"file": 58,"line": 787,"col": 4,"docs": " A device is missing in the system BIOS MPS table. This device will not be used. Please contact your system vendor for system BIOS update.","name": "PNP_BAD_MPS_TABLE"},{"file": 58,"line": 789,"col": 4,"docs": " A translator failed to translate resources.","name": "PNP_TRANSLATION_FAILED"},{"file": 58,"line": 791,"col": 4,"docs": " A IRQ translator failed to translate resources.","name": "PNP_IRQ_TRANSLATION_FAILED"},{"file": 58,"line": 793,"col": 4,"docs": " Driver %2 returned invalid ID for a child device (%3).","name": "PNP_INVALID_ID"},{"file": 58,"line": 795,"col": 4,"docs": " {Kernel Debugger Awakened} the system debugger was awakened by an interrupt.","name": "WAKE_SYSTEM_DEBUGGER"},{"file": 58,"line": 797,"col": 4,"docs": " {Handles Closed} Handles to objects have been automatically closed as a result of the requested operation.","name": "HANDLES_CLOSED"},{"file": 58,"line": 799,"col": 4,"docs": " {Too Much Information} The specified access control list (ACL) contained more information than was expected.","name": "EXTRANEOUS_INFORMATION"},{"file": 58,"line": 802,"col": 4,"docs": " This warning level status indicates that the transaction state already exists for the registry sub-tree, but that a transaction commit was previously aborted. The commit has NOT been completed, but has not been rolled back either (so it may still be committed if desired).","name": "RXACT_COMMIT_NECESSARY"},{"file": 58,"line": 804,"col": 4,"docs": " {Media Changed} The media may have changed.","name": "MEDIA_CHECK"},{"file": 58,"line": 808,"col": 4,"docs": " {GUID Substitution} During the translation of a global identifier (GUID) to a Windows security ID (SID), no administratively-defined GUID prefix was found. A substitute prefix was used, which will not compromise system security. However, this may provide a more restrictive access than intended.","name": "GUID_SUBSTITUTION_MADE"},{"file": 58,"line": 810,"col": 4,"docs": " The create operation stopped after reaching a symbolic link.","name": "STOPPED_ON_SYMLINK"},{"file": 58,"line": 812,"col": 4,"docs": " A long jump has been executed.","name": "LONGJUMP"},{"file": 58,"line": 814,"col": 4,"docs": " The Plug and Play query operation was not successful.","name": "PLUGPLAY_QUERY_VETOED"},{"file": 58,"line": 816,"col": 4,"docs": " A frame consolidation has been executed.","name": "UNWIND_CONSOLIDATE"},{"file": 58,"line": 818,"col": 4,"docs": " {Registry Hive Recovered} Registry hive (file): %hs was corrupted and it has been recovered. Some data might have been lost.","name": "REGISTRY_HIVE_RECOVERED"},{"file": 58,"line": 821,"col": 4,"docs": " The application is attempting to run executable code from the module %hs. This may be insecure. An alternative, %hs, is available. Should the application use the secure module %hs?","name": "DLL_MIGHT_BE_INSECURE"},{"file": 58,"line": 825,"col": 4,"docs": " The application is loading executable code from the module %hs. This is secure, but may be incompatible with previous releases of the operating system. An alternative, %hs, is available. Should the application use the secure module %hs?","name": "DLL_MIGHT_BE_INCOMPATIBLE"},{"file": 58,"line": 827,"col": 4,"docs": " Debugger did not handle the exception.","name": "DBG_EXCEPTION_NOT_HANDLED"},{"file": 58,"line": 829,"col": 4,"docs": " Debugger will reply later.","name": "DBG_REPLY_LATER"},{"file": 58,"line": 831,"col": 4,"docs": " Debugger cannot provide handle.","name": "DBG_UNABLE_TO_PROVIDE_HANDLE"},{"file": 58,"line": 833,"col": 4,"docs": " Debugger terminated thread.","name": "DBG_TERMINATE_THREAD"},{"file": 58,"line": 835,"col": 4,"docs": " Debugger terminated process.","name": "DBG_TERMINATE_PROCESS"},{"file": 58,"line": 837,"col": 4,"docs": " Debugger got control C.","name": "DBG_CONTROL_C"},{"file": 58,"line": 839,"col": 4,"docs": " Debugger printed exception on control C.","name": "DBG_PRINTEXCEPTION_C"},{"file": 58,"line": 841,"col": 4,"docs": " Debugger received RIP exception.","name": "DBG_RIPEXCEPTION"},{"file": 58,"line": 843,"col": 4,"docs": " Debugger received control break.","name": "DBG_CONTROL_BREAK"},{"file": 58,"line": 845,"col": 4,"docs": " Debugger command communication exception.","name": "DBG_COMMAND_EXCEPTION"},{"file": 58,"line": 847,"col": 4,"docs": " {Object Exists} An attempt was made to create an object and the object name already existed.","name": "OBJECT_NAME_EXISTS"},{"file": 58,"line": 850,"col": 4,"docs": " {Thread Suspended} A thread termination occurred while the thread was suspended. The thread was resumed, and termination proceeded.","name": "THREAD_WAS_SUSPENDED"},{"file": 58,"line": 852,"col": 4,"docs": " {Image Relocated} An image file could not be mapped at the address specified in the image file. Local fixups must be performed on this image.","name": "IMAGE_NOT_AT_BASE"},{"file": 58,"line": 854,"col": 4,"docs": " This informational level status indicates that a specified registry sub-tree transaction state did not yet exist and had to be created.","name": "RXACT_STATE_CREATED"},{"file": 58,"line": 857,"col": 4,"docs": " {Segment Load} A virtual DOS machine (VDM) is loading, unloading, or moving an MS-DOS or Win16 program segment image. An exception is raised so a debugger can load, unload or track symbols and breakpoints within these 16-bit segments.","name": "SEGMENT_NOTIFICATION"},{"file": 58,"line": 860,"col": 4,"docs": " {Invalid Current Directory} The process cannot switch to the startup current directory %hs. Select OK to set current directory to %hs, or select CANCEL to exit.","name": "BAD_CURRENT_DIRECTORY"},{"file": 58,"line": 863,"col": 4,"docs": " {Redundant Read} To satisfy a read request, the NT fault-tolerant file system successfully read the requested data from a redundant copy. This was done because the file system encountered a failure on a member of the fault-tolerant volume, but was unable to reassign the failing area of the device.","name": "FT_READ_RECOVERY_FROM_BACKUP"},{"file": 58,"line": 866,"col": 4,"docs": " {Redundant Write} To satisfy a write request, the NT fault-tolerant file system successfully wrote a redundant copy of the information. This was done because the file system encountered a failure on a member of the fault-tolerant volume, but was not able to reassign the failing area of the device.","name": "FT_WRITE_RECOVERY"},{"file": 58,"line": 869,"col": 4,"docs": " {Machine Type Mismatch} The image file %hs is valid, but is for a machine type other than the current machine. Select OK to continue, or CANCEL to fail the DLL load.","name": "IMAGE_MACHINE_TYPE_MISMATCH"},{"file": 58,"line": 871,"col": 4,"docs": " {Partial Data Received} The network transport returned partial data to its client. The remaining data will be sent later.","name": "RECEIVE_PARTIAL"},{"file": 58,"line": 873,"col": 4,"docs": " {Expedited Data Received} The network transport returned data to its client that was marked as expedited by the remote system.","name": "RECEIVE_EXPEDITED"},{"file": 58,"line": 875,"col": 4,"docs": " {Partial Expedited Data Received} The network transport returned partial data to its client and this data was marked as expedited by the remote system. The remaining data will be sent later.","name": "RECEIVE_PARTIAL_EXPEDITED"},{"file": 58,"line": 877,"col": 4,"docs": " {TDI Event Done} The TDI indication has completed successfully.","name": "EVENT_DONE"},{"file": 58,"line": 879,"col": 4,"docs": " {TDI Event Pending} The TDI indication has entered the pending state.","name": "EVENT_PENDING"},{"file": 58,"line": 881,"col": 4,"docs": " Checking file system on %wZ.","name": "CHECKING_FILE_SYSTEM"},{"file": 58,"line": 883,"col": 4,"docs": " {Fatal Application Exit} %hs.","name": "FATAL_APP_EXIT"},{"file": 58,"line": 885,"col": 4,"docs": " The specified registry key is referenced by a predefined handle.","name": "PREDEFINED_HANDLE"},{"file": 58,"line": 887,"col": 4,"docs": " {Page Unlocked} The page protection of a locked page was changed to 'No Access' and the page was unlocked from memory and from the process.","name": "WAS_UNLOCKED"},{"file": 58,"line": 889,"col": 4,"docs": " %hs","name": "SERVICE_NOTIFICATION"},{"file": 58,"line": 891,"col": 4,"docs": " {Page Locked} One of the pages to lock was already locked.","name": "WAS_LOCKED"},{"file": 58,"line": 893,"col": 4,"docs": " Application popup: %1 : %2","name": "LOG_HARD_ERROR"},{"file": 58,"line": 895,"col": 4,"docs": " ERROR_ALREADY_WIN32","name": "ALREADY_WIN32"},{"file": 58,"line": 897,"col": 4,"docs": " {Machine Type Mismatch} The image file %hs is valid, but is for a machine type other than the current machine.","name": "IMAGE_MACHINE_TYPE_MISMATCH_EXE"},{"file": 58,"line": 899,"col": 4,"docs": " A yield execution was performed and no thread was available to run.","name": "NO_YIELD_PERFORMED"},{"file": 58,"line": 901,"col": 4,"docs": " The resumable flag to a timer API was ignored.","name": "TIMER_RESUME_IGNORED"},{"file": 58,"line": 903,"col": 4,"docs": " The arbiter has deferred arbitration of these resources to its parent.","name": "ARBITRATION_UNHANDLED"},{"file": 58,"line": 905,"col": 4,"docs": " The inserted CardBus device cannot be started because of a configuration error on \"%hs\".","name": "CARDBUS_NOT_SUPPORTED"},{"file": 58,"line": 909,"col": 4,"docs": " The CPUs in this multiprocessor system are not all the same revision level. To use all processors the operating system restricts itself to the features of the least capable processor in the system. Should problems occur with this system, contact the CPU manufacturer to see if this mix of processors is supported.","name": "MP_PROCESSOR_MISMATCH"},{"file": 58,"line": 911,"col": 4,"docs": " The system was put into hibernation.","name": "HIBERNATED"},{"file": 58,"line": 913,"col": 4,"docs": " The system was resumed from hibernation.","name": "RESUME_HIBERNATION"},{"file": 58,"line": 915,"col": 4,"docs": " Windows has detected that the system firmware (BIOS) was updated [previous firmware date = %2, current firmware date %3].","name": "FIRMWARE_UPDATED"},{"file": 58,"line": 918,"col": 4,"docs": " A device driver is leaking locked I/O pages causing system degradation. The system has automatically enabled tracking code in order to try and catch the culprit.","name": "DRIVERS_LEAKING_LOCKED_PAGES"},{"file": 58,"line": 920,"col": 4,"docs": " The system has awoken.","name": "WAKE_SYSTEM"},{"file": 58,"line": 922,"col": 4,"docs": " ERROR_WAIT_1","name": "WAIT_1"},{"file": 58,"line": 924,"col": 4,"docs": " ERROR_WAIT_2","name": "WAIT_2"},{"file": 58,"line": 926,"col": 4,"docs": " ERROR_WAIT_3","name": "WAIT_3"},{"file": 58,"line": 928,"col": 4,"docs": " ERROR_WAIT_63","name": "WAIT_63"},{"file": 58,"line": 930,"col": 4,"docs": " ERROR_ABANDONED_WAIT_0","name": "ABANDONED_WAIT_0"},{"file": 58,"line": 932,"col": 4,"docs": " ERROR_ABANDONED_WAIT_63","name": "ABANDONED_WAIT_63"},{"file": 58,"line": 934,"col": 4,"docs": " ERROR_USER_APC","name": "USER_APC"},{"file": 58,"line": 936,"col": 4,"docs": " ERROR_KERNEL_APC","name": "KERNEL_APC"},{"file": 58,"line": 938,"col": 4,"docs": " ERROR_ALERTED","name": "ALERTED"},{"file": 58,"line": 940,"col": 4,"docs": " The requested operation requires elevation.","name": "ELEVATION_REQUIRED"},{"file": 58,"line": 942,"col": 4,"docs": " A reparse should be performed by the Object Manager since the name of the file resulted in a symbolic link.","name": "REPARSE"},{"file": 58,"line": 944,"col": 4,"docs": " An open/create operation completed while an oplock break is underway.","name": "OPLOCK_BREAK_IN_PROGRESS"},{"file": 58,"line": 946,"col": 4,"docs": " A new volume has been mounted by a file system.","name": "VOLUME_MOUNTED"},{"file": 58,"line": 948,"col": 4,"docs": " This success level status indicates that the transaction state already exists for the registry sub-tree, but that a transaction commit was previously aborted. The commit has now been completed.","name": "RXACT_COMMITTED"},{"file": 58,"line": 950,"col": 4,"docs": " This indicates that a notify change request has been completed due to closing the handle which made the notify change request.","name": "NOTIFY_CLEANUP"},{"file": 58,"line": 953,"col": 4,"docs": " {Connect Failure on Primary Transport} An attempt was made to connect to the remote server %hs on the primary transport, but the connection failed. The computer WAS able to connect on a secondary transport.","name": "PRIMARY_TRANSPORT_CONNECT_FAILED"},{"file": 58,"line": 955,"col": 4,"docs": " Page fault was a transition fault.","name": "PAGE_FAULT_TRANSITION"},{"file": 58,"line": 957,"col": 4,"docs": " Page fault was a demand zero fault.","name": "PAGE_FAULT_DEMAND_ZERO"},{"file": 58,"line": 959,"col": 4,"docs": " Page fault was a demand zero fault.","name": "PAGE_FAULT_COPY_ON_WRITE"},{"file": 58,"line": 961,"col": 4,"docs": " Page fault was a demand zero fault.","name": "PAGE_FAULT_GUARD_PAGE"},{"file": 58,"line": 963,"col": 4,"docs": " Page fault was satisfied by reading from a secondary storage device.","name": "PAGE_FAULT_PAGING_FILE"},{"file": 58,"line": 965,"col": 4,"docs": " Cached page was locked during operation.","name": "CACHE_PAGE_LOCKED"},{"file": 58,"line": 967,"col": 4,"docs": " Crash dump exists in paging file.","name": "CRASH_DUMP"},{"file": 58,"line": 969,"col": 4,"docs": " Specified buffer contains all zeros.","name": "BUFFER_ALL_ZEROS"},{"file": 58,"line": 971,"col": 4,"docs": " A reparse should be performed by the Object Manager since the name of the file resulted in a symbolic link.","name": "REPARSE_OBJECT"},{"file": 58,"line": 973,"col": 4,"docs": " The device has succeeded a query-stop and its resource requirements have changed.","name": "RESOURCE_REQUIREMENTS_CHANGED"},{"file": 58,"line": 975,"col": 4,"docs": " The translator has translated these resources into the global space and no further translations should be performed.","name": "TRANSLATION_COMPLETE"},{"file": 58,"line": 977,"col": 4,"docs": " A process being terminated has no threads to terminate.","name": "NOTHING_TO_TERMINATE"},{"file": 58,"line": 979,"col": 4,"docs": " The specified process is not part of a job.","name": "PROCESS_NOT_IN_JOB"},{"file": 58,"line": 981,"col": 4,"docs": " The specified process is part of a job.","name": "PROCESS_IN_JOB"},{"file": 58,"line": 983,"col": 4,"docs": " {Volume Shadow Copy Service} The system is now ready for hibernation.","name": "VOLSNAP_HIBERNATE_READY"},{"file": 58,"line": 985,"col": 4,"docs": " A file system or file system filter driver has successfully completed an FsFilter operation.","name": "FSFILTER_OP_COMPLETED_SUCCESSFULLY"},{"file": 58,"line": 987,"col": 4,"docs": " The specified interrupt vector was already connected.","name": "INTERRUPT_VECTOR_ALREADY_CONNECTED"},{"file": 58,"line": 989,"col": 4,"docs": " The specified interrupt vector is still connected.","name": "INTERRUPT_STILL_CONNECTED"},{"file": 58,"line": 991,"col": 4,"docs": " An operation is blocked waiting for an oplock.","name": "WAIT_FOR_OPLOCK"},{"file": 58,"line": 993,"col": 4,"docs": " Debugger handled exception.","name": "DBG_EXCEPTION_HANDLED"},{"file": 58,"line": 995,"col": 4,"docs": " Debugger continued.","name": "DBG_CONTINUE"},{"file": 58,"line": 997,"col": 4,"docs": " An exception occurred in a user mode callback and the kernel callback frame should be removed.","name": "CALLBACK_POP_STACK"},{"file": 58,"line": 999,"col": 4,"docs": " Compression is disabled for this volume.","name": "COMPRESSION_DISABLED"},{"file": 58,"line": 1001,"col": 4,"docs": " The data provider cannot fetch backwards through a result set.","name": "CANTFETCHBACKWARDS"},{"file": 58,"line": 1003,"col": 4,"docs": " The data provider cannot scroll backwards through a result set.","name": "CANTSCROLLBACKWARDS"},{"file": 58,"line": 1005,"col": 4,"docs": " The data provider requires that previously fetched data is released before asking for more data.","name": "ROWSNOTRELEASED"},{"file": 58,"line": 1007,"col": 4,"docs": " The data provider was not able to interpret the flags set for a column binding in an accessor.","name": "BAD_ACCESSOR_FLAGS"},{"file": 58,"line": 1009,"col": 4,"docs": " One or more errors occurred while processing the request.","name": "ERRORS_ENCOUNTERED"},{"file": 58,"line": 1011,"col": 4,"docs": " The implementation is not capable of performing the request.","name": "NOT_CAPABLE"},{"file": 58,"line": 1013,"col": 4,"docs": " The client of a component requested an operation which is not valid given the state of the component instance.","name": "REQUEST_OUT_OF_SEQUENCE"},{"file": 58,"line": 1015,"col": 4,"docs": " A version number could not be parsed.","name": "VERSION_PARSE_ERROR"},{"file": 58,"line": 1017,"col": 4,"docs": " The iterator's start position is invalid.","name": "BADSTARTPOSITION"},{"file": 58,"line": 1019,"col": 4,"docs": " The hardware has reported an uncorrectable memory error.","name": "MEMORY_HARDWARE"},{"file": 58,"line": 1021,"col": 4,"docs": " The attempted operation required self healing to be enabled.","name": "DISK_REPAIR_DISABLED"},{"file": 58,"line": 1024,"col": 4,"docs": " The Desktop heap encountered an error while allocating session memory. There is more information in the system event log.","name": "INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE"},{"file": 58,"line": 1026,"col": 4,"docs": " The system power state is transitioning from %2 to %3.","name": "SYSTEM_POWERSTATE_TRANSITION"},{"file": 58,"line": 1028,"col": 4,"docs": " The system power state is transitioning from %2 to %3 but could enter %4.","name": "SYSTEM_POWERSTATE_COMPLEX_TRANSITION"},{"file": 58,"line": 1030,"col": 4,"docs": " A thread is getting dispatched with MCA EXCEPTION because of MCA.","name": "MCA_EXCEPTION"},{"file": 58,"line": 1032,"col": 4,"docs": " Access to %1 is monitored by policy rule %2.","name": "ACCESS_AUDIT_BY_POLICY"},{"file": 58,"line": 1034,"col": 4,"docs": " Access to %1 has been restricted by your Administrator by policy rule %2.","name": "ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY"},{"file": 58,"line": 1036,"col": 4,"docs": " A valid hibernation file has been invalidated and should be abandoned.","name": "ABANDON_HIBERFILE"},{"file": 58,"line": 1039,"col": 4,"docs": " {Delayed Write Failed} Windows was unable to save all the data for the file %hs; the data has been lost. This error may be caused by network connectivity issues. Please try to save this file elsewhere.","name": "LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED"},{"file": 58,"line": 1042,"col": 4,"docs": " {Delayed Write Failed} Windows was unable to save all the data for the file %hs; the data has been lost. This error was returned by the server on which the file exists. Please try to save this file elsewhere.","name": "LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR"},{"file": 58,"line": 1045,"col": 4,"docs": " {Delayed Write Failed} Windows was unable to save all the data for the file %hs; the data has been lost. This error may be caused if the device has been removed or the media is write-protected.","name": "LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR"},{"file": 58,"line": 1047,"col": 4,"docs": " The resources required for this device conflict with the MCFG table.","name": "BAD_MCFG_TABLE"},{"file": 58,"line": 1050,"col": 4,"docs": " The volume repair could not be performed while it is online. Please schedule to take the volume offline so that it can be repaired.","name": "DISK_REPAIR_REDIRECTED"},{"file": 58,"line": 1052,"col": 4,"docs": " The volume repair was not successful.","name": "DISK_REPAIR_UNSUCCESSFUL"},{"file": 58,"line": 1055,"col": 4,"docs": " One of the volume corruption logs is full. Further corruptions that may be detected won't be logged.","name": "CORRUPT_LOG_OVERFULL"},{"file": 58,"line": 1058,"col": 4,"docs": " One of the volume corruption logs is internally corrupted and needs to be recreated. The volume may contain undetected corruptions and must be scanned.","name": "CORRUPT_LOG_CORRUPTED"},{"file": 58,"line": 1060,"col": 4,"docs": " One of the volume corruption logs is unavailable for being operated on.","name": "CORRUPT_LOG_UNAVAILABLE"},{"file": 58,"line": 1063,"col": 4,"docs": " One of the volume corruption logs was deleted while still having corruption records in them. The volume contains detected corruptions and must be scanned.","name": "CORRUPT_LOG_DELETED_FULL"},{"file": 58,"line": 1065,"col": 4,"docs": " One of the volume corruption logs was cleared by chkdsk and no longer contains real corruptions.","name": "CORRUPT_LOG_CLEARED"},{"file": 58,"line": 1067,"col": 4,"docs": " Orphaned files exist on the volume but could not be recovered because no more new names could be created in the recovery directory. Files must be moved from the recovery directory.","name": "ORPHAN_NAME_EXHAUSTED"},{"file": 58,"line": 1069,"col": 4,"docs": " The oplock that was associated with this handle is now associated with a different handle.","name": "OPLOCK_SWITCHED_TO_NEW_HANDLE"},{"file": 58,"line": 1071,"col": 4,"docs": " An oplock of the requested level cannot be granted. An oplock of a lower level may be available.","name": "CANNOT_GRANT_REQUESTED_OPLOCK"},{"file": 58,"line": 1074,"col": 4,"docs": " The operation did not complete successfully because it would cause an oplock to be broken. The caller has requested that existing oplocks not be broken.","name": "CANNOT_BREAK_OPLOCK"},{"file": 58,"line": 1076,"col": 4,"docs": " The handle with which this oplock was associated has been closed. The oplock is now broken.","name": "OPLOCK_HANDLE_CLOSED"},{"file": 58,"line": 1078,"col": 4,"docs": " The specified access control entry (ACE) does not contain a condition.","name": "NO_ACE_CONDITION"},{"file": 58,"line": 1080,"col": 4,"docs": " The specified access control entry (ACE) contains an invalid condition.","name": "INVALID_ACE_CONDITION"},{"file": 58,"line": 1082,"col": 4,"docs": " Access to the specified file handle has been revoked.","name": "FILE_HANDLE_REVOKED"},{"file": 58,"line": 1084,"col": 4,"docs": " An image file was mapped at a different address from the one specified in the image file but fixups will still be automatically performed on the image.","name": "IMAGE_AT_DIFFERENT_BASE"},{"file": 58,"line": 1086,"col": 4,"docs": " Access to the extended attribute was denied.","name": "EA_ACCESS_DENIED"},{"file": 58,"line": 1088,"col": 4,"docs": " The I/O operation has been aborted because of either a thread exit or an application request.","name": "OPERATION_ABORTED"},{"file": 58,"line": 1090,"col": 4,"docs": " Overlapped I/O event is not in a signaled state.","name": "IO_INCOMPLETE"},{"file": 58,"line": 1092,"col": 4,"docs": " Overlapped I/O operation is in progress.","name": "IO_PENDING"},{"file": 58,"line": 1094,"col": 4,"docs": " Invalid access to memory location.","name": "NOACCESS"},{"file": 58,"line": 1096,"col": 4,"docs": " Error performing inpage operation.","name": "SWAPERROR"},{"file": 58,"line": 1098,"col": 4,"docs": " Recursion too deep; the stack overflowed.","name": "STACK_OVERFLOW"},{"file": 58,"line": 1100,"col": 4,"docs": " The window cannot act on the sent message.","name": "INVALID_MESSAGE"},{"file": 58,"line": 1102,"col": 4,"docs": " Cannot complete this function.","name": "CAN_NOT_COMPLETE"},{"file": 58,"line": 1104,"col": 4,"docs": " Invalid flags.","name": "INVALID_FLAGS"},{"file": 58,"line": 1107,"col": 4,"docs": " The volume does not contain a recognized file system. Please make sure that all required file system drivers are loaded and that the volume is not corrupted.","name": "UNRECOGNIZED_VOLUME"},{"file": 58,"line": 1109,"col": 4,"docs": " The volume for a file has been externally altered so that the opened file is no longer valid.","name": "FILE_INVALID"},{"file": 58,"line": 1111,"col": 4,"docs": " The requested operation cannot be performed in full-screen mode.","name": "FULLSCREEN_MODE"},{"file": 58,"line": 1113,"col": 4,"docs": " An attempt was made to reference a token that does not exist.","name": "NO_TOKEN"},{"file": 58,"line": 1115,"col": 4,"docs": " The configuration registry database is corrupt.","name": "BADDB"},{"file": 58,"line": 1117,"col": 4,"docs": " The configuration registry key is invalid.","name": "BADKEY"},{"file": 58,"line": 1119,"col": 4,"docs": " The configuration registry key could not be opened.","name": "CANTOPEN"},{"file": 58,"line": 1121,"col": 4,"docs": " The configuration registry key could not be read.","name": "CANTREAD"},{"file": 58,"line": 1123,"col": 4,"docs": " The configuration registry key could not be written.","name": "CANTWRITE"},{"file": 58,"line": 1125,"col": 4,"docs": " One of the files in the registry database had to be recovered by use of a log or alternate copy. The recovery was successful.","name": "REGISTRY_RECOVERED"},{"file": 58,"line": 1127,"col": 4,"docs": " The registry is corrupted. The structure of one of the files containing registry data is corrupted, or the system's memory image of the file is corrupted, or the file could not be recovered because the alternate copy or log was absent or corrupted.","name": "REGISTRY_CORRUPT"},{"file": 58,"line": 1130,"col": 4,"docs": " An I/O operation initiated by the registry failed unrecoverably. The registry could not read in, or write out, or flush, one of the files that contain the system's image of the registry.","name": "REGISTRY_IO_FAILED"},{"file": 58,"line": 1132,"col": 4,"docs": " The system has attempted to load or restore a file into the registry, but the specified file is not in a registry file format.","name": "NOT_REGISTRY_FILE"},{"file": 58,"line": 1134,"col": 4,"docs": " Illegal operation attempted on a registry key that has been marked for deletion.","name": "KEY_DELETED"},{"file": 58,"line": 1136,"col": 4,"docs": " System could not allocate the required space in a registry log.","name": "NO_LOG_SPACE"},{"file": 58,"line": 1138,"col": 4,"docs": " Cannot create a symbolic link in a registry key that already has subkeys or values.","name": "KEY_HAS_CHILDREN"},{"file": 58,"line": 1140,"col": 4,"docs": " Cannot create a stable subkey under a volatile parent key.","name": "CHILD_MUST_BE_VOLATILE"},{"file": 58,"line": 1143,"col": 4,"docs": " A notify change request is being completed and the information is not being returned in the caller's buffer. The caller now needs to enumerate the files to find the changes.","name": "NOTIFY_ENUM_DIR"},{"file": 58,"line": 1145,"col": 4,"docs": " A stop control has been sent to a service that other running services are dependent on.","name": "DEPENDENT_SERVICES_RUNNING"},{"file": 58,"line": 1147,"col": 4,"docs": " The requested control is not valid for this service.","name": "INVALID_SERVICE_CONTROL"},{"file": 58,"line": 1149,"col": 4,"docs": " The service did not respond to the start or control request in a timely fashion.","name": "SERVICE_REQUEST_TIMEOUT"},{"file": 58,"line": 1151,"col": 4,"docs": " A thread could not be created for the service.","name": "SERVICE_NO_THREAD"},{"file": 58,"line": 1153,"col": 4,"docs": " The service database is locked.","name": "SERVICE_DATABASE_LOCKED"},{"file": 58,"line": 1155,"col": 4,"docs": " An instance of the service is already running.","name": "SERVICE_ALREADY_RUNNING"},{"file": 58,"line": 1157,"col": 4,"docs": " The account name is invalid or does not exist, or the password is invalid for the account name specified.","name": "INVALID_SERVICE_ACCOUNT"},{"file": 58,"line": 1159,"col": 4,"docs": " The service cannot be started, either because it is disabled or because it has no enabled devices associated with it.","name": "SERVICE_DISABLED"},{"file": 58,"line": 1161,"col": 4,"docs": " Circular service dependency was specified.","name": "CIRCULAR_DEPENDENCY"},{"file": 58,"line": 1163,"col": 4,"docs": " The specified service does not exist as an installed service.","name": "SERVICE_DOES_NOT_EXIST"},{"file": 58,"line": 1165,"col": 4,"docs": " The service cannot accept control messages at this time.","name": "SERVICE_CANNOT_ACCEPT_CTRL"},{"file": 58,"line": 1167,"col": 4,"docs": " The service has not been started.","name": "SERVICE_NOT_ACTIVE"},{"file": 58,"line": 1169,"col": 4,"docs": " The service process could not connect to the service controller.","name": "FAILED_SERVICE_CONTROLLER_CONNECT"},{"file": 58,"line": 1171,"col": 4,"docs": " An exception occurred in the service when handling the control request.","name": "EXCEPTION_IN_SERVICE"},{"file": 58,"line": 1173,"col": 4,"docs": " The database specified does not exist.","name": "DATABASE_DOES_NOT_EXIST"},{"file": 58,"line": 1175,"col": 4,"docs": " The service has returned a service-specific error code.","name": "SERVICE_SPECIFIC_ERROR"},{"file": 58,"line": 1177,"col": 4,"docs": " The process terminated unexpectedly.","name": "PROCESS_ABORTED"},{"file": 58,"line": 1179,"col": 4,"docs": " The dependency service or group failed to start.","name": "SERVICE_DEPENDENCY_FAIL"},{"file": 58,"line": 1181,"col": 4,"docs": " The service did not start due to a logon failure.","name": "SERVICE_LOGON_FAILED"},{"file": 58,"line": 1183,"col": 4,"docs": " After starting, the service hung in a start-pending state.","name": "SERVICE_START_HANG"},{"file": 58,"line": 1185,"col": 4,"docs": " The specified service database lock is invalid.","name": "INVALID_SERVICE_LOCK"},{"file": 58,"line": 1187,"col": 4,"docs": " The specified service has been marked for deletion.","name": "SERVICE_MARKED_FOR_DELETE"},{"file": 58,"line": 1189,"col": 4,"docs": " The specified service already exists.","name": "SERVICE_EXISTS"},{"file": 58,"line": 1191,"col": 4,"docs": " The system is currently running with the last-known-good configuration.","name": "ALREADY_RUNNING_LKG"},{"file": 58,"line": 1193,"col": 4,"docs": " The dependency service does not exist or has been marked for deletion.","name": "SERVICE_DEPENDENCY_DELETED"},{"file": 58,"line": 1195,"col": 4,"docs": " The current boot has already been accepted for use as the last-known-good control set.","name": "BOOT_ALREADY_ACCEPTED"},{"file": 58,"line": 1197,"col": 4,"docs": " No attempts to start the service have been made since the last boot.","name": "SERVICE_NEVER_STARTED"},{"file": 58,"line": 1199,"col": 4,"docs": " The name is already in use as either a service name or a service display name.","name": "DUPLICATE_SERVICE_NAME"},{"file": 58,"line": 1201,"col": 4,"docs": " The account specified for this service is different from the account specified for other services running in the same process.","name": "DIFFERENT_SERVICE_ACCOUNT"},{"file": 58,"line": 1203,"col": 4,"docs": " Failure actions can only be set for Win32 services, not for drivers.","name": "CANNOT_DETECT_DRIVER_FAILURE"},{"file": 58,"line": 1206,"col": 4,"docs": " This service runs in the same process as the service control manager. Therefore, the service control manager cannot take action if this service's process terminates unexpectedly.","name": "CANNOT_DETECT_PROCESS_ABORT"},{"file": 58,"line": 1208,"col": 4,"docs": " No recovery program has been configured for this service.","name": "NO_RECOVERY_PROGRAM"},{"file": 58,"line": 1210,"col": 4,"docs": " The executable program that this service is configured to run in does not implement the service.","name": "SERVICE_NOT_IN_EXE"},{"file": 58,"line": 1212,"col": 4,"docs": " This service cannot be started in Safe Mode.","name": "NOT_SAFEBOOT_SERVICE"},{"file": 58,"line": 1214,"col": 4,"docs": " The physical end of the tape has been reached.","name": "END_OF_MEDIA"},{"file": 58,"line": 1216,"col": 4,"docs": " A tape access reached a filemark.","name": "FILEMARK_DETECTED"},{"file": 58,"line": 1218,"col": 4,"docs": " The beginning of the tape or a partition was encountered.","name": "BEGINNING_OF_MEDIA"},{"file": 58,"line": 1220,"col": 4,"docs": " A tape access reached the end of a set of files.","name": "SETMARK_DETECTED"},{"file": 58,"line": 1222,"col": 4,"docs": " No more data is on the tape.","name": "NO_DATA_DETECTED"},{"file": 58,"line": 1224,"col": 4,"docs": " Tape could not be partitioned.","name": "PARTITION_FAILURE"},{"file": 58,"line": 1226,"col": 4,"docs": " When accessing a new tape of a multivolume partition, the current block size is incorrect.","name": "INVALID_BLOCK_LENGTH"},{"file": 58,"line": 1228,"col": 4,"docs": " Tape partition information could not be found when loading a tape.","name": "DEVICE_NOT_PARTITIONED"},{"file": 58,"line": 1230,"col": 4,"docs": " Unable to lock the media eject mechanism.","name": "UNABLE_TO_LOCK_MEDIA"},{"file": 58,"line": 1232,"col": 4,"docs": " Unable to unload the media.","name": "UNABLE_TO_UNLOAD_MEDIA"},{"file": 58,"line": 1234,"col": 4,"docs": " The media in the drive may have changed.","name": "MEDIA_CHANGED"},{"file": 58,"line": 1236,"col": 4,"docs": " The I/O bus was reset.","name": "BUS_RESET"},{"file": 58,"line": 1238,"col": 4,"docs": " No media in drive.","name": "NO_MEDIA_IN_DRIVE"},{"file": 58,"line": 1240,"col": 4,"docs": " No mapping for the Unicode character exists in the target multi-byte code page.","name": "NO_UNICODE_TRANSLATION"},{"file": 58,"line": 1242,"col": 4,"docs": " A dynamic link library (DLL) initialization routine failed.","name": "DLL_INIT_FAILED"},{"file": 58,"line": 1244,"col": 4,"docs": " A system shutdown is in progress.","name": "SHUTDOWN_IN_PROGRESS"},{"file": 58,"line": 1246,"col": 4,"docs": " Unable to abort the system shutdown because no shutdown was in progress.","name": "NO_SHUTDOWN_IN_PROGRESS"},{"file": 58,"line": 1248,"col": 4,"docs": " The request could not be performed because of an I/O device error.","name": "IO_DEVICE"},{"file": 58,"line": 1250,"col": 4,"docs": " No serial device was successfully initialized. The serial driver will unload.","name": "SERIAL_NO_DEVICE"},{"file": 58,"line": 1253,"col": 4,"docs": " Unable to open a device that was sharing an interrupt request (IRQ) with other devices. At least one other device that uses that IRQ was already opened.","name": "IRQ_BUSY"},{"file": 58,"line": 1255,"col": 4,"docs": " A serial I/O operation was completed by another write to the serial port. The IOCTL_SERIAL_XOFF_COUNTER reached zero.)","name": "MORE_WRITES"},{"file": 58,"line": 1258,"col": 4,"docs": " A serial I/O operation completed because the timeout period expired. The IOCTL_SERIAL_XOFF_COUNTER did not reach zero.)","name": "COUNTER_TIMEOUT"},{"file": 58,"line": 1260,"col": 4,"docs": " No ID address mark was found on the floppy disk.","name": "FLOPPY_ID_MARK_NOT_FOUND"},{"file": 58,"line": 1262,"col": 4,"docs": " Mismatch between the floppy disk sector ID field and the floppy disk controller track address.","name": "FLOPPY_WRONG_CYLINDER"},{"file": 58,"line": 1264,"col": 4,"docs": " The floppy disk controller reported an error that is not recognized by the floppy disk driver.","name": "FLOPPY_UNKNOWN_ERROR"},{"file": 58,"line": 1266,"col": 4,"docs": " The floppy disk controller returned inconsistent results in its registers.","name": "FLOPPY_BAD_REGISTERS"},{"file": 58,"line": 1268,"col": 4,"docs": " While accessing the hard disk, a recalibrate operation failed, even after retries.","name": "DISK_RECALIBRATE_FAILED"},{"file": 58,"line": 1270,"col": 4,"docs": " While accessing the hard disk, a disk operation failed even after retries.","name": "DISK_OPERATION_FAILED"},{"file": 58,"line": 1272,"col": 4,"docs": " While accessing the hard disk, a disk controller reset was needed, but even that failed.","name": "DISK_RESET_FAILED"},{"file": 58,"line": 1274,"col": 4,"docs": " Physical end of tape encountered.","name": "EOM_OVERFLOW"},{"file": 58,"line": 1276,"col": 4,"docs": " Not enough server storage is available to process this command.","name": "NOT_ENOUGH_SERVER_MEMORY"},{"file": 58,"line": 1278,"col": 4,"docs": " A potential deadlock condition has been detected.","name": "POSSIBLE_DEADLOCK"},{"file": 58,"line": 1280,"col": 4,"docs": " The base address or the file offset specified does not have the proper alignment.","name": "MAPPED_ALIGNMENT"},{"file": 58,"line": 1282,"col": 4,"docs": " An attempt to change the system power state was vetoed by another application or driver.","name": "SET_POWER_STATE_VETOED"},{"file": 58,"line": 1284,"col": 4,"docs": " The system BIOS failed an attempt to change the system power state.","name": "SET_POWER_STATE_FAILED"},{"file": 58,"line": 1286,"col": 4,"docs": " An attempt was made to create more links on a file than the file system supports.","name": "TOO_MANY_LINKS"},{"file": 58,"line": 1288,"col": 4,"docs": " The specified program requires a newer version of Windows.","name": "OLD_WIN_VERSION"},{"file": 58,"line": 1290,"col": 4,"docs": " The specified program is not a Windows or MS-DOS program.","name": "APP_WRONG_OS"},{"file": 58,"line": 1292,"col": 4,"docs": " Cannot start more than one instance of the specified program.","name": "SINGLE_INSTANCE_APP"},{"file": 58,"line": 1294,"col": 4,"docs": " The specified program was written for an earlier version of Windows.","name": "RMODE_APP"},{"file": 58,"line": 1296,"col": 4,"docs": " One of the library files needed to run this application is damaged.","name": "INVALID_DLL"},{"file": 58,"line": 1298,"col": 4,"docs": " No application is associated with the specified file for this operation.","name": "NO_ASSOCIATION"},{"file": 58,"line": 1300,"col": 4,"docs": " An error occurred in sending the command to the application.","name": "DDE_FAIL"},{"file": 58,"line": 1302,"col": 4,"docs": " One of the library files needed to run this application cannot be found.","name": "DLL_NOT_FOUND"},{"file": 58,"line": 1304,"col": 4,"docs": " The current process has used all of its system allowance of handles for Window Manager objects.","name": "NO_MORE_USER_HANDLES"},{"file": 58,"line": 1306,"col": 4,"docs": " The message can be used only with synchronous operations.","name": "MESSAGE_SYNC_ONLY"},{"file": 58,"line": 1308,"col": 4,"docs": " The indicated source element has no media.","name": "SOURCE_ELEMENT_EMPTY"},{"file": 58,"line": 1310,"col": 4,"docs": " The indicated destination element already contains media.","name": "DESTINATION_ELEMENT_FULL"},{"file": 58,"line": 1312,"col": 4,"docs": " The indicated element does not exist.","name": "ILLEGAL_ELEMENT_ADDRESS"},{"file": 58,"line": 1314,"col": 4,"docs": " The indicated element is part of a magazine that is not present.","name": "MAGAZINE_NOT_PRESENT"},{"file": 58,"line": 1316,"col": 4,"docs": " The indicated device requires reinitialization due to hardware errors.","name": "DEVICE_REINITIALIZATION_NEEDED"},{"file": 58,"line": 1318,"col": 4,"docs": " The device has indicated that cleaning is required before further operations are attempted.","name": "DEVICE_REQUIRES_CLEANING"},{"file": 58,"line": 1320,"col": 4,"docs": " The device has indicated that its door is open.","name": "DEVICE_DOOR_OPEN"},{"file": 58,"line": 1322,"col": 4,"docs": " The device is not connected.","name": "DEVICE_NOT_CONNECTED"},{"file": 58,"line": 1324,"col": 4,"docs": " Element not found.","name": "NOT_FOUND"},{"file": 58,"line": 1326,"col": 4,"docs": " There was no match for the specified key in the index.","name": "NO_MATCH"},{"file": 58,"line": 1328,"col": 4,"docs": " The property set specified does not exist on the object.","name": "SET_NOT_FOUND"},{"file": 58,"line": 1330,"col": 4,"docs": " The point passed to GetMouseMovePoints is not in the buffer.","name": "POINT_NOT_FOUND"},{"file": 58,"line": 1332,"col": 4,"docs": " The tracking (workstation) service is not running.","name": "NO_TRACKING_SERVICE"},{"file": 58,"line": 1334,"col": 4,"docs": " The Volume ID could not be found.","name": "NO_VOLUME_ID"},{"file": 58,"line": 1336,"col": 4,"docs": " Unable to remove the file to be replaced.","name": "UNABLE_TO_REMOVE_REPLACED"},{"file": 58,"line": 1339,"col": 4,"docs": " Unable to move the replacement file to the file to be replaced. The file to be replaced has retained its original name.","name": "UNABLE_TO_MOVE_REPLACEMENT"},{"file": 58,"line": 1342,"col": 4,"docs": " Unable to move the replacement file to the file to be replaced. The file to be replaced has been renamed using the backup name.","name": "UNABLE_TO_MOVE_REPLACEMENT_2"},{"file": 58,"line": 1344,"col": 4,"docs": " The volume change journal is being deleted.","name": "JOURNAL_DELETE_IN_PROGRESS"},{"file": 58,"line": 1346,"col": 4,"docs": " The volume change journal is not active.","name": "JOURNAL_NOT_ACTIVE"},{"file": 58,"line": 1348,"col": 4,"docs": " A file was found, but it may not be the correct file.","name": "POTENTIAL_FILE_FOUND"},{"file": 58,"line": 1350,"col": 4,"docs": " The journal entry has been deleted from the journal.","name": "JOURNAL_ENTRY_DELETED"},{"file": 58,"line": 1352,"col": 4,"docs": " A system shutdown has already been scheduled.","name": "SHUTDOWN_IS_SCHEDULED"},{"file": 58,"line": 1354,"col": 4,"docs": " The system shutdown cannot be initiated because there are other users logged on to the computer.","name": "SHUTDOWN_USERS_LOGGED_ON"},{"file": 58,"line": 1356,"col": 4,"docs": " The specified device name is invalid.","name": "BAD_DEVICE"},{"file": 58,"line": 1358,"col": 4,"docs": " The device is not currently connected but it is a remembered connection.","name": "CONNECTION_UNAVAIL"},{"file": 58,"line": 1360,"col": 4,"docs": " The local device name has a remembered connection to another network resource.","name": "DEVICE_ALREADY_REMEMBERED"},{"file": 58,"line": 1363,"col": 4,"docs": " The network path was either typed incorrectly, does not exist, or the network provider is not currently available. Please try retyping the path or contact your network administrator.","name": "NO_NET_OR_BAD_PATH"},{"file": 58,"line": 1365,"col": 4,"docs": " The specified network provider name is invalid.","name": "BAD_PROVIDER"},{"file": 58,"line": 1367,"col": 4,"docs": " Unable to open the network connection profile.","name": "CANNOT_OPEN_PROFILE"},{"file": 58,"line": 1369,"col": 4,"docs": " The network connection profile is corrupted.","name": "BAD_PROFILE"},{"file": 58,"line": 1371,"col": 4,"docs": " Cannot enumerate a noncontainer.","name": "NOT_CONTAINER"},{"file": 58,"line": 1373,"col": 4,"docs": " An extended error has occurred.","name": "EXTENDED_ERROR"},{"file": 58,"line": 1375,"col": 4,"docs": " The format of the specified group name is invalid.","name": "INVALID_GROUPNAME"},{"file": 58,"line": 1377,"col": 4,"docs": " The format of the specified computer name is invalid.","name": "INVALID_COMPUTERNAME"},{"file": 58,"line": 1379,"col": 4,"docs": " The format of the specified event name is invalid.","name": "INVALID_EVENTNAME"},{"file": 58,"line": 1381,"col": 4,"docs": " The format of the specified domain name is invalid.","name": "INVALID_DOMAINNAME"},{"file": 58,"line": 1383,"col": 4,"docs": " The format of the specified service name is invalid.","name": "INVALID_SERVICENAME"},{"file": 58,"line": 1385,"col": 4,"docs": " The format of the specified network name is invalid.","name": "INVALID_NETNAME"},{"file": 58,"line": 1387,"col": 4,"docs": " The format of the specified share name is invalid.","name": "INVALID_SHARENAME"},{"file": 58,"line": 1389,"col": 4,"docs": " The format of the specified password is invalid.","name": "INVALID_PASSWORDNAME"},{"file": 58,"line": 1391,"col": 4,"docs": " The format of the specified message name is invalid.","name": "INVALID_MESSAGENAME"},{"file": 58,"line": 1393,"col": 4,"docs": " The format of the specified message destination is invalid.","name": "INVALID_MESSAGEDEST"},{"file": 58,"line": 1396,"col": 4,"docs": " Multiple connections to a server or shared resource by the same user, using more than one user name, are not allowed. Disconnect all previous connections to the server or shared resource and try again.","name": "SESSION_CREDENTIAL_CONFLICT"},{"file": 58,"line": 1398,"col": 4,"docs": " An attempt was made to establish a session to a network server, but there are already too many sessions established to that server.","name": "REMOTE_SESSION_LIMIT_EXCEEDED"},{"file": 58,"line": 1400,"col": 4,"docs": " The workgroup or domain name is already in use by another computer on the network.","name": "DUP_DOMAINNAME"},{"file": 58,"line": 1402,"col": 4,"docs": " The network is not present or not started.","name": "NO_NETWORK"},{"file": 58,"line": 1404,"col": 4,"docs": " The operation was canceled by the user.","name": "CANCELLED"},{"file": 58,"line": 1406,"col": 4,"docs": " The requested operation cannot be performed on a file with a user-mapped section open.","name": "USER_MAPPED_FILE"},{"file": 58,"line": 1408,"col": 4,"docs": " The remote computer refused the network connection.","name": "CONNECTION_REFUSED"},{"file": 58,"line": 1410,"col": 4,"docs": " The network connection was gracefully closed.","name": "GRACEFUL_DISCONNECT"},{"file": 58,"line": 1412,"col": 4,"docs": " The network transport endpoint already has an address associated with it.","name": "ADDRESS_ALREADY_ASSOCIATED"},{"file": 58,"line": 1414,"col": 4,"docs": " An address has not yet been associated with the network endpoint.","name": "ADDRESS_NOT_ASSOCIATED"},{"file": 58,"line": 1416,"col": 4,"docs": " An operation was attempted on a nonexistent network connection.","name": "CONNECTION_INVALID"},{"file": 58,"line": 1418,"col": 4,"docs": " An invalid operation was attempted on an active network connection.","name": "CONNECTION_ACTIVE"},{"file": 58,"line": 1421,"col": 4,"docs": " The network location cannot be reached. For information about network troubleshooting, see Windows Help.","name": "NETWORK_UNREACHABLE"},{"file": 58,"line": 1424,"col": 4,"docs": " The network location cannot be reached. For information about network troubleshooting, see Windows Help.","name": "HOST_UNREACHABLE"},{"file": 58,"line": 1427,"col": 4,"docs": " The network location cannot be reached. For information about network troubleshooting, see Windows Help.","name": "PROTOCOL_UNREACHABLE"},{"file": 58,"line": 1429,"col": 4,"docs": " No service is operating at the destination network endpoint on the remote system.","name": "PORT_UNREACHABLE"},{"file": 58,"line": 1431,"col": 4,"docs": " The request was aborted.","name": "REQUEST_ABORTED"},{"file": 58,"line": 1433,"col": 4,"docs": " The network connection was aborted by the local system.","name": "CONNECTION_ABORTED"},{"file": 58,"line": 1435,"col": 4,"docs": " The operation could not be completed. A retry should be performed.","name": "RETRY"},{"file": 58,"line": 1437,"col": 4,"docs": " A connection to the server could not be made because the limit on the number of concurrent connections for this account has been reached.","name": "CONNECTION_COUNT_LIMIT"},{"file": 58,"line": 1439,"col": 4,"docs": " Attempting to log in during an unauthorized time of day for this account.","name": "LOGIN_TIME_RESTRICTION"},{"file": 58,"line": 1441,"col": 4,"docs": " The account is not authorized to log in from this station.","name": "LOGIN_WKSTA_RESTRICTION"},{"file": 58,"line": 1443,"col": 4,"docs": " The network address could not be used for the operation requested.","name": "INCORRECT_ADDRESS"},{"file": 58,"line": 1445,"col": 4,"docs": " The service is already registered.","name": "ALREADY_REGISTERED"},{"file": 58,"line": 1447,"col": 4,"docs": " The specified service does not exist.","name": "SERVICE_NOT_FOUND"},{"file": 58,"line": 1449,"col": 4,"docs": " The operation being requested was not performed because the user has not been authenticated.","name": "NOT_AUTHENTICATED"},{"file": 58,"line": 1451,"col": 4,"docs": " The operation being requested was not performed because the user has not logged on to the network. The specified service does not exist.","name": "NOT_LOGGED_ON"},{"file": 58,"line": 1453,"col": 4,"docs": " Continue with work in progress.","name": "CONTINUE"},{"file": 58,"line": 1455,"col": 4,"docs": " An attempt was made to perform an initialization operation when initialization has already been completed.","name": "ALREADY_INITIALIZED"},{"file": 58,"line": 1457,"col": 4,"docs": " No more local devices.","name": "NO_MORE_DEVICES"},{"file": 58,"line": 1459,"col": 4,"docs": " The specified site does not exist.","name": "NO_SUCH_SITE"},{"file": 58,"line": 1461,"col": 4,"docs": " A domain controller with the specified name already exists.","name": "DOMAIN_CONTROLLER_EXISTS"},{"file": 58,"line": 1463,"col": 4,"docs": " This operation is supported only when you are connected to the server.","name": "ONLY_IF_CONNECTED"},{"file": 58,"line": 1465,"col": 4,"docs": " The group policy framework should call the extension even if there are no changes.","name": "OVERRIDE_NOCHANGES"},{"file": 58,"line": 1467,"col": 4,"docs": " The specified user does not have a valid profile.","name": "BAD_USER_PROFILE"},{"file": 58,"line": 1469,"col": 4,"docs": " This operation is not supported on a computer running Windows Server 2003 for Small Business Server.","name": "NOT_SUPPORTED_ON_SBS"},{"file": 58,"line": 1471,"col": 4,"docs": " The server machine is shutting down.","name": "SERVER_SHUTDOWN_IN_PROGRESS"},{"file": 58,"line": 1474,"col": 4,"docs": " The remote system is not available. For information about network troubleshooting, see Windows Help.","name": "HOST_DOWN"},{"file": 58,"line": 1476,"col": 4,"docs": " The security identifier provided is not from an account domain.","name": "NON_ACCOUNT_SID"},{"file": 58,"line": 1478,"col": 4,"docs": " The security identifier provided does not have a domain component.","name": "NON_DOMAIN_SID"},{"file": 58,"line": 1480,"col": 4,"docs": " AppHelp dialog canceled thus preventing the application from starting.","name": "APPHELP_BLOCK"},{"file": 58,"line": 1483,"col": 4,"docs": " This program is blocked by group policy. For more information, contact your system administrator.","name": "ACCESS_DISABLED_BY_POLICY"},{"file": 58,"line": 1486,"col": 4,"docs": " A program attempt to use an invalid register value. Normally caused by an uninitialized register. This error is Itanium specific.","name": "REG_NAT_CONSUMPTION"},{"file": 58,"line": 1488,"col": 4,"docs": " The share is currently offline or does not exist.","name": "CSCSHARE_OFFLINE"},{"file": 58,"line": 1491,"col": 4,"docs": " The Kerberos protocol encountered an error while validating the KDC certificate during smartcard logon. There is more information in the system event log.","name": "PKINIT_FAILURE"},{"file": 58,"line": 1493,"col": 4,"docs": " The Kerberos protocol encountered an error while attempting to utilize the smartcard subsystem.","name": "SMARTCARD_SUBSYSTEM_FAILURE"},{"file": 58,"line": 1495,"col": 4,"docs": " The system cannot contact a domain controller to service the authentication request. Please try again later.","name": "DOWNGRADE_DETECTED"},{"file": 58,"line": 1497,"col": 4,"docs": " The machine is locked and cannot be shut down without the force option.","name": "MACHINE_LOCKED"},{"file": 58,"line": 1499,"col": 4,"docs": " An application-defined callback gave invalid data when called.","name": "CALLBACK_SUPPLIED_INVALID_DATA"},{"file": 58,"line": 1501,"col": 4,"docs": " The group policy framework should call the extension in the synchronous foreground policy refresh.","name": "SYNC_FOREGROUND_REFRESH_REQUIRED"},{"file": 58,"line": 1503,"col": 4,"docs": " This driver has been blocked from loading.","name": "DRIVER_BLOCKED"},{"file": 58,"line": 1505,"col": 4,"docs": " A dynamic link library (DLL) referenced a module that was neither a DLL nor the process's executable image.","name": "INVALID_IMPORT_OF_NON_DLL"},{"file": 58,"line": 1507,"col": 4,"docs": " Windows cannot open this program since it has been disabled.","name": "ACCESS_DISABLED_WEBBLADE"},{"file": 58,"line": 1509,"col": 4,"docs": " Windows cannot open this program because the license enforcement system has been tampered with or become corrupted.","name": "ACCESS_DISABLED_WEBBLADE_TAMPER"},{"file": 58,"line": 1511,"col": 4,"docs": " A transaction recover failed.","name": "RECOVERY_FAILURE"},{"file": 58,"line": 1513,"col": 4,"docs": " The current thread has already been converted to a fiber.","name": "ALREADY_FIBER"},{"file": 58,"line": 1515,"col": 4,"docs": " The current thread has already been converted from a fiber.","name": "ALREADY_THREAD"},{"file": 58,"line": 1518,"col": 4,"docs": " The system detected an overrun of a stack-based buffer in this application. This overrun could potentially allow a malicious user to gain control of this application.","name": "STACK_BUFFER_OVERRUN"},{"file": 58,"line": 1520,"col": 4,"docs": " Data present in one of the parameters is more than the function can operate on.","name": "PARAMETER_QUOTA_EXCEEDED"},{"file": 58,"line": 1522,"col": 4,"docs": " An attempt to do an operation on a debug object failed because the object is in the process of being deleted.","name": "DEBUGGER_INACTIVE"},{"file": 58,"line": 1524,"col": 4,"docs": " An attempt to delay-load a .dll or get a function address in a delay-loaded .dll failed.","name": "DELAY_LOAD_FAILED"},{"file": 58,"line": 1527,"col": 4,"docs": " %1 is a 16-bit application. You do not have permissions to execute 16-bit applications. Check your permissions with your system administrator.","name": "VDM_DISALLOWED"},{"file": 58,"line": 1529,"col": 4,"docs": " Insufficient information exists to identify the cause of failure.","name": "UNIDENTIFIED_ERROR"},{"file": 58,"line": 1531,"col": 4,"docs": " The parameter passed to a C runtime function is incorrect.","name": "INVALID_CRUNTIME_PARAMETER"},{"file": 58,"line": 1533,"col": 4,"docs": " The operation occurred beyond the valid data length of the file.","name": "BEYOND_VDL"},{"file": 58,"line": 1539,"col": 4,"docs": " The service start failed since one or more services in the same process have an incompatible service SID type setting. A service with restricted service SID type can only coexist in the same process with other services with a restricted SID type. If the service SID type for this service was just configured, the hosting process must be restarted in order to start this service. On Windows Server 2003 and Windows XP, an unrestricted service cannot coexist in the same process with other services. The service with the unrestricted service SID type must be moved to an owned process in order to start this service.","name": "INCOMPATIBLE_SERVICE_SID_TYPE"},{"file": 58,"line": 1541,"col": 4,"docs": " The process hosting the driver for this device has been terminated.","name": "DRIVER_PROCESS_TERMINATED"},{"file": 58,"line": 1543,"col": 4,"docs": " An operation attempted to exceed an implementation-defined limit.","name": "IMPLEMENTATION_LIMIT"},{"file": 58,"line": 1545,"col": 4,"docs": " Either the target process, or the target thread's containing process, is a protected process.","name": "PROCESS_IS_PROTECTED"},{"file": 58,"line": 1547,"col": 4,"docs": " The service notification client is lagging too far behind the current state of services in the machine.","name": "SERVICE_NOTIFY_CLIENT_LAGGING"},{"file": 58,"line": 1551,"col": 4,"docs": " The requested file operation failed because the storage quota was exceeded. To free up disk space, move files to a different location or delete unnecessary files. For more information, contact your system administrator.","name": "DISK_QUOTA_EXCEEDED"},{"file": 58,"line": 1554,"col": 4,"docs": " The requested file operation failed because the storage policy blocks that type of file. For more information, contact your system administrator.","name": "CONTENT_BLOCKED"},{"file": 58,"line": 1557,"col": 4,"docs": " A privilege that the service requires to function properly does not exist in the service account configuration. You may use the Services Microsoft Management Console (MMC) snap-in (services.msc) and the Local Security Settings MMC snap-in (secpol.msc) to view the service configuration and the account configuration.","name": "INCOMPATIBLE_SERVICE_PRIVILEGE"},{"file": 58,"line": 1559,"col": 4,"docs": " A thread involved in this operation appears to be unresponsive.","name": "APP_HANG"},{"file": 58,"line": 1561,"col": 4,"docs": " Indicates a particular Security ID may not be assigned as the label of an object.","name": "INVALID_LABEL"},{"file": 58,"line": 1563,"col": 4,"docs": " Not all privileges or groups referenced are assigned to the caller.","name": "NOT_ALL_ASSIGNED"},{"file": 58,"line": 1565,"col": 4,"docs": " Some mapping between account names and security IDs was not done.","name": "SOME_NOT_MAPPED"},{"file": 58,"line": 1567,"col": 4,"docs": " No system quota limits are specifically set for this account.","name": "NO_QUOTAS_FOR_ACCOUNT"},{"file": 58,"line": 1569,"col": 4,"docs": " No encryption key is available. A well-known encryption key was returned.","name": "LOCAL_USER_SESSION_KEY"},{"file": 58,"line": 1572,"col": 4,"docs": " The password is too complex to be converted to a LAN Manager password. The LAN Manager password returned is a NULL string.","name": "NULL_LM_PASSWORD"},{"file": 58,"line": 1574,"col": 4,"docs": " The revision level is unknown.","name": "UNKNOWN_REVISION"},{"file": 58,"line": 1576,"col": 4,"docs": " Indicates two revision levels are incompatible.","name": "REVISION_MISMATCH"},{"file": 58,"line": 1578,"col": 4,"docs": " This security ID may not be assigned as the owner of this object.","name": "INVALID_OWNER"},{"file": 58,"line": 1580,"col": 4,"docs": " This security ID may not be assigned as the primary group of an object.","name": "INVALID_PRIMARY_GROUP"},{"file": 58,"line": 1582,"col": 4,"docs": " An attempt has been made to operate on an impersonation token by a thread that is not currently impersonating a client.","name": "NO_IMPERSONATION_TOKEN"},{"file": 58,"line": 1584,"col": 4,"docs": " The group may not be disabled.","name": "CANT_DISABLE_MANDATORY"},{"file": 58,"line": 1586,"col": 4,"docs": " There are currently no logon servers available to service the logon request.","name": "NO_LOGON_SERVERS"},{"file": 58,"line": 1588,"col": 4,"docs": " A specified logon session does not exist. It may already have been terminated.","name": "NO_SUCH_LOGON_SESSION"},{"file": 58,"line": 1590,"col": 4,"docs": " A specified privilege does not exist.","name": "NO_SUCH_PRIVILEGE"},{"file": 58,"line": 1592,"col": 4,"docs": " A required privilege is not held by the client.","name": "PRIVILEGE_NOT_HELD"},{"file": 58,"line": 1594,"col": 4,"docs": " The name provided is not a properly formed account name.","name": "INVALID_ACCOUNT_NAME"},{"file": 58,"line": 1596,"col": 4,"docs": " The specified account already exists.","name": "USER_EXISTS"},{"file": 58,"line": 1598,"col": 4,"docs": " The specified account does not exist.","name": "NO_SUCH_USER"},{"file": 58,"line": 1600,"col": 4,"docs": " The specified group already exists.","name": "GROUP_EXISTS"},{"file": 58,"line": 1602,"col": 4,"docs": " The specified group does not exist.","name": "NO_SUCH_GROUP"},{"file": 58,"line": 1604,"col": 4,"docs": " Either the specified user account is already a member of the specified group, or the specified group cannot be deleted because it contains a member.","name": "MEMBER_IN_GROUP"},{"file": 58,"line": 1606,"col": 4,"docs": " The specified user account is not a member of the specified group account.","name": "MEMBER_NOT_IN_GROUP"},{"file": 58,"line": 1608,"col": 4,"docs": " This operation is disallowed as it could result in an administration account being disabled, deleted or unable to log on.","name": "LAST_ADMIN"},{"file": 58,"line": 1610,"col": 4,"docs": " Unable to update the password. The value provided as the current password is incorrect.","name": "WRONG_PASSWORD"},{"file": 58,"line": 1612,"col": 4,"docs": " Unable to update the password. The value provided for the new password contains values that are not allowed in passwords.","name": "ILL_FORMED_PASSWORD"},{"file": 58,"line": 1614,"col": 4,"docs": " Unable to update the password. The value provided for the new password does not meet the length, complexity, or history requirements of the domain.","name": "PASSWORD_RESTRICTION"},{"file": 58,"line": 1616,"col": 4,"docs": " The user name or password is incorrect.","name": "LOGON_FAILURE"},{"file": 58,"line": 1619,"col": 4,"docs": " Account restrictions are preventing this user from signing in. For example: blank passwords aren't allowed, sign-in times are limited, or a policy restriction has been enforced.","name": "ACCOUNT_RESTRICTION"},{"file": 58,"line": 1621,"col": 4,"docs": " Your account has time restrictions that keep you from signing in right now.","name": "INVALID_LOGON_HOURS"},{"file": 58,"line": 1623,"col": 4,"docs": " This user isn't allowed to sign in to this computer.","name": "INVALID_WORKSTATION"},{"file": 58,"line": 1625,"col": 4,"docs": " The password for this account has expired.","name": "PASSWORD_EXPIRED"},{"file": 58,"line": 1627,"col": 4,"docs": " This user can't sign in because this account is currently disabled.","name": "ACCOUNT_DISABLED"},{"file": 58,"line": 1629,"col": 4,"docs": " No mapping between account names and security IDs was done.","name": "NONE_MAPPED"},{"file": 58,"line": 1631,"col": 4,"docs": " Too many local user identifiers (LUIDs) were requested at one time.","name": "TOO_MANY_LUIDS_REQUESTED"},{"file": 58,"line": 1633,"col": 4,"docs": " No more local user identifiers (LUIDs) are available.","name": "LUIDS_EXHAUSTED"},{"file": 58,"line": 1635,"col": 4,"docs": " The subauthority part of a security ID is invalid for this particular use.","name": "INVALID_SUB_AUTHORITY"},{"file": 58,"line": 1637,"col": 4,"docs": " The access control list (ACL) structure is invalid.","name": "INVALID_ACL"},{"file": 58,"line": 1639,"col": 4,"docs": " The security ID structure is invalid.","name": "INVALID_SID"},{"file": 58,"line": 1641,"col": 4,"docs": " The security descriptor structure is invalid.","name": "INVALID_SECURITY_DESCR"},{"file": 58,"line": 1643,"col": 4,"docs": " The inherited access control list (ACL) or access control entry (ACE) could not be built.","name": "BAD_INHERITANCE_ACL"},{"file": 58,"line": 1645,"col": 4,"docs": " The server is currently disabled.","name": "SERVER_DISABLED"},{"file": 58,"line": 1647,"col": 4,"docs": " The server is currently enabled.","name": "SERVER_NOT_DISABLED"},{"file": 58,"line": 1649,"col": 4,"docs": " The value provided was an invalid value for an identifier authority.","name": "INVALID_ID_AUTHORITY"},{"file": 58,"line": 1651,"col": 4,"docs": " No more memory is available for security information updates.","name": "ALLOTTED_SPACE_EXCEEDED"},{"file": 58,"line": 1653,"col": 4,"docs": " The specified attributes are invalid, or incompatible with the attributes for the group as a whole.","name": "INVALID_GROUP_ATTRIBUTES"},{"file": 58,"line": 1655,"col": 4,"docs": " Either a required impersonation level was not provided, or the provided impersonation level is invalid.","name": "BAD_IMPERSONATION_LEVEL"},{"file": 58,"line": 1657,"col": 4,"docs": " Cannot open an anonymous level security token.","name": "CANT_OPEN_ANONYMOUS"},{"file": 58,"line": 1659,"col": 4,"docs": " The validation information class requested was invalid.","name": "BAD_VALIDATION_CLASS"},{"file": 58,"line": 1661,"col": 4,"docs": " The type of the token is inappropriate for its attempted use.","name": "BAD_TOKEN_TYPE"},{"file": 58,"line": 1663,"col": 4,"docs": " Unable to perform a security operation on an object that has no associated security.","name": "NO_SECURITY_ON_OBJECT"},{"file": 58,"line": 1665,"col": 4,"docs": " Configuration information could not be read from the domain controller, either because the machine is unavailable, or access has been denied.","name": "CANT_ACCESS_DOMAIN_INFO"},{"file": 58,"line": 1667,"col": 4,"docs": " The security account manager (SAM) or local security authority (LSA) server was in the wrong state to perform the security operation.","name": "INVALID_SERVER_STATE"},{"file": 58,"line": 1669,"col": 4,"docs": " The domain was in the wrong state to perform the security operation.","name": "INVALID_DOMAIN_STATE"},{"file": 58,"line": 1671,"col": 4,"docs": " This operation is only allowed for the Primary Domain Controller of the domain.","name": "INVALID_DOMAIN_ROLE"},{"file": 58,"line": 1673,"col": 4,"docs": " The specified domain either does not exist or could not be contacted.","name": "NO_SUCH_DOMAIN"},{"file": 58,"line": 1675,"col": 4,"docs": " The specified domain already exists.","name": "DOMAIN_EXISTS"},{"file": 58,"line": 1677,"col": 4,"docs": " An attempt was made to exceed the limit on the number of domains per server.","name": "DOMAIN_LIMIT_EXCEEDED"},{"file": 58,"line": 1679,"col": 4,"docs": " Unable to complete the requested operation because of either a catastrophic media failure or a data structure corruption on the disk.","name": "INTERNAL_DB_CORRUPTION"},{"file": 58,"line": 1681,"col": 4,"docs": " An internal error occurred.","name": "INTERNAL_ERROR"},{"file": 58,"line": 1683,"col": 4,"docs": " Generic access types were contained in an access mask which should already be mapped to nongeneric types.","name": "GENERIC_NOT_MAPPED"},{"file": 58,"line": 1685,"col": 4,"docs": " A security descriptor is not in the right format (absolute or self-relative).","name": "BAD_DESCRIPTOR_FORMAT"},{"file": 58,"line": 1688,"col": 4,"docs": " The requested action is restricted for use by logon processes only. The calling process has not registered as a logon process.","name": "NOT_LOGON_PROCESS"},{"file": 58,"line": 1690,"col": 4,"docs": " Cannot start a new logon session with an ID that is already in use.","name": "LOGON_SESSION_EXISTS"},{"file": 58,"line": 1692,"col": 4,"docs": " A specified authentication package is unknown.","name": "NO_SUCH_PACKAGE"},{"file": 58,"line": 1694,"col": 4,"docs": " The logon session is not in a state that is consistent with the requested operation.","name": "BAD_LOGON_SESSION_STATE"},{"file": 58,"line": 1696,"col": 4,"docs": " The logon session ID is already in use.","name": "LOGON_SESSION_COLLISION"},{"file": 58,"line": 1698,"col": 4,"docs": " A logon request contained an invalid logon type value.","name": "INVALID_LOGON_TYPE"},{"file": 58,"line": 1700,"col": 4,"docs": " Unable to impersonate using a named pipe until data has been read from that pipe.","name": "CANNOT_IMPERSONATE"},{"file": 58,"line": 1702,"col": 4,"docs": " The transaction state of a registry subtree is incompatible with the requested operation.","name": "RXACT_INVALID_STATE"},{"file": 58,"line": 1704,"col": 4,"docs": " An internal security database corruption has been encountered.","name": "RXACT_COMMIT_FAILURE"},{"file": 58,"line": 1706,"col": 4,"docs": " Cannot perform this operation on built-in accounts.","name": "SPECIAL_ACCOUNT"},{"file": 58,"line": 1708,"col": 4,"docs": " Cannot perform this operation on this built-in special group.","name": "SPECIAL_GROUP"},{"file": 58,"line": 1710,"col": 4,"docs": " Cannot perform this operation on this built-in special user.","name": "SPECIAL_USER"},{"file": 58,"line": 1712,"col": 4,"docs": " The user cannot be removed from a group because the group is currently the user's primary group.","name": "MEMBERS_PRIMARY_GROUP"},{"file": 58,"line": 1714,"col": 4,"docs": " The token is already in use as a primary token.","name": "TOKEN_ALREADY_IN_USE"},{"file": 58,"line": 1716,"col": 4,"docs": " The specified local group does not exist.","name": "NO_SUCH_ALIAS"},{"file": 58,"line": 1718,"col": 4,"docs": " The specified account name is not a member of the group.","name": "MEMBER_NOT_IN_ALIAS"},{"file": 58,"line": 1720,"col": 4,"docs": " The specified account name is already a member of the group.","name": "MEMBER_IN_ALIAS"},{"file": 58,"line": 1722,"col": 4,"docs": " The specified local group already exists.","name": "ALIAS_EXISTS"},{"file": 58,"line": 1724,"col": 4,"docs": " Logon failure: the user has not been granted the requested logon type at this computer.","name": "LOGON_NOT_GRANTED"},{"file": 58,"line": 1726,"col": 4,"docs": " The maximum number of secrets that may be stored in a single system has been exceeded.","name": "TOO_MANY_SECRETS"},{"file": 58,"line": 1728,"col": 4,"docs": " The length of a secret exceeds the maximum length allowed.","name": "SECRET_TOO_LONG"},{"file": 58,"line": 1730,"col": 4,"docs": " The local security authority database contains an internal inconsistency.","name": "INTERNAL_DB_ERROR"},{"file": 58,"line": 1732,"col": 4,"docs": " During a logon attempt, the user's security context accumulated too many security IDs.","name": "TOO_MANY_CONTEXT_IDS"},{"file": 58,"line": 1734,"col": 4,"docs": " Logon failure: the user has not been granted the requested logon type at this computer.","name": "LOGON_TYPE_NOT_GRANTED"},{"file": 58,"line": 1736,"col": 4,"docs": " A cross-encrypted password is necessary to change a user password.","name": "NT_CROSS_ENCRYPTION_REQUIRED"},{"file": 58,"line": 1738,"col": 4,"docs": " A member could not be added to or removed from the local group because the member does not exist.","name": "NO_SUCH_MEMBER"},{"file": 58,"line": 1740,"col": 4,"docs": " A new member could not be added to a local group because the member has the wrong account type.","name": "INVALID_MEMBER"},{"file": 58,"line": 1742,"col": 4,"docs": " Too many security IDs have been specified.","name": "TOO_MANY_SIDS"},{"file": 58,"line": 1744,"col": 4,"docs": " A cross-encrypted password is necessary to change this user password.","name": "LM_CROSS_ENCRYPTION_REQUIRED"},{"file": 58,"line": 1746,"col": 4,"docs": " Indicates an ACL contains no inheritable components.","name": "NO_INHERITANCE"},{"file": 58,"line": 1748,"col": 4,"docs": " The file or directory is corrupted and unreadable.","name": "FILE_CORRUPT"},{"file": 58,"line": 1750,"col": 4,"docs": " The disk structure is corrupted and unreadable.","name": "DISK_CORRUPT"},{"file": 58,"line": 1752,"col": 4,"docs": " There is no user session key for the specified logon session.","name": "NO_USER_SESSION_KEY"},{"file": 58,"line": 1755,"col": 4,"docs": " The service being accessed is licensed for a particular number of connections. No more connections can be made to the service at this time because there are already as many connections as the service can accept.","name": "LICENSE_QUOTA_EXCEEDED"},{"file": 58,"line": 1757,"col": 4,"docs": " The target account name is incorrect.","name": "WRONG_TARGET_NAME"},{"file": 58,"line": 1759,"col": 4,"docs": " Mutual Authentication failed. The server's password is out of date at the domain controller.","name": "MUTUAL_AUTH_FAILED"},{"file": 58,"line": 1761,"col": 4,"docs": " There is a time and/or date difference between the client and server.","name": "TIME_SKEW"},{"file": 58,"line": 1763,"col": 4,"docs": " This operation cannot be performed on the current domain.","name": "CURRENT_DOMAIN_NOT_ALLOWED"},{"file": 58,"line": 1765,"col": 4,"docs": " Invalid window handle.","name": "INVALID_WINDOW_HANDLE"},{"file": 58,"line": 1767,"col": 4,"docs": " Invalid menu handle.","name": "INVALID_MENU_HANDLE"},{"file": 58,"line": 1769,"col": 4,"docs": " Invalid cursor handle.","name": "INVALID_CURSOR_HANDLE"},{"file": 58,"line": 1771,"col": 4,"docs": " Invalid accelerator table handle.","name": "INVALID_ACCEL_HANDLE"},{"file": 58,"line": 1773,"col": 4,"docs": " Invalid hook handle.","name": "INVALID_HOOK_HANDLE"},{"file": 58,"line": 1775,"col": 4,"docs": " Invalid handle to a multiple-window position structure.","name": "INVALID_DWP_HANDLE"},{"file": 58,"line": 1777,"col": 4,"docs": " Cannot create a top-level child window.","name": "TLW_WITH_WSCHILD"},{"file": 58,"line": 1779,"col": 4,"docs": " Cannot find window class.","name": "CANNOT_FIND_WND_CLASS"},{"file": 58,"line": 1781,"col": 4,"docs": " Invalid window; it belongs to other thread.","name": "WINDOW_OF_OTHER_THREAD"},{"file": 58,"line": 1783,"col": 4,"docs": " Hot key is already registered.","name": "HOTKEY_ALREADY_REGISTERED"},{"file": 58,"line": 1785,"col": 4,"docs": " Class already exists.","name": "CLASS_ALREADY_EXISTS"},{"file": 58,"line": 1787,"col": 4,"docs": " Class does not exist.","name": "CLASS_DOES_NOT_EXIST"},{"file": 58,"line": 1789,"col": 4,"docs": " Class still has open windows.","name": "CLASS_HAS_WINDOWS"},{"file": 58,"line": 1791,"col": 4,"docs": " Invalid index.","name": "INVALID_INDEX"},{"file": 58,"line": 1793,"col": 4,"docs": " Invalid icon handle.","name": "INVALID_ICON_HANDLE"},{"file": 58,"line": 1795,"col": 4,"docs": " Using private DIALOG window words.","name": "PRIVATE_DIALOG_INDEX"},{"file": 58,"line": 1797,"col": 4,"docs": " The list box identifier was not found.","name": "LISTBOX_ID_NOT_FOUND"},{"file": 58,"line": 1799,"col": 4,"docs": " No wildcards were found.","name": "NO_WILDCARD_CHARACTERS"},{"file": 58,"line": 1801,"col": 4,"docs": " Thread does not have a clipboard open.","name": "CLIPBOARD_NOT_OPEN"},{"file": 58,"line": 1803,"col": 4,"docs": " Hot key is not registered.","name": "HOTKEY_NOT_REGISTERED"},{"file": 58,"line": 1805,"col": 4,"docs": " The window is not a valid dialog window.","name": "WINDOW_NOT_DIALOG"},{"file": 58,"line": 1807,"col": 4,"docs": " Control ID not found.","name": "CONTROL_ID_NOT_FOUND"},{"file": 58,"line": 1809,"col": 4,"docs": " Invalid message for a combo box because it does not have an edit control.","name": "INVALID_COMBOBOX_MESSAGE"},{"file": 58,"line": 1811,"col": 4,"docs": " The window is not a combo box.","name": "WINDOW_NOT_COMBOBOX"},{"file": 58,"line": 1813,"col": 4,"docs": " Height must be less than 256.","name": "INVALID_EDIT_HEIGHT"},{"file": 58,"line": 1815,"col": 4,"docs": " Invalid device context (DC) handle.","name": "DC_NOT_FOUND"},{"file": 58,"line": 1817,"col": 4,"docs": " Invalid hook procedure type.","name": "INVALID_HOOK_FILTER"},{"file": 58,"line": 1819,"col": 4,"docs": " Invalid hook procedure.","name": "INVALID_FILTER_PROC"},{"file": 58,"line": 1821,"col": 4,"docs": " Cannot set nonlocal hook without a module handle.","name": "HOOK_NEEDS_HMOD"},{"file": 58,"line": 1823,"col": 4,"docs": " This hook procedure can only be set globally.","name": "GLOBAL_ONLY_HOOK"},{"file": 58,"line": 1825,"col": 4,"docs": " The journal hook procedure is already installed.","name": "JOURNAL_HOOK_SET"},{"file": 58,"line": 1827,"col": 4,"docs": " The hook procedure is not installed.","name": "HOOK_NOT_INSTALLED"},{"file": 58,"line": 1829,"col": 4,"docs": " Invalid message for single-selection list box.","name": "INVALID_LB_MESSAGE"},{"file": 58,"line": 1831,"col": 4,"docs": " LB_SETCOUNT sent to non-lazy list box.","name": "SETCOUNT_ON_BAD_LB"},{"file": 58,"line": 1833,"col": 4,"docs": " This list box does not support tab stops.","name": "LB_WITHOUT_TABSTOPS"},{"file": 58,"line": 1835,"col": 4,"docs": " Cannot destroy object created by another thread.","name": "DESTROY_OBJECT_OF_OTHER_THREAD"},{"file": 58,"line": 1837,"col": 4,"docs": " Child windows cannot have menus.","name": "CHILD_WINDOW_MENU"},{"file": 58,"line": 1839,"col": 4,"docs": " The window does not have a system menu.","name": "NO_SYSTEM_MENU"},{"file": 58,"line": 1841,"col": 4,"docs": " Invalid message box style.","name": "INVALID_MSGBOX_STYLE"},{"file": 58,"line": 1843,"col": 4,"docs": " Invalid system-wide (SPI_*) parameter.","name": "INVALID_SPI_VALUE"},{"file": 58,"line": 1845,"col": 4,"docs": " Screen already locked.","name": "SCREEN_ALREADY_LOCKED"},{"file": 58,"line": 1847,"col": 4,"docs": " All handles to windows in a multiple-window position structure must have the same parent.","name": "HWNDS_HAVE_DIFF_PARENT"},{"file": 58,"line": 1849,"col": 4,"docs": " The window is not a child window.","name": "NOT_CHILD_WINDOW"},{"file": 58,"line": 1851,"col": 4,"docs": " Invalid GW_* command.","name": "INVALID_GW_COMMAND"},{"file": 58,"line": 1853,"col": 4,"docs": " Invalid thread identifier.","name": "INVALID_THREAD_ID"},{"file": 58,"line": 1855,"col": 4,"docs": " Cannot process a message from a window that is not a multiple document interface (MDI) window.","name": "NON_MDICHILD_WINDOW"},{"file": 58,"line": 1857,"col": 4,"docs": " Popup menu already active.","name": "POPUP_ALREADY_ACTIVE"},{"file": 58,"line": 1859,"col": 4,"docs": " The window does not have scroll bars.","name": "NO_SCROLLBARS"},{"file": 58,"line": 1861,"col": 4,"docs": " Scroll bar range cannot be greater than MAXLONG.","name": "INVALID_SCROLLBAR_RANGE"},{"file": 58,"line": 1863,"col": 4,"docs": " Cannot show or remove the window in the way specified.","name": "INVALID_SHOWWIN_COMMAND"},{"file": 58,"line": 1865,"col": 4,"docs": " Insufficient system resources exist to complete the requested service.","name": "NO_SYSTEM_RESOURCES"},{"file": 58,"line": 1867,"col": 4,"docs": " Insufficient system resources exist to complete the requested service.","name": "NONPAGED_SYSTEM_RESOURCES"},{"file": 58,"line": 1869,"col": 4,"docs": " Insufficient system resources exist to complete the requested service.","name": "PAGED_SYSTEM_RESOURCES"},{"file": 58,"line": 1871,"col": 4,"docs": " Insufficient quota to complete the requested service.","name": "WORKING_SET_QUOTA"},{"file": 58,"line": 1873,"col": 4,"docs": " Insufficient quota to complete the requested service.","name": "PAGEFILE_QUOTA"},{"file": 58,"line": 1875,"col": 4,"docs": " The paging file is too small for this operation to complete.","name": "COMMITMENT_LIMIT"},{"file": 58,"line": 1877,"col": 4,"docs": " A menu item was not found.","name": "MENU_ITEM_NOT_FOUND"},{"file": 58,"line": 1879,"col": 4,"docs": " Invalid keyboard layout handle.","name": "INVALID_KEYBOARD_HANDLE"},{"file": 58,"line": 1881,"col": 4,"docs": " Hook type not allowed.","name": "HOOK_TYPE_NOT_ALLOWED"},{"file": 58,"line": 1883,"col": 4,"docs": " This operation requires an interactive window station.","name": "REQUIRES_INTERACTIVE_WINDOWSTATION"},{"file": 58,"line": 1885,"col": 4,"docs": " This operation returned because the timeout period expired.","name": "TIMEOUT"},{"file": 58,"line": 1887,"col": 4,"docs": " Invalid monitor handle.","name": "INVALID_MONITOR_HANDLE"},{"file": 58,"line": 1889,"col": 4,"docs": " Incorrect size argument.","name": "INCORRECT_SIZE"},{"file": 58,"line": 1891,"col": 4,"docs": " The symbolic link cannot be followed because its type is disabled.","name": "SYMLINK_CLASS_DISABLED"},{"file": 58,"line": 1893,"col": 4,"docs": " This application does not support the current operation on symbolic links.","name": "SYMLINK_NOT_SUPPORTED"},{"file": 58,"line": 1895,"col": 4,"docs": " Windows was unable to parse the requested XML data.","name": "XML_PARSE_ERROR"},{"file": 58,"line": 1897,"col": 4,"docs": " An error was encountered while processing an XML digital signature.","name": "XMLDSIG_ERROR"},{"file": 58,"line": 1899,"col": 4,"docs": " This application must be restarted.","name": "RESTART_APPLICATION"},{"file": 58,"line": 1901,"col": 4,"docs": " The caller made the connection request in the wrong routing compartment.","name": "WRONG_COMPARTMENT"},{"file": 58,"line": 1903,"col": 4,"docs": " There was an AuthIP failure when attempting to connect to the remote host.","name": "AUTHIP_FAILURE"},{"file": 58,"line": 1905,"col": 4,"docs": " Insufficient NVRAM resources exist to complete the requested service. A reboot might be required.","name": "NO_NVRAM_RESOURCES"},{"file": 58,"line": 1907,"col": 4,"docs": " Unable to finish the requested operation because the specified process is not a GUI process.","name": "NOT_GUI_PROCESS"},{"file": 58,"line": 1909,"col": 4,"docs": " The event log file is corrupted.","name": "EVENTLOG_FILE_CORRUPT"},{"file": 58,"line": 1911,"col": 4,"docs": " No event log file could be opened, so the event logging service did not start.","name": "EVENTLOG_CANT_START"},{"file": 58,"line": 1913,"col": 4,"docs": " The event log file is full.","name": "LOG_FILE_FULL"},{"file": 58,"line": 1915,"col": 4,"docs": " The event log file has changed between read operations.","name": "EVENTLOG_FILE_CHANGED"},{"file": 58,"line": 1917,"col": 4,"docs": " The specified task name is invalid.","name": "INVALID_TASK_NAME"},{"file": 58,"line": 1919,"col": 4,"docs": " The specified task index is invalid.","name": "INVALID_TASK_INDEX"},{"file": 58,"line": 1921,"col": 4,"docs": " The specified thread is already joining a task.","name": "THREAD_ALREADY_IN_TASK"},{"file": 58,"line": 1924,"col": 4,"docs": " The Windows Installer Service could not be accessed. This can occur if the Windows Installer is not correctly installed. Contact your support personnel for assistance.","name": "INSTALL_SERVICE_FAILURE"},{"file": 58,"line": 1926,"col": 4,"docs": " User cancelled installation.","name": "INSTALL_USEREXIT"},{"file": 58,"line": 1928,"col": 4,"docs": " Fatal error during installation.","name": "INSTALL_FAILURE"},{"file": 58,"line": 1930,"col": 4,"docs": " Installation suspended, incomplete.","name": "INSTALL_SUSPEND"},{"file": 58,"line": 1932,"col": 4,"docs": " This action is only valid for products that are currently installed.","name": "UNKNOWN_PRODUCT"},{"file": 58,"line": 1934,"col": 4,"docs": " Feature ID not registered.","name": "UNKNOWN_FEATURE"},{"file": 58,"line": 1936,"col": 4,"docs": " Component ID not registered.","name": "UNKNOWN_COMPONENT"},{"file": 58,"line": 1938,"col": 4,"docs": " Unknown property.","name": "UNKNOWN_PROPERTY"},{"file": 58,"line": 1940,"col": 4,"docs": " Handle is in an invalid state.","name": "INVALID_HANDLE_STATE"},{"file": 58,"line": 1942,"col": 4,"docs": " The configuration data for this product is corrupt. Contact your support personnel.","name": "BAD_CONFIGURATION"},{"file": 58,"line": 1944,"col": 4,"docs": " Component qualifier not present.","name": "INDEX_ABSENT"},{"file": 58,"line": 1947,"col": 4,"docs": " The installation source for this product is not available. Verify that the source exists and that you can access it.","name": "INSTALL_SOURCE_ABSENT"},{"file": 58,"line": 1950,"col": 4,"docs": " This installation package cannot be installed by the Windows Installer service. You must install a Windows service pack that contains a newer version of the Windows Installer service.","name": "INSTALL_PACKAGE_VERSION"},{"file": 58,"line": 1952,"col": 4,"docs": " Product is uninstalled.","name": "PRODUCT_UNINSTALLED"},{"file": 58,"line": 1954,"col": 4,"docs": " SQL query syntax invalid or unsupported.","name": "BAD_QUERY_SYNTAX"},{"file": 58,"line": 1956,"col": 4,"docs": " Record field does not exist.","name": "INVALID_FIELD"},{"file": 58,"line": 1958,"col": 4,"docs": " The device has been removed.","name": "DEVICE_REMOVED"},{"file": 58,"line": 1961,"col": 4,"docs": " Another installation is already in progress. Complete that installation before proceeding with this install.","name": "INSTALL_ALREADY_RUNNING"},{"file": 58,"line": 1964,"col": 4,"docs": " This installation package could not be opened. Verify that the package exists and that you can access it, or contact the application vendor to verify that this is a valid Windows Installer package.","name": "INSTALL_PACKAGE_OPEN_FAILED"},{"file": 58,"line": 1967,"col": 4,"docs": " This installation package could not be opened. Contact the application vendor to verify that this is a valid Windows Installer package.","name": "INSTALL_PACKAGE_INVALID"},{"file": 58,"line": 1969,"col": 4,"docs": " There was an error starting the Windows Installer service user interface. Contact your support personnel.","name": "INSTALL_UI_FAILURE"},{"file": 58,"line": 1972,"col": 4,"docs": " Error opening installation log file. Verify that the specified log file location exists and that you can write to it.","name": "INSTALL_LOG_FAILURE"},{"file": 58,"line": 1974,"col": 4,"docs": " The language of this installation package is not supported by your system.","name": "INSTALL_LANGUAGE_UNSUPPORTED"},{"file": 58,"line": 1976,"col": 4,"docs": " Error applying transforms. Verify that the specified transform paths are valid.","name": "INSTALL_TRANSFORM_FAILURE"},{"file": 58,"line": 1978,"col": 4,"docs": " This installation is forbidden by system policy. Contact your system administrator.","name": "INSTALL_PACKAGE_REJECTED"},{"file": 58,"line": 1980,"col": 4,"docs": " Function could not be executed.","name": "FUNCTION_NOT_CALLED"},{"file": 58,"line": 1982,"col": 4,"docs": " Function failed during execution.","name": "FUNCTION_FAILED"},{"file": 58,"line": 1984,"col": 4,"docs": " Invalid or unknown table specified.","name": "INVALID_TABLE"},{"file": 58,"line": 1986,"col": 4,"docs": " Data supplied is of wrong type.","name": "DATATYPE_MISMATCH"},{"file": 58,"line": 1988,"col": 4,"docs": " Data of this type is not supported.","name": "UNSUPPORTED_TYPE"},{"file": 58,"line": 1990,"col": 4,"docs": " The Windows Installer service failed to start. Contact your support personnel.","name": "CREATE_FAILED"},{"file": 58,"line": 1993,"col": 4,"docs": " The Temp folder is on a drive that is full or is inaccessible. Free up space on the drive or verify that you have write permission on the Temp folder.","name": "INSTALL_TEMP_UNWRITABLE"},{"file": 58,"line": 1995,"col": 4,"docs": " This installation package is not supported by this processor type. Contact your product vendor.","name": "INSTALL_PLATFORM_UNSUPPORTED"},{"file": 58,"line": 1997,"col": 4,"docs": " Component not used on this computer.","name": "INSTALL_NOTUSED"},{"file": 58,"line": 2000,"col": 4,"docs": " This update package could not be opened. Verify that the update package exists and that you can access it, or contact the application vendor to verify that this is a valid Windows Installer update package.","name": "PATCH_PACKAGE_OPEN_FAILED"},{"file": 58,"line": 2003,"col": 4,"docs": " This update package could not be opened. Contact the application vendor to verify that this is a valid Windows Installer update package.","name": "PATCH_PACKAGE_INVALID"},{"file": 58,"line": 2006,"col": 4,"docs": " This update package cannot be processed by the Windows Installer service. You must install a Windows service pack that contains a newer version of the Windows Installer service.","name": "PATCH_PACKAGE_UNSUPPORTED"},{"file": 58,"line": 2009,"col": 4,"docs": " Another version of this product is already installed. Installation of this version cannot continue. To configure or remove the existing version of this product, use Add/Remove Programs on the Control Panel.","name": "PRODUCT_VERSION"},{"file": 58,"line": 2011,"col": 4,"docs": " Invalid command line argument. Consult the Windows Installer SDK for detailed command line help.","name": "INVALID_COMMAND_LINE"},{"file": 58,"line": 2014,"col": 4,"docs": " Only administrators have permission to add, remove, or configure server software during a Terminal services remote session. If you want to install or configure software on the server, contact your network administrator.","name": "INSTALL_REMOTE_DISALLOWED"},{"file": 58,"line": 2017,"col": 4,"docs": " The requested operation completed successfully. The system will be restarted so the changes can take effect.","name": "SUCCESS_REBOOT_INITIATED"},{"file": 58,"line": 2020,"col": 4,"docs": " The upgrade cannot be installed by the Windows Installer service because the program to be upgraded may be missing, or the upgrade may update a different version of the program. Verify that the program to be upgraded exists on your computer and that you have the correct upgrade.","name": "PATCH_TARGET_NOT_FOUND"},{"file": 58,"line": 2022,"col": 4,"docs": " The update package is not permitted by software restriction policy.","name": "PATCH_PACKAGE_REJECTED"},{"file": 58,"line": 2024,"col": 4,"docs": " One or more customizations are not permitted by software restriction policy.","name": "INSTALL_TRANSFORM_REJECTED"},{"file": 58,"line": 2026,"col": 4,"docs": " The Windows Installer does not permit installation from a Remote Desktop Connection.","name": "INSTALL_REMOTE_PROHIBITED"},{"file": 58,"line": 2028,"col": 4,"docs": " Uninstallation of the update package is not supported.","name": "PATCH_REMOVAL_UNSUPPORTED"},{"file": 58,"line": 2030,"col": 4,"docs": " The update is not applied to this product.","name": "UNKNOWN_PATCH"},{"file": 58,"line": 2032,"col": 4,"docs": " No valid sequence could be found for the set of updates.","name": "PATCH_NO_SEQUENCE"},{"file": 58,"line": 2034,"col": 4,"docs": " Update removal was disallowed by policy.","name": "PATCH_REMOVAL_DISALLOWED"},{"file": 58,"line": 2036,"col": 4,"docs": " The XML update data is invalid.","name": "INVALID_PATCH_XML"},{"file": 58,"line": 2039,"col": 4,"docs": " Windows Installer does not permit updating of managed advertised products. At least one feature of the product must be installed before applying the update.","name": "PATCH_MANAGED_ADVERTISED_PRODUCT"},{"file": 58,"line": 2042,"col": 4,"docs": " The Windows Installer service is not accessible in Safe Mode. Please try again when your computer is not in Safe Mode or you can use System Restore to return your machine to a previous good state.","name": "INSTALL_SERVICE_SAFEBOOT"},{"file": 58,"line": 2045,"col": 4,"docs": " A fail fast exception occurred. Exception handlers will not be invoked and the process will be terminated immediately.","name": "FAIL_FAST_EXCEPTION"},{"file": 58,"line": 2047,"col": 4,"docs": " The app that you are trying to run is not supported on this version of Windows.","name": "INSTALL_REJECTED"},{"file": 58,"line": 2049,"col": 4,"docs": " The string binding is invalid.","name": "RPC_S_INVALID_STRING_BINDING"},{"file": 58,"line": 2051,"col": 4,"docs": " The binding handle is not the correct type.","name": "RPC_S_WRONG_KIND_OF_BINDING"},{"file": 58,"line": 2053,"col": 4,"docs": " The binding handle is invalid.","name": "RPC_S_INVALID_BINDING"},{"file": 58,"line": 2055,"col": 4,"docs": " The RPC protocol sequence is not supported.","name": "RPC_S_PROTSEQ_NOT_SUPPORTED"},{"file": 58,"line": 2057,"col": 4,"docs": " The RPC protocol sequence is invalid.","name": "RPC_S_INVALID_RPC_PROTSEQ"},{"file": 58,"line": 2059,"col": 4,"docs": " The string universal unique identifier (UUID) is invalid.","name": "RPC_S_INVALID_STRING_UUID"},{"file": 58,"line": 2061,"col": 4,"docs": " The endpoint format is invalid.","name": "RPC_S_INVALID_ENDPOINT_FORMAT"},{"file": 58,"line": 2063,"col": 4,"docs": " The network address is invalid.","name": "RPC_S_INVALID_NET_ADDR"},{"file": 58,"line": 2065,"col": 4,"docs": " No endpoint was found.","name": "RPC_S_NO_ENDPOINT_FOUND"},{"file": 58,"line": 2067,"col": 4,"docs": " The timeout value is invalid.","name": "RPC_S_INVALID_TIMEOUT"},{"file": 58,"line": 2069,"col": 4,"docs": " The object universal unique identifier (UUID) was not found.","name": "RPC_S_OBJECT_NOT_FOUND"},{"file": 58,"line": 2071,"col": 4,"docs": " The object universal unique identifier (UUID) has already been registered.","name": "RPC_S_ALREADY_REGISTERED"},{"file": 58,"line": 2073,"col": 4,"docs": " The type universal unique identifier (UUID) has already been registered.","name": "RPC_S_TYPE_ALREADY_REGISTERED"},{"file": 58,"line": 2075,"col": 4,"docs": " The RPC server is already listening.","name": "RPC_S_ALREADY_LISTENING"},{"file": 58,"line": 2077,"col": 4,"docs": " No protocol sequences have been registered.","name": "RPC_S_NO_PROTSEQS_REGISTERED"},{"file": 58,"line": 2079,"col": 4,"docs": " The RPC server is not listening.","name": "RPC_S_NOT_LISTENING"},{"file": 58,"line": 2081,"col": 4,"docs": " The manager type is unknown.","name": "RPC_S_UNKNOWN_MGR_TYPE"},{"file": 58,"line": 2083,"col": 4,"docs": " The interface is unknown.","name": "RPC_S_UNKNOWN_IF"},{"file": 58,"line": 2085,"col": 4,"docs": " There are no bindings.","name": "RPC_S_NO_BINDINGS"},{"file": 58,"line": 2087,"col": 4,"docs": " There are no protocol sequences.","name": "RPC_S_NO_PROTSEQS"},{"file": 58,"line": 2089,"col": 4,"docs": " The endpoint cannot be created.","name": "RPC_S_CANT_CREATE_ENDPOINT"},{"file": 58,"line": 2091,"col": 4,"docs": " Not enough resources are available to complete this operation.","name": "RPC_S_OUT_OF_RESOURCES"},{"file": 58,"line": 2093,"col": 4,"docs": " The RPC server is unavailable.","name": "RPC_S_SERVER_UNAVAILABLE"},{"file": 58,"line": 2095,"col": 4,"docs": " The RPC server is too busy to complete this operation.","name": "RPC_S_SERVER_TOO_BUSY"},{"file": 58,"line": 2097,"col": 4,"docs": " The network options are invalid.","name": "RPC_S_INVALID_NETWORK_OPTIONS"},{"file": 58,"line": 2099,"col": 4,"docs": " There are no remote procedure calls active on this thread.","name": "RPC_S_NO_CALL_ACTIVE"},{"file": 58,"line": 2101,"col": 4,"docs": " The remote procedure call failed.","name": "RPC_S_CALL_FAILED"},{"file": 58,"line": 2103,"col": 4,"docs": " The remote procedure call failed and did not execute.","name": "RPC_S_CALL_FAILED_DNE"},{"file": 58,"line": 2105,"col": 4,"docs": " A remote procedure call (RPC) protocol error occurred.","name": "RPC_S_PROTOCOL_ERROR"},{"file": 58,"line": 2107,"col": 4,"docs": " Access to the HTTP proxy is denied.","name": "RPC_S_PROXY_ACCESS_DENIED"},{"file": 58,"line": 2109,"col": 4,"docs": " The transfer syntax is not supported by the RPC server.","name": "RPC_S_UNSUPPORTED_TRANS_SYN"},{"file": 58,"line": 2111,"col": 4,"docs": " The universal unique identifier (UUID) type is not supported.","name": "RPC_S_UNSUPPORTED_TYPE"},{"file": 58,"line": 2113,"col": 4,"docs": " The tag is invalid.","name": "RPC_S_INVALID_TAG"},{"file": 58,"line": 2115,"col": 4,"docs": " The array bounds are invalid.","name": "RPC_S_INVALID_BOUND"},{"file": 58,"line": 2117,"col": 4,"docs": " The binding does not contain an entry name.","name": "RPC_S_NO_ENTRY_NAME"},{"file": 58,"line": 2119,"col": 4,"docs": " The name syntax is invalid.","name": "RPC_S_INVALID_NAME_SYNTAX"},{"file": 58,"line": 2121,"col": 4,"docs": " The name syntax is not supported.","name": "RPC_S_UNSUPPORTED_NAME_SYNTAX"},{"file": 58,"line": 2123,"col": 4,"docs": " No network address is available to use to construct a universal unique identifier (UUID).","name": "RPC_S_UUID_NO_ADDRESS"},{"file": 58,"line": 2125,"col": 4,"docs": " The endpoint is a duplicate.","name": "RPC_S_DUPLICATE_ENDPOINT"},{"file": 58,"line": 2127,"col": 4,"docs": " The authentication type is unknown.","name": "RPC_S_UNKNOWN_AUTHN_TYPE"},{"file": 58,"line": 2129,"col": 4,"docs": " The maximum number of calls is too small.","name": "RPC_S_MAX_CALLS_TOO_SMALL"},{"file": 58,"line": 2131,"col": 4,"docs": " The string is too long.","name": "RPC_S_STRING_TOO_LONG"},{"file": 58,"line": 2133,"col": 4,"docs": " The RPC protocol sequence was not found.","name": "RPC_S_PROTSEQ_NOT_FOUND"},{"file": 58,"line": 2135,"col": 4,"docs": " The procedure number is out of range.","name": "RPC_S_PROCNUM_OUT_OF_RANGE"},{"file": 58,"line": 2137,"col": 4,"docs": " The binding does not contain any authentication information.","name": "RPC_S_BINDING_HAS_NO_AUTH"},{"file": 58,"line": 2139,"col": 4,"docs": " The authentication service is unknown.","name": "RPC_S_UNKNOWN_AUTHN_SERVICE"},{"file": 58,"line": 2141,"col": 4,"docs": " The authentication level is unknown.","name": "RPC_S_UNKNOWN_AUTHN_LEVEL"},{"file": 58,"line": 2143,"col": 4,"docs": " The security context is invalid.","name": "RPC_S_INVALID_AUTH_IDENTITY"},{"file": 58,"line": 2145,"col": 4,"docs": " The authorization service is unknown.","name": "RPC_S_UNKNOWN_AUTHZ_SERVICE"},{"file": 58,"line": 2147,"col": 4,"docs": " The entry is invalid.","name": "EPT_S_INVALID_ENTRY"},{"file": 58,"line": 2149,"col": 4,"docs": " The server endpoint cannot perform the operation.","name": "EPT_S_CANT_PERFORM_OP"},{"file": 58,"line": 2151,"col": 4,"docs": " There are no more endpoints available from the endpoint mapper.","name": "EPT_S_NOT_REGISTERED"},{"file": 58,"line": 2153,"col": 4,"docs": " No interfaces have been exported.","name": "RPC_S_NOTHING_TO_EXPORT"},{"file": 58,"line": 2155,"col": 4,"docs": " The entry name is incomplete.","name": "RPC_S_INCOMPLETE_NAME"},{"file": 58,"line": 2157,"col": 4,"docs": " The version option is invalid.","name": "RPC_S_INVALID_VERS_OPTION"},{"file": 58,"line": 2159,"col": 4,"docs": " There are no more members.","name": "RPC_S_NO_MORE_MEMBERS"},{"file": 58,"line": 2161,"col": 4,"docs": " There is nothing to unexport.","name": "RPC_S_NOT_ALL_OBJS_UNEXPORTED"},{"file": 58,"line": 2163,"col": 4,"docs": " The interface was not found.","name": "RPC_S_INTERFACE_NOT_FOUND"},{"file": 58,"line": 2165,"col": 4,"docs": " The entry already exists.","name": "RPC_S_ENTRY_ALREADY_EXISTS"},{"file": 58,"line": 2167,"col": 4,"docs": " The entry is not found.","name": "RPC_S_ENTRY_NOT_FOUND"},{"file": 58,"line": 2169,"col": 4,"docs": " The name service is unavailable.","name": "RPC_S_NAME_SERVICE_UNAVAILABLE"},{"file": 58,"line": 2171,"col": 4,"docs": " The network address family is invalid.","name": "RPC_S_INVALID_NAF_ID"},{"file": 58,"line": 2173,"col": 4,"docs": " The requested operation is not supported.","name": "RPC_S_CANNOT_SUPPORT"},{"file": 58,"line": 2175,"col": 4,"docs": " No security context is available to allow impersonation.","name": "RPC_S_NO_CONTEXT_AVAILABLE"},{"file": 58,"line": 2177,"col": 4,"docs": " An internal error occurred in a remote procedure call (RPC).","name": "RPC_S_INTERNAL_ERROR"},{"file": 58,"line": 2179,"col": 4,"docs": " The RPC server attempted an integer division by zero.","name": "RPC_S_ZERO_DIVIDE"},{"file": 58,"line": 2181,"col": 4,"docs": " An addressing error occurred in the RPC server.","name": "RPC_S_ADDRESS_ERROR"},{"file": 58,"line": 2183,"col": 4,"docs": " A floating-point operation at the RPC server caused a division by zero.","name": "RPC_S_FP_DIV_ZERO"},{"file": 58,"line": 2185,"col": 4,"docs": " A floating-point underflow occurred at the RPC server.","name": "RPC_S_FP_UNDERFLOW"},{"file": 58,"line": 2187,"col": 4,"docs": " A floating-point overflow occurred at the RPC server.","name": "RPC_S_FP_OVERFLOW"},{"file": 58,"line": 2189,"col": 4,"docs": " The list of RPC servers available for the binding of auto handles has been exhausted.","name": "RPC_X_NO_MORE_ENTRIES"},{"file": 58,"line": 2191,"col": 4,"docs": " Unable to open the character translation table file.","name": "RPC_X_SS_CHAR_TRANS_OPEN_FAIL"},{"file": 58,"line": 2193,"col": 4,"docs": " The file containing the character translation table has fewer than 512 bytes.","name": "RPC_X_SS_CHAR_TRANS_SHORT_FILE"},{"file": 58,"line": 2195,"col": 4,"docs": " A null context handle was passed from the client to the host during a remote procedure call.","name": "RPC_X_SS_IN_NULL_CONTEXT"},{"file": 58,"line": 2197,"col": 4,"docs": " The context handle changed during a remote procedure call.","name": "RPC_X_SS_CONTEXT_DAMAGED"},{"file": 58,"line": 2199,"col": 4,"docs": " The binding handles passed to a remote procedure call do not match.","name": "RPC_X_SS_HANDLES_MISMATCH"},{"file": 58,"line": 2201,"col": 4,"docs": " The stub is unable to get the remote procedure call handle.","name": "RPC_X_SS_CANNOT_GET_CALL_HANDLE"},{"file": 58,"line": 2203,"col": 4,"docs": " A null reference pointer was passed to the stub.","name": "RPC_X_NULL_REF_POINTER"},{"file": 58,"line": 2205,"col": 4,"docs": " The enumeration value is out of range.","name": "RPC_X_ENUM_VALUE_OUT_OF_RANGE"},{"file": 58,"line": 2207,"col": 4,"docs": " The byte count is too small.","name": "RPC_X_BYTE_COUNT_TOO_SMALL"},{"file": 58,"line": 2209,"col": 4,"docs": " The stub received bad data.","name": "RPC_X_BAD_STUB_DATA"},{"file": 58,"line": 2211,"col": 4,"docs": " The supplied user buffer is not valid for the requested operation.","name": "INVALID_USER_BUFFER"},{"file": 58,"line": 2213,"col": 4,"docs": " The disk media is not recognized. It may not be formatted.","name": "UNRECOGNIZED_MEDIA"},{"file": 58,"line": 2215,"col": 4,"docs": " The workstation does not have a trust secret.","name": "NO_TRUST_LSA_SECRET"},{"file": 58,"line": 2217,"col": 4,"docs": " The security database on the server does not have a computer account for this workstation trust relationship.","name": "NO_TRUST_SAM_ACCOUNT"},{"file": 58,"line": 2219,"col": 4,"docs": " The trust relationship between the primary domain and the trusted domain failed.","name": "TRUSTED_DOMAIN_FAILURE"},{"file": 58,"line": 2221,"col": 4,"docs": " The trust relationship between this workstation and the primary domain failed.","name": "TRUSTED_RELATIONSHIP_FAILURE"},{"file": 58,"line": 2223,"col": 4,"docs": " The network logon failed.","name": "TRUST_FAILURE"},{"file": 58,"line": 2225,"col": 4,"docs": " A remote procedure call is already in progress for this thread.","name": "RPC_S_CALL_IN_PROGRESS"},{"file": 58,"line": 2227,"col": 4,"docs": " An attempt was made to logon, but the network logon service was not started.","name": "NETLOGON_NOT_STARTED"},{"file": 58,"line": 2229,"col": 4,"docs": " The user's account has expired.","name": "ACCOUNT_EXPIRED"},{"file": 58,"line": 2231,"col": 4,"docs": " The redirector is in use and cannot be unloaded.","name": "REDIRECTOR_HAS_OPEN_HANDLES"},{"file": 58,"line": 2233,"col": 4,"docs": " The specified printer driver is already installed.","name": "PRINTER_DRIVER_ALREADY_INSTALLED"},{"file": 58,"line": 2235,"col": 4,"docs": " The specified port is unknown.","name": "UNKNOWN_PORT"},{"file": 58,"line": 2237,"col": 4,"docs": " The printer driver is unknown.","name": "UNKNOWN_PRINTER_DRIVER"},{"file": 58,"line": 2239,"col": 4,"docs": " The print processor is unknown.","name": "UNKNOWN_PRINTPROCESSOR"},{"file": 58,"line": 2241,"col": 4,"docs": " The specified separator file is invalid.","name": "INVALID_SEPARATOR_FILE"},{"file": 58,"line": 2243,"col": 4,"docs": " The specified priority is invalid.","name": "INVALID_PRIORITY"},{"file": 58,"line": 2245,"col": 4,"docs": " The printer name is invalid.","name": "INVALID_PRINTER_NAME"},{"file": 58,"line": 2247,"col": 4,"docs": " The printer already exists.","name": "PRINTER_ALREADY_EXISTS"},{"file": 58,"line": 2249,"col": 4,"docs": " The printer command is invalid.","name": "INVALID_PRINTER_COMMAND"},{"file": 58,"line": 2251,"col": 4,"docs": " The specified datatype is invalid.","name": "INVALID_DATATYPE"},{"file": 58,"line": 2253,"col": 4,"docs": " The environment specified is invalid.","name": "INVALID_ENVIRONMENT"},{"file": 58,"line": 2255,"col": 4,"docs": " There are no more bindings.","name": "RPC_S_NO_MORE_BINDINGS"},{"file": 58,"line": 2258,"col": 4,"docs": " The account used is an interdomain trust account. Use your global user account or local user account to access this server.","name": "NOLOGON_INTERDOMAIN_TRUST_ACCOUNT"},{"file": 58,"line": 2261,"col": 4,"docs": " The account used is a computer account. Use your global user account or local user account to access this server.","name": "NOLOGON_WORKSTATION_TRUST_ACCOUNT"},{"file": 58,"line": 2264,"col": 4,"docs": " The account used is a server trust account. Use your global user account or local user account to access this server.","name": "NOLOGON_SERVER_TRUST_ACCOUNT"},{"file": 58,"line": 2266,"col": 4,"docs": " The name or security ID (SID) of the domain specified is inconsistent with the trust information for that domain.","name": "DOMAIN_TRUST_INCONSISTENT"},{"file": 58,"line": 2268,"col": 4,"docs": " The server is in use and cannot be unloaded.","name": "SERVER_HAS_OPEN_HANDLES"},{"file": 58,"line": 2270,"col": 4,"docs": " The specified image file did not contain a resource section.","name": "RESOURCE_DATA_NOT_FOUND"},{"file": 58,"line": 2272,"col": 4,"docs": " The specified resource type cannot be found in the image file.","name": "RESOURCE_TYPE_NOT_FOUND"},{"file": 58,"line": 2274,"col": 4,"docs": " The specified resource name cannot be found in the image file.","name": "RESOURCE_NAME_NOT_FOUND"},{"file": 58,"line": 2276,"col": 4,"docs": " The specified resource language ID cannot be found in the image file.","name": "RESOURCE_LANG_NOT_FOUND"},{"file": 58,"line": 2278,"col": 4,"docs": " Not enough quota is available to process this command.","name": "NOT_ENOUGH_QUOTA"},{"file": 58,"line": 2280,"col": 4,"docs": " No interfaces have been registered.","name": "RPC_S_NO_INTERFACES"},{"file": 58,"line": 2282,"col": 4,"docs": " The remote procedure call was cancelled.","name": "RPC_S_CALL_CANCELLED"},{"file": 58,"line": 2284,"col": 4,"docs": " The binding handle does not contain all required information.","name": "RPC_S_BINDING_INCOMPLETE"},{"file": 58,"line": 2286,"col": 4,"docs": " A communications failure occurred during a remote procedure call.","name": "RPC_S_COMM_FAILURE"},{"file": 58,"line": 2288,"col": 4,"docs": " The requested authentication level is not supported.","name": "RPC_S_UNSUPPORTED_AUTHN_LEVEL"},{"file": 58,"line": 2290,"col": 4,"docs": " No principal name registered.","name": "RPC_S_NO_PRINC_NAME"},{"file": 58,"line": 2292,"col": 4,"docs": " The error specified is not a valid Windows RPC error code.","name": "RPC_S_NOT_RPC_ERROR"},{"file": 58,"line": 2294,"col": 4,"docs": " A UUID that is valid only on this computer has been allocated.","name": "RPC_S_UUID_LOCAL_ONLY"},{"file": 58,"line": 2296,"col": 4,"docs": " A security package specific error occurred.","name": "RPC_S_SEC_PKG_ERROR"},{"file": 58,"line": 2298,"col": 4,"docs": " Thread is not canceled.","name": "RPC_S_NOT_CANCELLED"},{"file": 58,"line": 2300,"col": 4,"docs": " Invalid operation on the encoding/decoding handle.","name": "RPC_X_INVALID_ES_ACTION"},{"file": 58,"line": 2302,"col": 4,"docs": " Incompatible version of the serializing package.","name": "RPC_X_WRONG_ES_VERSION"},{"file": 58,"line": 2304,"col": 4,"docs": " Incompatible version of the RPC stub.","name": "RPC_X_WRONG_STUB_VERSION"},{"file": 58,"line": 2306,"col": 4,"docs": " The RPC pipe object is invalid or corrupted.","name": "RPC_X_INVALID_PIPE_OBJECT"},{"file": 58,"line": 2308,"col": 4,"docs": " An invalid operation was attempted on an RPC pipe object.","name": "RPC_X_WRONG_PIPE_ORDER"},{"file": 58,"line": 2310,"col": 4,"docs": " Unsupported RPC pipe version.","name": "RPC_X_WRONG_PIPE_VERSION"},{"file": 58,"line": 2312,"col": 4,"docs": " HTTP proxy server rejected the connection because the cookie authentication failed.","name": "RPC_S_COOKIE_AUTH_FAILED"},{"file": 58,"line": 2314,"col": 4,"docs": " The group member was not found.","name": "RPC_S_GROUP_MEMBER_NOT_FOUND"},{"file": 58,"line": 2316,"col": 4,"docs": " The endpoint mapper database entry could not be created.","name": "EPT_S_CANT_CREATE"},{"file": 58,"line": 2318,"col": 4,"docs": " The object universal unique identifier (UUID) is the nil UUID.","name": "RPC_S_INVALID_OBJECT"},{"file": 58,"line": 2320,"col": 4,"docs": " The specified time is invalid.","name": "INVALID_TIME"},{"file": 58,"line": 2322,"col": 4,"docs": " The specified form name is invalid.","name": "INVALID_FORM_NAME"},{"file": 58,"line": 2324,"col": 4,"docs": " The specified form size is invalid.","name": "INVALID_FORM_SIZE"},{"file": 58,"line": 2326,"col": 4,"docs": " The specified printer handle is already being waited on.","name": "ALREADY_WAITING"},{"file": 58,"line": 2328,"col": 4,"docs": " The specified printer has been deleted.","name": "PRINTER_DELETED"},{"file": 58,"line": 2330,"col": 4,"docs": " The state of the printer is invalid.","name": "INVALID_PRINTER_STATE"},{"file": 58,"line": 2332,"col": 4,"docs": " The user's password must be changed before signing in.","name": "PASSWORD_MUST_CHANGE"},{"file": 58,"line": 2334,"col": 4,"docs": " Could not find the domain controller for this domain.","name": "DOMAIN_CONTROLLER_NOT_FOUND"},{"file": 58,"line": 2336,"col": 4,"docs": " The referenced account is currently locked out and may not be logged on to.","name": "ACCOUNT_LOCKED_OUT"},{"file": 58,"line": 2338,"col": 4,"docs": " The object exporter specified was not found.","name": "OR_INVALID_OXID"},{"file": 58,"line": 2340,"col": 4,"docs": " The object specified was not found.","name": "OR_INVALID_OID"},{"file": 58,"line": 2342,"col": 4,"docs": " The object resolver set specified was not found.","name": "OR_INVALID_SET"},{"file": 58,"line": 2344,"col": 4,"docs": " Some data remains to be sent in the request buffer.","name": "RPC_S_SEND_INCOMPLETE"},{"file": 58,"line": 2346,"col": 4,"docs": " Invalid asynchronous remote procedure call handle.","name": "RPC_S_INVALID_ASYNC_HANDLE"},{"file": 58,"line": 2348,"col": 4,"docs": " Invalid asynchronous RPC call handle for this operation.","name": "RPC_S_INVALID_ASYNC_CALL"},{"file": 58,"line": 2350,"col": 4,"docs": " The RPC pipe object has already been closed.","name": "RPC_X_PIPE_CLOSED"},{"file": 58,"line": 2352,"col": 4,"docs": " The RPC call completed before all pipes were processed.","name": "RPC_X_PIPE_DISCIPLINE_ERROR"},{"file": 58,"line": 2354,"col": 4,"docs": " No more data is available from the RPC pipe.","name": "RPC_X_PIPE_EMPTY"},{"file": 58,"line": 2356,"col": 4,"docs": " No site name is available for this machine.","name": "NO_SITENAME"},{"file": 58,"line": 2358,"col": 4,"docs": " The file cannot be accessed by the system.","name": "CANT_ACCESS_FILE"},{"file": 58,"line": 2360,"col": 4,"docs": " The name of the file cannot be resolved by the system.","name": "CANT_RESOLVE_FILENAME"},{"file": 58,"line": 2362,"col": 4,"docs": " The entry is not of the expected type.","name": "RPC_S_ENTRY_TYPE_MISMATCH"},{"file": 58,"line": 2364,"col": 4,"docs": " Not all object UUIDs could be exported to the specified entry.","name": "RPC_S_NOT_ALL_OBJS_EXPORTED"},{"file": 58,"line": 2366,"col": 4,"docs": " Interface could not be exported to the specified entry.","name": "RPC_S_INTERFACE_NOT_EXPORTED"},{"file": 58,"line": 2368,"col": 4,"docs": " The specified profile entry could not be added.","name": "RPC_S_PROFILE_NOT_ADDED"},{"file": 58,"line": 2370,"col": 4,"docs": " The specified profile element could not be added.","name": "RPC_S_PRF_ELT_NOT_ADDED"},{"file": 58,"line": 2372,"col": 4,"docs": " The specified profile element could not be removed.","name": "RPC_S_PRF_ELT_NOT_REMOVED"},{"file": 58,"line": 2374,"col": 4,"docs": " The group element could not be added.","name": "RPC_S_GRP_ELT_NOT_ADDED"},{"file": 58,"line": 2376,"col": 4,"docs": " The group element could not be removed.","name": "RPC_S_GRP_ELT_NOT_REMOVED"},{"file": 58,"line": 2378,"col": 4,"docs": " The printer driver is not compatible with a policy enabled on your computer that blocks NT 4.0 drivers.","name": "KM_DRIVER_BLOCKED"},{"file": 58,"line": 2380,"col": 4,"docs": " The context has expired and can no longer be used.","name": "CONTEXT_EXPIRED"},{"file": 58,"line": 2382,"col": 4,"docs": " The current user's delegated trust creation quota has been exceeded.","name": "PER_USER_TRUST_QUOTA_EXCEEDED"},{"file": 58,"line": 2384,"col": 4,"docs": " The total delegated trust creation quota has been exceeded.","name": "ALL_USER_TRUST_QUOTA_EXCEEDED"},{"file": 58,"line": 2386,"col": 4,"docs": " The current user's delegated trust deletion quota has been exceeded.","name": "USER_DELETE_TRUST_QUOTA_EXCEEDED"},{"file": 58,"line": 2389,"col": 4,"docs": " The computer you are signing into is protected by an authentication firewall. The specified account is not allowed to authenticate to the computer.","name": "AUTHENTICATION_FIREWALL_FAILED"},{"file": 58,"line": 2391,"col": 4,"docs": " Remote connections to the Print Spooler are blocked by a policy set on your machine.","name": "REMOTE_PRINT_CONNECTIONS_BLOCKED"},{"file": 58,"line": 2393,"col": 4,"docs": " Authentication failed because NTLM authentication has been disabled.","name": "NTLM_BLOCKED"},{"file": 58,"line": 2395,"col": 4,"docs": " Logon Failure: EAS policy requires that the user change their password before this operation can be performed.","name": "PASSWORD_CHANGE_REQUIRED"},{"file": 58,"line": 2397,"col": 4,"docs": " The pixel format is invalid.","name": "INVALID_PIXEL_FORMAT"},{"file": 58,"line": 2399,"col": 4,"docs": " The specified driver is invalid.","name": "BAD_DRIVER"},{"file": 58,"line": 2401,"col": 4,"docs": " The window style or class attribute is invalid for this operation.","name": "INVALID_WINDOW_STYLE"},{"file": 58,"line": 2403,"col": 4,"docs": " The requested metafile operation is not supported.","name": "METAFILE_NOT_SUPPORTED"},{"file": 58,"line": 2405,"col": 4,"docs": " The requested transformation operation is not supported.","name": "TRANSFORM_NOT_SUPPORTED"},{"file": 58,"line": 2407,"col": 4,"docs": " The requested clipping operation is not supported.","name": "CLIPPING_NOT_SUPPORTED"},{"file": 58,"line": 2409,"col": 4,"docs": " The specified color management module is invalid.","name": "INVALID_CMM"},{"file": 58,"line": 2411,"col": 4,"docs": " The specified color profile is invalid.","name": "INVALID_PROFILE"},{"file": 58,"line": 2413,"col": 4,"docs": " The specified tag was not found.","name": "TAG_NOT_FOUND"},{"file": 58,"line": 2415,"col": 4,"docs": " A required tag is not present.","name": "TAG_NOT_PRESENT"},{"file": 58,"line": 2417,"col": 4,"docs": " The specified tag is already present.","name": "DUPLICATE_TAG"},{"file": 58,"line": 2419,"col": 4,"docs": " The specified color profile is not associated with the specified device.","name": "PROFILE_NOT_ASSOCIATED_WITH_DEVICE"},{"file": 58,"line": 2421,"col": 4,"docs": " The specified color profile was not found.","name": "PROFILE_NOT_FOUND"},{"file": 58,"line": 2423,"col": 4,"docs": " The specified color space is invalid.","name": "INVALID_COLORSPACE"},{"file": 58,"line": 2425,"col": 4,"docs": " Image Color Management is not enabled.","name": "ICM_NOT_ENABLED"},{"file": 58,"line": 2427,"col": 4,"docs": " There was an error while deleting the color transform.","name": "DELETING_ICM_XFORM"},{"file": 58,"line": 2429,"col": 4,"docs": " The specified color transform is invalid.","name": "INVALID_TRANSFORM"},{"file": 58,"line": 2431,"col": 4,"docs": " The specified transform does not match the bitmap's color space.","name": "COLORSPACE_MISMATCH"},{"file": 58,"line": 2433,"col": 4,"docs": " The specified named color index is not present in the profile.","name": "INVALID_COLORINDEX"},{"file": 58,"line": 2435,"col": 4,"docs": " The specified profile is intended for a device of a different type than the specified device.","name": "PROFILE_DOES_NOT_MATCH_DEVICE"},{"file": 58,"line": 2437,"col": 4,"docs": " The network connection was made successfully, but the user had to be prompted for a password other than the one originally specified.","name": "CONNECTED_OTHER_PASSWORD"},{"file": 58,"line": 2439,"col": 4,"docs": " The network connection was made successfully using default credentials.","name": "CONNECTED_OTHER_PASSWORD_DEFAULT"},{"file": 58,"line": 2441,"col": 4,"docs": " The specified username is invalid.","name": "BAD_USERNAME"},{"file": 58,"line": 2443,"col": 4,"docs": " This network connection does not exist.","name": "NOT_CONNECTED"},{"file": 58,"line": 2445,"col": 4,"docs": " This network connection has files open or requests pending.","name": "OPEN_FILES"},{"file": 58,"line": 2447,"col": 4,"docs": " Active connections still exist.","name": "ACTIVE_CONNECTIONS"},{"file": 58,"line": 2449,"col": 4,"docs": " The device is in use by an active process and cannot be disconnected.","name": "DEVICE_IN_USE"},{"file": 58,"line": 2451,"col": 4,"docs": " The specified print monitor is unknown.","name": "UNKNOWN_PRINT_MONITOR"},{"file": 58,"line": 2453,"col": 4,"docs": " The specified printer driver is currently in use.","name": "PRINTER_DRIVER_IN_USE"},{"file": 58,"line": 2455,"col": 4,"docs": " The spool file was not found.","name": "SPOOL_FILE_NOT_FOUND"},{"file": 58,"line": 2457,"col": 4,"docs": " A StartDocPrinter call was not issued.","name": "SPL_NO_STARTDOC"},{"file": 58,"line": 2459,"col": 4,"docs": " An AddJob call was not issued.","name": "SPL_NO_ADDJOB"},{"file": 58,"line": 2461,"col": 4,"docs": " The specified print processor has already been installed.","name": "PRINT_PROCESSOR_ALREADY_INSTALLED"},{"file": 58,"line": 2463,"col": 4,"docs": " The specified print monitor has already been installed.","name": "PRINT_MONITOR_ALREADY_INSTALLED"},{"file": 58,"line": 2465,"col": 4,"docs": " The specified print monitor does not have the required functions.","name": "INVALID_PRINT_MONITOR"},{"file": 58,"line": 2467,"col": 4,"docs": " The specified print monitor is currently in use.","name": "PRINT_MONITOR_IN_USE"},{"file": 58,"line": 2469,"col": 4,"docs": " The requested operation is not allowed when there are jobs queued to the printer.","name": "PRINTER_HAS_JOBS_QUEUED"},{"file": 58,"line": 2472,"col": 4,"docs": " The requested operation is successful. Changes will not be effective until the system is rebooted.","name": "SUCCESS_REBOOT_REQUIRED"},{"file": 58,"line": 2475,"col": 4,"docs": " The requested operation is successful. Changes will not be effective until the service is restarted.","name": "SUCCESS_RESTART_REQUIRED"},{"file": 58,"line": 2477,"col": 4,"docs": " No printers were found.","name": "PRINTER_NOT_FOUND"},{"file": 58,"line": 2479,"col": 4,"docs": " The printer driver is known to be unreliable.","name": "PRINTER_DRIVER_WARNED"},{"file": 58,"line": 2481,"col": 4,"docs": " The printer driver is known to harm the system.","name": "PRINTER_DRIVER_BLOCKED"},{"file": 58,"line": 2483,"col": 4,"docs": " The specified printer driver package is currently in use.","name": "PRINTER_DRIVER_PACKAGE_IN_USE"},{"file": 58,"line": 2485,"col": 4,"docs": " Unable to find a core driver package that is required by the printer driver package.","name": "CORE_DRIVER_PACKAGE_NOT_FOUND"},{"file": 58,"line": 2488,"col": 4,"docs": " The requested operation failed. A system reboot is required to roll back changes made.","name": "FAIL_REBOOT_REQUIRED"},{"file": 58,"line": 2491,"col": 4,"docs": " The requested operation failed. A system reboot has been initiated to roll back changes made.","name": "FAIL_REBOOT_INITIATED"},{"file": 58,"line": 2493,"col": 4,"docs": " The specified printer driver was not found on the system and needs to be downloaded.","name": "PRINTER_DRIVER_DOWNLOAD_NEEDED"},{"file": 58,"line": 2496,"col": 4,"docs": " The requested print job has failed to print. A print system update requires the job to be resubmitted.","name": "PRINT_JOB_RESTART_REQUIRED"},{"file": 58,"line": 2498,"col": 4,"docs": " The printer driver does not contain a valid manifest, or contains too many manifests.","name": "INVALID_PRINTER_DRIVER_MANIFEST"},{"file": 58,"line": 2500,"col": 4,"docs": " The specified printer cannot be shared.","name": "PRINTER_NOT_SHAREABLE"},{"file": 58,"line": 2502,"col": 4,"docs": " The operation was paused.","name": "REQUEST_PAUSED"},{"file": 58,"line": 2504,"col": 4,"docs": " Reissue the given operation as a cached IO operation.","name": "IO_REISSUE_AS_CACHED"},{"file": 58,"line": 2505,"col": 4,"name": "_"},{"file": 28,"line": 734,"col": 24,"name": "lower"},{"file": 28,"line": 734,"col": 31,"name": "upper"},{"file": 26,"line": 988,"col": 4,"name": "allocator"},{"file": 26,"line": 989,"col": 4,"name": "address_map"},{"file": 45,"line": 8,"col": 4,"name": "allocator"},{"file": 45,"line": 10,"col": 4,"name": "child_allocator"},{"file": 45,"line": 11,"col": 4,"name": "state"},{"file": 43,"line": 259,"col": 25,"name": "exact"},{"file": 43,"line": 259,"col": 32,"name": "at_least"},{"file": 46,"line": 1778,"col": 4,"name": "data"},{"file": 46,"line": 1779,"col": 4,"name": "len"},{"file": 26,"line": 491,"col": 8,"name": "Red"},{"file": 26,"line": 492,"col": 8,"name": "Green"},{"file": 26,"line": 493,"col": 8,"name": "Cyan"},{"file": 26,"line": 494,"col": 8,"name": "White"},{"file": 26,"line": 495,"col": 8,"name": "Dim"},{"file": 26,"line": 496,"col": 8,"name": "Bold"},{"file": 26,"line": 497,"col": 8,"name": "Reset"},{"file": 26,"line": 28,"col": 4,"name": "line"},{"file": 26,"line": 29,"col": 4,"name": "column"},{"file": 26,"line": 30,"col": 4,"name": "file_name"},{"file": 26,"line": 31,"col": 4,"name": "allocator"},{"file": 54,"line": 64,"col": 35,"name": "event_set"},{"file": 54,"line": 64,"col": 46,"name": "timed_out"},{"file": 45,"line": 16,"col": 8,"name": "buffer_list"},{"file": 45,"line": 17,"col": 8,"name": "end_index"},{"file": 46,"line": 47,"col": 4,"name": "access_mask"},{"file": 46,"line": 48,"col": 4,"name": "dir"},{"file": 46,"line": 49,"col": 4,"name": "sa"},{"file": 46,"line": 50,"col": 4,"name": "share_access"},{"file": 46,"line": 51,"col": 4,"name": "creation"},{"file": 46,"line": 52,"col": 4,"name": "io_mode"},{"file": 46,"line": 55,"col": 4,"docs": " If true, tries to open path as a directory. Defaults to false.","name": "open_dir"},{"file": 46,"line": 58,"col": 4,"docs": " If false, tries to open path as a reparse point without dereferencing it. Defaults to true.","name": "follow_symlinks"},{"file": 47,"line": 11,"col": 4,"docs": " The operation completed successfully.","name": "SUCCESS"},{"file": 47,"line": 13,"col": 4,"docs": " The caller specified WaitAny for WaitType and one of the dispatcher objects in the Object array has been set to the signaled state.","name": "WAIT_1"},{"file": 47,"line": 15,"col": 4,"docs": " The caller specified WaitAny for WaitType and one of the dispatcher objects in the Object array has been set to the signaled state.","name": "WAIT_2"},{"file": 47,"line": 17,"col": 4,"docs": " The caller specified WaitAny for WaitType and one of the dispatcher objects in the Object array has been set to the signaled state.","name": "WAIT_3"},{"file": 47,"line": 19,"col": 4,"docs": " The caller specified WaitAny for WaitType and one of the dispatcher objects in the Object array has been set to the signaled state.","name": "WAIT_63"},{"file": 47,"line": 21,"col": 4,"docs": " The caller attempted to wait for a mutex that has been abandoned.","name": "ABANDONED"},{"file": 47,"line": 23,"col": 4,"docs": " The caller attempted to wait for a mutex that has been abandoned.","name": "ABANDONED_WAIT_63"},{"file": 47,"line": 25,"col": 4,"docs": " A user-mode APC was delivered before the given Interval expired.","name": "USER_APC"},{"file": 47,"line": 27,"col": 4,"docs": " The delay completed because the thread was alerted.","name": "ALERTED"},{"file": 47,"line": 29,"col": 4,"docs": " The given Timeout interval expired.","name": "TIMEOUT"},{"file": 47,"line": 31,"col": 4,"docs": " The operation that was requested is pending completion.","name": "PENDING"},{"file": 47,"line": 33,"col": 4,"docs": " A reparse should be performed by the Object Manager because the name of the file resulted in a symbolic link.","name": "REPARSE"},{"file": 47,"line": 35,"col": 4,"docs": " Returned by enumeration APIs to indicate more information is available to successive calls.","name": "MORE_ENTRIES"},{"file": 47,"line": 38,"col": 4,"docs": " Indicates not all privileges or groups that are referenced are assigned to the caller. This allows, for example, all privileges to be disabled without having to know exactly which privileges are assigned.","name": "NOT_ALL_ASSIGNED"},{"file": 47,"line": 40,"col": 4,"docs": " Some of the information to be translated has not been translated.","name": "SOME_NOT_MAPPED"},{"file": 47,"line": 42,"col": 4,"docs": " An open/create operation completed while an opportunistic lock (oplock) break is underway.","name": "OPLOCK_BREAK_IN_PROGRESS"},{"file": 47,"line": 44,"col": 4,"docs": " A new volume has been mounted by a file system.","name": "VOLUME_MOUNTED"},{"file": 47,"line": 46,"col": 4,"docs": " This success level status indicates that the transaction state already exists for the registry subtree but that a transaction commit was previously aborted. The commit has now been completed.","name": "RXACT_COMMITTED"},{"file": 47,"line": 48,"col": 4,"docs": " Indicates that a notify change request has been completed due to closing the handle that made the notify change request.","name": "NOTIFY_CLEANUP"},{"file": 47,"line": 51,"col": 4,"docs": " Indicates that a notify change request is being completed and that the information is not being returned in the caller's buffer. The caller now needs to enumerate the files to find the changes.","name": "NOTIFY_ENUM_DIR"},{"file": 47,"line": 53,"col": 4,"docs": " {No Quotas} No system quota limits are specifically set for this account.","name": "NO_QUOTAS_FOR_ACCOUNT"},{"file": 47,"line": 56,"col": 4,"docs": " {Connect Failure on Primary Transport} An attempt was made to connect to the remote server %hs on the primary transport, but the connection failed. The computer WAS able to connect on a secondary transport.","name": "PRIMARY_TRANSPORT_CONNECT_FAILED"},{"file": 47,"line": 58,"col": 4,"docs": " The page fault was a transition fault.","name": "PAGE_FAULT_TRANSITION"},{"file": 47,"line": 60,"col": 4,"docs": " The page fault was a demand zero fault.","name": "PAGE_FAULT_DEMAND_ZERO"},{"file": 47,"line": 62,"col": 4,"docs": " The page fault was a demand zero fault.","name": "PAGE_FAULT_COPY_ON_WRITE"},{"file": 47,"line": 64,"col": 4,"docs": " The page fault was a demand zero fault.","name": "PAGE_FAULT_GUARD_PAGE"},{"file": 47,"line": 66,"col": 4,"docs": " The page fault was satisfied by reading from a secondary storage device.","name": "PAGE_FAULT_PAGING_FILE"},{"file": 47,"line": 68,"col": 4,"docs": " The cached page was locked during operation.","name": "CACHE_PAGE_LOCKED"},{"file": 47,"line": 70,"col": 4,"docs": " The crash dump exists in a paging file.","name": "CRASH_DUMP"},{"file": 47,"line": 72,"col": 4,"docs": " The specified buffer contains all zeros.","name": "BUFFER_ALL_ZEROS"},{"file": 47,"line": 74,"col": 4,"docs": " A reparse should be performed by the Object Manager because the name of the file resulted in a symbolic link.","name": "REPARSE_OBJECT"},{"file": 47,"line": 76,"col": 4,"docs": " The device has succeeded a query-stop and its resource requirements have changed.","name": "RESOURCE_REQUIREMENTS_CHANGED"},{"file": 47,"line": 78,"col": 4,"docs": " The translator has translated these resources into the global space and no additional translations should be performed.","name": "TRANSLATION_COMPLETE"},{"file": 47,"line": 80,"col": 4,"docs": " The directory service evaluated group memberships locally, because it was unable to contact a global catalog server.","name": "DS_MEMBERSHIP_EVALUATED_LOCALLY"},{"file": 47,"line": 82,"col": 4,"docs": " A process being terminated has no threads to terminate.","name": "NOTHING_TO_TERMINATE"},{"file": 47,"line": 84,"col": 4,"docs": " The specified process is not part of a job.","name": "PROCESS_NOT_IN_JOB"},{"file": 47,"line": 86,"col": 4,"docs": " The specified process is part of a job.","name": "PROCESS_IN_JOB"},{"file": 47,"line": 88,"col": 4,"docs": " {Volume Shadow Copy Service} The system is now ready for hibernation.","name": "VOLSNAP_HIBERNATE_READY"},{"file": 47,"line": 90,"col": 4,"docs": " A file system or file system filter driver has successfully completed an FsFilter operation.","name": "FSFILTER_OP_COMPLETED_SUCCESSFULLY"},{"file": 47,"line": 92,"col": 4,"docs": " The specified interrupt vector was already connected.","name": "INTERRUPT_VECTOR_ALREADY_CONNECTED"},{"file": 47,"line": 94,"col": 4,"docs": " The specified interrupt vector is still connected.","name": "INTERRUPT_STILL_CONNECTED"},{"file": 47,"line": 96,"col": 4,"docs": " The current process is a cloned process.","name": "PROCESS_CLONED"},{"file": 47,"line": 98,"col": 4,"docs": " The file was locked and all users of the file can only read.","name": "FILE_LOCKED_WITH_ONLY_READERS"},{"file": 47,"line": 100,"col": 4,"docs": " The file was locked and at least one user of the file can write.","name": "FILE_LOCKED_WITH_WRITERS"},{"file": 47,"line": 102,"col": 4,"docs": " The specified ResourceManager made no changes or updates to the resource under this transaction.","name": "RESOURCEMANAGER_READ_ONLY"},{"file": 47,"line": 104,"col": 4,"docs": " An operation is blocked and waiting for an oplock.","name": "WAIT_FOR_OPLOCK"},{"file": 47,"line": 106,"col": 4,"docs": " Debugger handled the exception.","name": "DBG_EXCEPTION_HANDLED"},{"file": 47,"line": 108,"col": 4,"docs": " The debugger continued.","name": "DBG_CONTINUE"},{"file": 47,"line": 110,"col": 4,"docs": " The IO was completed by a filter.","name": "FLT_IO_COMPLETE"},{"file": 47,"line": 112,"col": 4,"docs": " The file is temporarily unavailable.","name": "FILE_NOT_AVAILABLE"},{"file": 47,"line": 114,"col": 4,"docs": " The share is temporarily unavailable.","name": "SHARE_UNAVAILABLE"},{"file": 47,"line": 117,"col": 4,"docs": " A threadpool worker thread entered a callback at thread affinity %p and exited at affinity %p. This is unexpected, indicating that the callback missed restoring the priority.","name": "CALLBACK_RETURNED_THREAD_AFFINITY"},{"file": 47,"line": 119,"col": 4,"docs": " {Object Exists} An attempt was made to create an object but the object name already exists.","name": "OBJECT_NAME_EXISTS"},{"file": 47,"line": 121,"col": 4,"docs": " {Thread Suspended} A thread termination occurred while the thread was suspended. The thread resumed, and termination proceeded.","name": "THREAD_WAS_SUSPENDED"},{"file": 47,"line": 123,"col": 4,"docs": " {Working Set Range Error} An attempt was made to set the working set minimum or maximum to values that are outside the allowable range.","name": "WORKING_SET_LIMIT_RANGE"},{"file": 47,"line": 125,"col": 4,"docs": " {Image Relocated} An image file could not be mapped at the address that is specified in the image file. Local fixes must be performed on this image.","name": "IMAGE_NOT_AT_BASE"},{"file": 47,"line": 127,"col": 4,"docs": " This informational level status indicates that a specified registry subtree transaction state did not yet exist and had to be created.","name": "RXACT_STATE_CREATED"},{"file": 47,"line": 130,"col": 4,"docs": " {Segment Load} A virtual DOS machine (VDM) is loading, unloading, or moving an MS-DOS or Win16 program segment image. An exception is raised so that a debugger can load, unload, or track symbols and breakpoints within these 16-bit segments.","name": "SEGMENT_NOTIFICATION"},{"file": 47,"line": 133,"col": 4,"docs": " {Local Session Key} A user session key was requested for a local remote procedure call (RPC) connection. The session key that is returned is a constant value and not unique to this connection.","name": "LOCAL_USER_SESSION_KEY"},{"file": 47,"line": 136,"col": 4,"docs": " {Invalid Current Directory} The process cannot switch to the startup current directory %hs. Select OK to set the current directory to %hs, or select CANCEL to exit.","name": "BAD_CURRENT_DIRECTORY"},{"file": 47,"line": 138,"col": 4,"docs": " {Serial IOCTL Complete} A serial I/O operation was completed by another write to a serial port. (The IOCTL_SERIAL_XOFF_COUNTER reached zero.)","name": "SERIAL_MORE_WRITES"},{"file": 47,"line": 140,"col": 4,"docs": " {Registry Recovery} One of the files that contains the system registry data had to be recovered by using a log or alternate copy. The recovery was successful.","name": "REGISTRY_RECOVERED"},{"file": 47,"line": 143,"col": 4,"docs": " {Redundant Read} To satisfy a read request, the Windows NT operating system fault-tolerant file system successfully read the requested data from a redundant copy. This was done because the file system encountered a failure on a member of the fault-tolerant volume but was unable to reassign the failing area of the device.","name": "FT_READ_RECOVERY_FROM_BACKUP"},{"file": 47,"line": 146,"col": 4,"docs": " {Redundant Write} To satisfy a write request, the Windows NT fault-tolerant file system successfully wrote a redundant copy of the information. This was done because the file system encountered a failure on a member of the fault-tolerant volume but was unable to reassign the failing area of the device.","name": "FT_WRITE_RECOVERY"},{"file": 47,"line": 149,"col": 4,"docs": " {Serial IOCTL Timeout} A serial I/O operation completed because the time-out period expired. (The IOCTL_SERIAL_XOFF_COUNTER had not reached zero.)","name": "SERIAL_COUNTER_TIMEOUT"},{"file": 47,"line": 152,"col": 4,"docs": " {Password Too Complex} The Windows password is too complex to be converted to a LAN Manager password. The LAN Manager password that returned is a NULL string.","name": "NULL_LM_PASSWORD"},{"file": 47,"line": 155,"col": 4,"docs": " {Machine Type Mismatch} The image file %hs is valid but is for a machine type other than the current machine. Select OK to continue, or CANCEL to fail the DLL load.","name": "IMAGE_MACHINE_TYPE_MISMATCH"},{"file": 47,"line": 157,"col": 4,"docs": " {Partial Data Received} The network transport returned partial data to its client. The remaining data will be sent later.","name": "RECEIVE_PARTIAL"},{"file": 47,"line": 159,"col": 4,"docs": " {Expedited Data Received} The network transport returned data to its client that was marked as expedited by the remote system.","name": "RECEIVE_EXPEDITED"},{"file": 47,"line": 161,"col": 4,"docs": " {Partial Expedited Data Received} The network transport returned partial data to its client and this data was marked as expedited by the remote system. The remaining data will be sent later.","name": "RECEIVE_PARTIAL_EXPEDITED"},{"file": 47,"line": 163,"col": 4,"docs": " {TDI Event Done} The TDI indication has completed successfully.","name": "EVENT_DONE"},{"file": 47,"line": 165,"col": 4,"docs": " {TDI Event Pending} The TDI indication has entered the pending state.","name": "EVENT_PENDING"},{"file": 47,"line": 167,"col": 4,"docs": " Checking file system on %wZ.","name": "CHECKING_FILE_SYSTEM"},{"file": 47,"line": 169,"col": 4,"docs": " {Fatal Application Exit} %hs","name": "FATAL_APP_EXIT"},{"file": 47,"line": 171,"col": 4,"docs": " The specified registry key is referenced by a predefined handle.","name": "PREDEFINED_HANDLE"},{"file": 47,"line": 173,"col": 4,"docs": " {Page Unlocked} The page protection of a locked page was changed to 'No Access' and the page was unlocked from memory and from the process.","name": "WAS_UNLOCKED"},{"file": 47,"line": 175,"col": 4,"docs": " %hs","name": "SERVICE_NOTIFICATION"},{"file": 47,"line": 177,"col": 4,"docs": " {Page Locked} One of the pages to lock was already locked.","name": "WAS_LOCKED"},{"file": 47,"line": 179,"col": 4,"docs": " Application popup: %1 : %2","name": "LOG_HARD_ERROR"},{"file": 47,"line": 181,"col": 4,"docs": " A Win32 process already exists.","name": "ALREADY_WIN32"},{"file": 47,"line": 183,"col": 4,"docs": " An exception status code that is used by the Win32 x86 emulation subsystem.","name": "WX86_UNSIMULATE"},{"file": 47,"line": 185,"col": 4,"docs": " An exception status code that is used by the Win32 x86 emulation subsystem.","name": "WX86_CONTINUE"},{"file": 47,"line": 187,"col": 4,"docs": " An exception status code that is used by the Win32 x86 emulation subsystem.","name": "WX86_SINGLE_STEP"},{"file": 47,"line": 189,"col": 4,"docs": " An exception status code that is used by the Win32 x86 emulation subsystem.","name": "WX86_BREAKPOINT"},{"file": 47,"line": 191,"col": 4,"docs": " An exception status code that is used by the Win32 x86 emulation subsystem.","name": "WX86_EXCEPTION_CONTINUE"},{"file": 47,"line": 193,"col": 4,"docs": " An exception status code that is used by the Win32 x86 emulation subsystem.","name": "WX86_EXCEPTION_LASTCHANCE"},{"file": 47,"line": 195,"col": 4,"docs": " An exception status code that is used by the Win32 x86 emulation subsystem.","name": "WX86_EXCEPTION_CHAIN"},{"file": 47,"line": 197,"col": 4,"docs": " {Machine Type Mismatch} The image file %hs is valid but is for a machine type other than the current machine.","name": "IMAGE_MACHINE_TYPE_MISMATCH_EXE"},{"file": 47,"line": 199,"col": 4,"docs": " A yield execution was performed and no thread was available to run.","name": "NO_YIELD_PERFORMED"},{"file": 47,"line": 201,"col": 4,"docs": " The resume flag to a timer API was ignored.","name": "TIMER_RESUME_IGNORED"},{"file": 47,"line": 203,"col": 4,"docs": " The arbiter has deferred arbitration of these resources to its parent.","name": "ARBITRATION_UNHANDLED"},{"file": 47,"line": 205,"col": 4,"docs": " The device has detected a CardBus card in its slot.","name": "CARDBUS_NOT_SUPPORTED"},{"file": 47,"line": 207,"col": 4,"docs": " An exception status code that is used by the Win32 x86 emulation subsystem.","name": "WX86_CREATEWX86TIB"},{"file": 47,"line": 211,"col": 4,"docs": " The CPUs in this multiprocessor system are not all the same revision level. To use all processors, the operating system restricts itself to the features of the least capable processor in the system. If problems occur with this system, contact the CPU manufacturer to see if this mix of processors is supported.","name": "MP_PROCESSOR_MISMATCH"},{"file": 47,"line": 213,"col": 4,"docs": " The system was put into hibernation.","name": "HIBERNATED"},{"file": 47,"line": 215,"col": 4,"docs": " The system was resumed from hibernation.","name": "RESUME_HIBERNATION"},{"file": 47,"line": 217,"col": 4,"docs": " Windows has detected that the system firmware (BIOS) was updated [previous firmware date = %2, current firmware date %3].","name": "FIRMWARE_UPDATED"},{"file": 47,"line": 220,"col": 4,"docs": " A device driver is leaking locked I/O pages and is causing system degradation. The system has automatically enabled the tracking code to try and catch the culprit.","name": "DRIVERS_LEAKING_LOCKED_PAGES"},{"file": 47,"line": 222,"col": 4,"docs": " The ALPC message being canceled has already been retrieved from the queue on the other side.","name": "MESSAGE_RETRIEVED"},{"file": 47,"line": 224,"col": 4,"docs": " The system power state is transitioning from %2 to %3.","name": "SYSTEM_POWERSTATE_TRANSITION"},{"file": 47,"line": 227,"col": 4,"docs": " The receive operation was successful. Check the ALPC completion list for the received message.","name": "ALPC_CHECK_COMPLETION_LIST"},{"file": 47,"line": 229,"col": 4,"docs": " The system power state is transitioning from %2 to %3 but could enter %4.","name": "SYSTEM_POWERSTATE_COMPLEX_TRANSITION"},{"file": 47,"line": 231,"col": 4,"docs": " Access to %1 is monitored by policy rule %2.","name": "ACCESS_AUDIT_BY_POLICY"},{"file": 47,"line": 233,"col": 4,"docs": " A valid hibernation file has been invalidated and should be abandoned.","name": "ABANDON_HIBERFILE"},{"file": 47,"line": 235,"col": 4,"docs": " Business rule scripts are disabled for the calling application.","name": "BIZRULES_NOT_ENABLED"},{"file": 47,"line": 237,"col": 4,"docs": " The system has awoken.","name": "WAKE_SYSTEM"},{"file": 47,"line": 239,"col": 4,"docs": " The directory service is shutting down.","name": "DS_SHUTTING_DOWN"},{"file": 47,"line": 241,"col": 4,"docs": " Debugger will reply later.","name": "DBG_REPLY_LATER"},{"file": 47,"line": 243,"col": 4,"docs": " Debugger cannot provide a handle.","name": "DBG_UNABLE_TO_PROVIDE_HANDLE"},{"file": 47,"line": 245,"col": 4,"docs": " Debugger terminated the thread.","name": "DBG_TERMINATE_THREAD"},{"file": 47,"line": 247,"col": 4,"docs": " Debugger terminated the process.","name": "DBG_TERMINATE_PROCESS"},{"file": 47,"line": 249,"col": 4,"docs": " Debugger obtained control of C.","name": "DBG_CONTROL_C"},{"file": 47,"line": 251,"col": 4,"docs": " Debugger printed an exception on control C.","name": "DBG_PRINTEXCEPTION_C"},{"file": 47,"line": 253,"col": 4,"docs": " Debugger received a RIP exception.","name": "DBG_RIPEXCEPTION"},{"file": 47,"line": 255,"col": 4,"docs": " Debugger received a control break.","name": "DBG_CONTROL_BREAK"},{"file": 47,"line": 257,"col": 4,"docs": " Debugger command communication exception.","name": "DBG_COMMAND_EXCEPTION"},{"file": 47,"line": 259,"col": 4,"docs": " A UUID that is valid only on this computer has been allocated.","name": "RPC_NT_UUID_LOCAL_ONLY"},{"file": 47,"line": 261,"col": 4,"docs": " Some data remains to be sent in the request buffer.","name": "RPC_NT_SEND_INCOMPLETE"},{"file": 47,"line": 263,"col": 4,"docs": " The Client Drive Mapping Service has connected on Terminal Connection.","name": "CTX_CDM_CONNECT"},{"file": 47,"line": 265,"col": 4,"docs": " The Client Drive Mapping Service has disconnected on Terminal Connection.","name": "CTX_CDM_DISCONNECT"},{"file": 47,"line": 267,"col": 4,"docs": " A kernel mode component is releasing a reference on an activation context.","name": "SXS_RELEASE_ACTIVATION_CONTEXT"},{"file": 47,"line": 269,"col": 4,"docs": " The transactional resource manager is already consistent. Recovery is not needed.","name": "RECOVERY_NOT_NEEDED"},{"file": 47,"line": 271,"col": 4,"docs": " The transactional resource manager has already been started.","name": "RM_ALREADY_STARTED"},{"file": 47,"line": 273,"col": 4,"docs": " The log service encountered a log stream with no restart area.","name": "LOG_NO_RESTART"},{"file": 47,"line": 276,"col": 4,"docs": " {Display Driver Recovered From Failure} The %hs display driver has detected a failure and recovered from it. Some graphical operations might have failed. The next time you restart the machine, a dialog box appears, giving you an opportunity to upload data about this failure to Microsoft.","name": "VIDEO_DRIVER_DEBUG_REPORT_REQUEST"},{"file": 47,"line": 280,"col": 4,"docs": " The specified buffer is not big enough to contain the entire requested dataset. Partial data is populated up to the size of the buffer. The caller needs to provide a buffer of the size as specified in the partially populated buffer's content (interface specific).","name": "GRAPHICS_PARTIAL_DATA_POPULATED"},{"file": 47,"line": 282,"col": 4,"docs": " The kernel driver detected a version mismatch between it and the user mode driver.","name": "GRAPHICS_DRIVER_MISMATCH"},{"file": 47,"line": 284,"col": 4,"docs": " No mode is pinned on the specified VidPN source/target.","name": "GRAPHICS_MODE_NOT_PINNED"},{"file": 47,"line": 286,"col": 4,"docs": " The specified mode set does not specify a preference for one of its modes.","name": "GRAPHICS_NO_PREFERRED_MODE"},{"file": 47,"line": 288,"col": 4,"docs": " The specified dataset (for example, mode set, frequency range set, descriptor set, or topology) is empty.","name": "GRAPHICS_DATASET_IS_EMPTY"},{"file": 47,"line": 290,"col": 4,"docs": " The specified dataset (for example, mode set, frequency range set, descriptor set, or topology) does not contain any more elements.","name": "GRAPHICS_NO_MORE_ELEMENTS_IN_DATASET"},{"file": 47,"line": 292,"col": 4,"docs": " The specified content transformation is not pinned on the specified VidPN present path.","name": "GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_PINNED"},{"file": 47,"line": 294,"col": 4,"docs": " The child device presence was not reliably detected.","name": "GRAPHICS_UNKNOWN_CHILD_STATUS"},{"file": 47,"line": 296,"col": 4,"docs": " Starting the lead adapter in a linked configuration has been temporarily deferred.","name": "GRAPHICS_LEADLINK_START_DEFERRED"},{"file": 47,"line": 298,"col": 4,"docs": " The display adapter is being polled for children too frequently at the same polling level.","name": "GRAPHICS_POLLING_TOO_FREQUENTLY"},{"file": 47,"line": 300,"col": 4,"docs": " Starting the adapter has been temporarily deferred.","name": "GRAPHICS_START_DEFERRED"},{"file": 47,"line": 302,"col": 4,"docs": " The request will be completed later by an NDIS status indication.","name": "NDIS_INDICATION_REQUIRED"},{"file": 47,"line": 304,"col": 4,"docs": " {EXCEPTION} Guard Page Exception A page of memory that marks the end of a data structure, such as a stack or an array, has been accessed.","name": "GUARD_PAGE_VIOLATION"},{"file": 47,"line": 306,"col": 4,"docs": " {EXCEPTION} Alignment Fault A data type misalignment was detected in a load or store instruction.","name": "DATATYPE_MISALIGNMENT"},{"file": 47,"line": 308,"col": 4,"docs": " {EXCEPTION} Breakpoint A breakpoint has been reached.","name": "BREAKPOINT"},{"file": 47,"line": 310,"col": 4,"docs": " {EXCEPTION} Single Step A single step or trace operation has just been completed.","name": "SINGLE_STEP"},{"file": 47,"line": 312,"col": 4,"docs": " {Buffer Overflow} The data was too large to fit into the specified buffer.","name": "BUFFER_OVERFLOW"},{"file": 47,"line": 314,"col": 4,"docs": " {No More Files} No more files were found which match the file specification.","name": "NO_MORE_FILES"},{"file": 47,"line": 316,"col": 4,"docs": " {Kernel Debugger Awakened} The system debugger was awakened by an interrupt.","name": "WAKE_SYSTEM_DEBUGGER"},{"file": 47,"line": 318,"col": 4,"docs": " {Handles Closed} Handles to objects have been automatically closed because of the requested operation.","name": "HANDLES_CLOSED"},{"file": 47,"line": 320,"col": 4,"docs": " {Non-Inheritable ACL} An access control list (ACL) contains no components that can be inherited.","name": "NO_INHERITANCE"},{"file": 47,"line": 324,"col": 4,"docs": " {GUID Substitution} During the translation of a globally unique identifier (GUID) to a Windows security ID (SID), no administratively defined GUID prefix was found. A substitute prefix was used, which will not compromise system security. However, this might provide a more restrictive access than intended.","name": "GUID_SUBSTITUTION_MADE"},{"file": 47,"line": 326,"col": 4,"docs": " Because of protection conflicts, not all the requested bytes could be copied.","name": "PARTIAL_COPY"},{"file": 47,"line": 328,"col": 4,"docs": " {Out of Paper} The printer is out of paper.","name": "DEVICE_PAPER_EMPTY"},{"file": 47,"line": 330,"col": 4,"docs": " {Device Power Is Off} The printer power has been turned off.","name": "DEVICE_POWERED_OFF"},{"file": 47,"line": 332,"col": 4,"docs": " {Device Offline} The printer has been taken offline.","name": "DEVICE_OFF_LINE"},{"file": 47,"line": 334,"col": 4,"docs": " {Device Busy} The device is currently busy.","name": "DEVICE_BUSY"},{"file": 47,"line": 336,"col": 4,"docs": " {No More EAs} No more extended attributes (EAs) were found for the file.","name": "NO_MORE_EAS"},{"file": 47,"line": 338,"col": 4,"docs": " {Illegal EA} The specified extended attribute (EA) name contains at least one illegal character.","name": "INVALID_EA_NAME"},{"file": 47,"line": 340,"col": 4,"docs": " {Inconsistent EA List} The extended attribute (EA) list is inconsistent.","name": "EA_LIST_INCONSISTENT"},{"file": 47,"line": 342,"col": 4,"docs": " {Invalid EA Flag} An invalid extended attribute (EA) flag was set.","name": "INVALID_EA_FLAG"},{"file": 47,"line": 344,"col": 4,"docs": " {Verifying Disk} The media has changed and a verify operation is in progress; therefore, no reads or writes can be performed to the device, except those that are used in the verify operation.","name": "VERIFY_REQUIRED"},{"file": 47,"line": 346,"col": 4,"docs": " {Too Much Information} The specified access control list (ACL) contained more information than was expected.","name": "EXTRANEOUS_INFORMATION"},{"file": 47,"line": 349,"col": 4,"docs": " This warning level status indicates that the transaction state already exists for the registry subtree, but that a transaction commit was previously aborted. The commit has NOT been completed but has not been rolled back either; therefore, it can still be committed, if needed.","name": "RXACT_COMMIT_NECESSARY"},{"file": 47,"line": 351,"col": 4,"docs": " {No More Entries} No more entries are available from an enumeration operation.","name": "NO_MORE_ENTRIES"},{"file": 47,"line": 353,"col": 4,"docs": " {Filemark Found} A filemark was detected.","name": "FILEMARK_DETECTED"},{"file": 47,"line": 355,"col": 4,"docs": " {Media Changed} The media has changed.","name": "MEDIA_CHANGED"},{"file": 47,"line": 357,"col": 4,"docs": " {I/O Bus Reset} An I/O bus reset was detected.","name": "BUS_RESET"},{"file": 47,"line": 359,"col": 4,"docs": " {End of Media} The end of the media was encountered.","name": "END_OF_MEDIA"},{"file": 47,"line": 361,"col": 4,"docs": " The beginning of a tape or partition has been detected.","name": "BEGINNING_OF_MEDIA"},{"file": 47,"line": 363,"col": 4,"docs": " {Media Changed} The media might have changed.","name": "MEDIA_CHECK"},{"file": 47,"line": 365,"col": 4,"docs": " A tape access reached a set mark.","name": "SETMARK_DETECTED"},{"file": 47,"line": 367,"col": 4,"docs": " During a tape access, the end of the data written is reached.","name": "NO_DATA_DETECTED"},{"file": 47,"line": 369,"col": 4,"docs": " The redirector is in use and cannot be unloaded.","name": "REDIRECTOR_HAS_OPEN_HANDLES"},{"file": 47,"line": 371,"col": 4,"docs": " The server is in use and cannot be unloaded.","name": "SERVER_HAS_OPEN_HANDLES"},{"file": 47,"line": 373,"col": 4,"docs": " The specified connection has already been disconnected.","name": "ALREADY_DISCONNECTED"},{"file": 47,"line": 375,"col": 4,"docs": " A long jump has been executed.","name": "LONGJUMP"},{"file": 47,"line": 377,"col": 4,"docs": " A cleaner cartridge is present in the tape library.","name": "CLEANER_CARTRIDGE_INSTALLED"},{"file": 47,"line": 379,"col": 4,"docs": " The Plug and Play query operation was not successful.","name": "PLUGPLAY_QUERY_VETOED"},{"file": 47,"line": 381,"col": 4,"docs": " A frame consolidation has been executed.","name": "UNWIND_CONSOLIDATE"},{"file": 47,"line": 383,"col": 4,"docs": " {Registry Hive Recovered} The registry hive (file): %hs was corrupted and it has been recovered. Some data might have been lost.","name": "REGISTRY_HIVE_RECOVERED"},{"file": 47,"line": 386,"col": 4,"docs": " The application is attempting to run executable code from the module %hs. This might be insecure. An alternative, %hs, is available. Should the application use the secure module %hs?","name": "DLL_MIGHT_BE_INSECURE"},{"file": 47,"line": 390,"col": 4,"docs": " The application is loading executable code from the module %hs. This is secure but might be incompatible with previous releases of the operating system. An alternative, %hs, is available. Should the application use the secure module %hs?","name": "DLL_MIGHT_BE_INCOMPATIBLE"},{"file": 47,"line": 392,"col": 4,"docs": " The create operation stopped after reaching a symbolic link.","name": "STOPPED_ON_SYMLINK"},{"file": 47,"line": 394,"col": 4,"docs": " The device has indicated that cleaning is necessary.","name": "DEVICE_REQUIRES_CLEANING"},{"file": 47,"line": 396,"col": 4,"docs": " The device has indicated that its door is open. Further operations require it closed and secured.","name": "DEVICE_DOOR_OPEN"},{"file": 47,"line": 399,"col": 4,"docs": " Windows discovered a corruption in the file %hs. This file has now been repaired. Check if any data in the file was lost because of the corruption.","name": "DATA_LOST_REPAIR"},{"file": 47,"line": 401,"col": 4,"docs": " Debugger did not handle the exception.","name": "DBG_EXCEPTION_NOT_HANDLED"},{"file": 47,"line": 403,"col": 4,"docs": " The cluster node is already up.","name": "CLUSTER_NODE_ALREADY_UP"},{"file": 47,"line": 405,"col": 4,"docs": " The cluster node is already down.","name": "CLUSTER_NODE_ALREADY_DOWN"},{"file": 47,"line": 407,"col": 4,"docs": " The cluster network is already online.","name": "CLUSTER_NETWORK_ALREADY_ONLINE"},{"file": 47,"line": 409,"col": 4,"docs": " The cluster network is already offline.","name": "CLUSTER_NETWORK_ALREADY_OFFLINE"},{"file": 47,"line": 411,"col": 4,"docs": " The cluster node is already a member of the cluster.","name": "CLUSTER_NODE_ALREADY_MEMBER"},{"file": 47,"line": 413,"col": 4,"docs": " The log could not be set to the requested size.","name": "COULD_NOT_RESIZE_LOG"},{"file": 47,"line": 415,"col": 4,"docs": " There is no transaction metadata on the file.","name": "NO_TXF_METADATA"},{"file": 47,"line": 417,"col": 4,"docs": " The file cannot be recovered because there is a handle still open on it.","name": "CANT_RECOVER_WITH_HANDLE_OPEN"},{"file": 47,"line": 419,"col": 4,"docs": " Transaction metadata is already present on this file and cannot be superseded.","name": "TXF_METADATA_ALREADY_PRESENT"},{"file": 47,"line": 421,"col": 4,"docs": " A transaction scope could not be entered because the scope handler has not been initialized.","name": "TRANSACTION_SCOPE_CALLBACKS_NOT_SET"},{"file": 47,"line": 423,"col": 4,"docs": " {Display Driver Stopped Responding and recovered} The %hs display driver has stopped working normally. The recovery had been performed.","name": "VIDEO_HUNG_DISPLAY_DRIVER_THREAD_RECOVERED"},{"file": 47,"line": 425,"col": 4,"docs": " {Buffer too small} The buffer is too small to contain the entry. No information has been written to the buffer.","name": "FLT_BUFFER_TOO_SMALL"},{"file": 47,"line": 427,"col": 4,"docs": " Volume metadata read or write is incomplete.","name": "FVE_PARTIAL_METADATA"},{"file": 47,"line": 429,"col": 4,"docs": " BitLocker encryption keys were ignored because the volume was in a transient state.","name": "FVE_TRANSIENT_STATE"},{"file": 47,"line": 431,"col": 4,"docs": " {Operation Failed} The requested operation was unsuccessful.","name": "UNSUCCESSFUL"},{"file": 47,"line": 433,"col": 4,"docs": " {Not Implemented} The requested operation is not implemented.","name": "NOT_IMPLEMENTED"},{"file": 47,"line": 435,"col": 4,"docs": " {Invalid Parameter} The specified information class is not a valid information class for the specified object.","name": "INVALID_INFO_CLASS"},{"file": 47,"line": 437,"col": 4,"docs": " The specified information record length does not match the length that is required for the specified information class.","name": "INFO_LENGTH_MISMATCH"},{"file": 47,"line": 439,"col": 4,"docs": " The instruction at 0x%08lx referenced memory at 0x%08lx. The memory could not be %s.","name": "ACCESS_VIOLATION"},{"file": 47,"line": 442,"col": 4,"docs": " The instruction at 0x%08lx referenced memory at 0x%08lx. The required data was not placed into memory because of an I/O error status of 0x%08lx.","name": "IN_PAGE_ERROR"},{"file": 47,"line": 444,"col": 4,"docs": " The page file quota for the process has been exhausted.","name": "PAGEFILE_QUOTA"},{"file": 47,"line": 446,"col": 4,"docs": " An invalid HANDLE was specified.","name": "INVALID_HANDLE"},{"file": 47,"line": 448,"col": 4,"docs": " An invalid initial stack was specified in a call to NtCreateThread.","name": "BAD_INITIAL_STACK"},{"file": 47,"line": 450,"col": 4,"docs": " An invalid initial start address was specified in a call to NtCreateThread.","name": "BAD_INITIAL_PC"},{"file": 47,"line": 452,"col": 4,"docs": " An invalid client ID was specified.","name": "INVALID_CID"},{"file": 47,"line": 454,"col": 4,"docs": " An attempt was made to cancel or set a timer that has an associated APC and the specified thread is not the thread that originally set the timer with an associated APC routine.","name": "TIMER_NOT_CANCELED"},{"file": 47,"line": 456,"col": 4,"docs": " An invalid parameter was passed to a service or function.","name": "INVALID_PARAMETER"},{"file": 47,"line": 458,"col": 4,"docs": " A device that does not exist was specified.","name": "NO_SUCH_DEVICE"},{"file": 47,"line": 460,"col": 4,"docs": " {File Not Found} The file %hs does not exist.","name": "NO_SUCH_FILE"},{"file": 47,"line": 462,"col": 4,"docs": " The specified request is not a valid operation for the target device.","name": "INVALID_DEVICE_REQUEST"},{"file": 47,"line": 465,"col": 4,"docs": " The end-of-file marker has been reached. There is no valid data in the file beyond this marker.","name": "END_OF_FILE"},{"file": 47,"line": 467,"col": 4,"docs": " {Wrong Volume} The wrong volume is in the drive. Insert volume %hs into drive %hs.","name": "WRONG_VOLUME"},{"file": 47,"line": 469,"col": 4,"docs": " {No Disk} There is no disk in the drive. Insert a disk into drive %hs.","name": "NO_MEDIA_IN_DEVICE"},{"file": 47,"line": 472,"col": 4,"docs": " {Unknown Disk Format} The disk in drive %hs is not formatted properly. Check the disk, and reformat it, if needed.","name": "UNRECOGNIZED_MEDIA"},{"file": 47,"line": 474,"col": 4,"docs": " {Sector Not Found} The specified sector does not exist.","name": "NONEXISTENT_SECTOR"},{"file": 47,"line": 476,"col": 4,"docs": " {Still Busy} The specified I/O request packet (IRP) cannot be disposed of because the I/O operation is not complete.","name": "MORE_PROCESSING_REQUIRED"},{"file": 47,"line": 478,"col": 4,"docs": " {Not Enough Quota} Not enough virtual memory or paging file quota is available to complete the specified operation.","name": "NO_MEMORY"},{"file": 47,"line": 480,"col": 4,"docs": " {Conflicting Address Range} The specified address range conflicts with the address space.","name": "CONFLICTING_ADDRESSES"},{"file": 47,"line": 482,"col": 4,"docs": " The address range to unmap is not a mapped view.","name": "NOT_MAPPED_VIEW"},{"file": 47,"line": 484,"col": 4,"docs": " The virtual memory cannot be freed.","name": "UNABLE_TO_FREE_VM"},{"file": 47,"line": 486,"col": 4,"docs": " The specified section cannot be deleted.","name": "UNABLE_TO_DELETE_SECTION"},{"file": 47,"line": 488,"col": 4,"docs": " An invalid system service was specified in a system service call.","name": "INVALID_SYSTEM_SERVICE"},{"file": 47,"line": 490,"col": 4,"docs": " {EXCEPTION} Illegal Instruction An attempt was made to execute an illegal instruction.","name": "ILLEGAL_INSTRUCTION"},{"file": 47,"line": 492,"col": 4,"docs": " {Invalid Lock Sequence} An attempt was made to execute an invalid lock sequence.","name": "INVALID_LOCK_SEQUENCE"},{"file": 47,"line": 494,"col": 4,"docs": " {Invalid Mapping} An attempt was made to create a view for a section that is bigger than the section.","name": "INVALID_VIEW_SIZE"},{"file": 47,"line": 496,"col": 4,"docs": " {Bad File} The attributes of the specified mapping file for a section of memory cannot be read.","name": "INVALID_FILE_FOR_SECTION"},{"file": 47,"line": 498,"col": 4,"docs": " {Already Committed} The specified address range is already committed.","name": "ALREADY_COMMITTED"},{"file": 47,"line": 500,"col": 4,"docs": " {Access Denied} A process has requested access to an object but has not been granted those access rights.","name": "ACCESS_DENIED"},{"file": 47,"line": 502,"col": 4,"docs": " {Buffer Too Small} The buffer is too small to contain the entry. No information has been written to the buffer.","name": "BUFFER_TOO_SMALL"},{"file": 47,"line": 504,"col": 4,"docs": " {Wrong Type} There is a mismatch between the type of object that is required by the requested operation and the type of object that is specified in the request.","name": "OBJECT_TYPE_MISMATCH"},{"file": 47,"line": 506,"col": 4,"docs": " {EXCEPTION} Cannot Continue Windows cannot continue from this exception.","name": "NONCONTINUABLE_EXCEPTION"},{"file": 47,"line": 508,"col": 4,"docs": " An invalid exception disposition was returned by an exception handler.","name": "INVALID_DISPOSITION"},{"file": 47,"line": 510,"col": 4,"docs": " Unwind exception code.","name": "UNWIND"},{"file": 47,"line": 512,"col": 4,"docs": " An invalid or unaligned stack was encountered during an unwind operation.","name": "BAD_STACK"},{"file": 47,"line": 514,"col": 4,"docs": " An invalid unwind target was encountered during an unwind operation.","name": "INVALID_UNWIND_TARGET"},{"file": 47,"line": 516,"col": 4,"docs": " An attempt was made to unlock a page of memory that was not locked.","name": "NOT_LOCKED"},{"file": 47,"line": 518,"col": 4,"docs": " A device parity error on an I/O operation.","name": "PARITY_ERROR"},{"file": 47,"line": 520,"col": 4,"docs": " An attempt was made to decommit uncommitted virtual memory.","name": "UNABLE_TO_DECOMMIT_VM"},{"file": 47,"line": 522,"col": 4,"docs": " An attempt was made to change the attributes on memory that has not been committed.","name": "NOT_COMMITTED"},{"file": 47,"line": 524,"col": 4,"docs": " Invalid object attributes specified to NtCreatePort or invalid port attributes specified to NtConnectPort.","name": "INVALID_PORT_ATTRIBUTES"},{"file": 47,"line": 526,"col": 4,"docs": " The length of the message that was passed to NtRequestPort or NtRequestWaitReplyPort is longer than the maximum message that is allowed by the port.","name": "PORT_MESSAGE_TOO_LONG"},{"file": 47,"line": 528,"col": 4,"docs": " An invalid combination of parameters was specified.","name": "INVALID_PARAMETER_MIX"},{"file": 47,"line": 530,"col": 4,"docs": " An attempt was made to lower a quota limit below the current usage.","name": "INVALID_QUOTA_LOWER"},{"file": 47,"line": 532,"col": 4,"docs": " {Corrupt Disk} The file system structure on the disk is corrupt and unusable. Run the Chkdsk utility on the volume %hs.","name": "DISK_CORRUPT_ERROR"},{"file": 47,"line": 534,"col": 4,"docs": " The object name is invalid.","name": "OBJECT_NAME_INVALID"},{"file": 47,"line": 536,"col": 4,"docs": " The object name is not found.","name": "OBJECT_NAME_NOT_FOUND"},{"file": 47,"line": 538,"col": 4,"docs": " The object name already exists.","name": "OBJECT_NAME_COLLISION"},{"file": 47,"line": 540,"col": 4,"docs": " An attempt was made to send a message to a disconnected communication port.","name": "PORT_DISCONNECTED"},{"file": 47,"line": 542,"col": 4,"docs": " An attempt was made to attach to a device that was already attached to another device.","name": "DEVICE_ALREADY_ATTACHED"},{"file": 47,"line": 544,"col": 4,"docs": " The object path component was not a directory object.","name": "OBJECT_PATH_INVALID"},{"file": 47,"line": 546,"col": 4,"docs": " {Path Not Found} The path %hs does not exist.","name": "OBJECT_PATH_NOT_FOUND"},{"file": 47,"line": 548,"col": 4,"docs": " The object path component was not a directory object.","name": "OBJECT_PATH_SYNTAX_BAD"},{"file": 47,"line": 550,"col": 4,"docs": " {Data Overrun} A data overrun error occurred.","name": "DATA_OVERRUN"},{"file": 47,"line": 552,"col": 4,"docs": " {Data Late} A data late error occurred.","name": "DATA_LATE_ERROR"},{"file": 47,"line": 554,"col": 4,"docs": " {Data Error} An error occurred in reading or writing data.","name": "DATA_ERROR"},{"file": 47,"line": 556,"col": 4,"docs": " {Bad CRC} A cyclic redundancy check (CRC) checksum error occurred.","name": "CRC_ERROR"},{"file": 47,"line": 558,"col": 4,"docs": " {Section Too Large} The specified section is too big to map the file.","name": "SECTION_TOO_BIG"},{"file": 47,"line": 560,"col": 4,"docs": " The NtConnectPort request is refused.","name": "PORT_CONNECTION_REFUSED"},{"file": 47,"line": 562,"col": 4,"docs": " The type of port handle is invalid for the operation that is requested.","name": "INVALID_PORT_HANDLE"},{"file": 47,"line": 564,"col": 4,"docs": " A file cannot be opened because the share access flags are incompatible.","name": "SHARING_VIOLATION"},{"file": 47,"line": 566,"col": 4,"docs": " Insufficient quota exists to complete the operation.","name": "QUOTA_EXCEEDED"},{"file": 47,"line": 568,"col": 4,"docs": " The specified page protection was not valid.","name": "INVALID_PAGE_PROTECTION"},{"file": 47,"line": 570,"col": 4,"docs": " An attempt to release a mutant object was made by a thread that was not the owner of the mutant object.","name": "MUTANT_NOT_OWNED"},{"file": 47,"line": 572,"col": 4,"docs": " An attempt was made to release a semaphore such that its maximum count would have been exceeded.","name": "SEMAPHORE_LIMIT_EXCEEDED"},{"file": 47,"line": 574,"col": 4,"docs": " An attempt was made to set the DebugPort or ExceptionPort of a process, but a port already exists in the process, or an attempt was made to set the CompletionPort of a file but a port was already set in the file, or an attempt was made to set the associated completion port of an ALPC port but it is already set.","name": "PORT_ALREADY_SET"},{"file": 47,"line": 576,"col": 4,"docs": " An attempt was made to query image information on a section that does not map an image.","name": "SECTION_NOT_IMAGE"},{"file": 47,"line": 578,"col": 4,"docs": " An attempt was made to suspend a thread whose suspend count was at its maximum.","name": "SUSPEND_COUNT_EXCEEDED"},{"file": 47,"line": 580,"col": 4,"docs": " An attempt was made to suspend a thread that has begun termination.","name": "THREAD_IS_TERMINATING"},{"file": 47,"line": 582,"col": 4,"docs": " An attempt was made to set the working set limit to an invalid value (for example, the minimum greater than maximum).","name": "BAD_WORKING_SET_LIMIT"},{"file": 47,"line": 584,"col": 4,"docs": " A section was created to map a file that is not compatible with an already existing section that maps the same file.","name": "INCOMPATIBLE_FILE_MAP"},{"file": 47,"line": 586,"col": 4,"docs": " A view to a section specifies a protection that is incompatible with the protection of the initial view.","name": "SECTION_PROTECTION"},{"file": 47,"line": 588,"col": 4,"docs": " An operation involving EAs failed because the file system does not support EAs.","name": "EAS_NOT_SUPPORTED"},{"file": 47,"line": 590,"col": 4,"docs": " An EA operation failed because the EA set is too large.","name": "EA_TOO_LARGE"},{"file": 47,"line": 592,"col": 4,"docs": " An EA operation failed because the name or EA index is invalid.","name": "NONEXISTENT_EA_ENTRY"},{"file": 47,"line": 594,"col": 4,"docs": " The file for which EAs were requested has no EAs.","name": "NO_EAS_ON_FILE"},{"file": 47,"line": 596,"col": 4,"docs": " The EA is corrupt and cannot be read.","name": "EA_CORRUPT_ERROR"},{"file": 47,"line": 598,"col": 4,"docs": " A requested read/write cannot be granted due to a conflicting file lock.","name": "FILE_LOCK_CONFLICT"},{"file": 47,"line": 600,"col": 4,"docs": " A requested file lock cannot be granted due to other existing locks.","name": "LOCK_NOT_GRANTED"},{"file": 47,"line": 602,"col": 4,"docs": " A non-close operation has been requested of a file object that has a delete pending.","name": "DELETE_PENDING"},{"file": 47,"line": 605,"col": 4,"docs": " An attempt was made to set the control attribute on a file. This attribute is not supported in the destination file system.","name": "CTL_FILE_NOT_SUPPORTED"},{"file": 47,"line": 608,"col": 4,"docs": " Indicates a revision number that was encountered or specified is not one that is known by the service. It might be a more recent revision than the service is aware of.","name": "UNKNOWN_REVISION"},{"file": 47,"line": 610,"col": 4,"docs": " Indicates that two revision levels are incompatible.","name": "REVISION_MISMATCH"},{"file": 47,"line": 612,"col": 4,"docs": " Indicates a particular security ID cannot be assigned as the owner of an object.","name": "INVALID_OWNER"},{"file": 47,"line": 614,"col": 4,"docs": " Indicates a particular security ID cannot be assigned as the primary group of an object.","name": "INVALID_PRIMARY_GROUP"},{"file": 47,"line": 616,"col": 4,"docs": " An attempt has been made to operate on an impersonation token by a thread that is not currently impersonating a client.","name": "NO_IMPERSONATION_TOKEN"},{"file": 47,"line": 618,"col": 4,"docs": " A mandatory group cannot be disabled.","name": "CANT_DISABLE_MANDATORY"},{"file": 47,"line": 620,"col": 4,"docs": " No logon servers are currently available to service the logon request.","name": "NO_LOGON_SERVERS"},{"file": 47,"line": 622,"col": 4,"docs": " A specified logon session does not exist. It might already have been terminated.","name": "NO_SUCH_LOGON_SESSION"},{"file": 47,"line": 624,"col": 4,"docs": " A specified privilege does not exist.","name": "NO_SUCH_PRIVILEGE"},{"file": 47,"line": 626,"col": 4,"docs": " A required privilege is not held by the client.","name": "PRIVILEGE_NOT_HELD"},{"file": 47,"line": 628,"col": 4,"docs": " The name provided is not a properly formed account name.","name": "INVALID_ACCOUNT_NAME"},{"file": 47,"line": 630,"col": 4,"docs": " The specified account already exists.","name": "USER_EXISTS"},{"file": 47,"line": 632,"col": 4,"docs": " The specified account does not exist.","name": "NO_SUCH_USER"},{"file": 47,"line": 634,"col": 4,"docs": " The specified group already exists.","name": "GROUP_EXISTS"},{"file": 47,"line": 636,"col": 4,"docs": " The specified group does not exist.","name": "NO_SUCH_GROUP"},{"file": 47,"line": 639,"col": 4,"docs": " The specified user account is already in the specified group account. Also used to indicate a group cannot be deleted because it contains a member.","name": "MEMBER_IN_GROUP"},{"file": 47,"line": 641,"col": 4,"docs": " The specified user account is not a member of the specified group account.","name": "MEMBER_NOT_IN_GROUP"},{"file": 47,"line": 644,"col": 4,"docs": " Indicates the requested operation would disable or delete the last remaining administration account. This is not allowed to prevent creating a situation in which the system cannot be administrated.","name": "LAST_ADMIN"},{"file": 47,"line": 646,"col": 4,"docs": " When trying to update a password, this return status indicates that the value provided as the current password is not correct.","name": "WRONG_PASSWORD"},{"file": 47,"line": 648,"col": 4,"docs": " When trying to update a password, this return status indicates that the value provided for the new password contains values that are not allowed in passwords.","name": "ILL_FORMED_PASSWORD"},{"file": 47,"line": 651,"col": 4,"docs": " When trying to update a password, this status indicates that some password update rule has been violated. For example, the password might not meet length criteria.","name": "PASSWORD_RESTRICTION"},{"file": 47,"line": 654,"col": 4,"docs": " The attempted logon is invalid. This is either due to a bad username or authentication information.","name": "LOGON_FAILURE"},{"file": 47,"line": 656,"col": 4,"docs": " Indicates a referenced user name and authentication information are valid, but some user account restriction has prevented successful authentication (such as time-of-day restrictions).","name": "ACCOUNT_RESTRICTION"},{"file": 47,"line": 658,"col": 4,"docs": " The user account has time restrictions and cannot be logged onto at this time.","name": "INVALID_LOGON_HOURS"},{"file": 47,"line": 660,"col": 4,"docs": " The user account is restricted so that it cannot be used to log on from the source workstation.","name": "INVALID_WORKSTATION"},{"file": 47,"line": 662,"col": 4,"docs": " The user account password has expired.","name": "PASSWORD_EXPIRED"},{"file": 47,"line": 664,"col": 4,"docs": " The referenced account is currently disabled and cannot be logged on to.","name": "ACCOUNT_DISABLED"},{"file": 47,"line": 666,"col": 4,"docs": " None of the information to be translated has been translated.","name": "NONE_MAPPED"},{"file": 47,"line": 668,"col": 4,"docs": " The number of LUIDs requested cannot be allocated with a single allocation.","name": "TOO_MANY_LUIDS_REQUESTED"},{"file": 47,"line": 670,"col": 4,"docs": " Indicates there are no more LUIDs to allocate.","name": "LUIDS_EXHAUSTED"},{"file": 47,"line": 672,"col": 4,"docs": " Indicates the sub-authority value is invalid for the particular use.","name": "INVALID_SUB_AUTHORITY"},{"file": 47,"line": 674,"col": 4,"docs": " Indicates the ACL structure is not valid.","name": "INVALID_ACL"},{"file": 47,"line": 676,"col": 4,"docs": " Indicates the SID structure is not valid.","name": "INVALID_SID"},{"file": 47,"line": 678,"col": 4,"docs": " Indicates the SECURITY_DESCRIPTOR structure is not valid.","name": "INVALID_SECURITY_DESCR"},{"file": 47,"line": 680,"col": 4,"docs": " Indicates the specified procedure address cannot be found in the DLL.","name": "PROCEDURE_NOT_FOUND"},{"file": 47,"line": 683,"col": 4,"docs": " {Bad Image} %hs is either not designed to run on Windows or it contains an error. Try installing the program again using the original installation media or contact your system administrator or the software vendor for support.","name": "INVALID_IMAGE_FORMAT"},{"file": 47,"line": 686,"col": 4,"docs": " An attempt was made to reference a token that does not exist. This is typically done by referencing the token that is associated with a thread when the thread is not impersonating a client.","name": "NO_TOKEN"},{"file": 47,"line": 689,"col": 4,"docs": " Indicates that an attempt to build either an inherited ACL or ACE was not successful. This can be caused by a number of things. One of the more probable causes is the replacement of a CreatorId with a SID that did not fit into the ACE or ACL.","name": "BAD_INHERITANCE_ACL"},{"file": 47,"line": 691,"col": 4,"docs": " The range specified in NtUnlockFile was not locked.","name": "RANGE_NOT_LOCKED"},{"file": 47,"line": 693,"col": 4,"docs": " An operation failed because the disk was full.","name": "DISK_FULL"},{"file": 47,"line": 695,"col": 4,"docs": " The GUID allocation server is disabled at the moment.","name": "SERVER_DISABLED"},{"file": 47,"line": 697,"col": 4,"docs": " The GUID allocation server is enabled at the moment.","name": "SERVER_NOT_DISABLED"},{"file": 47,"line": 699,"col": 4,"docs": " Too many GUIDs were requested from the allocation server at once.","name": "TOO_MANY_GUIDS_REQUESTED"},{"file": 47,"line": 701,"col": 4,"docs": " The GUIDs could not be allocated because the Authority Agent was exhausted.","name": "GUIDS_EXHAUSTED"},{"file": 47,"line": 703,"col": 4,"docs": " The value provided was an invalid value for an identifier authority.","name": "INVALID_ID_AUTHORITY"},{"file": 47,"line": 705,"col": 4,"docs": " No more authority agent values are available for the particular identifier authority value.","name": "AGENTS_EXHAUSTED"},{"file": 47,"line": 707,"col": 4,"docs": " An invalid volume label has been specified.","name": "INVALID_VOLUME_LABEL"},{"file": 47,"line": 709,"col": 4,"docs": " A mapped section could not be extended.","name": "SECTION_NOT_EXTENDED"},{"file": 47,"line": 711,"col": 4,"docs": " Specified section to flush does not map a data file.","name": "NOT_MAPPED_DATA"},{"file": 47,"line": 713,"col": 4,"docs": " Indicates the specified image file did not contain a resource section.","name": "RESOURCE_DATA_NOT_FOUND"},{"file": 47,"line": 715,"col": 4,"docs": " Indicates the specified resource type cannot be found in the image file.","name": "RESOURCE_TYPE_NOT_FOUND"},{"file": 47,"line": 717,"col": 4,"docs": " Indicates the specified resource name cannot be found in the image file.","name": "RESOURCE_NAME_NOT_FOUND"},{"file": 47,"line": 719,"col": 4,"docs": " {EXCEPTION} Array bounds exceeded.","name": "ARRAY_BOUNDS_EXCEEDED"},{"file": 47,"line": 721,"col": 4,"docs": " {EXCEPTION} Floating-point denormal operand.","name": "FLOAT_DENORMAL_OPERAND"},{"file": 47,"line": 723,"col": 4,"docs": " {EXCEPTION} Floating-point division by zero.","name": "FLOAT_DIVIDE_BY_ZERO"},{"file": 47,"line": 725,"col": 4,"docs": " {EXCEPTION} Floating-point inexact result.","name": "FLOAT_INEXACT_RESULT"},{"file": 47,"line": 727,"col": 4,"docs": " {EXCEPTION} Floating-point invalid operation.","name": "FLOAT_INVALID_OPERATION"},{"file": 47,"line": 729,"col": 4,"docs": " {EXCEPTION} Floating-point overflow.","name": "FLOAT_OVERFLOW"},{"file": 47,"line": 731,"col": 4,"docs": " {EXCEPTION} Floating-point stack check.","name": "FLOAT_STACK_CHECK"},{"file": 47,"line": 733,"col": 4,"docs": " {EXCEPTION} Floating-point underflow.","name": "FLOAT_UNDERFLOW"},{"file": 47,"line": 735,"col": 4,"docs": " {EXCEPTION} Integer division by zero.","name": "INTEGER_DIVIDE_BY_ZERO"},{"file": 47,"line": 737,"col": 4,"docs": " {EXCEPTION} Integer overflow.","name": "INTEGER_OVERFLOW"},{"file": 47,"line": 739,"col": 4,"docs": " {EXCEPTION} Privileged instruction.","name": "PRIVILEGED_INSTRUCTION"},{"file": 47,"line": 741,"col": 4,"docs": " An attempt was made to install more paging files than the system supports.","name": "TOO_MANY_PAGING_FILES"},{"file": 47,"line": 743,"col": 4,"docs": " The volume for a file has been externally altered such that the opened file is no longer valid.","name": "FILE_INVALID"},{"file": 47,"line": 747,"col": 4,"docs": " When a block of memory is allotted for future updates, such as the memory allocated to hold discretionary access control and primary group information, successive updates might exceed the amount of memory originally allotted. Because a quota might already have been charged to several processes that have handles to the object, it is not reasonable to alter the size of the allocated memory. Instead, a request that requires more memory than has been allotted must fail and the STATUS_ALLOTTED_SPACE_EXCEEDED error returned.","name": "ALLOTTED_SPACE_EXCEEDED"},{"file": 47,"line": 749,"col": 4,"docs": " Insufficient system resources exist to complete the API.","name": "INSUFFICIENT_RESOURCES"},{"file": 47,"line": 751,"col": 4,"docs": " An attempt has been made to open a DFS exit path control file.","name": "DFS_EXIT_PATH_FOUND"},{"file": 47,"line": 753,"col": 4,"docs": " There are bad blocks (sectors) on the hard disk.","name": "DEVICE_DATA_ERROR"},{"file": 47,"line": 755,"col": 4,"docs": " There is bad cabling, non-termination, or the controller is not able to obtain access to the hard disk.","name": "DEVICE_NOT_CONNECTED"},{"file": 47,"line": 757,"col": 4,"docs": " Virtual memory cannot be freed because the base address is not the base of the region and a region size of zero was specified.","name": "FREE_VM_NOT_AT_BASE"},{"file": 47,"line": 759,"col": 4,"docs": " An attempt was made to free virtual memory that is not allocated.","name": "MEMORY_NOT_ALLOCATED"},{"file": 47,"line": 761,"col": 4,"docs": " The working set is not big enough to allow the requested pages to be locked.","name": "WORKING_SET_QUOTA"},{"file": 47,"line": 764,"col": 4,"docs": " {Write Protect Error} The disk cannot be written to because it is write-protected. Remove the write protection from the volume %hs in drive %hs.","name": "MEDIA_WRITE_PROTECTED"},{"file": 47,"line": 767,"col": 4,"docs": " {Drive Not Ready} The drive is not ready for use; its door might be open. Check drive %hs and make sure that a disk is inserted and that the drive door is closed.","name": "DEVICE_NOT_READY"},{"file": 47,"line": 769,"col": 4,"docs": " The specified attributes are invalid or are incompatible with the attributes for the group as a whole.","name": "INVALID_GROUP_ATTRIBUTES"},{"file": 47,"line": 772,"col": 4,"docs": " A specified impersonation level is invalid. Also used to indicate that a required impersonation level was not provided.","name": "BAD_IMPERSONATION_LEVEL"},{"file": 47,"line": 774,"col": 4,"docs": " An attempt was made to open an anonymous-level token. Anonymous tokens cannot be opened.","name": "CANT_OPEN_ANONYMOUS"},{"file": 47,"line": 776,"col": 4,"docs": " The validation information class requested was invalid.","name": "BAD_VALIDATION_CLASS"},{"file": 47,"line": 778,"col": 4,"docs": " The type of a token object is inappropriate for its attempted use.","name": "BAD_TOKEN_TYPE"},{"file": 47,"line": 780,"col": 4,"docs": " The type of a token object is inappropriate for its attempted use.","name": "BAD_MASTER_BOOT_RECORD"},{"file": 47,"line": 782,"col": 4,"docs": " An attempt was made to execute an instruction at an unaligned address and the host system does not support unaligned instruction references.","name": "INSTRUCTION_MISALIGNMENT"},{"file": 47,"line": 784,"col": 4,"docs": " The maximum named pipe instance count has been reached.","name": "INSTANCE_NOT_AVAILABLE"},{"file": 47,"line": 786,"col": 4,"docs": " An instance of a named pipe cannot be found in the listening state.","name": "PIPE_NOT_AVAILABLE"},{"file": 47,"line": 788,"col": 4,"docs": " The named pipe is not in the connected or closing state.","name": "INVALID_PIPE_STATE"},{"file": 47,"line": 790,"col": 4,"docs": " The specified pipe is set to complete operations and there are current I/O operations queued so that it cannot be changed to queue operations.","name": "PIPE_BUSY"},{"file": 47,"line": 792,"col": 4,"docs": " The specified handle is not open to the server end of the named pipe.","name": "ILLEGAL_FUNCTION"},{"file": 47,"line": 794,"col": 4,"docs": " The specified named pipe is in the disconnected state.","name": "PIPE_DISCONNECTED"},{"file": 47,"line": 796,"col": 4,"docs": " The specified named pipe is in the closing state.","name": "PIPE_CLOSING"},{"file": 47,"line": 798,"col": 4,"docs": " The specified named pipe is in the connected state.","name": "PIPE_CONNECTED"},{"file": 47,"line": 800,"col": 4,"docs": " The specified named pipe is in the listening state.","name": "PIPE_LISTENING"},{"file": 47,"line": 802,"col": 4,"docs": " The specified named pipe is not in message mode.","name": "INVALID_READ_MODE"},{"file": 47,"line": 804,"col": 4,"docs": " {Device Timeout} The specified I/O operation on %hs was not completed before the time-out period expired.","name": "IO_TIMEOUT"},{"file": 47,"line": 806,"col": 4,"docs": " The specified file has been closed by another process.","name": "FILE_FORCED_CLOSED"},{"file": 47,"line": 808,"col": 4,"docs": " Profiling is not started.","name": "PROFILING_NOT_STARTED"},{"file": 47,"line": 810,"col": 4,"docs": " Profiling is not stopped.","name": "PROFILING_NOT_STOPPED"},{"file": 47,"line": 812,"col": 4,"docs": " The passed ACL did not contain the minimum required information.","name": "COULD_NOT_INTERPRET"},{"file": 47,"line": 814,"col": 4,"docs": " The file that was specified as a target is a directory, and the caller specified that it could be anything but a directory.","name": "FILE_IS_A_DIRECTORY"},{"file": 47,"line": 816,"col": 4,"docs": " The request is not supported.","name": "NOT_SUPPORTED"},{"file": 47,"line": 818,"col": 4,"docs": " This remote computer is not listening.","name": "REMOTE_NOT_LISTENING"},{"file": 47,"line": 820,"col": 4,"docs": " A duplicate name exists on the network.","name": "DUPLICATE_NAME"},{"file": 47,"line": 822,"col": 4,"docs": " The network path cannot be located.","name": "BAD_NETWORK_PATH"},{"file": 47,"line": 824,"col": 4,"docs": " The network is busy.","name": "NETWORK_BUSY"},{"file": 47,"line": 826,"col": 4,"docs": " This device does not exist.","name": "DEVICE_DOES_NOT_EXIST"},{"file": 47,"line": 828,"col": 4,"docs": " The network BIOS command limit has been reached.","name": "TOO_MANY_COMMANDS"},{"file": 47,"line": 830,"col": 4,"docs": " An I/O adapter hardware error has occurred.","name": "ADAPTER_HARDWARE_ERROR"},{"file": 47,"line": 832,"col": 4,"docs": " The network responded incorrectly.","name": "INVALID_NETWORK_RESPONSE"},{"file": 47,"line": 834,"col": 4,"docs": " An unexpected network error occurred.","name": "UNEXPECTED_NETWORK_ERROR"},{"file": 47,"line": 836,"col": 4,"docs": " The remote adapter is not compatible.","name": "BAD_REMOTE_ADAPTER"},{"file": 47,"line": 838,"col": 4,"docs": " The print queue is full.","name": "PRINT_QUEUE_FULL"},{"file": 47,"line": 840,"col": 4,"docs": " Space to store the file that is waiting to be printed is not available on the server.","name": "NO_SPOOL_SPACE"},{"file": 47,"line": 842,"col": 4,"docs": " The requested print file has been canceled.","name": "PRINT_CANCELLED"},{"file": 47,"line": 844,"col": 4,"docs": " The network name was deleted.","name": "NETWORK_NAME_DELETED"},{"file": 47,"line": 846,"col": 4,"docs": " Network access is denied.","name": "NETWORK_ACCESS_DENIED"},{"file": 47,"line": 848,"col": 4,"docs": " {Incorrect Network Resource Type} The specified device type (LPT, for example) conflicts with the actual device type on the remote resource.","name": "BAD_DEVICE_TYPE"},{"file": 47,"line": 850,"col": 4,"docs": " {Network Name Not Found} The specified share name cannot be found on the remote server.","name": "BAD_NETWORK_NAME"},{"file": 47,"line": 852,"col": 4,"docs": " The name limit for the network adapter card of the local computer was exceeded.","name": "TOO_MANY_NAMES"},{"file": 47,"line": 854,"col": 4,"docs": " The network BIOS session limit was exceeded.","name": "TOO_MANY_SESSIONS"},{"file": 47,"line": 856,"col": 4,"docs": " File sharing has been temporarily paused.","name": "SHARING_PAUSED"},{"file": 47,"line": 858,"col": 4,"docs": " No more connections can be made to this remote computer at this time because the computer has already accepted the maximum number of connections.","name": "REQUEST_NOT_ACCEPTED"},{"file": 47,"line": 860,"col": 4,"docs": " Print or disk redirection is temporarily paused.","name": "REDIRECTOR_PAUSED"},{"file": 47,"line": 862,"col": 4,"docs": " A network data fault occurred.","name": "NET_WRITE_FAULT"},{"file": 47,"line": 864,"col": 4,"docs": " The number of active profiling objects is at the maximum and no more can be started.","name": "PROFILING_AT_LIMIT"},{"file": 47,"line": 866,"col": 4,"docs": " {Incorrect Volume} The destination file of a rename request is located on a different device than the source of the rename request.","name": "NOT_SAME_DEVICE"},{"file": 47,"line": 868,"col": 4,"docs": " The specified file has been renamed and thus cannot be modified.","name": "FILE_RENAMED"},{"file": 47,"line": 870,"col": 4,"docs": " {Network Request Timeout} The session with a remote server has been disconnected because the time-out interval for a request has expired.","name": "VIRTUAL_CIRCUIT_CLOSED"},{"file": 47,"line": 872,"col": 4,"docs": " Indicates an attempt was made to operate on the security of an object that does not have security associated with it.","name": "NO_SECURITY_ON_OBJECT"},{"file": 47,"line": 874,"col": 4,"docs": " Used to indicate that an operation cannot continue without blocking for I/O.","name": "CANT_WAIT"},{"file": 47,"line": 876,"col": 4,"docs": " Used to indicate that a read operation was done on an empty pipe.","name": "PIPE_EMPTY"},{"file": 47,"line": 878,"col": 4,"docs": " Configuration information could not be read from the domain controller, either because the machine is unavailable or access has been denied.","name": "CANT_ACCESS_DOMAIN_INFO"},{"file": 47,"line": 880,"col": 4,"docs": " Indicates that a thread attempted to terminate itself by default (called NtTerminateThread with NULL) and it was the last thread in the current process.","name": "CANT_TERMINATE_SELF"},{"file": 47,"line": 882,"col": 4,"docs": " Indicates the Sam Server was in the wrong state to perform the desired operation.","name": "INVALID_SERVER_STATE"},{"file": 47,"line": 884,"col": 4,"docs": " Indicates the domain was in the wrong state to perform the desired operation.","name": "INVALID_DOMAIN_STATE"},{"file": 47,"line": 886,"col": 4,"docs": " This operation is only allowed for the primary domain controller of the domain.","name": "INVALID_DOMAIN_ROLE"},{"file": 47,"line": 888,"col": 4,"docs": " The specified domain did not exist.","name": "NO_SUCH_DOMAIN"},{"file": 47,"line": 890,"col": 4,"docs": " The specified domain already exists.","name": "DOMAIN_EXISTS"},{"file": 47,"line": 892,"col": 4,"docs": " An attempt was made to exceed the limit on the number of domains per server for this release.","name": "DOMAIN_LIMIT_EXCEEDED"},{"file": 47,"line": 894,"col": 4,"docs": " An error status returned when the opportunistic lock (oplock) request is denied.","name": "OPLOCK_NOT_GRANTED"},{"file": 47,"line": 896,"col": 4,"docs": " An error status returned when an invalid opportunistic lock (oplock) acknowledgment is received by a file system.","name": "INVALID_OPLOCK_PROTOCOL"},{"file": 47,"line": 898,"col": 4,"docs": " This error indicates that the requested operation cannot be completed due to a catastrophic media failure or an on-disk data structure corruption.","name": "INTERNAL_DB_CORRUPTION"},{"file": 47,"line": 900,"col": 4,"docs": " An internal error occurred.","name": "INTERNAL_ERROR"},{"file": 47,"line": 902,"col": 4,"docs": " Indicates generic access types were contained in an access mask which should already be mapped to non-generic access types.","name": "GENERIC_NOT_MAPPED"},{"file": 47,"line": 904,"col": 4,"docs": " Indicates a security descriptor is not in the necessary format (absolute or self-relative).","name": "BAD_DESCRIPTOR_FORMAT"},{"file": 47,"line": 907,"col": 4,"docs": " An access to a user buffer failed at an expected point in time. This code is defined because the caller does not want to accept STATUS_ACCESS_VIOLATION in its filter.","name": "INVALID_USER_BUFFER"},{"file": 47,"line": 910,"col": 4,"docs": " If an I/O error that is not defined in the standard FsRtl filter is returned, it is converted to the following error, which is guaranteed to be in the filter. In this case, information is lost; however, the filter correctly handles the exception.","name": "UNEXPECTED_IO_ERROR"},{"file": 47,"line": 913,"col": 4,"docs": " If an MM error that is not defined in the standard FsRtl filter is returned, it is converted to one of the following errors, which are guaranteed to be in the filter. In this case, information is lost; however, the filter correctly handles the exception.","name": "UNEXPECTED_MM_CREATE_ERR"},{"file": 47,"line": 916,"col": 4,"docs": " If an MM error that is not defined in the standard FsRtl filter is returned, it is converted to one of the following errors, which are guaranteed to be in the filter. In this case, information is lost; however, the filter correctly handles the exception.","name": "UNEXPECTED_MM_MAP_ERROR"},{"file": 47,"line": 919,"col": 4,"docs": " If an MM error that is not defined in the standard FsRtl filter is returned, it is converted to one of the following errors, which are guaranteed to be in the filter. In this case, information is lost; however, the filter correctly handles the exception.","name": "UNEXPECTED_MM_EXTEND_ERR"},{"file": 47,"line": 922,"col": 4,"docs": " The requested action is restricted for use by logon processes only. The calling process has not registered as a logon process.","name": "NOT_LOGON_PROCESS"},{"file": 47,"line": 924,"col": 4,"docs": " An attempt has been made to start a new session manager or LSA logon session by using an ID that is already in use.","name": "LOGON_SESSION_EXISTS"},{"file": 47,"line": 926,"col": 4,"docs": " An invalid parameter was passed to a service or function as the first argument.","name": "INVALID_PARAMETER_1"},{"file": 47,"line": 928,"col": 4,"docs": " An invalid parameter was passed to a service or function as the second argument.","name": "INVALID_PARAMETER_2"},{"file": 47,"line": 930,"col": 4,"docs": " An invalid parameter was passed to a service or function as the third argument.","name": "INVALID_PARAMETER_3"},{"file": 47,"line": 932,"col": 4,"docs": " An invalid parameter was passed to a service or function as the fourth argument.","name": "INVALID_PARAMETER_4"},{"file": 47,"line": 934,"col": 4,"docs": " An invalid parameter was passed to a service or function as the fifth argument.","name": "INVALID_PARAMETER_5"},{"file": 47,"line": 936,"col": 4,"docs": " An invalid parameter was passed to a service or function as the sixth argument.","name": "INVALID_PARAMETER_6"},{"file": 47,"line": 938,"col": 4,"docs": " An invalid parameter was passed to a service or function as the seventh argument.","name": "INVALID_PARAMETER_7"},{"file": 47,"line": 940,"col": 4,"docs": " An invalid parameter was passed to a service or function as the eighth argument.","name": "INVALID_PARAMETER_8"},{"file": 47,"line": 942,"col": 4,"docs": " An invalid parameter was passed to a service or function as the ninth argument.","name": "INVALID_PARAMETER_9"},{"file": 47,"line": 944,"col": 4,"docs": " An invalid parameter was passed to a service or function as the tenth argument.","name": "INVALID_PARAMETER_10"},{"file": 47,"line": 946,"col": 4,"docs": " An invalid parameter was passed to a service or function as the eleventh argument.","name": "INVALID_PARAMETER_11"},{"file": 47,"line": 948,"col": 4,"docs": " An invalid parameter was passed to a service or function as the twelfth argument.","name": "INVALID_PARAMETER_12"},{"file": 47,"line": 950,"col": 4,"docs": " An attempt was made to access a network file, but the network software was not yet started.","name": "REDIRECTOR_NOT_STARTED"},{"file": 47,"line": 952,"col": 4,"docs": " An attempt was made to start the redirector, but the redirector has already been started.","name": "REDIRECTOR_STARTED"},{"file": 47,"line": 954,"col": 4,"docs": " A new guard page for the stack cannot be created.","name": "STACK_OVERFLOW"},{"file": 47,"line": 956,"col": 4,"docs": " A specified authentication package is unknown.","name": "NO_SUCH_PACKAGE"},{"file": 47,"line": 958,"col": 4,"docs": " A malformed function table was encountered during an unwind operation.","name": "BAD_FUNCTION_TABLE"},{"file": 47,"line": 960,"col": 4,"docs": " Indicates the specified environment variable name was not found in the specified environment block.","name": "VARIABLE_NOT_FOUND"},{"file": 47,"line": 962,"col": 4,"docs": " Indicates that the directory trying to be deleted is not empty.","name": "DIRECTORY_NOT_EMPTY"},{"file": 47,"line": 964,"col": 4,"docs": " {Corrupt File} The file or directory %hs is corrupt and unreadable. Run the Chkdsk utility.","name": "FILE_CORRUPT_ERROR"},{"file": 47,"line": 966,"col": 4,"docs": " A requested opened file is not a directory.","name": "NOT_A_DIRECTORY"},{"file": 47,"line": 968,"col": 4,"docs": " The logon session is not in a state that is consistent with the requested operation.","name": "BAD_LOGON_SESSION_STATE"},{"file": 47,"line": 971,"col": 4,"docs": " An internal LSA error has occurred. An authentication package has requested the creation of a logon session but the ID of an already existing logon session has been specified.","name": "LOGON_SESSION_COLLISION"},{"file": 47,"line": 973,"col": 4,"docs": " A specified name string is too long for its intended use.","name": "NAME_TOO_LONG"},{"file": 47,"line": 975,"col": 4,"docs": " The user attempted to force close the files on a redirected drive, but there were opened files on the drive, and the user did not specify a sufficient level of force.","name": "FILES_OPEN"},{"file": 47,"line": 977,"col": 4,"docs": " The user attempted to force close the files on a redirected drive, but there were opened directories on the drive, and the user did not specify a sufficient level of force.","name": "CONNECTION_IN_USE"},{"file": 47,"line": 979,"col": 4,"docs": " RtlFindMessage could not locate the requested message ID in the message table resource.","name": "MESSAGE_NOT_FOUND"},{"file": 47,"line": 981,"col": 4,"docs": " An attempt was made to duplicate an object handle into or out of an exiting process.","name": "PROCESS_IS_TERMINATING"},{"file": 47,"line": 983,"col": 4,"docs": " Indicates an invalid value has been provided for the LogonType requested.","name": "INVALID_LOGON_TYPE"},{"file": 47,"line": 986,"col": 4,"docs": " Indicates that an attempt was made to assign protection to a file system file or directory and one of the SIDs in the security descriptor could not be translated into a GUID that could be stored by the file system. This causes the protection attempt to fail, which might cause a file creation attempt to fail.","name": "NO_GUID_TRANSLATION"},{"file": 47,"line": 988,"col": 4,"docs": " Indicates that an attempt has been made to impersonate via a named pipe that has not yet been read from.","name": "CANNOT_IMPERSONATE"},{"file": 47,"line": 990,"col": 4,"docs": " Indicates that the specified image is already loaded.","name": "IMAGE_ALREADY_LOADED"},{"file": 47,"line": 992,"col": 4,"docs": " Indicates that an attempt was made to change the size of the LDT for a process that has no LDT.","name": "NO_LDT"},{"file": 47,"line": 994,"col": 4,"docs": " Indicates that an attempt was made to grow an LDT by setting its size, or that the size was not an even number of selectors.","name": "INVALID_LDT_SIZE"},{"file": 47,"line": 996,"col": 4,"docs": " Indicates that the starting value for the LDT information was not an integral multiple of the selector size.","name": "INVALID_LDT_OFFSET"},{"file": 47,"line": 998,"col": 4,"docs": " Indicates that the user supplied an invalid descriptor when trying to set up LDT descriptors.","name": "INVALID_LDT_DESCRIPTOR"},{"file": 47,"line": 1000,"col": 4,"docs": " The specified image file did not have the correct format. It appears to be NE format.","name": "INVALID_IMAGE_NE_FORMAT"},{"file": 47,"line": 1003,"col": 4,"docs": " Indicates that the transaction state of a registry subtree is incompatible with the requested operation. For example, a request has been made to start a new transaction with one already in progress, or a request has been made to apply a transaction when one is not currently in progress.","name": "RXACT_INVALID_STATE"},{"file": 47,"line": 1007,"col": 4,"docs": " Indicates an error has occurred during a registry transaction commit. The database has been left in an unknown, but probably inconsistent, state. The state of the registry transaction is left as COMMITTING.","name": "RXACT_COMMIT_FAILURE"},{"file": 47,"line": 1009,"col": 4,"docs": " An attempt was made to map a file of size zero with the maximum size specified as zero.","name": "MAPPED_FILE_SIZE_ZERO"},{"file": 47,"line": 1012,"col": 4,"docs": " Too many files are opened on a remote server. This error should only be returned by the Windows redirector on a remote drive.","name": "TOO_MANY_OPENED_FILES"},{"file": 47,"line": 1014,"col": 4,"docs": " The I/O request was canceled.","name": "CANCELLED"},{"file": 47,"line": 1016,"col": 4,"docs": " An attempt has been made to remove a file or directory that cannot be deleted.","name": "CANNOT_DELETE"},{"file": 47,"line": 1018,"col": 4,"docs": " Indicates a name that was specified as a remote computer name is syntactically invalid.","name": "INVALID_COMPUTER_NAME"},{"file": 47,"line": 1020,"col": 4,"docs": " An I/O request other than close was performed on a file after it was deleted, which can only happen to a request that did not complete before the last handle was closed via NtClose.","name": "FILE_DELETED"},{"file": 47,"line": 1022,"col": 4,"docs": " Indicates an operation that is incompatible with built-in accounts has been attempted on a built-in (special) SAM account. For example, built-in accounts cannot be deleted.","name": "SPECIAL_ACCOUNT"},{"file": 47,"line": 1024,"col": 4,"docs": " The operation requested cannot be performed on the specified group because it is a built-in special group.","name": "SPECIAL_GROUP"},{"file": 47,"line": 1026,"col": 4,"docs": " The operation requested cannot be performed on the specified user because it is a built-in special user.","name": "SPECIAL_USER"},{"file": 47,"line": 1028,"col": 4,"docs": " Indicates a member cannot be removed from a group because the group is currently the member's primary group.","name": "MEMBERS_PRIMARY_GROUP"},{"file": 47,"line": 1030,"col": 4,"docs": " An I/O request other than close and several other special case operations was attempted using a file object that had already been closed.","name": "FILE_CLOSED"},{"file": 47,"line": 1033,"col": 4,"docs": " Indicates a process has too many threads to perform the requested action. For example, assignment of a primary token can be performed only when a process has zero or one threads.","name": "TOO_MANY_THREADS"},{"file": 47,"line": 1035,"col": 4,"docs": " An attempt was made to operate on a thread within a specific process, but the specified thread is not in the specified process.","name": "THREAD_NOT_IN_PROCESS"},{"file": 47,"line": 1038,"col": 4,"docs": " An attempt was made to establish a token for use as a primary token but the token is already in use. A token can only be the primary token of one process at a time.","name": "TOKEN_ALREADY_IN_USE"},{"file": 47,"line": 1040,"col": 4,"docs": " The page file quota was exceeded.","name": "PAGEFILE_QUOTA_EXCEEDED"},{"file": 47,"line": 1043,"col": 4,"docs": " {Out of Virtual Memory} Your system is low on virtual memory. To ensure that Windows runs correctly, increase the size of your virtual memory paging file. For more information, see Help.","name": "COMMITMENT_LIMIT"},{"file": 47,"line": 1045,"col": 4,"docs": " The specified image file did not have the correct format: it appears to be LE format.","name": "INVALID_IMAGE_LE_FORMAT"},{"file": 47,"line": 1047,"col": 4,"docs": " The specified image file did not have the correct format: it did not have an initial MZ.","name": "INVALID_IMAGE_NOT_MZ"},{"file": 47,"line": 1049,"col": 4,"docs": " The specified image file did not have the correct format: it did not have a proper e_lfarlc in the MZ header.","name": "INVALID_IMAGE_PROTECT"},{"file": 47,"line": 1051,"col": 4,"docs": " The specified image file did not have the correct format: it appears to be a 16-bit Windows image.","name": "INVALID_IMAGE_WIN_16"},{"file": 47,"line": 1053,"col": 4,"docs": " The Netlogon service cannot start because another Netlogon service running in the domain conflicts with the specified role.","name": "LOGON_SERVER_CONFLICT"},{"file": 47,"line": 1055,"col": 4,"docs": " The time at the primary domain controller is different from the time at the backup domain controller or member server by too large an amount.","name": "TIME_DIFFERENCE_AT_DC"},{"file": 47,"line": 1057,"col": 4,"docs": " On applicable Windows Server releases, the SAM database is significantly out of synchronization with the copy on the domain controller. A complete synchronization is required.","name": "SYNCHRONIZATION_REQUIRED"},{"file": 47,"line": 1060,"col": 4,"docs": " {Unable To Locate Component} This application has failed to start because %hs was not found. Reinstalling the application might fix this problem.","name": "DLL_NOT_FOUND"},{"file": 47,"line": 1062,"col": 4,"docs": " The NtCreateFile API failed. This error should never be returned to an application; it is a place holder for the Windows LAN Manager Redirector to use in its internal error-mapping routines.","name": "OPEN_FAILED"},{"file": 47,"line": 1064,"col": 4,"docs": " {Privilege Failed} The I/O permissions for the process could not be changed.","name": "IO_PRIVILEGE_FAILED"},{"file": 47,"line": 1066,"col": 4,"docs": " {Ordinal Not Found} The ordinal %ld could not be located in the dynamic link library %hs.","name": "ORDINAL_NOT_FOUND"},{"file": 47,"line": 1068,"col": 4,"docs": " {Entry Point Not Found} The procedure entry point %hs could not be located in the dynamic link library %hs.","name": "ENTRYPOINT_NOT_FOUND"},{"file": 47,"line": 1070,"col": 4,"docs": " {Application Exit by CTRL+C} The application terminated as a result of a CTRL+C.","name": "CONTROL_C_EXIT"},{"file": 47,"line": 1073,"col": 4,"docs": " {Virtual Circuit Closed} The network transport on your computer has closed a network connection. There might or might not be I/O requests outstanding.","name": "LOCAL_DISCONNECT"},{"file": 47,"line": 1076,"col": 4,"docs": " {Virtual Circuit Closed} The network transport on a remote computer has closed a network connection. There might or might not be I/O requests outstanding.","name": "REMOTE_DISCONNECT"},{"file": 47,"line": 1079,"col": 4,"docs": " {Insufficient Resources on Remote Computer} The remote computer has insufficient resources to complete the network request. For example, the remote computer might not have enough available memory to carry out the request at this time.","name": "REMOTE_RESOURCES"},{"file": 47,"line": 1082,"col": 4,"docs": " {Virtual Circuit Closed} An existing connection (virtual circuit) has been broken at the remote computer. There is probably something wrong with the network software protocol or the network hardware on the remote computer.","name": "LINK_FAILED"},{"file": 47,"line": 1084,"col": 4,"docs": " {Virtual Circuit Closed} The network transport on your computer has closed a network connection because it had to wait too long for a response from the remote computer.","name": "LINK_TIMEOUT"},{"file": 47,"line": 1086,"col": 4,"docs": " The connection handle that was given to the transport was invalid.","name": "INVALID_CONNECTION"},{"file": 47,"line": 1088,"col": 4,"docs": " The address handle that was given to the transport was invalid.","name": "INVALID_ADDRESS"},{"file": 47,"line": 1090,"col": 4,"docs": " {DLL Initialization Failed} Initialization of the dynamic link library %hs failed. The process is terminating abnormally.","name": "DLL_INIT_FAILED"},{"file": 47,"line": 1092,"col": 4,"docs": " {Missing System File} The required system file %hs is bad or missing.","name": "MISSING_SYSTEMFILE"},{"file": 47,"line": 1094,"col": 4,"docs": " {Application Error} The exception %s (0x%08lx) occurred in the application at location 0x%08lx.","name": "UNHANDLED_EXCEPTION"},{"file": 47,"line": 1096,"col": 4,"docs": " {Application Error} The application failed to initialize properly (0x%lx). Click OK to terminate the application.","name": "APP_INIT_FAILURE"},{"file": 47,"line": 1098,"col": 4,"docs": " {Unable to Create Paging File} The creation of the paging file %hs failed (%lx). The requested size was %ld.","name": "PAGEFILE_CREATE_FAILED"},{"file": 47,"line": 1100,"col": 4,"docs": " {No Paging File Specified} No paging file was specified in the system configuration.","name": "NO_PAGEFILE"},{"file": 47,"line": 1102,"col": 4,"docs": " {Incorrect System Call Level} An invalid level was passed into the specified system call.","name": "INVALID_LEVEL"},{"file": 47,"line": 1104,"col": 4,"docs": " {Incorrect Password to LAN Manager Server} You specified an incorrect password to a LAN Manager 2.x or MS-NET server.","name": "WRONG_PASSWORD_CORE"},{"file": 47,"line": 1106,"col": 4,"docs": " {EXCEPTION} A real-mode application issued a floating-point instruction and floating-point hardware is not present.","name": "ILLEGAL_FLOAT_CONTEXT"},{"file": 47,"line": 1108,"col": 4,"docs": " The pipe operation has failed because the other end of the pipe has been closed.","name": "PIPE_BROKEN"},{"file": 47,"line": 1110,"col": 4,"docs": " {The Registry Is Corrupt} The structure of one of the files that contains registry data is corrupt; the image of the file in memory is corrupt; or the file could not be recovered because the alternate copy or log was absent or corrupt.","name": "REGISTRY_CORRUPT"},{"file": 47,"line": 1113,"col": 4,"docs": " An I/O operation initiated by the Registry failed and cannot be recovered. The registry could not read in, write out, or flush one of the files that contain the system's image of the registry.","name": "REGISTRY_IO_FAILED"},{"file": 47,"line": 1115,"col": 4,"docs": " An event pair synchronization operation was performed using the thread-specific client/server event pair object, but no event pair object was associated with the thread.","name": "NO_EVENT_PAIR"},{"file": 47,"line": 1118,"col": 4,"docs": " The volume does not contain a recognized file system. Be sure that all required file system drivers are loaded and that the volume is not corrupt.","name": "UNRECOGNIZED_VOLUME"},{"file": 47,"line": 1120,"col": 4,"docs": " No serial device was successfully initialized. The serial driver will unload.","name": "SERIAL_NO_DEVICE_INITED"},{"file": 47,"line": 1122,"col": 4,"docs": " The specified local group does not exist.","name": "NO_SUCH_ALIAS"},{"file": 47,"line": 1124,"col": 4,"docs": " The specified account name is not a member of the group.","name": "MEMBER_NOT_IN_ALIAS"},{"file": 47,"line": 1126,"col": 4,"docs": " The specified account name is already a member of the group.","name": "MEMBER_IN_ALIAS"},{"file": 47,"line": 1128,"col": 4,"docs": " The specified local group already exists.","name": "ALIAS_EXISTS"},{"file": 47,"line": 1131,"col": 4,"docs": " A requested type of logon (for example, interactive, network, and service) is not granted by the local security policy of the target system. Ask the system administrator to grant the necessary form of logon.","name": "LOGON_NOT_GRANTED"},{"file": 47,"line": 1134,"col": 4,"docs": " The maximum number of secrets that can be stored in a single system was exceeded. The length and number of secrets is limited to satisfy U.S. State Department export restrictions.","name": "TOO_MANY_SECRETS"},{"file": 47,"line": 1137,"col": 4,"docs": " The length of a secret exceeds the maximum allowable length. The length and number of secrets is limited to satisfy U.S. State Department export restrictions.","name": "SECRET_TOO_LONG"},{"file": 47,"line": 1139,"col": 4,"docs": " The local security authority (LSA) database contains an internal inconsistency.","name": "INTERNAL_DB_ERROR"},{"file": 47,"line": 1141,"col": 4,"docs": " The requested operation cannot be performed in full-screen mode.","name": "FULLSCREEN_MODE"},{"file": 47,"line": 1144,"col": 4,"docs": " During a logon attempt, the user's security context accumulated too many security IDs. This is a very unusual situation. Remove the user from some global or local groups to reduce the number of security IDs to incorporate into the security context.","name": "TOO_MANY_CONTEXT_IDS"},{"file": 47,"line": 1147,"col": 4,"docs": " A user has requested a type of logon (for example, interactive or network) that has not been granted. An administrator has control over who can logon interactively and through the network.","name": "LOGON_TYPE_NOT_GRANTED"},{"file": 47,"line": 1149,"col": 4,"docs": " The system has attempted to load or restore a file into the registry, and the specified file is not in the format of a registry file.","name": "NOT_REGISTRY_FILE"},{"file": 47,"line": 1151,"col": 4,"docs": " An attempt was made to change a user password in the security account manager without providing the necessary Windows cross-encrypted password.","name": "NT_CROSS_ENCRYPTION_REQUIRED"},{"file": 47,"line": 1153,"col": 4,"docs": " A domain server has an incorrect configuration.","name": "DOMAIN_CTRLR_CONFIG_ERROR"},{"file": 47,"line": 1155,"col": 4,"docs": " An attempt was made to explicitly access the secondary copy of information via a device control to the fault tolerance driver and the secondary copy is not present in the system.","name": "FT_MISSING_MEMBER"},{"file": 47,"line": 1157,"col": 4,"docs": " A configuration registry node that represents a driver service entry was ill-formed and did not contain the required value entries.","name": "ILL_FORMED_SERVICE_ENTRY"},{"file": 47,"line": 1161,"col": 4,"docs": " An illegal character was encountered. For a multibyte character set, this includes a lead byte without a succeeding trail byte. For the Unicode character set this includes the characters 0xFFFF and 0xFFFE.","name": "ILLEGAL_CHARACTER"},{"file": 47,"line": 1163,"col": 4,"docs": " No mapping for the Unicode character exists in the target multibyte code page.","name": "UNMAPPABLE_CHARACTER"},{"file": 47,"line": 1165,"col": 4,"docs": " The Unicode character is not defined in the Unicode character set that is installed on the system.","name": "UNDEFINED_CHARACTER"},{"file": 47,"line": 1167,"col": 4,"docs": " The paging file cannot be created on a floppy disk.","name": "FLOPPY_VOLUME"},{"file": 47,"line": 1169,"col": 4,"docs": " {Floppy Disk Error} While accessing a floppy disk, an ID address mark was not found.","name": "FLOPPY_ID_MARK_NOT_FOUND"},{"file": 47,"line": 1171,"col": 4,"docs": " {Floppy Disk Error} While accessing a floppy disk, the track address from the sector ID field was found to be different from the track address that is maintained by the controller.","name": "FLOPPY_WRONG_CYLINDER"},{"file": 47,"line": 1173,"col": 4,"docs": " {Floppy Disk Error} The floppy disk controller reported an error that is not recognized by the floppy disk driver.","name": "FLOPPY_UNKNOWN_ERROR"},{"file": 47,"line": 1175,"col": 4,"docs": " {Floppy Disk Error} While accessing a floppy-disk, the controller returned inconsistent results via its registers.","name": "FLOPPY_BAD_REGISTERS"},{"file": 47,"line": 1177,"col": 4,"docs": " {Hard Disk Error} While accessing the hard disk, a recalibrate operation failed, even after retries.","name": "DISK_RECALIBRATE_FAILED"},{"file": 47,"line": 1179,"col": 4,"docs": " {Hard Disk Error} While accessing the hard disk, a disk operation failed even after retries.","name": "DISK_OPERATION_FAILED"},{"file": 47,"line": 1181,"col": 4,"docs": " {Hard Disk Error} While accessing the hard disk, a disk controller reset was needed, but even that failed.","name": "DISK_RESET_FAILED"},{"file": 47,"line": 1185,"col": 4,"docs": " An attempt was made to open a device that was sharing an interrupt request (IRQ) with other devices. At least one other device that uses that IRQ was already opened. Two concurrent opens of devices that share an IRQ and only work via interrupts is not supported for the particular bus type that the devices use.","name": "SHARED_IRQ_BUSY"},{"file": 47,"line": 1187,"col": 4,"docs": " {FT Orphaning} A disk that is part of a fault-tolerant volume can no longer be accessed.","name": "FT_ORPHANING"},{"file": 47,"line": 1189,"col": 4,"docs": " The basic input/output system (BIOS) failed to connect a system interrupt to the device or bus for which the device is connected.","name": "BIOS_FAILED_TO_CONNECT_INTERRUPT"},{"file": 47,"line": 1191,"col": 4,"docs": " The tape could not be partitioned.","name": "PARTITION_FAILURE"},{"file": 47,"line": 1193,"col": 4,"docs": " When accessing a new tape of a multi-volume partition, the current blocksize is incorrect.","name": "INVALID_BLOCK_LENGTH"},{"file": 47,"line": 1195,"col": 4,"docs": " The tape partition information could not be found when loading a tape.","name": "DEVICE_NOT_PARTITIONED"},{"file": 47,"line": 1197,"col": 4,"docs": " An attempt to lock the eject media mechanism failed.","name": "UNABLE_TO_LOCK_MEDIA"},{"file": 47,"line": 1199,"col": 4,"docs": " An attempt to unload media failed.","name": "UNABLE_TO_UNLOAD_MEDIA"},{"file": 47,"line": 1201,"col": 4,"docs": " The physical end of tape was detected.","name": "EOM_OVERFLOW"},{"file": 47,"line": 1203,"col": 4,"docs": " {No Media} There is no media in the drive. Insert media into drive %hs.","name": "NO_MEDIA"},{"file": 47,"line": 1205,"col": 4,"docs": " A member could not be added to or removed from the local group because the member does not exist.","name": "NO_SUCH_MEMBER"},{"file": 47,"line": 1207,"col": 4,"docs": " A new member could not be added to a local group because the member has the wrong account type.","name": "INVALID_MEMBER"},{"file": 47,"line": 1209,"col": 4,"docs": " An illegal operation was attempted on a registry key that has been marked for deletion.","name": "KEY_DELETED"},{"file": 47,"line": 1211,"col": 4,"docs": " The system could not allocate the required space in a registry log.","name": "NO_LOG_SPACE"},{"file": 47,"line": 1213,"col": 4,"docs": " Too many SIDs have been specified.","name": "TOO_MANY_SIDS"},{"file": 47,"line": 1215,"col": 4,"docs": " An attempt was made to change a user password in the security account manager without providing the necessary LM cross-encrypted password.","name": "LM_CROSS_ENCRYPTION_REQUIRED"},{"file": 47,"line": 1217,"col": 4,"docs": " An attempt was made to create a symbolic link in a registry key that already has subkeys or values.","name": "KEY_HAS_CHILDREN"},{"file": 47,"line": 1219,"col": 4,"docs": " An attempt was made to create a stable subkey under a volatile parent key.","name": "CHILD_MUST_BE_VOLATILE"},{"file": 47,"line": 1221,"col": 4,"docs": " The I/O device is configured incorrectly or the configuration parameters to the driver are incorrect.","name": "DEVICE_CONFIGURATION_ERROR"},{"file": 47,"line": 1223,"col": 4,"docs": " An error was detected between two drivers or within an I/O driver.","name": "DRIVER_INTERNAL_ERROR"},{"file": 47,"line": 1225,"col": 4,"docs": " The device is not in a valid state to perform this request.","name": "INVALID_DEVICE_STATE"},{"file": 47,"line": 1227,"col": 4,"docs": " The I/O device reported an I/O error.","name": "IO_DEVICE_ERROR"},{"file": 47,"line": 1229,"col": 4,"docs": " A protocol error was detected between the driver and the device.","name": "DEVICE_PROTOCOL_ERROR"},{"file": 47,"line": 1231,"col": 4,"docs": " This operation is only allowed for the primary domain controller of the domain.","name": "BACKUP_CONTROLLER"},{"file": 47,"line": 1233,"col": 4,"docs": " The log file space is insufficient to support this operation.","name": "LOG_FILE_FULL"},{"file": 47,"line": 1235,"col": 4,"docs": " A write operation was attempted to a volume after it was dismounted.","name": "TOO_LATE"},{"file": 47,"line": 1237,"col": 4,"docs": " The workstation does not have a trust secret for the primary domain in the local LSA database.","name": "NO_TRUST_LSA_SECRET"},{"file": 47,"line": 1239,"col": 4,"docs": " On applicable Windows Server releases, the SAM database does not have a computer account for this workstation trust relationship.","name": "NO_TRUST_SAM_ACCOUNT"},{"file": 47,"line": 1241,"col": 4,"docs": " The logon request failed because the trust relationship between the primary domain and the trusted domain failed.","name": "TRUSTED_DOMAIN_FAILURE"},{"file": 47,"line": 1243,"col": 4,"docs": " The logon request failed because the trust relationship between this workstation and the primary domain failed.","name": "TRUSTED_RELATIONSHIP_FAILURE"},{"file": 47,"line": 1245,"col": 4,"docs": " The Eventlog log file is corrupt.","name": "EVENTLOG_FILE_CORRUPT"},{"file": 47,"line": 1247,"col": 4,"docs": " No Eventlog log file could be opened. The Eventlog service did not start.","name": "EVENTLOG_CANT_START"},{"file": 47,"line": 1249,"col": 4,"docs": " The network logon failed. This might be because the validation authority cannot be reached.","name": "TRUST_FAILURE"},{"file": 47,"line": 1251,"col": 4,"docs": " An attempt was made to acquire a mutant such that its maximum count would have been exceeded.","name": "MUTANT_LIMIT_EXCEEDED"},{"file": 47,"line": 1253,"col": 4,"docs": " An attempt was made to logon, but the NetLogon service was not started.","name": "NETLOGON_NOT_STARTED"},{"file": 47,"line": 1255,"col": 4,"docs": " The user account has expired.","name": "ACCOUNT_EXPIRED"},{"file": 47,"line": 1257,"col": 4,"docs": " {EXCEPTION} Possible deadlock condition.","name": "POSSIBLE_DEADLOCK"},{"file": 47,"line": 1260,"col": 4,"docs": " Multiple connections to a server or shared resource by the same user, using more than one user name, are not allowed. Disconnect all previous connections to the server or shared resource and try again.","name": "NETWORK_CREDENTIAL_CONFLICT"},{"file": 47,"line": 1262,"col": 4,"docs": " An attempt was made to establish a session to a network server, but there are already too many sessions established to that server.","name": "REMOTE_SESSION_LIMIT"},{"file": 47,"line": 1264,"col": 4,"docs": " The log file has changed between reads.","name": "EVENTLOG_FILE_CHANGED"},{"file": 47,"line": 1267,"col": 4,"docs": " The account used is an interdomain trust account. Use your global user account or local user account to access this server.","name": "NOLOGON_INTERDOMAIN_TRUST_ACCOUNT"},{"file": 47,"line": 1270,"col": 4,"docs": " The account used is a computer account. Use your global user account or local user account to access this server.","name": "NOLOGON_WORKSTATION_TRUST_ACCOUNT"},{"file": 47,"line": 1273,"col": 4,"docs": " The account used is a server trust account. Use your global user account or local user account to access this server.","name": "NOLOGON_SERVER_TRUST_ACCOUNT"},{"file": 47,"line": 1275,"col": 4,"docs": " The name or SID of the specified domain is inconsistent with the trust information for that domain.","name": "DOMAIN_TRUST_INCONSISTENT"},{"file": 47,"line": 1277,"col": 4,"docs": " A volume has been accessed for which a file system driver is required that has not yet been loaded.","name": "FS_DRIVER_REQUIRED"},{"file": 47,"line": 1279,"col": 4,"docs": " Indicates that the specified image is already loaded as a DLL.","name": "IMAGE_ALREADY_LOADED_AS_DLL"},{"file": 47,"line": 1281,"col": 4,"docs": " Short name settings cannot be changed on this volume due to the global registry setting.","name": "INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING"},{"file": 47,"line": 1283,"col": 4,"docs": " Short names are not enabled on this volume.","name": "SHORT_NAMES_NOT_ENABLED_ON_VOLUME"},{"file": 47,"line": 1285,"col": 4,"docs": " The security stream for the given volume is in an inconsistent state. Please run CHKDSK on the volume.","name": "SECURITY_STREAM_IS_INCONSISTENT"},{"file": 47,"line": 1287,"col": 4,"docs": " A requested file lock operation cannot be processed due to an invalid byte range.","name": "INVALID_LOCK_RANGE"},{"file": 47,"line": 1289,"col": 4,"docs": " The specified access control entry (ACE) contains an invalid condition.","name": "INVALID_ACE_CONDITION"},{"file": 47,"line": 1291,"col": 4,"docs": " The subsystem needed to support the image type is not present.","name": "IMAGE_SUBSYSTEM_NOT_PRESENT"},{"file": 47,"line": 1293,"col": 4,"docs": " The specified file already has a notification GUID associated with it.","name": "NOTIFICATION_GUID_ALREADY_DEFINED"},{"file": 47,"line": 1295,"col": 4,"docs": " A remote open failed because the network open restrictions were not satisfied.","name": "NETWORK_OPEN_RESTRICTION"},{"file": 47,"line": 1297,"col": 4,"docs": " There is no user session key for the specified logon session.","name": "NO_USER_SESSION_KEY"},{"file": 47,"line": 1299,"col": 4,"docs": " The remote user session has been deleted.","name": "USER_SESSION_DELETED"},{"file": 47,"line": 1301,"col": 4,"docs": " Indicates the specified resource language ID cannot be found in the image file.","name": "RESOURCE_LANG_NOT_FOUND"},{"file": 47,"line": 1303,"col": 4,"docs": " Insufficient server resources exist to complete the request.","name": "INSUFF_SERVER_RESOURCES"},{"file": 47,"line": 1305,"col": 4,"docs": " The size of the buffer is invalid for the specified operation.","name": "INVALID_BUFFER_SIZE"},{"file": 47,"line": 1307,"col": 4,"docs": " The transport rejected the specified network address as invalid.","name": "INVALID_ADDRESS_COMPONENT"},{"file": 47,"line": 1309,"col": 4,"docs": " The transport rejected the specified network address due to invalid use of a wildcard.","name": "INVALID_ADDRESS_WILDCARD"},{"file": 47,"line": 1311,"col": 4,"docs": " The transport address could not be opened because all the available addresses are in use.","name": "TOO_MANY_ADDRESSES"},{"file": 47,"line": 1313,"col": 4,"docs": " The transport address could not be opened because it already exists.","name": "ADDRESS_ALREADY_EXISTS"},{"file": 47,"line": 1315,"col": 4,"docs": " The transport address is now closed.","name": "ADDRESS_CLOSED"},{"file": 47,"line": 1317,"col": 4,"docs": " The transport connection is now disconnected.","name": "CONNECTION_DISCONNECTED"},{"file": 47,"line": 1319,"col": 4,"docs": " The transport connection has been reset.","name": "CONNECTION_RESET"},{"file": 47,"line": 1321,"col": 4,"docs": " The transport cannot dynamically acquire any more nodes.","name": "TOO_MANY_NODES"},{"file": 47,"line": 1323,"col": 4,"docs": " The transport aborted a pending transaction.","name": "TRANSACTION_ABORTED"},{"file": 47,"line": 1325,"col": 4,"docs": " The transport timed out a request that is waiting for a response.","name": "TRANSACTION_TIMED_OUT"},{"file": 47,"line": 1327,"col": 4,"docs": " The transport did not receive a release for a pending response.","name": "TRANSACTION_NO_RELEASE"},{"file": 47,"line": 1329,"col": 4,"docs": " The transport did not find a transaction that matches the specific token.","name": "TRANSACTION_NO_MATCH"},{"file": 47,"line": 1331,"col": 4,"docs": " The transport had previously responded to a transaction request.","name": "TRANSACTION_RESPONDED"},{"file": 47,"line": 1333,"col": 4,"docs": " The transport does not recognize the specified transaction request ID.","name": "TRANSACTION_INVALID_ID"},{"file": 47,"line": 1335,"col": 4,"docs": " The transport does not recognize the specified transaction request type.","name": "TRANSACTION_INVALID_TYPE"},{"file": 47,"line": 1337,"col": 4,"docs": " The transport can only process the specified request on the server side of a session.","name": "NOT_SERVER_SESSION"},{"file": 47,"line": 1339,"col": 4,"docs": " The transport can only process the specified request on the client side of a session.","name": "NOT_CLIENT_SESSION"},{"file": 47,"line": 1341,"col": 4,"docs": " {Registry File Failure} The registry cannot load the hive (file): %hs or its log or alternate. It is corrupt, absent, or not writable.","name": "CANNOT_LOAD_REGISTRY_FILE"},{"file": 47,"line": 1344,"col": 4,"docs": " {Unexpected Failure in DebugActiveProcess} An unexpected failure occurred while processing a DebugActiveProcess API request. Choosing OK will terminate the process, and choosing Cancel will ignore the error.","name": "DEBUG_ATTACH_FAILED"},{"file": 47,"line": 1346,"col": 4,"docs": " {Fatal System Error} The %hs system process terminated unexpectedly with a status of 0x%08x (0x%08x 0x%08x). The system has been shut down.","name": "SYSTEM_PROCESS_TERMINATED"},{"file": 47,"line": 1348,"col": 4,"docs": " {Data Not Accepted} The TDI client could not handle the data received during an indication.","name": "DATA_NOT_ACCEPTED"},{"file": 47,"line": 1350,"col": 4,"docs": " {Unable to Retrieve Browser Server List} The list of servers for this workgroup is not currently available.","name": "NO_BROWSER_SERVERS_FOUND"},{"file": 47,"line": 1352,"col": 4,"docs": " NTVDM encountered a hard error.","name": "VDM_HARD_ERROR"},{"file": 47,"line": 1354,"col": 4,"docs": " {Cancel Timeout} The driver %hs failed to complete a canceled I/O request in the allotted time.","name": "DRIVER_CANCEL_TIMEOUT"},{"file": 47,"line": 1356,"col": 4,"docs": " {Reply Message Mismatch} An attempt was made to reply to an LPC message, but the thread specified by the client ID in the message was not waiting on that message.","name": "REPLY_MESSAGE_MISMATCH"},{"file": 47,"line": 1358,"col": 4,"docs": " {Mapped View Alignment Incorrect} An attempt was made to map a view of a file, but either the specified base address or the offset into the file were not aligned on the proper allocation granularity.","name": "MAPPED_ALIGNMENT"},{"file": 47,"line": 1361,"col": 4,"docs": " {Bad Image Checksum} The image %hs is possibly corrupt. The header checksum does not match the computed checksum.","name": "IMAGE_CHECKSUM_MISMATCH"},{"file": 47,"line": 1364,"col": 4,"docs": " {Delayed Write Failed} Windows was unable to save all the data for the file %hs. The data has been lost. This error might be caused by a failure of your computer hardware or network connection. Try to save this file elsewhere.","name": "LOST_WRITEBEHIND_DATA"},{"file": 47,"line": 1367,"col": 4,"docs": " The parameters passed to the server in the client/server shared memory window were invalid. Too much data might have been put in the shared memory window.","name": "CLIENT_SERVER_PARAMETERS_INVALID"},{"file": 47,"line": 1369,"col": 4,"docs": " The user password must be changed before logging on the first time.","name": "PASSWORD_MUST_CHANGE"},{"file": 47,"line": 1371,"col": 4,"docs": " The object was not found.","name": "NOT_FOUND"},{"file": 47,"line": 1373,"col": 4,"docs": " The stream is not a tiny stream.","name": "NOT_TINY_STREAM"},{"file": 47,"line": 1375,"col": 4,"docs": " A transaction recovery failed.","name": "RECOVERY_FAILURE"},{"file": 47,"line": 1377,"col": 4,"docs": " The request must be handled by the stack overflow code.","name": "STACK_OVERFLOW_READ"},{"file": 47,"line": 1379,"col": 4,"docs": " A consistency check failed.","name": "FAIL_CHECK"},{"file": 47,"line": 1381,"col": 4,"docs": " The attempt to insert the ID in the index failed because the ID is already in the index.","name": "DUPLICATE_OBJECTID"},{"file": 47,"line": 1383,"col": 4,"docs": " The attempt to set the object ID failed because the object already has an ID.","name": "OBJECTID_EXISTS"},{"file": 47,"line": 1386,"col": 4,"docs": " Internal OFS status codes indicating how an allocation operation is handled. Either it is retried after the containing oNode is moved or the extent stream is converted to a large stream.","name": "CONVERT_TO_LARGE"},{"file": 47,"line": 1388,"col": 4,"docs": " The request needs to be retried.","name": "RETRY"},{"file": 47,"line": 1390,"col": 4,"docs": " The attempt to find the object found an object on the volume that matches by ID; however, it is out of the scope of the handle that is used for the operation.","name": "FOUND_OUT_OF_SCOPE"},{"file": 47,"line": 1392,"col": 4,"docs": " The bucket array must be grown. Retry the transaction after doing so.","name": "ALLOCATE_BUCKET"},{"file": 47,"line": 1394,"col": 4,"docs": " The specified property set does not exist on the object.","name": "PROPSET_NOT_FOUND"},{"file": 47,"line": 1396,"col": 4,"docs": " The user/kernel marshaling buffer has overflowed.","name": "MARSHALL_OVERFLOW"},{"file": 47,"line": 1398,"col": 4,"docs": " The supplied variant structure contains invalid data.","name": "INVALID_VARIANT"},{"file": 47,"line": 1400,"col": 4,"docs": " A domain controller for this domain was not found.","name": "DOMAIN_CONTROLLER_NOT_FOUND"},{"file": 47,"line": 1402,"col": 4,"docs": " The user account has been automatically locked because too many invalid logon attempts or password change attempts have been requested.","name": "ACCOUNT_LOCKED_OUT"},{"file": 47,"line": 1404,"col": 4,"docs": " NtClose was called on a handle that was protected from close via NtSetInformationObject.","name": "HANDLE_NOT_CLOSABLE"},{"file": 47,"line": 1406,"col": 4,"docs": " The transport-connection attempt was refused by the remote system.","name": "CONNECTION_REFUSED"},{"file": 47,"line": 1408,"col": 4,"docs": " The transport connection was gracefully closed.","name": "GRACEFUL_DISCONNECT"},{"file": 47,"line": 1410,"col": 4,"docs": " The transport endpoint already has an address associated with it.","name": "ADDRESS_ALREADY_ASSOCIATED"},{"file": 47,"line": 1412,"col": 4,"docs": " An address has not yet been associated with the transport endpoint.","name": "ADDRESS_NOT_ASSOCIATED"},{"file": 47,"line": 1414,"col": 4,"docs": " An operation was attempted on a nonexistent transport connection.","name": "CONNECTION_INVALID"},{"file": 47,"line": 1416,"col": 4,"docs": " An invalid operation was attempted on an active transport connection.","name": "CONNECTION_ACTIVE"},{"file": 47,"line": 1418,"col": 4,"docs": " The remote network is not reachable by the transport.","name": "NETWORK_UNREACHABLE"},{"file": 47,"line": 1420,"col": 4,"docs": " The remote system is not reachable by the transport.","name": "HOST_UNREACHABLE"},{"file": 47,"line": 1422,"col": 4,"docs": " The remote system does not support the transport protocol.","name": "PROTOCOL_UNREACHABLE"},{"file": 47,"line": 1424,"col": 4,"docs": " No service is operating at the destination port of the transport on the remote system.","name": "PORT_UNREACHABLE"},{"file": 47,"line": 1426,"col": 4,"docs": " The request was aborted.","name": "REQUEST_ABORTED"},{"file": 47,"line": 1428,"col": 4,"docs": " The transport connection was aborted by the local system.","name": "CONNECTION_ABORTED"},{"file": 47,"line": 1430,"col": 4,"docs": " The specified buffer contains ill-formed data.","name": "BAD_COMPRESSION_BUFFER"},{"file": 47,"line": 1432,"col": 4,"docs": " The requested operation cannot be performed on a file with a user mapped section open.","name": "USER_MAPPED_FILE"},{"file": 47,"line": 1434,"col": 4,"docs": " {Audit Failed} An attempt to generate a security audit failed.","name": "AUDIT_FAILED"},{"file": 47,"line": 1436,"col": 4,"docs": " The timer resolution was not previously set by the current process.","name": "TIMER_RESOLUTION_NOT_SET"},{"file": 47,"line": 1438,"col": 4,"docs": " A connection to the server could not be made because the limit on the number of concurrent connections for this account has been reached.","name": "CONNECTION_COUNT_LIMIT"},{"file": 47,"line": 1440,"col": 4,"docs": " Attempting to log on during an unauthorized time of day for this account.","name": "LOGIN_TIME_RESTRICTION"},{"file": 47,"line": 1442,"col": 4,"docs": " The account is not authorized to log on from this station.","name": "LOGIN_WKSTA_RESTRICTION"},{"file": 47,"line": 1444,"col": 4,"docs": " {UP/MP Image Mismatch} The image %hs has been modified for use on a uniprocessor system, but you are running it on a multiprocessor machine. Reinstall the image file.","name": "IMAGE_MP_UP_MISMATCH"},{"file": 47,"line": 1446,"col": 4,"docs": " There is insufficient account information to log you on.","name": "INSUFFICIENT_LOGON_INFO"},{"file": 47,"line": 1452,"col": 4,"docs": " {Invalid DLL Entrypoint} The dynamic link library %hs is not written correctly. The stack pointer has been left in an inconsistent state. The entry point should be declared as WINAPI or STDCALL. Select YES to fail the DLL load. Select NO to continue execution. Selecting NO might cause the application to operate incorrectly.","name": "BAD_DLL_ENTRYPOINT"},{"file": 47,"line": 1458,"col": 4,"docs": " {Invalid Service Callback Entrypoint} The %hs service is not written correctly. The stack pointer has been left in an inconsistent state. The callback entry point should be declared as WINAPI or STDCALL. Selecting OK will cause the service to continue operation. However, the service process might operate incorrectly.","name": "BAD_SERVICE_ENTRYPOINT"},{"file": 47,"line": 1460,"col": 4,"docs": " The server received the messages but did not send a reply.","name": "LPC_REPLY_LOST"},{"file": 47,"line": 1462,"col": 4,"docs": " There is an IP address conflict with another system on the network.","name": "IP_ADDRESS_CONFLICT1"},{"file": 47,"line": 1464,"col": 4,"docs": " There is an IP address conflict with another system on the network.","name": "IP_ADDRESS_CONFLICT2"},{"file": 47,"line": 1466,"col": 4,"docs": " {Low On Registry Space} The system has reached the maximum size that is allowed for the system part of the registry. Additional storage requests will be ignored.","name": "REGISTRY_QUOTA_LIMIT"},{"file": 47,"line": 1468,"col": 4,"docs": " The contacted server does not support the indicated part of the DFS namespace.","name": "PATH_NOT_COVERED"},{"file": 47,"line": 1470,"col": 4,"docs": " A callback return system service cannot be executed when no callback is active.","name": "NO_CALLBACK_ACTIVE"},{"file": 47,"line": 1473,"col": 4,"docs": " The service being accessed is licensed for a particular number of connections. No more connections can be made to the service at this time because the service has already accepted the maximum number of connections.","name": "LICENSE_QUOTA_EXCEEDED"},{"file": 47,"line": 1475,"col": 4,"docs": " The password provided is too short to meet the policy of your user account. Choose a longer password.","name": "PWD_TOO_SHORT"},{"file": 47,"line": 1479,"col": 4,"docs": " The policy of your user account does not allow you to change passwords too frequently. This is done to prevent users from changing back to a familiar, but potentially discovered, password. If you feel your password has been compromised, contact your administrator immediately to have a new one assigned.","name": "PWD_TOO_RECENT"},{"file": 47,"line": 1483,"col": 4,"docs": " You have attempted to change your password to one that you have used in the past. The policy of your user account does not allow this. Select a password that you have not previously used.","name": "PWD_HISTORY_CONFLICT"},{"file": 47,"line": 1485,"col": 4,"docs": " You have attempted to load a legacy device driver while its device instance had been disabled.","name": "PLUGPLAY_NO_DEVICE"},{"file": 47,"line": 1487,"col": 4,"docs": " The specified compression format is unsupported.","name": "UNSUPPORTED_COMPRESSION"},{"file": 47,"line": 1489,"col": 4,"docs": " The specified hardware profile configuration is invalid.","name": "INVALID_HW_PROFILE"},{"file": 47,"line": 1491,"col": 4,"docs": " The specified Plug and Play registry device path is invalid.","name": "INVALID_PLUGPLAY_DEVICE_PATH"},{"file": 47,"line": 1493,"col": 4,"docs": " {Driver Entry Point Not Found} The %hs device driver could not locate the ordinal %ld in driver %hs.","name": "DRIVER_ORDINAL_NOT_FOUND"},{"file": 47,"line": 1495,"col": 4,"docs": " {Driver Entry Point Not Found} The %hs device driver could not locate the entry point %hs in driver %hs.","name": "DRIVER_ENTRYPOINT_NOT_FOUND"},{"file": 47,"line": 1497,"col": 4,"docs": " {Application Error} The application attempted to release a resource it did not own. Click OK to terminate the application.","name": "RESOURCE_NOT_OWNED"},{"file": 47,"line": 1499,"col": 4,"docs": " An attempt was made to create more links on a file than the file system supports.","name": "TOO_MANY_LINKS"},{"file": 47,"line": 1501,"col": 4,"docs": " The specified quota list is internally inconsistent with its descriptor.","name": "QUOTA_LIST_INCONSISTENT"},{"file": 47,"line": 1503,"col": 4,"docs": " The specified file has been relocated to offline storage.","name": "FILE_IS_OFFLINE"},{"file": 47,"line": 1506,"col": 4,"docs": " {Windows Evaluation Notification} The evaluation period for this installation of Windows has expired. This system will shutdown in 1 hour. To restore access to this installation of Windows, upgrade this installation by using a licensed distribution of this product.","name": "EVALUATION_EXPIRATION"},{"file": 47,"line": 1510,"col": 4,"docs": " {Illegal System DLL Relocation} The system DLL %hs was relocated in memory. The application will not run properly. The relocation occurred because the DLL %hs occupied an address range that is reserved for Windows system DLLs. The vendor supplying the DLL should be contacted for a new DLL.","name": "ILLEGAL_DLL_RELOCATION"},{"file": 47,"line": 1513,"col": 4,"docs": " {License Violation} The system has detected tampering with your registered product type. This is a violation of your software license. Tampering with the product type is not permitted.","name": "LICENSE_VIOLATION"},{"file": 47,"line": 1515,"col": 4,"docs": " {DLL Initialization Failed} The application failed to initialize because the window station is shutting down.","name": "DLL_INIT_FAILED_LOGOFF"},{"file": 47,"line": 1517,"col": 4,"docs": " {Unable to Load Device Driver} %hs device driver could not be loaded. Error Status was 0x%x.","name": "DRIVER_UNABLE_TO_LOAD"},{"file": 47,"line": 1519,"col": 4,"docs": " DFS is unavailable on the contacted server.","name": "DFS_UNAVAILABLE"},{"file": 47,"line": 1521,"col": 4,"docs": " An operation was attempted to a volume after it was dismounted.","name": "VOLUME_DISMOUNTED"},{"file": 47,"line": 1523,"col": 4,"docs": " An internal error occurred in the Win32 x86 emulation subsystem.","name": "WX86_INTERNAL_ERROR"},{"file": 47,"line": 1525,"col": 4,"docs": " Win32 x86 emulation subsystem floating-point stack check.","name": "WX86_FLOAT_STACK_CHECK"},{"file": 47,"line": 1527,"col": 4,"docs": " The validation process needs to continue on to the next step.","name": "VALIDATE_CONTINUE"},{"file": 47,"line": 1529,"col": 4,"docs": " There was no match for the specified key in the index.","name": "NO_MATCH"},{"file": 47,"line": 1531,"col": 4,"docs": " There are no more matches for the current index enumeration.","name": "NO_MORE_MATCHES"},{"file": 47,"line": 1533,"col": 4,"docs": " The NTFS file or directory is not a reparse point.","name": "NOT_A_REPARSE_POINT"},{"file": 47,"line": 1535,"col": 4,"docs": " The Windows I/O reparse tag passed for the NTFS reparse point is invalid.","name": "IO_REPARSE_TAG_INVALID"},{"file": 47,"line": 1537,"col": 4,"docs": " The Windows I/O reparse tag does not match the one that is in the NTFS reparse point.","name": "IO_REPARSE_TAG_MISMATCH"},{"file": 47,"line": 1539,"col": 4,"docs": " The user data passed for the NTFS reparse point is invalid.","name": "IO_REPARSE_DATA_INVALID"},{"file": 47,"line": 1541,"col": 4,"docs": " The layered file system driver for this I/O tag did not handle it when needed.","name": "IO_REPARSE_TAG_NOT_HANDLED"},{"file": 47,"line": 1543,"col": 4,"docs": " The NTFS symbolic link could not be resolved even though the initial file name is valid.","name": "REPARSE_POINT_NOT_RESOLVED"},{"file": 47,"line": 1545,"col": 4,"docs": " The NTFS directory is a reparse point.","name": "DIRECTORY_IS_A_REPARSE_POINT"},{"file": 47,"line": 1547,"col": 4,"docs": " The range could not be added to the range list because of a conflict.","name": "RANGE_LIST_CONFLICT"},{"file": 47,"line": 1549,"col": 4,"docs": " The specified medium changer source element contains no media.","name": "SOURCE_ELEMENT_EMPTY"},{"file": 47,"line": 1551,"col": 4,"docs": " The specified medium changer destination element already contains media.","name": "DESTINATION_ELEMENT_FULL"},{"file": 47,"line": 1553,"col": 4,"docs": " The specified medium changer element does not exist.","name": "ILLEGAL_ELEMENT_ADDRESS"},{"file": 47,"line": 1555,"col": 4,"docs": " The specified element is contained in a magazine that is no longer present.","name": "MAGAZINE_NOT_PRESENT"},{"file": 47,"line": 1557,"col": 4,"docs": " The device requires re-initialization due to hardware errors.","name": "REINITIALIZATION_NEEDED"},{"file": 47,"line": 1559,"col": 4,"docs": " The file encryption attempt failed.","name": "ENCRYPTION_FAILED"},{"file": 47,"line": 1561,"col": 4,"docs": " The file decryption attempt failed.","name": "DECRYPTION_FAILED"},{"file": 47,"line": 1563,"col": 4,"docs": " The specified range could not be found in the range list.","name": "RANGE_NOT_FOUND"},{"file": 47,"line": 1565,"col": 4,"docs": " There is no encryption recovery policy configured for this system.","name": "NO_RECOVERY_POLICY"},{"file": 47,"line": 1567,"col": 4,"docs": " The required encryption driver is not loaded for this system.","name": "NO_EFS"},{"file": 47,"line": 1569,"col": 4,"docs": " The file was encrypted with a different encryption driver than is currently loaded.","name": "WRONG_EFS"},{"file": 47,"line": 1571,"col": 4,"docs": " There are no EFS keys defined for the user.","name": "NO_USER_KEYS"},{"file": 47,"line": 1573,"col": 4,"docs": " The specified file is not encrypted.","name": "FILE_NOT_ENCRYPTED"},{"file": 47,"line": 1575,"col": 4,"docs": " The specified file is not in the defined EFS export format.","name": "NOT_EXPORT_FORMAT"},{"file": 47,"line": 1577,"col": 4,"docs": " The specified file is encrypted and the user does not have the ability to decrypt it.","name": "FILE_ENCRYPTED"},{"file": 47,"line": 1579,"col": 4,"docs": " The GUID passed was not recognized as valid by a WMI data provider.","name": "WMI_GUID_NOT_FOUND"},{"file": 47,"line": 1581,"col": 4,"docs": " The instance name passed was not recognized as valid by a WMI data provider.","name": "WMI_INSTANCE_NOT_FOUND"},{"file": 47,"line": 1583,"col": 4,"docs": " The data item ID passed was not recognized as valid by a WMI data provider.","name": "WMI_ITEMID_NOT_FOUND"},{"file": 47,"line": 1585,"col": 4,"docs": " The WMI request could not be completed and should be retried.","name": "WMI_TRY_AGAIN"},{"file": 47,"line": 1587,"col": 4,"docs": " The policy object is shared and can only be modified at the root.","name": "SHARED_POLICY"},{"file": 47,"line": 1589,"col": 4,"docs": " The policy object does not exist when it should.","name": "POLICY_OBJECT_NOT_FOUND"},{"file": 47,"line": 1591,"col": 4,"docs": " The requested policy information only lives in the Ds.","name": "POLICY_ONLY_IN_DS"},{"file": 47,"line": 1593,"col": 4,"docs": " The volume must be upgraded to enable this feature.","name": "VOLUME_NOT_UPGRADED"},{"file": 47,"line": 1595,"col": 4,"docs": " The remote storage service is not operational at this time.","name": "REMOTE_STORAGE_NOT_ACTIVE"},{"file": 47,"line": 1597,"col": 4,"docs": " The remote storage service encountered a media error.","name": "REMOTE_STORAGE_MEDIA_ERROR"},{"file": 47,"line": 1599,"col": 4,"docs": " The tracking (workstation) service is not running.","name": "NO_TRACKING_SERVICE"},{"file": 47,"line": 1601,"col": 4,"docs": " The server process is running under a SID that is different from the SID that is required by client.","name": "SERVER_SID_MISMATCH"},{"file": 47,"line": 1603,"col": 4,"docs": " The specified directory service attribute or value does not exist.","name": "DS_NO_ATTRIBUTE_OR_VALUE"},{"file": 47,"line": 1605,"col": 4,"docs": " The attribute syntax specified to the directory service is invalid.","name": "DS_INVALID_ATTRIBUTE_SYNTAX"},{"file": 47,"line": 1607,"col": 4,"docs": " The attribute type specified to the directory service is not defined.","name": "DS_ATTRIBUTE_TYPE_UNDEFINED"},{"file": 47,"line": 1609,"col": 4,"docs": " The specified directory service attribute or value already exists.","name": "DS_ATTRIBUTE_OR_VALUE_EXISTS"},{"file": 47,"line": 1611,"col": 4,"docs": " The directory service is busy.","name": "DS_BUSY"},{"file": 47,"line": 1613,"col": 4,"docs": " The directory service is unavailable.","name": "DS_UNAVAILABLE"},{"file": 47,"line": 1615,"col": 4,"docs": " The directory service was unable to allocate a relative identifier.","name": "DS_NO_RIDS_ALLOCATED"},{"file": 47,"line": 1617,"col": 4,"docs": " The directory service has exhausted the pool of relative identifiers.","name": "DS_NO_MORE_RIDS"},{"file": 47,"line": 1619,"col": 4,"docs": " The requested operation could not be performed because the directory service is not the master for that type of operation.","name": "DS_INCORRECT_ROLE_OWNER"},{"file": 47,"line": 1621,"col": 4,"docs": " The directory service was unable to initialize the subsystem that allocates relative identifiers.","name": "DS_RIDMGR_INIT_ERROR"},{"file": 47,"line": 1623,"col": 4,"docs": " The requested operation did not satisfy one or more constraints that are associated with the class of the object.","name": "DS_OBJ_CLASS_VIOLATION"},{"file": 47,"line": 1625,"col": 4,"docs": " The directory service can perform the requested operation only on a leaf object.","name": "DS_CANT_ON_NON_LEAF"},{"file": 47,"line": 1627,"col": 4,"docs": " The directory service cannot perform the requested operation on the Relatively Defined Name (RDN) attribute of an object.","name": "DS_CANT_ON_RDN"},{"file": 47,"line": 1629,"col": 4,"docs": " The directory service detected an attempt to modify the object class of an object.","name": "DS_CANT_MOD_OBJ_CLASS"},{"file": 47,"line": 1631,"col": 4,"docs": " An error occurred while performing a cross domain move operation.","name": "DS_CROSS_DOM_MOVE_FAILED"},{"file": 47,"line": 1633,"col": 4,"docs": " Unable to contact the global catalog server.","name": "DS_GC_NOT_AVAILABLE"},{"file": 47,"line": 1635,"col": 4,"docs": " The requested operation requires a directory service, and none was available.","name": "DIRECTORY_SERVICE_REQUIRED"},{"file": 47,"line": 1637,"col": 4,"docs": " The reparse attribute cannot be set because it is incompatible with an existing attribute.","name": "REPARSE_ATTRIBUTE_CONFLICT"},{"file": 47,"line": 1639,"col": 4,"docs": " A group marked \"use for deny only\" cannot be enabled.","name": "CANT_ENABLE_DENY_ONLY"},{"file": 47,"line": 1641,"col": 4,"docs": " {EXCEPTION} Multiple floating-point faults.","name": "FLOAT_MULTIPLE_FAULTS"},{"file": 47,"line": 1643,"col": 4,"docs": " {EXCEPTION} Multiple floating-point traps.","name": "FLOAT_MULTIPLE_TRAPS"},{"file": 47,"line": 1645,"col": 4,"docs": " The device has been removed.","name": "DEVICE_REMOVED"},{"file": 47,"line": 1647,"col": 4,"docs": " The volume change journal is being deleted.","name": "JOURNAL_DELETE_IN_PROGRESS"},{"file": 47,"line": 1649,"col": 4,"docs": " The volume change journal is not active.","name": "JOURNAL_NOT_ACTIVE"},{"file": 47,"line": 1651,"col": 4,"docs": " The requested interface is not supported.","name": "NOINTERFACE"},{"file": 47,"line": 1653,"col": 4,"docs": " A directory service resource limit has been exceeded.","name": "DS_ADMIN_LIMIT_EXCEEDED"},{"file": 47,"line": 1656,"col": 4,"docs": " {System Standby Failed} The driver %hs does not support standby mode. Updating this driver allows the system to go to standby mode.","name": "DRIVER_FAILED_SLEEP"},{"file": 47,"line": 1658,"col": 4,"docs": " Mutual Authentication failed. The server password is out of date at the domain controller.","name": "MUTUAL_AUTHENTICATION_FAILED"},{"file": 47,"line": 1660,"col": 4,"docs": " The system file %1 has become corrupt and has been replaced.","name": "CORRUPT_SYSTEM_FILE"},{"file": 47,"line": 1662,"col": 4,"docs": " {EXCEPTION} Alignment Error A data type misalignment error was detected in a load or store instruction.","name": "DATATYPE_MISALIGNMENT_ERROR"},{"file": 47,"line": 1664,"col": 4,"docs": " The WMI data item or data block is read-only.","name": "WMI_READ_ONLY"},{"file": 47,"line": 1666,"col": 4,"docs": " The WMI data item or data block could not be changed.","name": "WMI_SET_FAILURE"},{"file": 47,"line": 1670,"col": 4,"docs": " {Virtual Memory Minimum Too Low} Your system is low on virtual memory. Windows is increasing the size of your virtual memory paging file. During this process, memory requests for some applications might be denied. For more information, see Help.","name": "COMMITMENT_MINIMUM"},{"file": 47,"line": 1673,"col": 4,"docs": " {EXCEPTION} Register NaT consumption faults. A NaT value is consumed on a non-speculative instruction.","name": "REG_NAT_CONSUMPTION"},{"file": 47,"line": 1675,"col": 4,"docs": " The transport element of the medium changer contains media, which is causing the operation to fail.","name": "TRANSPORT_FULL"},{"file": 47,"line": 1679,"col": 4,"docs": " Security Accounts Manager initialization failed because of the following error: %hs Error Status: 0x%x. Click OK to shut down this system and restart in Directory Services Restore Mode. Check the event log for more detailed information.","name": "DS_SAM_INIT_FAILURE"},{"file": 47,"line": 1681,"col": 4,"docs": " This operation is supported only when you are connected to the server.","name": "ONLY_IF_CONNECTED"},{"file": 47,"line": 1683,"col": 4,"docs": " Only an administrator can modify the membership list of an administrative group.","name": "DS_SENSITIVE_GROUP_VIOLATION"},{"file": 47,"line": 1685,"col": 4,"docs": " A device was removed so enumeration must be restarted.","name": "PNP_RESTART_ENUMERATION"},{"file": 47,"line": 1687,"col": 4,"docs": " The journal entry has been deleted from the journal.","name": "JOURNAL_ENTRY_DELETED"},{"file": 47,"line": 1689,"col": 4,"docs": " Cannot change the primary group ID of a domain controller account.","name": "DS_CANT_MOD_PRIMARYGROUPID"},{"file": 47,"line": 1692,"col": 4,"docs": " {Fatal System Error} The system image %s is not properly signed. The file has been replaced with the signed file. The system has been shut down.","name": "SYSTEM_IMAGE_BAD_SIGNATURE"},{"file": 47,"line": 1694,"col": 4,"docs": " The device will not start without a reboot.","name": "PNP_REBOOT_REQUIRED"},{"file": 47,"line": 1696,"col": 4,"docs": " The power state of the current device cannot support this request.","name": "POWER_STATE_INVALID"},{"file": 47,"line": 1698,"col": 4,"docs": " The specified group type is invalid.","name": "DS_INVALID_GROUP_TYPE"},{"file": 47,"line": 1700,"col": 4,"docs": " In a mixed domain, no nesting of a global group if the group is security enabled.","name": "DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN"},{"file": 47,"line": 1702,"col": 4,"docs": " In a mixed domain, cannot nest local groups with other local groups, if the group is security enabled.","name": "DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN"},{"file": 47,"line": 1704,"col": 4,"docs": " A global group cannot have a local group as a member.","name": "DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER"},{"file": 47,"line": 1706,"col": 4,"docs": " A global group cannot have a universal group as a member.","name": "DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER"},{"file": 47,"line": 1708,"col": 4,"docs": " A universal group cannot have a local group as a member.","name": "DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER"},{"file": 47,"line": 1710,"col": 4,"docs": " A global group cannot have a cross-domain member.","name": "DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER"},{"file": 47,"line": 1712,"col": 4,"docs": " A local group cannot have another cross-domain local group as a member.","name": "DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER"},{"file": 47,"line": 1714,"col": 4,"docs": " Cannot change to a security-disabled group because primary members are in this group.","name": "DS_HAVE_PRIMARY_MEMBERS"},{"file": 47,"line": 1716,"col": 4,"docs": " The WMI operation is not supported by the data block or method.","name": "WMI_NOT_SUPPORTED"},{"file": 47,"line": 1718,"col": 4,"docs": " There is not enough power to complete the requested operation.","name": "INSUFFICIENT_POWER"},{"file": 47,"line": 1720,"col": 4,"docs": " The Security Accounts Manager needs to get the boot password.","name": "SAM_NEED_BOOTKEY_PASSWORD"},{"file": 47,"line": 1722,"col": 4,"docs": " The Security Accounts Manager needs to get the boot key from the floppy disk.","name": "SAM_NEED_BOOTKEY_FLOPPY"},{"file": 47,"line": 1724,"col": 4,"docs": " The directory service cannot start.","name": "DS_CANT_START"},{"file": 47,"line": 1728,"col": 4,"docs": " The directory service could not start because of the following error: %hs Error Status: 0x%x. Click OK to shut down this system and restart in Directory Services Restore Mode. Check the event log for more detailed information.","name": "DS_INIT_FAILURE"},{"file": 47,"line": 1732,"col": 4,"docs": " The Security Accounts Manager initialization failed because of the following error: %hs Error Status: 0x%x. Click OK to shut down this system and restart in Safe Mode. Check the event log for more detailed information.","name": "SAM_INIT_FAILURE"},{"file": 47,"line": 1734,"col": 4,"docs": " The requested operation can be performed only on a global catalog server.","name": "DS_GC_REQUIRED"},{"file": 47,"line": 1736,"col": 4,"docs": " A local group can only be a member of other local groups in the same domain.","name": "DS_LOCAL_MEMBER_OF_LOCAL_ONLY"},{"file": 47,"line": 1738,"col": 4,"docs": " Foreign security principals cannot be members of universal groups.","name": "DS_NO_FPO_IN_UNIVERSAL_GROUPS"},{"file": 47,"line": 1742,"col": 4,"docs": " Your computer could not be joined to the domain. You have exceeded the maximum number of computer accounts you are allowed to create in this domain. Contact your system administrator to have this limit reset or increased.","name": "DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED"},{"file": 47,"line": 1744,"col": 4,"docs": " This operation cannot be performed on the current domain.","name": "CURRENT_DOMAIN_NOT_ALLOWED"},{"file": 47,"line": 1746,"col": 4,"docs": " The directory or file cannot be created.","name": "CANNOT_MAKE"},{"file": 47,"line": 1748,"col": 4,"docs": " The system is in the process of shutting down.","name": "SYSTEM_SHUTDOWN"},{"file": 47,"line": 1751,"col": 4,"docs": " Directory Services could not start because of the following error: %hs Error Status: 0x%x. Click OK to shut down the system. You can use the recovery console to diagnose the system further.","name": "DS_INIT_FAILURE_CONSOLE"},{"file": 47,"line": 1754,"col": 4,"docs": " Security Accounts Manager initialization failed because of the following error: %hs Error Status: 0x%x. Click OK to shut down the system. You can use the recovery console to diagnose the system further.","name": "DS_SAM_INIT_FAILURE_CONSOLE"},{"file": 47,"line": 1756,"col": 4,"docs": " A security context was deleted before the context was completed. This is considered a logon failure.","name": "UNFINISHED_CONTEXT_DELETED"},{"file": 47,"line": 1758,"col": 4,"docs": " The client is trying to negotiate a context and the server requires user-to-user but did not send a TGT reply.","name": "NO_TGT_REPLY"},{"file": 47,"line": 1760,"col": 4,"docs": " An object ID was not found in the file.","name": "OBJECTID_NOT_FOUND"},{"file": 47,"line": 1762,"col": 4,"docs": " Unable to accomplish the requested task because the local machine does not have any IP addresses.","name": "NO_IP_ADDRESSES"},{"file": 47,"line": 1764,"col": 4,"docs": " The supplied credential handle does not match the credential that is associated with the security context.","name": "WRONG_CREDENTIAL_HANDLE"},{"file": 47,"line": 1766,"col": 4,"docs": " The crypto system or checksum function is invalid because a required function is unavailable.","name": "CRYPTO_SYSTEM_INVALID"},{"file": 47,"line": 1768,"col": 4,"docs": " The number of maximum ticket referrals has been exceeded.","name": "MAX_REFERRALS_EXCEEDED"},{"file": 47,"line": 1770,"col": 4,"docs": " The local machine must be a Kerberos KDC (domain controller) and it is not.","name": "MUST_BE_KDC"},{"file": 47,"line": 1772,"col": 4,"docs": " The other end of the security negotiation requires strong crypto but it is not supported on the local machine.","name": "STRONG_CRYPTO_NOT_SUPPORTED"},{"file": 47,"line": 1774,"col": 4,"docs": " The KDC reply contained more than one principal name.","name": "TOO_MANY_PRINCIPALS"},{"file": 47,"line": 1776,"col": 4,"docs": " Expected to find PA data for a hint of what etype to use, but it was not found.","name": "NO_PA_DATA"},{"file": 47,"line": 1778,"col": 4,"docs": " The client certificate does not contain a valid UPN, or does not match the client name in the logon request. Contact your administrator.","name": "PKINIT_NAME_MISMATCH"},{"file": 47,"line": 1780,"col": 4,"docs": " Smart card logon is required and was not used.","name": "SMARTCARD_LOGON_REQUIRED"},{"file": 47,"line": 1782,"col": 4,"docs": " An invalid request was sent to the KDC.","name": "KDC_INVALID_REQUEST"},{"file": 47,"line": 1784,"col": 4,"docs": " The KDC was unable to generate a referral for the service requested.","name": "KDC_UNABLE_TO_REFER"},{"file": 47,"line": 1786,"col": 4,"docs": " The encryption type requested is not supported by the KDC.","name": "KDC_UNKNOWN_ETYPE"},{"file": 47,"line": 1788,"col": 4,"docs": " A system shutdown is in progress.","name": "SHUTDOWN_IN_PROGRESS"},{"file": 47,"line": 1790,"col": 4,"docs": " The server machine is shutting down.","name": "SERVER_SHUTDOWN_IN_PROGRESS"},{"file": 47,"line": 1792,"col": 4,"docs": " This operation is not supported on a computer running Windows Server 2003 operating system for Small Business Server.","name": "NOT_SUPPORTED_ON_SBS"},{"file": 47,"line": 1794,"col": 4,"docs": " The WMI GUID is no longer available.","name": "WMI_GUID_DISCONNECTED"},{"file": 47,"line": 1796,"col": 4,"docs": " Collection or events for the WMI GUID is already disabled.","name": "WMI_ALREADY_DISABLED"},{"file": 47,"line": 1798,"col": 4,"docs": " Collection or events for the WMI GUID is already enabled.","name": "WMI_ALREADY_ENABLED"},{"file": 47,"line": 1800,"col": 4,"docs": " The master file table on the volume is too fragmented to complete this operation.","name": "MFT_TOO_FRAGMENTED"},{"file": 47,"line": 1802,"col": 4,"docs": " Copy protection failure.","name": "COPY_PROTECTION_FAILURE"},{"file": 47,"line": 1804,"col": 4,"docs": " Copy protection error—DVD CSS Authentication failed.","name": "CSS_AUTHENTICATION_FAILURE"},{"file": 47,"line": 1806,"col": 4,"docs": " Copy protection error—The specified sector does not contain a valid key.","name": "CSS_KEY_NOT_PRESENT"},{"file": 47,"line": 1808,"col": 4,"docs": " Copy protection error—DVD session key not established.","name": "CSS_KEY_NOT_ESTABLISHED"},{"file": 47,"line": 1810,"col": 4,"docs": " Copy protection error—The read failed because the sector is encrypted.","name": "CSS_SCRAMBLED_SECTOR"},{"file": 47,"line": 1812,"col": 4,"docs": " Copy protection error—The region of the specified DVD does not correspond to the region setting of the drive.","name": "CSS_REGION_MISMATCH"},{"file": 47,"line": 1814,"col": 4,"docs": " Copy protection error—The region setting of the drive might be permanent.","name": "CSS_RESETS_EXHAUSTED"},{"file": 47,"line": 1817,"col": 4,"docs": " The Kerberos protocol encountered an error while validating the KDC certificate during smart card logon. There is more information in the system event log.","name": "PKINIT_FAILURE"},{"file": 47,"line": 1819,"col": 4,"docs": " The Kerberos protocol encountered an error while attempting to use the smart card subsystem.","name": "SMARTCARD_SUBSYSTEM_FAILURE"},{"file": 47,"line": 1821,"col": 4,"docs": " The target server does not have acceptable Kerberos credentials.","name": "NO_KERB_KEY"},{"file": 47,"line": 1823,"col": 4,"docs": " The transport determined that the remote system is down.","name": "HOST_DOWN"},{"file": 47,"line": 1825,"col": 4,"docs": " An unsupported pre-authentication mechanism was presented to the Kerberos package.","name": "UNSUPPORTED_PREAUTH"},{"file": 47,"line": 1827,"col": 4,"docs": " The encryption algorithm that is used on the source file needs a bigger key buffer than the one that is used on the destination file.","name": "EFS_ALG_BLOB_TOO_BIG"},{"file": 47,"line": 1829,"col": 4,"docs": " An attempt to remove a processes DebugPort was made, but a port was not already associated with the process.","name": "PORT_NOT_SET"},{"file": 47,"line": 1831,"col": 4,"docs": " An attempt to do an operation on a debug port failed because the port is in the process of being deleted.","name": "DEBUGGER_INACTIVE"},{"file": 47,"line": 1833,"col": 4,"docs": " This version of Windows is not compatible with the behavior version of the directory forest, domain, or domain controller.","name": "DS_VERSION_CHECK_FAILURE"},{"file": 47,"line": 1835,"col": 4,"docs": " The specified event is currently not being audited.","name": "AUDITING_DISABLED"},{"file": 47,"line": 1837,"col": 4,"docs": " The machine account was created prior to Windows NT 4.0 operating system. The account needs to be recreated.","name": "PRENT4_MACHINE_ACCOUNT"},{"file": 47,"line": 1839,"col": 4,"docs": " An account group cannot have a universal group as a member.","name": "DS_AG_CANT_HAVE_UNIVERSAL_MEMBER"},{"file": 47,"line": 1841,"col": 4,"docs": " The specified image file did not have the correct format; it appears to be a 32-bit Windows image.","name": "INVALID_IMAGE_WIN_32"},{"file": 47,"line": 1843,"col": 4,"docs": " The specified image file did not have the correct format; it appears to be a 64-bit Windows image.","name": "INVALID_IMAGE_WIN_64"},{"file": 47,"line": 1845,"col": 4,"docs": " The client's supplied SSPI channel bindings were incorrect.","name": "BAD_BINDINGS"},{"file": 47,"line": 1847,"col": 4,"docs": " The client session has expired; so the client must re-authenticate to continue accessing the remote resources.","name": "NETWORK_SESSION_EXPIRED"},{"file": 47,"line": 1849,"col": 4,"docs": " The AppHelp dialog box canceled; thus preventing the application from starting.","name": "APPHELP_BLOCK"},{"file": 47,"line": 1851,"col": 4,"docs": " The SID filtering operation removed all SIDs.","name": "ALL_SIDS_FILTERED"},{"file": 47,"line": 1853,"col": 4,"docs": " The driver was not loaded because the system is starting in safe mode.","name": "NOT_SAFE_MODE_DRIVER"},{"file": 47,"line": 1855,"col": 4,"docs": " Access to %1 has been restricted by your Administrator by the default software restriction policy level.","name": "ACCESS_DISABLED_BY_POLICY_DEFAULT"},{"file": 47,"line": 1857,"col": 4,"docs": " Access to %1 has been restricted by your Administrator by location with policy rule %2 placed on path %3.","name": "ACCESS_DISABLED_BY_POLICY_PATH"},{"file": 47,"line": 1859,"col": 4,"docs": " Access to %1 has been restricted by your Administrator by software publisher policy.","name": "ACCESS_DISABLED_BY_POLICY_PUBLISHER"},{"file": 47,"line": 1861,"col": 4,"docs": " Access to %1 has been restricted by your Administrator by policy rule %2.","name": "ACCESS_DISABLED_BY_POLICY_OTHER"},{"file": 47,"line": 1863,"col": 4,"docs": " The driver was not loaded because it failed its initialization call.","name": "FAILED_DRIVER_ENTRY"},{"file": 47,"line": 1866,"col": 4,"docs": " The device encountered an error while applying power or reading the device configuration. This might be caused by a failure of your hardware or by a poor connection.","name": "DEVICE_ENUMERATION_ERROR"},{"file": 47,"line": 1868,"col": 4,"docs": " The create operation failed because the name contained at least one mount point that resolves to a volume to which the specified device object is not attached.","name": "MOUNT_POINT_NOT_RESOLVED"},{"file": 47,"line": 1870,"col": 4,"docs": " The device object parameter is either not a valid device object or is not attached to the volume that is specified by the file name.","name": "INVALID_DEVICE_OBJECT_PARAMETER"},{"file": 47,"line": 1873,"col": 4,"docs": " A machine check error has occurred. Check the system event log for additional information.","name": "MCA_OCCURED"},{"file": 47,"line": 1875,"col": 4,"docs": " Driver %2 has been blocked from loading.","name": "DRIVER_BLOCKED_CRITICAL"},{"file": 47,"line": 1877,"col": 4,"docs": " Driver %2 has been blocked from loading.","name": "DRIVER_BLOCKED"},{"file": 47,"line": 1879,"col": 4,"docs": " There was error [%2] processing the driver database.","name": "DRIVER_DATABASE_ERROR"},{"file": 47,"line": 1881,"col": 4,"docs": " System hive size has exceeded its limit.","name": "SYSTEM_HIVE_TOO_LARGE"},{"file": 47,"line": 1883,"col": 4,"docs": " A dynamic link library (DLL) referenced a module that was neither a DLL nor the process's executable image.","name": "INVALID_IMPORT_OF_NON_DLL"},{"file": 47,"line": 1885,"col": 4,"docs": " The local account store does not contain secret material for the specified account.","name": "NO_SECRETS"},{"file": 47,"line": 1887,"col": 4,"docs": " Access to %1 has been restricted by your Administrator by policy rule %2.","name": "ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY"},{"file": 47,"line": 1889,"col": 4,"docs": " The system was not able to allocate enough memory to perform a stack switch.","name": "FAILED_STACK_SWITCH"},{"file": 47,"line": 1891,"col": 4,"docs": " A heap has been corrupted.","name": "HEAP_CORRUPTION"},{"file": 47,"line": 1893,"col": 4,"docs": " An incorrect PIN was presented to the smart card.","name": "SMARTCARD_WRONG_PIN"},{"file": 47,"line": 1895,"col": 4,"docs": " The smart card is blocked.","name": "SMARTCARD_CARD_BLOCKED"},{"file": 47,"line": 1897,"col": 4,"docs": " No PIN was presented to the smart card.","name": "SMARTCARD_CARD_NOT_AUTHENTICATED"},{"file": 47,"line": 1899,"col": 4,"docs": " No smart card is available.","name": "SMARTCARD_NO_CARD"},{"file": 47,"line": 1901,"col": 4,"docs": " The requested key container does not exist on the smart card.","name": "SMARTCARD_NO_KEY_CONTAINER"},{"file": 47,"line": 1903,"col": 4,"docs": " The requested certificate does not exist on the smart card.","name": "SMARTCARD_NO_CERTIFICATE"},{"file": 47,"line": 1905,"col": 4,"docs": " The requested keyset does not exist.","name": "SMARTCARD_NO_KEYSET"},{"file": 47,"line": 1907,"col": 4,"docs": " A communication error with the smart card has been detected.","name": "SMARTCARD_IO_ERROR"},{"file": 47,"line": 1910,"col": 4,"docs": " The system detected a possible attempt to compromise security. Ensure that you can contact the server that authenticated you.","name": "DOWNGRADE_DETECTED"},{"file": 47,"line": 1913,"col": 4,"docs": " The smart card certificate used for authentication has been revoked. Contact your system administrator. There might be additional information in the event log.","name": "SMARTCARD_CERT_REVOKED"},{"file": 47,"line": 1915,"col": 4,"docs": " An untrusted certificate authority was detected while processing the smart card certificate that is used for authentication. Contact your system administrator.","name": "ISSUING_CA_UNTRUSTED"},{"file": 47,"line": 1917,"col": 4,"docs": " The revocation status of the smart card certificate that is used for authentication could not be determined. Contact your system administrator.","name": "REVOCATION_OFFLINE_C"},{"file": 47,"line": 1919,"col": 4,"docs": " The smart card certificate used for authentication was not trusted. Contact your system administrator.","name": "PKINIT_CLIENT_FAILURE"},{"file": 47,"line": 1921,"col": 4,"docs": " The smart card certificate used for authentication has expired. Contact your system administrator.","name": "SMARTCARD_CERT_EXPIRED"},{"file": 47,"line": 1923,"col": 4,"docs": " The driver could not be loaded because a previous version of the driver is still in memory.","name": "DRIVER_FAILED_PRIOR_UNLOAD"},{"file": 47,"line": 1925,"col": 4,"docs": " The smart card provider could not perform the action because the context was acquired as silent.","name": "SMARTCARD_SILENT_CONTEXT"},{"file": 47,"line": 1927,"col": 4,"docs": " The delegated trust creation quota of the current user has been exceeded.","name": "PER_USER_TRUST_QUOTA_EXCEEDED"},{"file": 47,"line": 1929,"col": 4,"docs": " The total delegated trust creation quota has been exceeded.","name": "ALL_USER_TRUST_QUOTA_EXCEEDED"},{"file": 47,"line": 1931,"col": 4,"docs": " The delegated trust deletion quota of the current user has been exceeded.","name": "USER_DELETE_TRUST_QUOTA_EXCEEDED"},{"file": 47,"line": 1933,"col": 4,"docs": " The requested name already exists as a unique identifier.","name": "DS_NAME_NOT_UNIQUE"},{"file": 47,"line": 1935,"col": 4,"docs": " The requested object has a non-unique identifier and cannot be retrieved.","name": "DS_DUPLICATE_ID_FOUND"},{"file": 47,"line": 1937,"col": 4,"docs": " The group cannot be converted due to attribute restrictions on the requested group type.","name": "DS_GROUP_CONVERSION_ERROR"},{"file": 47,"line": 1939,"col": 4,"docs": " {Volume Shadow Copy Service} Wait while the Volume Shadow Copy Service prepares volume %hs for hibernation.","name": "VOLSNAP_PREPARE_HIBERNATE"},{"file": 47,"line": 1941,"col": 4,"docs": " Kerberos sub-protocol User2User is required.","name": "USER2USER_REQUIRED"},{"file": 47,"line": 1944,"col": 4,"docs": " The system detected an overrun of a stack-based buffer in this application. This overrun could potentially allow a malicious user to gain control of this application.","name": "STACK_BUFFER_OVERRUN"},{"file": 47,"line": 1947,"col": 4,"docs": " The Kerberos subsystem encountered an error. A service for user protocol request was made against a domain controller which does not support service for user.","name": "NO_S4U_PROT_SUPPORT"},{"file": 47,"line": 1950,"col": 4,"docs": " An attempt was made by this server to make a Kerberos constrained delegation request for a target that is outside the server realm. This action is not supported and the resulting error indicates a misconfiguration on the allowed-to-delegate-to list for this server. Contact your administrator.","name": "CROSSREALM_DELEGATION_FAILURE"},{"file": 47,"line": 1953,"col": 4,"docs": " The revocation status of the domain controller certificate used for smart card authentication could not be determined. There is additional information in the system event log. Contact your system administrator.","name": "REVOCATION_OFFLINE_KDC"},{"file": 47,"line": 1956,"col": 4,"docs": " An untrusted certificate authority was detected while processing the domain controller certificate used for authentication. There is additional information in the system event log. Contact your system administrator.","name": "ISSUING_CA_UNTRUSTED_KDC"},{"file": 47,"line": 1959,"col": 4,"docs": " The domain controller certificate used for smart card logon has expired. Contact your system administrator with the contents of your system event log.","name": "KDC_CERT_EXPIRED"},{"file": 47,"line": 1962,"col": 4,"docs": " The domain controller certificate used for smart card logon has been revoked. Contact your system administrator with the contents of your system event log.","name": "KDC_CERT_REVOKED"},{"file": 47,"line": 1964,"col": 4,"docs": " Data present in one of the parameters is more than the function can operate on.","name": "PARAMETER_QUOTA_EXCEEDED"},{"file": 47,"line": 1967,"col": 4,"docs": " The system has failed to hibernate (The error code is %hs). Hibernation will be disabled until the system is restarted.","name": "HIBERNATION_FAILURE"},{"file": 47,"line": 1969,"col": 4,"docs": " An attempt to delay-load a .dll or get a function address in a delay-loaded .dll failed.","name": "DELAY_LOAD_FAILED"},{"file": 47,"line": 1972,"col": 4,"docs": " Logon Failure: The machine you are logging onto is protected by an authentication firewall. The specified account is not allowed to authenticate to the machine.","name": "AUTHENTICATION_FIREWALL_FAILED"},{"file": 47,"line": 1975,"col": 4,"docs": " %hs is a 16-bit application. You do not have permissions to execute 16-bit applications. Check your permissions with your system administrator.","name": "VDM_DISALLOWED"},{"file": 47,"line": 1979,"col": 4,"docs": " {Display Driver Stopped Responding} The %hs display driver has stopped working normally. Save your work and reboot the system to restore full display functionality. The next time you reboot the machine a dialog will be displayed giving you a chance to report this failure to Microsoft.","name": "HUNG_DISPLAY_DRIVER_THREAD"},{"file": 47,"line": 1982,"col": 4,"docs": " The Desktop heap encountered an error while allocating session memory. There is more information in the system event log.","name": "INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE"},{"file": 47,"line": 1984,"col": 4,"docs": " An invalid parameter was passed to a C runtime function.","name": "INVALID_CRUNTIME_PARAMETER"},{"file": 47,"line": 1986,"col": 4,"docs": " The authentication failed because NTLM was blocked.","name": "NTLM_BLOCKED"},{"file": 47,"line": 1988,"col": 4,"docs": " The source object's SID already exists in destination forest.","name": "DS_SRC_SID_EXISTS_IN_FOREST"},{"file": 47,"line": 1990,"col": 4,"docs": " The domain name of the trusted domain already exists in the forest.","name": "DS_DOMAIN_NAME_EXISTS_IN_FOREST"},{"file": 47,"line": 1992,"col": 4,"docs": " The flat name of the trusted domain already exists in the forest.","name": "DS_FLAT_NAME_EXISTS_IN_FOREST"},{"file": 47,"line": 1994,"col": 4,"docs": " The User Principal Name (UPN) is invalid.","name": "INVALID_USER_PRINCIPAL_NAME"},{"file": 47,"line": 1996,"col": 4,"docs": " There has been an assertion failure.","name": "ASSERTION_FAILURE"},{"file": 47,"line": 1998,"col": 4,"docs": " Application verifier has found an error in the current process.","name": "VERIFIER_STOP"},{"file": 47,"line": 2000,"col": 4,"docs": " A user mode unwind is in progress.","name": "CALLBACK_POP_STACK"},{"file": 47,"line": 2003,"col": 4,"docs": " %2 has been blocked from loading due to incompatibility with this system. Contact your software vendor for a compatible version of the driver.","name": "INCOMPATIBLE_DRIVER_BLOCKED"},{"file": 47,"line": 2005,"col": 4,"docs": " Illegal operation attempted on a registry key which has already been unloaded.","name": "HIVE_UNLOADED"},{"file": 47,"line": 2007,"col": 4,"docs": " Compression is disabled for this volume.","name": "COMPRESSION_DISABLED"},{"file": 47,"line": 2009,"col": 4,"docs": " The requested operation could not be completed due to a file system limitation.","name": "FILE_SYSTEM_LIMITATION"},{"file": 47,"line": 2012,"col": 4,"docs": " The hash for image %hs cannot be found in the system catalogs. The image is likely corrupt or the victim of tampering.","name": "INVALID_IMAGE_HASH"},{"file": 47,"line": 2014,"col": 4,"docs": " The implementation is not capable of performing the request.","name": "NOT_CAPABLE"},{"file": 47,"line": 2016,"col": 4,"docs": " The requested operation is out of order with respect to other operations.","name": "REQUEST_OUT_OF_SEQUENCE"},{"file": 47,"line": 2018,"col": 4,"docs": " An operation attempted to exceed an implementation-defined limit.","name": "IMPLEMENTATION_LIMIT"},{"file": 47,"line": 2020,"col": 4,"docs": " The requested operation requires elevation.","name": "ELEVATION_REQUIRED"},{"file": 47,"line": 2022,"col": 4,"docs": " The required security context does not exist.","name": "NO_SECURITY_CONTEXT"},{"file": 47,"line": 2024,"col": 4,"docs": " The PKU2U protocol encountered an error while attempting to utilize the associated certificates.","name": "PKU2U_CERT_FAILURE"},{"file": 47,"line": 2026,"col": 4,"docs": " The operation was attempted beyond the valid data length of the file.","name": "BEYOND_VDL"},{"file": 47,"line": 2028,"col": 4,"docs": " The attempted write operation encountered a write already in progress for some portion of the range.","name": "ENCOUNTERED_WRITE_IN_PROGRESS"},{"file": 47,"line": 2030,"col": 4,"docs": " The page fault mappings changed in the middle of processing a fault so the operation must be retried.","name": "PTE_CHANGED"},{"file": 47,"line": 2032,"col": 4,"docs": " The attempt to purge this file from memory failed to purge some or all the data from memory.","name": "PURGE_FAILED"},{"file": 47,"line": 2034,"col": 4,"docs": " The requested credential requires confirmation.","name": "CRED_REQUIRES_CONFIRMATION"},{"file": 47,"line": 2036,"col": 4,"docs": " The remote server sent an invalid response for a file being opened with Client Side Encryption.","name": "CS_ENCRYPTION_INVALID_SERVER_RESPONSE"},{"file": 47,"line": 2038,"col": 4,"docs": " Client Side Encryption is not supported by the remote server even though it claims to support it.","name": "CS_ENCRYPTION_UNSUPPORTED_SERVER"},{"file": 47,"line": 2040,"col": 4,"docs": " File is encrypted and should be opened in Client Side Encryption mode.","name": "CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE"},{"file": 47,"line": 2042,"col": 4,"docs": " A new encrypted file is being created and a $EFS needs to be provided.","name": "CS_ENCRYPTION_NEW_ENCRYPTED_FILE"},{"file": 47,"line": 2044,"col": 4,"docs": " The SMB client requested a CSE FSCTL on a non-CSE file.","name": "CS_ENCRYPTION_FILE_NOT_CSE"},{"file": 47,"line": 2046,"col": 4,"docs": " Indicates a particular Security ID cannot be assigned as the label of an object.","name": "INVALID_LABEL"},{"file": 47,"line": 2048,"col": 4,"docs": " The process hosting the driver for this device has terminated.","name": "DRIVER_PROCESS_TERMINATED"},{"file": 47,"line": 2050,"col": 4,"docs": " The requested system device cannot be identified due to multiple indistinguishable devices potentially matching the identification criteria.","name": "AMBIGUOUS_SYSTEM_DEVICE"},{"file": 47,"line": 2052,"col": 4,"docs": " The requested system device cannot be found.","name": "SYSTEM_DEVICE_NOT_FOUND"},{"file": 47,"line": 2054,"col": 4,"docs": " This boot application must be restarted.","name": "RESTART_BOOT_APPLICATION"},{"file": 47,"line": 2056,"col": 4,"docs": " Insufficient NVRAM resources exist to complete the API.  A reboot might be required.","name": "INSUFFICIENT_NVRAM_RESOURCES"},{"file": 47,"line": 2058,"col": 4,"docs": " No ranges for the specified operation were able to be processed.","name": "NO_RANGES_PROCESSED"},{"file": 47,"line": 2060,"col": 4,"docs": " The storage device does not support Offload Write.","name": "DEVICE_FEATURE_NOT_SUPPORTED"},{"file": 47,"line": 2062,"col": 4,"docs": " Data cannot be moved because the source device cannot communicate with the destination device.","name": "DEVICE_UNREACHABLE"},{"file": 47,"line": 2064,"col": 4,"docs": " The token representing the data is invalid or expired.","name": "INVALID_TOKEN"},{"file": 47,"line": 2066,"col": 4,"docs": " The file server is temporarily unavailable.","name": "SERVER_UNAVAILABLE"},{"file": 47,"line": 2068,"col": 4,"docs": " The specified task name is invalid.","name": "INVALID_TASK_NAME"},{"file": 47,"line": 2070,"col": 4,"docs": " The specified task index is invalid.","name": "INVALID_TASK_INDEX"},{"file": 47,"line": 2072,"col": 4,"docs": " The specified thread is already joining a task.","name": "THREAD_ALREADY_IN_TASK"},{"file": 47,"line": 2074,"col": 4,"docs": " A callback has requested to bypass native code.","name": "CALLBACK_BYPASS"},{"file": 47,"line": 2077,"col": 4,"docs": " A fail fast exception occurred. Exception handlers will not be invoked and the process will be terminated immediately.","name": "FAIL_FAST_EXCEPTION"},{"file": 47,"line": 2080,"col": 4,"docs": " Windows cannot verify the digital signature for this file. The signing certificate for this file has been revoked.","name": "IMAGE_CERT_REVOKED"},{"file": 47,"line": 2082,"col": 4,"docs": " The ALPC port is closed.","name": "PORT_CLOSED"},{"file": 47,"line": 2084,"col": 4,"docs": " The ALPC message requested is no longer available.","name": "MESSAGE_LOST"},{"file": 47,"line": 2086,"col": 4,"docs": " The ALPC message supplied is invalid.","name": "INVALID_MESSAGE"},{"file": 47,"line": 2088,"col": 4,"docs": " The ALPC message has been canceled.","name": "REQUEST_CANCELED"},{"file": 47,"line": 2090,"col": 4,"docs": " Invalid recursive dispatch attempt.","name": "RECURSIVE_DISPATCH"},{"file": 47,"line": 2092,"col": 4,"docs": " No receive buffer has been supplied in a synchronous request.","name": "LPC_RECEIVE_BUFFER_EXPECTED"},{"file": 47,"line": 2094,"col": 4,"docs": " The connection port is used in an invalid context.","name": "LPC_INVALID_CONNECTION_USAGE"},{"file": 47,"line": 2096,"col": 4,"docs": " The ALPC port does not accept new request messages.","name": "LPC_REQUESTS_NOT_ALLOWED"},{"file": 47,"line": 2098,"col": 4,"docs": " The resource requested is already in use.","name": "RESOURCE_IN_USE"},{"file": 47,"line": 2100,"col": 4,"docs": " The hardware has reported an uncorrectable memory error.","name": "HARDWARE_MEMORY_ERROR"},{"file": 47,"line": 2102,"col": 4,"docs": " Status 0x%08x was returned, waiting on handle 0x%x for wait 0x%p, in waiter 0x%p.","name": "THREADPOOL_HANDLE_EXCEPTION"},{"file": 47,"line": 2104,"col": 4,"docs": " After a callback to 0x%p(0x%p), a completion call to Set event(0x%p) failed with status 0x%08x.","name": "THREADPOOL_SET_EVENT_ON_COMPLETION_FAILED"},{"file": 47,"line": 2106,"col": 4,"docs": " After a callback to 0x%p(0x%p), a completion call to ReleaseSemaphore(0x%p, %d) failed with status 0x%08x.","name": "THREADPOOL_RELEASE_SEMAPHORE_ON_COMPLETION_FAILED"},{"file": 47,"line": 2108,"col": 4,"docs": " After a callback to 0x%p(0x%p), a completion call to ReleaseMutex(%p) failed with status 0x%08x.","name": "THREADPOOL_RELEASE_MUTEX_ON_COMPLETION_FAILED"},{"file": 47,"line": 2110,"col": 4,"docs": " After a callback to 0x%p(0x%p), a completion call to FreeLibrary(%p) failed with status 0x%08x.","name": "THREADPOOL_FREE_LIBRARY_ON_COMPLETION_FAILED"},{"file": 47,"line": 2112,"col": 4,"docs": " The thread pool 0x%p was released while a thread was posting a callback to 0x%p(0x%p) to it.","name": "THREADPOOL_RELEASED_DURING_OPERATION"},{"file": 47,"line": 2115,"col": 4,"docs": " A thread pool worker thread is impersonating a client, after a callback to 0x%p(0x%p). This is unexpected, indicating that the callback is missing a call to revert the impersonation.","name": "CALLBACK_RETURNED_WHILE_IMPERSONATING"},{"file": 47,"line": 2118,"col": 4,"docs": " A thread pool worker thread is impersonating a client, after executing an APC. This is unexpected, indicating that the APC is missing a call to revert the impersonation.","name": "APC_RETURNED_WHILE_IMPERSONATING"},{"file": 47,"line": 2120,"col": 4,"docs": " Either the target process, or the target thread's containing process, is a protected process.","name": "PROCESS_IS_PROTECTED"},{"file": 47,"line": 2122,"col": 4,"docs": " A thread is getting dispatched with MCA EXCEPTION because of MCA.","name": "MCA_EXCEPTION"},{"file": 47,"line": 2124,"col": 4,"docs": " The client certificate account mapping is not unique.","name": "CERTIFICATE_MAPPING_NOT_UNIQUE"},{"file": 47,"line": 2126,"col": 4,"docs": " The symbolic link cannot be followed because its type is disabled.","name": "SYMLINK_CLASS_DISABLED"},{"file": 47,"line": 2128,"col": 4,"docs": " Indicates that the specified string is not valid for IDN normalization.","name": "INVALID_IDN_NORMALIZATION"},{"file": 47,"line": 2130,"col": 4,"docs": " No mapping for the Unicode character exists in the target multi-byte code page.","name": "NO_UNICODE_TRANSLATION"},{"file": 47,"line": 2132,"col": 4,"docs": " The provided callback is already registered.","name": "ALREADY_REGISTERED"},{"file": 47,"line": 2134,"col": 4,"docs": " The provided context did not match the target.","name": "CONTEXT_MISMATCH"},{"file": 47,"line": 2136,"col": 4,"docs": " The specified port already has a completion list.","name": "PORT_ALREADY_HAS_COMPLETION_LIST"},{"file": 47,"line": 2139,"col": 4,"docs": " A threadpool worker thread entered a callback at thread base priority 0x%x and exited at priority 0x%x. This is unexpected, indicating that the callback missed restoring the priority.","name": "CALLBACK_RETURNED_THREAD_PRIORITY"},{"file": 47,"line": 2142,"col": 4,"docs": " An invalid thread, handle %p, is specified for this operation. Possibly, a threadpool worker thread was specified.","name": "INVALID_THREAD"},{"file": 47,"line": 2145,"col": 4,"docs": " A threadpool worker thread entered a callback, which left transaction state. This is unexpected, indicating that the callback missed clearing the transaction.","name": "CALLBACK_RETURNED_TRANSACTION"},{"file": 47,"line": 2148,"col": 4,"docs": " A threadpool worker thread entered a callback, which left the loader lock held. This is unexpected, indicating that the callback missed releasing the lock.","name": "CALLBACK_RETURNED_LDR_LOCK"},{"file": 47,"line": 2151,"col": 4,"docs": " A threadpool worker thread entered a callback, which left with preferred languages set. This is unexpected, indicating that the callback missed clearing them.","name": "CALLBACK_RETURNED_LANG"},{"file": 47,"line": 2154,"col": 4,"docs": " A threadpool worker thread entered a callback, which left with background priorities set. This is unexpected, indicating that the callback missed restoring the original priorities.","name": "CALLBACK_RETURNED_PRI_BACK"},{"file": 47,"line": 2156,"col": 4,"docs": " The attempted operation required self healing to be enabled.","name": "DISK_REPAIR_DISABLED"},{"file": 47,"line": 2158,"col": 4,"docs": " The directory service cannot perform the requested operation because a domain rename operation is in progress.","name": "DS_DOMAIN_RENAME_IN_PROGRESS"},{"file": 47,"line": 2160,"col": 4,"docs": " An operation failed because the storage quota was exceeded.","name": "DISK_QUOTA_EXCEEDED"},{"file": 47,"line": 2162,"col": 4,"docs": " An operation failed because the content was blocked.","name": "CONTENT_BLOCKED"},{"file": 47,"line": 2164,"col": 4,"docs": " The operation could not be completed due to bad clusters on disk.","name": "BAD_CLUSTERS"},{"file": 47,"line": 2166,"col": 4,"docs": " The operation could not be completed because the volume is dirty. Please run the Chkdsk utility and try again.","name": "VOLUME_DIRTY"},{"file": 47,"line": 2168,"col": 4,"docs": " This file is checked out or locked for editing by another user.","name": "FILE_CHECKED_OUT"},{"file": 47,"line": 2170,"col": 4,"docs": " The file must be checked out before saving changes.","name": "CHECKOUT_REQUIRED"},{"file": 47,"line": 2172,"col": 4,"docs": " The file type being saved or retrieved has been blocked.","name": "BAD_FILE_TYPE"},{"file": 47,"line": 2174,"col": 4,"docs": " The file size exceeds the limit allowed and cannot be saved.","name": "FILE_TOO_LARGE"},{"file": 47,"line": 2177,"col": 4,"docs": " Access Denied. Before opening files in this location, you must first browse to the e.g. site and select the option to log on automatically.","name": "FORMS_AUTH_REQUIRED"},{"file": 47,"line": 2179,"col": 4,"docs": " The operation did not complete successfully because the file contains a virus.","name": "VIRUS_INFECTED"},{"file": 47,"line": 2182,"col": 4,"docs": " This file contains a virus and cannot be opened. Due to the nature of this virus, the file has been removed from this location.","name": "VIRUS_DELETED"},{"file": 47,"line": 2184,"col": 4,"docs": " The resources required for this device conflict with the MCFG table.","name": "BAD_MCFG_TABLE"},{"file": 47,"line": 2187,"col": 4,"docs": " The operation did not complete successfully because it would cause an oplock to be broken. The caller has requested that existing oplocks not be broken.","name": "CANNOT_BREAK_OPLOCK"},{"file": 47,"line": 2189,"col": 4,"docs": " WOW Assertion Error.","name": "WOW_ASSERTION"},{"file": 47,"line": 2191,"col": 4,"docs": " The cryptographic signature is invalid.","name": "INVALID_SIGNATURE"},{"file": 47,"line": 2193,"col": 4,"docs": " The cryptographic provider does not support HMAC.","name": "HMAC_NOT_SUPPORTED"},{"file": 47,"line": 2195,"col": 4,"docs": " The IPsec queue overflowed.","name": "IPSEC_QUEUE_OVERFLOW"},{"file": 47,"line": 2197,"col": 4,"docs": " The neighbor discovery queue overflowed.","name": "ND_QUEUE_OVERFLOW"},{"file": 47,"line": 2199,"col": 4,"docs": " An Internet Control Message Protocol (ICMP) hop limit exceeded error was received.","name": "HOPLIMIT_EXCEEDED"},{"file": 47,"line": 2201,"col": 4,"docs": " The protocol is not installed on the local machine.","name": "PROTOCOL_NOT_SUPPORTED"},{"file": 47,"line": 2204,"col": 4,"docs": " {Delayed Write Failed} Windows was unable to save all the data for the file %hs; the data has been lost. This error might be caused by network connectivity issues. Try to save this file elsewhere.","name": "LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED"},{"file": 47,"line": 2207,"col": 4,"docs": " {Delayed Write Failed} Windows was unable to save all the data for the file %hs; the data has been lost. This error was returned by the server on which the file exists. Try to save this file elsewhere.","name": "LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR"},{"file": 47,"line": 2210,"col": 4,"docs": " {Delayed Write Failed} Windows was unable to save all the data for the file %hs; the data has been lost. This error might be caused if the device has been removed or the media is write-protected.","name": "LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR"},{"file": 47,"line": 2212,"col": 4,"docs": " Windows was unable to parse the requested XML data.","name": "XML_PARSE_ERROR"},{"file": 47,"line": 2214,"col": 4,"docs": " An error was encountered while processing an XML digital signature.","name": "XMLDSIG_ERROR"},{"file": 47,"line": 2216,"col": 4,"docs": " This indicates that the caller made the connection request in the wrong routing compartment.","name": "WRONG_COMPARTMENT"},{"file": 47,"line": 2218,"col": 4,"docs": " This indicates that there was an AuthIP failure when attempting to connect to the remote host.","name": "AUTHIP_FAILURE"},{"file": 47,"line": 2220,"col": 4,"docs": " OID mapped groups cannot have members.","name": "DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS"},{"file": 47,"line": 2222,"col": 4,"docs": " The specified OID cannot be found.","name": "DS_OID_NOT_FOUND"},{"file": 47,"line": 2224,"col": 4,"docs": " Hash generation for the specified version and hash type is not enabled on server.","name": "HASH_NOT_SUPPORTED"},{"file": 47,"line": 2226,"col": 4,"docs": " The hash requests is not present or not up to date with the current file contents.","name": "HASH_NOT_PRESENT"},{"file": 47,"line": 2228,"col": 4,"docs": " A file system filter on the server has not opted in for Offload Read support.","name": "OFFLOAD_READ_FLT_NOT_SUPPORTED"},{"file": 47,"line": 2230,"col": 4,"docs": " A file system filter on the server has not opted in for Offload Write support.","name": "OFFLOAD_WRITE_FLT_NOT_SUPPORTED"},{"file": 47,"line": 2236,"col": 4,"docs": " Offload read operations cannot be performed on:   - Compressed files   - Sparse files   - Encrypted files   - File system metadata files","name": "OFFLOAD_READ_FILE_NOT_SUPPORTED"},{"file": 47,"line": 2242,"col": 4,"docs": " Offload write operations cannot be performed on:  - Compressed files  - Sparse files  - Encrypted files  - File system metadata files","name": "OFFLOAD_WRITE_FILE_NOT_SUPPORTED"},{"file": 47,"line": 2244,"col": 4,"docs": " The debugger did not perform a state change.","name": "DBG_NO_STATE_CHANGE"},{"file": 47,"line": 2246,"col": 4,"docs": " The debugger found that the application is not idle.","name": "DBG_APP_NOT_IDLE"},{"file": 47,"line": 2248,"col": 4,"docs": " The string binding is invalid.","name": "RPC_NT_INVALID_STRING_BINDING"},{"file": 47,"line": 2250,"col": 4,"docs": " The binding handle is not the correct type.","name": "RPC_NT_WRONG_KIND_OF_BINDING"},{"file": 47,"line": 2252,"col": 4,"docs": " The binding handle is invalid.","name": "RPC_NT_INVALID_BINDING"},{"file": 47,"line": 2254,"col": 4,"docs": " The RPC protocol sequence is not supported.","name": "RPC_NT_PROTSEQ_NOT_SUPPORTED"},{"file": 47,"line": 2256,"col": 4,"docs": " The RPC protocol sequence is invalid.","name": "RPC_NT_INVALID_RPC_PROTSEQ"},{"file": 47,"line": 2258,"col": 4,"docs": " The string UUID is invalid.","name": "RPC_NT_INVALID_STRING_UUID"},{"file": 47,"line": 2260,"col": 4,"docs": " The endpoint format is invalid.","name": "RPC_NT_INVALID_ENDPOINT_FORMAT"},{"file": 47,"line": 2262,"col": 4,"docs": " The network address is invalid.","name": "RPC_NT_INVALID_NET_ADDR"},{"file": 47,"line": 2264,"col": 4,"docs": " No endpoint was found.","name": "RPC_NT_NO_ENDPOINT_FOUND"},{"file": 47,"line": 2266,"col": 4,"docs": " The time-out value is invalid.","name": "RPC_NT_INVALID_TIMEOUT"},{"file": 47,"line": 2268,"col": 4,"docs": " The object UUID was not found.","name": "RPC_NT_OBJECT_NOT_FOUND"},{"file": 47,"line": 2270,"col": 4,"docs": " The object UUID has already been registered.","name": "RPC_NT_ALREADY_REGISTERED"},{"file": 47,"line": 2272,"col": 4,"docs": " The type UUID has already been registered.","name": "RPC_NT_TYPE_ALREADY_REGISTERED"},{"file": 47,"line": 2274,"col": 4,"docs": " The RPC server is already listening.","name": "RPC_NT_ALREADY_LISTENING"},{"file": 47,"line": 2276,"col": 4,"docs": " No protocol sequences have been registered.","name": "RPC_NT_NO_PROTSEQS_REGISTERED"},{"file": 47,"line": 2278,"col": 4,"docs": " The RPC server is not listening.","name": "RPC_NT_NOT_LISTENING"},{"file": 47,"line": 2280,"col": 4,"docs": " The manager type is unknown.","name": "RPC_NT_UNKNOWN_MGR_TYPE"},{"file": 47,"line": 2282,"col": 4,"docs": " The interface is unknown.","name": "RPC_NT_UNKNOWN_IF"},{"file": 47,"line": 2284,"col": 4,"docs": " There are no bindings.","name": "RPC_NT_NO_BINDINGS"},{"file": 47,"line": 2286,"col": 4,"docs": " There are no protocol sequences.","name": "RPC_NT_NO_PROTSEQS"},{"file": 47,"line": 2288,"col": 4,"docs": " The endpoint cannot be created.","name": "RPC_NT_CANT_CREATE_ENDPOINT"},{"file": 47,"line": 2290,"col": 4,"docs": " Insufficient resources are available to complete this operation.","name": "RPC_NT_OUT_OF_RESOURCES"},{"file": 47,"line": 2292,"col": 4,"docs": " The RPC server is unavailable.","name": "RPC_NT_SERVER_UNAVAILABLE"},{"file": 47,"line": 2294,"col": 4,"docs": " The RPC server is too busy to complete this operation.","name": "RPC_NT_SERVER_TOO_BUSY"},{"file": 47,"line": 2296,"col": 4,"docs": " The network options are invalid.","name": "RPC_NT_INVALID_NETWORK_OPTIONS"},{"file": 47,"line": 2298,"col": 4,"docs": " No RPCs are active on this thread.","name": "RPC_NT_NO_CALL_ACTIVE"},{"file": 47,"line": 2300,"col": 4,"docs": " The RPC failed.","name": "RPC_NT_CALL_FAILED"},{"file": 47,"line": 2302,"col": 4,"docs": " The RPC failed and did not execute.","name": "RPC_NT_CALL_FAILED_DNE"},{"file": 47,"line": 2304,"col": 4,"docs": " An RPC protocol error occurred.","name": "RPC_NT_PROTOCOL_ERROR"},{"file": 47,"line": 2306,"col": 4,"docs": " The RPC server does not support the transfer syntax.","name": "RPC_NT_UNSUPPORTED_TRANS_SYN"},{"file": 47,"line": 2308,"col": 4,"docs": " The type UUID is not supported.","name": "RPC_NT_UNSUPPORTED_TYPE"},{"file": 47,"line": 2310,"col": 4,"docs": " The tag is invalid.","name": "RPC_NT_INVALID_TAG"},{"file": 47,"line": 2312,"col": 4,"docs": " The array bounds are invalid.","name": "RPC_NT_INVALID_BOUND"},{"file": 47,"line": 2314,"col": 4,"docs": " The binding does not contain an entry name.","name": "RPC_NT_NO_ENTRY_NAME"},{"file": 47,"line": 2316,"col": 4,"docs": " The name syntax is invalid.","name": "RPC_NT_INVALID_NAME_SYNTAX"},{"file": 47,"line": 2318,"col": 4,"docs": " The name syntax is not supported.","name": "RPC_NT_UNSUPPORTED_NAME_SYNTAX"},{"file": 47,"line": 2320,"col": 4,"docs": " No network address is available to construct a UUID.","name": "RPC_NT_UUID_NO_ADDRESS"},{"file": 47,"line": 2322,"col": 4,"docs": " The endpoint is a duplicate.","name": "RPC_NT_DUPLICATE_ENDPOINT"},{"file": 47,"line": 2324,"col": 4,"docs": " The authentication type is unknown.","name": "RPC_NT_UNKNOWN_AUTHN_TYPE"},{"file": 47,"line": 2326,"col": 4,"docs": " The maximum number of calls is too small.","name": "RPC_NT_MAX_CALLS_TOO_SMALL"},{"file": 47,"line": 2328,"col": 4,"docs": " The string is too long.","name": "RPC_NT_STRING_TOO_LONG"},{"file": 47,"line": 2330,"col": 4,"docs": " The RPC protocol sequence was not found.","name": "RPC_NT_PROTSEQ_NOT_FOUND"},{"file": 47,"line": 2332,"col": 4,"docs": " The procedure number is out of range.","name": "RPC_NT_PROCNUM_OUT_OF_RANGE"},{"file": 47,"line": 2334,"col": 4,"docs": " The binding does not contain any authentication information.","name": "RPC_NT_BINDING_HAS_NO_AUTH"},{"file": 47,"line": 2336,"col": 4,"docs": " The authentication service is unknown.","name": "RPC_NT_UNKNOWN_AUTHN_SERVICE"},{"file": 47,"line": 2338,"col": 4,"docs": " The authentication level is unknown.","name": "RPC_NT_UNKNOWN_AUTHN_LEVEL"},{"file": 47,"line": 2340,"col": 4,"docs": " The security context is invalid.","name": "RPC_NT_INVALID_AUTH_IDENTITY"},{"file": 47,"line": 2342,"col": 4,"docs": " The authorization service is unknown.","name": "RPC_NT_UNKNOWN_AUTHZ_SERVICE"},{"file": 47,"line": 2344,"col": 4,"docs": " The entry is invalid.","name": "EPT_NT_INVALID_ENTRY"},{"file": 47,"line": 2346,"col": 4,"docs": " The operation cannot be performed.","name": "EPT_NT_CANT_PERFORM_OP"},{"file": 47,"line": 2348,"col": 4,"docs": " No more endpoints are available from the endpoint mapper.","name": "EPT_NT_NOT_REGISTERED"},{"file": 47,"line": 2350,"col": 4,"docs": " No interfaces have been exported.","name": "RPC_NT_NOTHING_TO_EXPORT"},{"file": 47,"line": 2352,"col": 4,"docs": " The entry name is incomplete.","name": "RPC_NT_INCOMPLETE_NAME"},{"file": 47,"line": 2354,"col": 4,"docs": " The version option is invalid.","name": "RPC_NT_INVALID_VERS_OPTION"},{"file": 47,"line": 2356,"col": 4,"docs": " There are no more members.","name": "RPC_NT_NO_MORE_MEMBERS"},{"file": 47,"line": 2358,"col": 4,"docs": " There is nothing to unexport.","name": "RPC_NT_NOT_ALL_OBJS_UNEXPORTED"},{"file": 47,"line": 2360,"col": 4,"docs": " The interface was not found.","name": "RPC_NT_INTERFACE_NOT_FOUND"},{"file": 47,"line": 2362,"col": 4,"docs": " The entry already exists.","name": "RPC_NT_ENTRY_ALREADY_EXISTS"},{"file": 47,"line": 2364,"col": 4,"docs": " The entry was not found.","name": "RPC_NT_ENTRY_NOT_FOUND"},{"file": 47,"line": 2366,"col": 4,"docs": " The name service is unavailable.","name": "RPC_NT_NAME_SERVICE_UNAVAILABLE"},{"file": 47,"line": 2368,"col": 4,"docs": " The network address family is invalid.","name": "RPC_NT_INVALID_NAF_ID"},{"file": 47,"line": 2370,"col": 4,"docs": " The requested operation is not supported.","name": "RPC_NT_CANNOT_SUPPORT"},{"file": 47,"line": 2372,"col": 4,"docs": " No security context is available to allow impersonation.","name": "RPC_NT_NO_CONTEXT_AVAILABLE"},{"file": 47,"line": 2374,"col": 4,"docs": " An internal error occurred in the RPC.","name": "RPC_NT_INTERNAL_ERROR"},{"file": 47,"line": 2376,"col": 4,"docs": " The RPC server attempted to divide an integer by zero.","name": "RPC_NT_ZERO_DIVIDE"},{"file": 47,"line": 2378,"col": 4,"docs": " An addressing error occurred in the RPC server.","name": "RPC_NT_ADDRESS_ERROR"},{"file": 47,"line": 2380,"col": 4,"docs": " A floating point operation at the RPC server caused a divide by zero.","name": "RPC_NT_FP_DIV_ZERO"},{"file": 47,"line": 2382,"col": 4,"docs": " A floating point underflow occurred at the RPC server.","name": "RPC_NT_FP_UNDERFLOW"},{"file": 47,"line": 2384,"col": 4,"docs": " A floating point overflow occurred at the RPC server.","name": "RPC_NT_FP_OVERFLOW"},{"file": 47,"line": 2386,"col": 4,"docs": " An RPC is already in progress for this thread.","name": "RPC_NT_CALL_IN_PROGRESS"},{"file": 47,"line": 2388,"col": 4,"docs": " There are no more bindings.","name": "RPC_NT_NO_MORE_BINDINGS"},{"file": 47,"line": 2390,"col": 4,"docs": " The group member was not found.","name": "RPC_NT_GROUP_MEMBER_NOT_FOUND"},{"file": 47,"line": 2392,"col": 4,"docs": " The endpoint mapper database entry could not be created.","name": "EPT_NT_CANT_CREATE"},{"file": 47,"line": 2394,"col": 4,"docs": " The object UUID is the nil UUID.","name": "RPC_NT_INVALID_OBJECT"},{"file": 47,"line": 2396,"col": 4,"docs": " No interfaces have been registered.","name": "RPC_NT_NO_INTERFACES"},{"file": 47,"line": 2398,"col": 4,"docs": " The RPC was canceled.","name": "RPC_NT_CALL_CANCELLED"},{"file": 47,"line": 2400,"col": 4,"docs": " The binding handle does not contain all the required information.","name": "RPC_NT_BINDING_INCOMPLETE"},{"file": 47,"line": 2402,"col": 4,"docs": " A communications failure occurred during an RPC.","name": "RPC_NT_COMM_FAILURE"},{"file": 47,"line": 2404,"col": 4,"docs": " The requested authentication level is not supported.","name": "RPC_NT_UNSUPPORTED_AUTHN_LEVEL"},{"file": 47,"line": 2406,"col": 4,"docs": " No principal name was registered.","name": "RPC_NT_NO_PRINC_NAME"},{"file": 47,"line": 2408,"col": 4,"docs": " The error specified is not a valid Windows RPC error code.","name": "RPC_NT_NOT_RPC_ERROR"},{"file": 47,"line": 2410,"col": 4,"docs": " A security package-specific error occurred.","name": "RPC_NT_SEC_PKG_ERROR"},{"file": 47,"line": 2412,"col": 4,"docs": " The thread was not canceled.","name": "RPC_NT_NOT_CANCELLED"},{"file": 47,"line": 2414,"col": 4,"docs": " Invalid asynchronous RPC handle.","name": "RPC_NT_INVALID_ASYNC_HANDLE"},{"file": 47,"line": 2416,"col": 4,"docs": " Invalid asynchronous RPC call handle for this operation.","name": "RPC_NT_INVALID_ASYNC_CALL"},{"file": 47,"line": 2418,"col": 4,"docs": " Access to the HTTP proxy is denied.","name": "RPC_NT_PROXY_ACCESS_DENIED"},{"file": 47,"line": 2420,"col": 4,"docs": " The list of RPC servers available for auto-handle binding has been exhausted.","name": "RPC_NT_NO_MORE_ENTRIES"},{"file": 47,"line": 2422,"col": 4,"docs": " The file designated by DCERPCCHARTRANS cannot be opened.","name": "RPC_NT_SS_CHAR_TRANS_OPEN_FAIL"},{"file": 47,"line": 2424,"col": 4,"docs": " The file containing the character translation table has fewer than 512 bytes.","name": "RPC_NT_SS_CHAR_TRANS_SHORT_FILE"},{"file": 47,"line": 2426,"col": 4,"docs": " A null context handle is passed as an [in] parameter.","name": "RPC_NT_SS_IN_NULL_CONTEXT"},{"file": 47,"line": 2428,"col": 4,"docs": " The context handle does not match any known context handles.","name": "RPC_NT_SS_CONTEXT_MISMATCH"},{"file": 47,"line": 2430,"col": 4,"docs": " The context handle changed during a call.","name": "RPC_NT_SS_CONTEXT_DAMAGED"},{"file": 47,"line": 2432,"col": 4,"docs": " The binding handles passed to an RPC do not match.","name": "RPC_NT_SS_HANDLES_MISMATCH"},{"file": 47,"line": 2434,"col": 4,"docs": " The stub is unable to get the call handle.","name": "RPC_NT_SS_CANNOT_GET_CALL_HANDLE"},{"file": 47,"line": 2436,"col": 4,"docs": " A null reference pointer was passed to the stub.","name": "RPC_NT_NULL_REF_POINTER"},{"file": 47,"line": 2438,"col": 4,"docs": " The enumeration value is out of range.","name": "RPC_NT_ENUM_VALUE_OUT_OF_RANGE"},{"file": 47,"line": 2440,"col": 4,"docs": " The byte count is too small.","name": "RPC_NT_BYTE_COUNT_TOO_SMALL"},{"file": 47,"line": 2442,"col": 4,"docs": " The stub received bad data.","name": "RPC_NT_BAD_STUB_DATA"},{"file": 47,"line": 2444,"col": 4,"docs": " Invalid operation on the encoding/decoding handle.","name": "RPC_NT_INVALID_ES_ACTION"},{"file": 47,"line": 2446,"col": 4,"docs": " Incompatible version of the serializing package.","name": "RPC_NT_WRONG_ES_VERSION"},{"file": 47,"line": 2448,"col": 4,"docs": " Incompatible version of the RPC stub.","name": "RPC_NT_WRONG_STUB_VERSION"},{"file": 47,"line": 2450,"col": 4,"docs": " The RPC pipe object is invalid or corrupt.","name": "RPC_NT_INVALID_PIPE_OBJECT"},{"file": 47,"line": 2452,"col": 4,"docs": " An invalid operation was attempted on an RPC pipe object.","name": "RPC_NT_INVALID_PIPE_OPERATION"},{"file": 47,"line": 2454,"col": 4,"docs": " Unsupported RPC pipe version.","name": "RPC_NT_WRONG_PIPE_VERSION"},{"file": 47,"line": 2456,"col": 4,"docs": " The RPC pipe object has already been closed.","name": "RPC_NT_PIPE_CLOSED"},{"file": 47,"line": 2458,"col": 4,"docs": " The RPC call completed before all pipes were processed.","name": "RPC_NT_PIPE_DISCIPLINE_ERROR"},{"file": 47,"line": 2460,"col": 4,"docs": " No more data is available from the RPC pipe.","name": "RPC_NT_PIPE_EMPTY"},{"file": 47,"line": 2463,"col": 4,"docs": " A device is missing in the system BIOS MPS table. This device will not be used. Contact your system vendor for a system BIOS update.","name": "PNP_BAD_MPS_TABLE"},{"file": 47,"line": 2465,"col": 4,"docs": " A translator failed to translate resources.","name": "PNP_TRANSLATION_FAILED"},{"file": 47,"line": 2467,"col": 4,"docs": " An IRQ translator failed to translate resources.","name": "PNP_IRQ_TRANSLATION_FAILED"},{"file": 47,"line": 2469,"col": 4,"docs": " Driver %2 returned an invalid ID for a child device (%3).","name": "PNP_INVALID_ID"},{"file": 47,"line": 2471,"col": 4,"docs": " Reissue the given operation as a cached I/O operation","name": "IO_REISSUE_AS_CACHED"},{"file": 47,"line": 2473,"col": 4,"docs": " Session name %1 is invalid.","name": "CTX_WINSTATION_NAME_INVALID"},{"file": 47,"line": 2475,"col": 4,"docs": " The protocol driver %1 is invalid.","name": "CTX_INVALID_PD"},{"file": 47,"line": 2477,"col": 4,"docs": " The protocol driver %1 was not found in the system path.","name": "CTX_PD_NOT_FOUND"},{"file": 47,"line": 2479,"col": 4,"docs": " A close operation is pending on the terminal connection.","name": "CTX_CLOSE_PENDING"},{"file": 47,"line": 2481,"col": 4,"docs": " No free output buffers are available.","name": "CTX_NO_OUTBUF"},{"file": 47,"line": 2483,"col": 4,"docs": " The MODEM.INF file was not found.","name": "CTX_MODEM_INF_NOT_FOUND"},{"file": 47,"line": 2485,"col": 4,"docs": " The modem (%1) was not found in the MODEM.INF file.","name": "CTX_INVALID_MODEMNAME"},{"file": 47,"line": 2488,"col": 4,"docs": " The modem did not accept the command sent to it. Verify that the configured modem name matches the attached modem.","name": "CTX_RESPONSE_ERROR"},{"file": 47,"line": 2491,"col": 4,"docs": " The modem did not respond to the command sent to it. Verify that the modem cable is properly attached and the modem is turned on.","name": "CTX_MODEM_RESPONSE_TIMEOUT"},{"file": 47,"line": 2493,"col": 4,"docs": " Carrier detection has failed or the carrier has been dropped due to disconnection.","name": "CTX_MODEM_RESPONSE_NO_CARRIER"},{"file": 47,"line": 2496,"col": 4,"docs": " A dial tone was not detected within the required time. Verify that the phone cable is properly attached and functional.","name": "CTX_MODEM_RESPONSE_NO_DIALTONE"},{"file": 47,"line": 2498,"col": 4,"docs": " A busy signal was detected at a remote site on callback.","name": "CTX_MODEM_RESPONSE_BUSY"},{"file": 47,"line": 2500,"col": 4,"docs": " A voice was detected at a remote site on callback.","name": "CTX_MODEM_RESPONSE_VOICE"},{"file": 47,"line": 2502,"col": 4,"docs": " Transport driver error.","name": "CTX_TD_ERROR"},{"file": 47,"line": 2504,"col": 4,"docs": " The client you are using is not licensed to use this system. Your logon request is denied.","name": "CTX_LICENSE_CLIENT_INVALID"},{"file": 47,"line": 2506,"col": 4,"docs": " The system has reached its licensed logon limit. Try again later.","name": "CTX_LICENSE_NOT_AVAILABLE"},{"file": 47,"line": 2508,"col": 4,"docs": " The system license has expired. Your logon request is denied.","name": "CTX_LICENSE_EXPIRED"},{"file": 47,"line": 2510,"col": 4,"docs": " The specified session cannot be found.","name": "CTX_WINSTATION_NOT_FOUND"},{"file": 47,"line": 2512,"col": 4,"docs": " The specified session name is already in use.","name": "CTX_WINSTATION_NAME_COLLISION"},{"file": 47,"line": 2514,"col": 4,"docs": " The requested operation cannot be completed because the terminal connection is currently processing a connect, disconnect, reset, or delete operation.","name": "CTX_WINSTATION_BUSY"},{"file": 47,"line": 2516,"col": 4,"docs": " An attempt has been made to connect to a session whose video mode is not supported by the current client.","name": "CTX_BAD_VIDEO_MODE"},{"file": 47,"line": 2518,"col": 4,"docs": " The application attempted to enable DOS graphics mode. DOS graphics mode is not supported.","name": "CTX_GRAPHICS_INVALID"},{"file": 47,"line": 2521,"col": 4,"docs": " The requested operation can be performed only on the system console. This is most often the result of a driver or system DLL requiring direct console access.","name": "CTX_NOT_CONSOLE"},{"file": 47,"line": 2523,"col": 4,"docs": " The client failed to respond to the server connect message.","name": "CTX_CLIENT_QUERY_TIMEOUT"},{"file": 47,"line": 2525,"col": 4,"docs": " Disconnecting the console session is not supported.","name": "CTX_CONSOLE_DISCONNECT"},{"file": 47,"line": 2527,"col": 4,"docs": " Reconnecting a disconnected session to the console is not supported.","name": "CTX_CONSOLE_CONNECT"},{"file": 47,"line": 2529,"col": 4,"docs": " The request to control another session remotely was denied.","name": "CTX_SHADOW_DENIED"},{"file": 47,"line": 2531,"col": 4,"docs": " A process has requested access to a session, but has not been granted those access rights.","name": "CTX_WINSTATION_ACCESS_DENIED"},{"file": 47,"line": 2533,"col": 4,"docs": " The terminal connection driver %1 is invalid.","name": "CTX_INVALID_WD"},{"file": 47,"line": 2535,"col": 4,"docs": " The terminal connection driver %1 was not found in the system path.","name": "CTX_WD_NOT_FOUND"},{"file": 47,"line": 2538,"col": 4,"docs": " The requested session cannot be controlled remotely. You cannot control your own session, a session that is trying to control your session, a session that has no user logged on, or other sessions from the console.","name": "CTX_SHADOW_INVALID"},{"file": 47,"line": 2540,"col": 4,"docs": " The requested session is not configured to allow remote control.","name": "CTX_SHADOW_DISABLED"},{"file": 47,"line": 2542,"col": 4,"docs": " The RDP protocol component %2 detected an error in the protocol stream and has disconnected the client.","name": "RDP_PROTOCOL_ERROR"},{"file": 47,"line": 2546,"col": 4,"docs": " Your request to connect to this terminal server has been rejected. Your terminal server client license number has not been entered for this copy of the terminal client. Contact your system administrator for help in entering a valid, unique license number for this terminal server client. Click OK to continue.","name": "CTX_CLIENT_LICENSE_NOT_SET"},{"file": 47,"line": 2550,"col": 4,"docs": " Your request to connect to this terminal server has been rejected. Your terminal server client license number is currently being used by another user. Contact your system administrator to obtain a new copy of the terminal server client with a valid, unique license number. Click OK to continue.","name": "CTX_CLIENT_LICENSE_IN_USE"},{"file": 47,"line": 2553,"col": 4,"docs": " The remote control of the console was terminated because the display mode was changed. Changing the display mode in a remote control session is not supported.","name": "CTX_SHADOW_ENDED_BY_MODE_CHANGE"},{"file": 47,"line": 2555,"col": 4,"docs": " Remote control could not be terminated because the specified session is not currently being remotely controlled.","name": "CTX_SHADOW_NOT_RUNNING"},{"file": 47,"line": 2557,"col": 4,"docs": " Your interactive logon privilege has been disabled. Contact your system administrator.","name": "CTX_LOGON_DISABLED"},{"file": 47,"line": 2559,"col": 4,"docs": " The terminal server security layer detected an error in the protocol stream and has disconnected the client.","name": "CTX_SECURITY_LAYER_ERROR"},{"file": 47,"line": 2561,"col": 4,"docs": " The target session is incompatible with the current session.","name": "TS_INCOMPATIBLE_SESSIONS"},{"file": 47,"line": 2563,"col": 4,"docs": " The resource loader failed to find an MUI file.","name": "MUI_FILE_NOT_FOUND"},{"file": 47,"line": 2565,"col": 4,"docs": " The resource loader failed to load an MUI file because the file failed to pass validation.","name": "MUI_INVALID_FILE"},{"file": 47,"line": 2567,"col": 4,"docs": " The RC manifest is corrupted with garbage data, is an unsupported version, or is missing a required item.","name": "MUI_INVALID_RC_CONFIG"},{"file": 47,"line": 2569,"col": 4,"docs": " The RC manifest has an invalid culture name.","name": "MUI_INVALID_LOCALE_NAME"},{"file": 47,"line": 2571,"col": 4,"docs": " The RC manifest has and invalid ultimate fallback name.","name": "MUI_INVALID_ULTIMATEFALLBACK_NAME"},{"file": 47,"line": 2573,"col": 4,"docs": " The resource loader cache does not have a loaded MUI entry.","name": "MUI_FILE_NOT_LOADED"},{"file": 47,"line": 2575,"col": 4,"docs": " The user stopped resource enumeration.","name": "RESOURCE_ENUM_USER_STOP"},{"file": 47,"line": 2577,"col": 4,"docs": " The cluster node is not valid.","name": "CLUSTER_INVALID_NODE"},{"file": 47,"line": 2579,"col": 4,"docs": " The cluster node already exists.","name": "CLUSTER_NODE_EXISTS"},{"file": 47,"line": 2581,"col": 4,"docs": " A node is in the process of joining the cluster.","name": "CLUSTER_JOIN_IN_PROGRESS"},{"file": 47,"line": 2583,"col": 4,"docs": " The cluster node was not found.","name": "CLUSTER_NODE_NOT_FOUND"},{"file": 47,"line": 2585,"col": 4,"docs": " The cluster local node information was not found.","name": "CLUSTER_LOCAL_NODE_NOT_FOUND"},{"file": 47,"line": 2587,"col": 4,"docs": " The cluster network already exists.","name": "CLUSTER_NETWORK_EXISTS"},{"file": 47,"line": 2589,"col": 4,"docs": " The cluster network was not found.","name": "CLUSTER_NETWORK_NOT_FOUND"},{"file": 47,"line": 2591,"col": 4,"docs": " The cluster network interface already exists.","name": "CLUSTER_NETINTERFACE_EXISTS"},{"file": 47,"line": 2593,"col": 4,"docs": " The cluster network interface was not found.","name": "CLUSTER_NETINTERFACE_NOT_FOUND"},{"file": 47,"line": 2595,"col": 4,"docs": " The cluster request is not valid for this object.","name": "CLUSTER_INVALID_REQUEST"},{"file": 47,"line": 2597,"col": 4,"docs": " The cluster network provider is not valid.","name": "CLUSTER_INVALID_NETWORK_PROVIDER"},{"file": 47,"line": 2599,"col": 4,"docs": " The cluster node is down.","name": "CLUSTER_NODE_DOWN"},{"file": 47,"line": 2601,"col": 4,"docs": " The cluster node is not reachable.","name": "CLUSTER_NODE_UNREACHABLE"},{"file": 47,"line": 2603,"col": 4,"docs": " The cluster node is not a member of the cluster.","name": "CLUSTER_NODE_NOT_MEMBER"},{"file": 47,"line": 2605,"col": 4,"docs": " A cluster join operation is not in progress.","name": "CLUSTER_JOIN_NOT_IN_PROGRESS"},{"file": 47,"line": 2607,"col": 4,"docs": " The cluster network is not valid.","name": "CLUSTER_INVALID_NETWORK"},{"file": 47,"line": 2609,"col": 4,"docs": " No network adapters are available.","name": "CLUSTER_NO_NET_ADAPTERS"},{"file": 47,"line": 2611,"col": 4,"docs": " The cluster node is up.","name": "CLUSTER_NODE_UP"},{"file": 47,"line": 2613,"col": 4,"docs": " The cluster node is paused.","name": "CLUSTER_NODE_PAUSED"},{"file": 47,"line": 2615,"col": 4,"docs": " The cluster node is not paused.","name": "CLUSTER_NODE_NOT_PAUSED"},{"file": 47,"line": 2617,"col": 4,"docs": " No cluster security context is available.","name": "CLUSTER_NO_SECURITY_CONTEXT"},{"file": 47,"line": 2619,"col": 4,"docs": " The cluster network is not configured for internal cluster communication.","name": "CLUSTER_NETWORK_NOT_INTERNAL"},{"file": 47,"line": 2621,"col": 4,"docs": " The cluster node has been poisoned.","name": "CLUSTER_POISONED"},{"file": 47,"line": 2623,"col": 4,"docs": " An attempt was made to run an invalid AML opcode.","name": "ACPI_INVALID_OPCODE"},{"file": 47,"line": 2625,"col": 4,"docs": " The AML interpreter stack has overflowed.","name": "ACPI_STACK_OVERFLOW"},{"file": 47,"line": 2627,"col": 4,"docs": " An inconsistent state has occurred.","name": "ACPI_ASSERT_FAILED"},{"file": 47,"line": 2629,"col": 4,"docs": " An attempt was made to access an array outside its bounds.","name": "ACPI_INVALID_INDEX"},{"file": 47,"line": 2631,"col": 4,"docs": " A required argument was not specified.","name": "ACPI_INVALID_ARGUMENT"},{"file": 47,"line": 2633,"col": 4,"docs": " A fatal error has occurred.","name": "ACPI_FATAL"},{"file": 47,"line": 2635,"col": 4,"docs": " An invalid SuperName was specified.","name": "ACPI_INVALID_SUPERNAME"},{"file": 47,"line": 2637,"col": 4,"docs": " An argument with an incorrect type was specified.","name": "ACPI_INVALID_ARGTYPE"},{"file": 47,"line": 2639,"col": 4,"docs": " An object with an incorrect type was specified.","name": "ACPI_INVALID_OBJTYPE"},{"file": 47,"line": 2641,"col": 4,"docs": " A target with an incorrect type was specified.","name": "ACPI_INVALID_TARGETTYPE"},{"file": 47,"line": 2643,"col": 4,"docs": " An incorrect number of arguments was specified.","name": "ACPI_INCORRECT_ARGUMENT_COUNT"},{"file": 47,"line": 2645,"col": 4,"docs": " An address failed to translate.","name": "ACPI_ADDRESS_NOT_MAPPED"},{"file": 47,"line": 2647,"col": 4,"docs": " An incorrect event type was specified.","name": "ACPI_INVALID_EVENTTYPE"},{"file": 47,"line": 2649,"col": 4,"docs": " A handler for the target already exists.","name": "ACPI_HANDLER_COLLISION"},{"file": 47,"line": 2651,"col": 4,"docs": " Invalid data for the target was specified.","name": "ACPI_INVALID_DATA"},{"file": 47,"line": 2653,"col": 4,"docs": " An invalid region for the target was specified.","name": "ACPI_INVALID_REGION"},{"file": 47,"line": 2655,"col": 4,"docs": " An attempt was made to access a field outside the defined range.","name": "ACPI_INVALID_ACCESS_SIZE"},{"file": 47,"line": 2657,"col": 4,"docs": " The global system lock could not be acquired.","name": "ACPI_ACQUIRE_GLOBAL_LOCK"},{"file": 47,"line": 2659,"col": 4,"docs": " An attempt was made to reinitialize the ACPI subsystem.","name": "ACPI_ALREADY_INITIALIZED"},{"file": 47,"line": 2661,"col": 4,"docs": " The ACPI subsystem has not been initialized.","name": "ACPI_NOT_INITIALIZED"},{"file": 47,"line": 2663,"col": 4,"docs": " An incorrect mutex was specified.","name": "ACPI_INVALID_MUTEX_LEVEL"},{"file": 47,"line": 2665,"col": 4,"docs": " The mutex is not currently owned.","name": "ACPI_MUTEX_NOT_OWNED"},{"file": 47,"line": 2667,"col": 4,"docs": " An attempt was made to access the mutex by a process that was not the owner.","name": "ACPI_MUTEX_NOT_OWNER"},{"file": 47,"line": 2669,"col": 4,"docs": " An error occurred during an access to region space.","name": "ACPI_RS_ACCESS"},{"file": 47,"line": 2671,"col": 4,"docs": " An attempt was made to use an incorrect table.","name": "ACPI_INVALID_TABLE"},{"file": 47,"line": 2673,"col": 4,"docs": " The registration of an ACPI event failed.","name": "ACPI_REG_HANDLER_FAILED"},{"file": 47,"line": 2675,"col": 4,"docs": " An ACPI power object failed to transition state.","name": "ACPI_POWER_REQUEST_FAILED"},{"file": 47,"line": 2677,"col": 4,"docs": " The requested section is not present in the activation context.","name": "SXS_SECTION_NOT_FOUND"},{"file": 47,"line": 2680,"col": 4,"docs": " Windows was unble to process the application binding information. Refer to the system event log for further information.","name": "SXS_CANT_GEN_ACTCTX"},{"file": 47,"line": 2682,"col": 4,"docs": " The application binding data format is invalid.","name": "SXS_INVALID_ACTCTXDATA_FORMAT"},{"file": 47,"line": 2684,"col": 4,"docs": " The referenced assembly is not installed on the system.","name": "SXS_ASSEMBLY_NOT_FOUND"},{"file": 47,"line": 2686,"col": 4,"docs": " The manifest file does not begin with the required tag and format information.","name": "SXS_MANIFEST_FORMAT_ERROR"},{"file": 47,"line": 2688,"col": 4,"docs": " The manifest file contains one or more syntax errors.","name": "SXS_MANIFEST_PARSE_ERROR"},{"file": 47,"line": 2690,"col": 4,"docs": " The application attempted to activate a disabled activation context.","name": "SXS_ACTIVATION_CONTEXT_DISABLED"},{"file": 47,"line": 2692,"col": 4,"docs": " The requested lookup key was not found in any active activation context.","name": "SXS_KEY_NOT_FOUND"},{"file": 47,"line": 2694,"col": 4,"docs": " A component version required by the application conflicts with another component version that is already active.","name": "SXS_VERSION_CONFLICT"},{"file": 47,"line": 2696,"col": 4,"docs": " The type requested activation context section does not match the query API used.","name": "SXS_WRONG_SECTION_TYPE"},{"file": 47,"line": 2698,"col": 4,"docs": " Lack of system resources has required isolated activation to be disabled for the current thread of execution.","name": "SXS_THREAD_QUERIES_DISABLED"},{"file": 47,"line": 2700,"col": 4,"docs": " The referenced assembly could not be found.","name": "SXS_ASSEMBLY_MISSING"},{"file": 47,"line": 2702,"col": 4,"docs": " An attempt to set the process default activation context failed because the process default activation context was already set.","name": "SXS_PROCESS_DEFAULT_ALREADY_SET"},{"file": 47,"line": 2704,"col": 4,"docs": " The activation context being deactivated is not the most recently activated one.","name": "SXS_EARLY_DEACTIVATION"},{"file": 47,"line": 2706,"col": 4,"docs": " The activation context being deactivated is not active for the current thread of execution.","name": "SXS_INVALID_DEACTIVATION"},{"file": 47,"line": 2708,"col": 4,"docs": " The activation context being deactivated has already been deactivated.","name": "SXS_MULTIPLE_DEACTIVATION"},{"file": 47,"line": 2710,"col": 4,"docs": " The activation context of the system default assembly could not be generated.","name": "SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY"},{"file": 47,"line": 2712,"col": 4,"docs": " A component used by the isolation facility has requested that the process be terminated.","name": "SXS_PROCESS_TERMINATION_REQUESTED"},{"file": 47,"line": 2714,"col": 4,"docs": " The activation context activation stack for the running thread of execution is corrupt.","name": "SXS_CORRUPT_ACTIVATION_STACK"},{"file": 47,"line": 2716,"col": 4,"docs": " The application isolation metadata for this process or thread has become corrupt.","name": "SXS_CORRUPTION"},{"file": 47,"line": 2718,"col": 4,"docs": " The value of an attribute in an identity is not within the legal range.","name": "SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE"},{"file": 47,"line": 2720,"col": 4,"docs": " The name of an attribute in an identity is not within the legal range.","name": "SXS_INVALID_IDENTITY_ATTRIBUTE_NAME"},{"file": 47,"line": 2722,"col": 4,"docs": " An identity contains two definitions for the same attribute.","name": "SXS_IDENTITY_DUPLICATE_ATTRIBUTE"},{"file": 47,"line": 2725,"col": 4,"docs": " The identity string is malformed. This might be due to a trailing comma, more than two unnamed attributes, a missing attribute name, or a missing attribute value.","name": "SXS_IDENTITY_PARSE_ERROR"},{"file": 47,"line": 2727,"col": 4,"docs": " The component store has become corrupted.","name": "SXS_COMPONENT_STORE_CORRUPT"},{"file": 47,"line": 2729,"col": 4,"docs": " A component's file does not match the verification information present in the component manifest.","name": "SXS_FILE_HASH_MISMATCH"},{"file": 47,"line": 2731,"col": 4,"docs": " The identities of the manifests are identical, but their contents are different.","name": "SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT"},{"file": 47,"line": 2733,"col": 4,"docs": " The component identities are different.","name": "SXS_IDENTITIES_DIFFERENT"},{"file": 47,"line": 2735,"col": 4,"docs": " The assembly is not a deployment.","name": "SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT"},{"file": 47,"line": 2737,"col": 4,"docs": " The file is not a part of the assembly.","name": "SXS_FILE_NOT_PART_OF_ASSEMBLY"},{"file": 47,"line": 2739,"col": 4,"docs": " An advanced installer failed during setup or servicing.","name": "ADVANCED_INSTALLER_FAILED"},{"file": 47,"line": 2741,"col": 4,"docs": " The character encoding in the XML declaration did not match the encoding used in the document.","name": "XML_ENCODING_MISMATCH"},{"file": 47,"line": 2743,"col": 4,"docs": " The size of the manifest exceeds the maximum allowed.","name": "SXS_MANIFEST_TOO_BIG"},{"file": 47,"line": 2745,"col": 4,"docs": " The setting is not registered.","name": "SXS_SETTING_NOT_REGISTERED"},{"file": 47,"line": 2747,"col": 4,"docs": " One or more required transaction members are not present.","name": "SXS_TRANSACTION_CLOSURE_INCOMPLETE"},{"file": 47,"line": 2749,"col": 4,"docs": " The SMI primitive installer failed during setup or servicing.","name": "SMI_PRIMITIVE_INSTALLER_FAILED"},{"file": 47,"line": 2751,"col": 4,"docs": " A generic command executable returned a result that indicates failure.","name": "GENERIC_COMMAND_FAILED"},{"file": 47,"line": 2753,"col": 4,"docs": " A component is missing file verification information in its manifest.","name": "SXS_FILE_HASH_MISSING"},{"file": 47,"line": 2755,"col": 4,"docs": " The function attempted to use a name that is reserved for use by another transaction.","name": "TRANSACTIONAL_CONFLICT"},{"file": 47,"line": 2757,"col": 4,"docs": " The transaction handle associated with this operation is invalid.","name": "INVALID_TRANSACTION"},{"file": 47,"line": 2759,"col": 4,"docs": " The requested operation was made in the context of a transaction that is no longer active.","name": "TRANSACTION_NOT_ACTIVE"},{"file": 47,"line": 2761,"col": 4,"docs": " The transaction manager was unable to be successfully initialized. Transacted operations are not supported.","name": "TM_INITIALIZATION_FAILED"},{"file": 47,"line": 2763,"col": 4,"docs": " Transaction support within the specified file system resource manager was not started or was shut down due to an error.","name": "RM_NOT_ACTIVE"},{"file": 47,"line": 2765,"col": 4,"docs": " The metadata of the resource manager has been corrupted. The resource manager will not function.","name": "RM_METADATA_CORRUPT"},{"file": 47,"line": 2767,"col": 4,"docs": " The resource manager attempted to prepare a transaction that it has not successfully joined.","name": "TRANSACTION_NOT_JOINED"},{"file": 47,"line": 2769,"col": 4,"docs": " The specified directory does not contain a file system resource manager.","name": "DIRECTORY_NOT_RM"},{"file": 47,"line": 2771,"col": 4,"docs": " The remote server or share does not support transacted file operations.","name": "TRANSACTIONS_UNSUPPORTED_REMOTE"},{"file": 47,"line": 2773,"col": 4,"docs": " The requested log size for the file system resource manager is invalid.","name": "LOG_RESIZE_INVALID_SIZE"},{"file": 47,"line": 2775,"col": 4,"docs": " The remote server sent mismatching version number or Fid for a file opened with transactions.","name": "REMOTE_FILE_VERSION_MISMATCH"},{"file": 47,"line": 2777,"col": 4,"docs": " The resource manager tried to register a protocol that already exists.","name": "CRM_PROTOCOL_ALREADY_EXISTS"},{"file": 47,"line": 2779,"col": 4,"docs": " The attempt to propagate the transaction failed.","name": "TRANSACTION_PROPAGATION_FAILED"},{"file": 47,"line": 2781,"col": 4,"docs": " The requested propagation protocol was not registered as a CRM.","name": "CRM_PROTOCOL_NOT_FOUND"},{"file": 47,"line": 2783,"col": 4,"docs": " The transaction object already has a superior enlistment, and the caller attempted an operation that would have created a new superior. Only a single superior enlistment is allowed.","name": "TRANSACTION_SUPERIOR_EXISTS"},{"file": 47,"line": 2785,"col": 4,"docs": " The requested operation is not valid on the transaction object in its current state.","name": "TRANSACTION_REQUEST_NOT_VALID"},{"file": 47,"line": 2787,"col": 4,"docs": " The caller has called a response API, but the response is not expected because the transaction manager did not issue the corresponding request to the caller.","name": "TRANSACTION_NOT_REQUESTED"},{"file": 47,"line": 2789,"col": 4,"docs": " It is too late to perform the requested operation, because the transaction has already been aborted.","name": "TRANSACTION_ALREADY_ABORTED"},{"file": 47,"line": 2791,"col": 4,"docs": " It is too late to perform the requested operation, because the transaction has already been committed.","name": "TRANSACTION_ALREADY_COMMITTED"},{"file": 47,"line": 2793,"col": 4,"docs": " The buffer passed in to NtPushTransaction or NtPullTransaction is not in a valid format.","name": "TRANSACTION_INVALID_MARSHALL_BUFFER"},{"file": 47,"line": 2795,"col": 4,"docs": " The current transaction context associated with the thread is not a valid handle to a transaction object.","name": "CURRENT_TRANSACTION_NOT_VALID"},{"file": 47,"line": 2798,"col": 4,"docs": " An attempt to create space in the transactional resource manager's log failed. The failure status has been recorded in the event log.","name": "LOG_GROWTH_FAILED"},{"file": 47,"line": 2800,"col": 4,"docs": " The object (file, stream, or link) that corresponds to the handle has been deleted by a transaction savepoint rollback.","name": "OBJECT_NO_LONGER_EXISTS"},{"file": 47,"line": 2802,"col": 4,"docs": " The specified file miniversion was not found for this transacted file open.","name": "STREAM_MINIVERSION_NOT_FOUND"},{"file": 47,"line": 2805,"col": 4,"docs": " The specified file miniversion was found but has been invalidated. The most likely cause is a transaction savepoint rollback.","name": "STREAM_MINIVERSION_NOT_VALID"},{"file": 47,"line": 2807,"col": 4,"docs": " A miniversion can be opened only in the context of the transaction that created it.","name": "MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION"},{"file": 47,"line": 2809,"col": 4,"docs": " It is not possible to open a miniversion with modify access.","name": "CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT"},{"file": 47,"line": 2811,"col": 4,"docs": " It is not possible to create any more miniversions for this stream.","name": "CANT_CREATE_MORE_STREAM_MINIVERSIONS"},{"file": 47,"line": 2814,"col": 4,"docs": " The handle has been invalidated by a transaction. The most likely cause is the presence of memory mapping on a file or an open handle when the transaction ended or rolled back to savepoint.","name": "HANDLE_NO_LONGER_VALID"},{"file": 47,"line": 2816,"col": 4,"docs": " The log data is corrupt.","name": "LOG_CORRUPTION_DETECTED"},{"file": 47,"line": 2818,"col": 4,"docs": " The transaction outcome is unavailable because the resource manager responsible for it is disconnected.","name": "RM_DISCONNECTED"},{"file": 47,"line": 2820,"col": 4,"docs": " The request was rejected because the enlistment in question is not a superior enlistment.","name": "ENLISTMENT_NOT_SUPERIOR"},{"file": 47,"line": 2822,"col": 4,"docs": " The file cannot be opened in a transaction because its identity depends on the outcome of an unresolved transaction.","name": "FILE_IDENTITY_NOT_PERSISTENT"},{"file": 47,"line": 2824,"col": 4,"docs": " The operation cannot be performed because another transaction is depending on this property not changing.","name": "CANT_BREAK_TRANSACTIONAL_DEPENDENCY"},{"file": 47,"line": 2826,"col": 4,"docs": " The operation would involve a single file with two transactional resource managers and is, therefore, not allowed.","name": "CANT_CROSS_RM_BOUNDARY"},{"file": 47,"line": 2828,"col": 4,"docs": " The $Txf directory must be empty for this operation to succeed.","name": "TXF_DIR_NOT_EMPTY"},{"file": 47,"line": 2830,"col": 4,"docs": " The operation would leave a transactional resource manager in an inconsistent state and is therefore not allowed.","name": "INDOUBT_TRANSACTIONS_EXIST"},{"file": 47,"line": 2832,"col": 4,"docs": " The operation could not be completed because the transaction manager does not have a log.","name": "TM_VOLATILE"},{"file": 47,"line": 2834,"col": 4,"docs": " A rollback could not be scheduled because a previously scheduled rollback has already executed or been queued for execution.","name": "ROLLBACK_TIMER_EXPIRED"},{"file": 47,"line": 2836,"col": 4,"docs": " The transactional metadata attribute on the file or directory %hs is corrupt and unreadable.","name": "TXF_ATTRIBUTE_CORRUPT"},{"file": 47,"line": 2838,"col": 4,"docs": " The encryption operation could not be completed because a transaction is active.","name": "EFS_NOT_ALLOWED_IN_TRANSACTION"},{"file": 47,"line": 2840,"col": 4,"docs": " This object is not allowed to be opened in a transaction.","name": "TRANSACTIONAL_OPEN_NOT_ALLOWED"},{"file": 47,"line": 2842,"col": 4,"docs": " Memory mapping (creating a mapped section) a remote file under a transaction is not supported.","name": "TRANSACTED_MAPPING_UNSUPPORTED_REMOTE"},{"file": 47,"line": 2844,"col": 4,"docs": " Promotion was required to allow the resource manager to enlist, but the transaction was set to disallow it.","name": "TRANSACTION_REQUIRED_PROMOTION"},{"file": 47,"line": 2846,"col": 4,"docs": " This file is open for modification in an unresolved transaction and can be opened for execute only by a transacted reader.","name": "CANNOT_EXECUTE_FILE_IN_TRANSACTION"},{"file": 47,"line": 2848,"col": 4,"docs": " The request to thaw frozen transactions was ignored because transactions were not previously frozen.","name": "TRANSACTIONS_NOT_FROZEN"},{"file": 47,"line": 2850,"col": 4,"docs": " Transactions cannot be frozen because a freeze is already in progress.","name": "TRANSACTION_FREEZE_IN_PROGRESS"},{"file": 47,"line": 2853,"col": 4,"docs": " The target volume is not a snapshot volume. This operation is valid only on a volume mounted as a snapshot.","name": "NOT_SNAPSHOT_VOLUME"},{"file": 47,"line": 2855,"col": 4,"docs": " The savepoint operation failed because files are open on the transaction, which is not permitted.","name": "NO_SAVEPOINT_WITH_OPEN_FILES"},{"file": 47,"line": 2857,"col": 4,"docs": " The sparse operation could not be completed because a transaction is active on the file.","name": "SPARSE_NOT_ALLOWED_IN_TRANSACTION"},{"file": 47,"line": 2859,"col": 4,"docs": " The call to create a transaction manager object failed because the Tm Identity that is stored in the log file does not match the Tm Identity that was passed in as an argument.","name": "TM_IDENTITY_MISMATCH"},{"file": 47,"line": 2861,"col": 4,"docs": " I/O was attempted on a section object that has been floated as a result of a transaction ending. There is no valid data.","name": "FLOATED_SECTION"},{"file": 47,"line": 2863,"col": 4,"docs": " The transactional resource manager cannot currently accept transacted work due to a transient condition, such as low resources.","name": "CANNOT_ACCEPT_TRANSACTED_WORK"},{"file": 47,"line": 2866,"col": 4,"docs": " The transactional resource manager had too many transactions outstanding that could not be aborted. The transactional resource manager has been shut down.","name": "CANNOT_ABORT_TRANSACTIONS"},{"file": 47,"line": 2868,"col": 4,"docs": " The specified transaction was unable to be opened because it was not found.","name": "TRANSACTION_NOT_FOUND"},{"file": 47,"line": 2870,"col": 4,"docs": " The specified resource manager was unable to be opened because it was not found.","name": "RESOURCEMANAGER_NOT_FOUND"},{"file": 47,"line": 2872,"col": 4,"docs": " The specified enlistment was unable to be opened because it was not found.","name": "ENLISTMENT_NOT_FOUND"},{"file": 47,"line": 2874,"col": 4,"docs": " The specified transaction manager was unable to be opened because it was not found.","name": "TRANSACTIONMANAGER_NOT_FOUND"},{"file": 47,"line": 2876,"col": 4,"docs": " The specified resource manager was unable to create an enlistment because its associated transaction manager is not online.","name": "TRANSACTIONMANAGER_NOT_ONLINE"},{"file": 47,"line": 2879,"col": 4,"docs": " The specified transaction manager was unable to create the objects contained in its log file in the Ob namespace. Therefore, the transaction manager was unable to recover.","name": "TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION"},{"file": 47,"line": 2882,"col": 4,"docs": " The call to create a superior enlistment on this transaction object could not be completed because the transaction object specified for the enlistment is a subordinate branch of the transaction. Only the root of the transaction can be enlisted as a superior.","name": "TRANSACTION_NOT_ROOT"},{"file": 47,"line": 2884,"col": 4,"docs": " Because the associated transaction manager or resource manager has been closed, the handle is no longer valid.","name": "TRANSACTION_OBJECT_EXPIRED"},{"file": 47,"line": 2886,"col": 4,"docs": " The compression operation could not be completed because a transaction is active on the file.","name": "COMPRESSION_NOT_ALLOWED_IN_TRANSACTION"},{"file": 47,"line": 2888,"col": 4,"docs": " The specified operation could not be performed on this superior enlistment because the enlistment was not created with the corresponding completion response in the NotificationMask.","name": "TRANSACTION_RESPONSE_NOT_ENLISTED"},{"file": 47,"line": 2891,"col": 4,"docs": " The specified operation could not be performed because the record to be logged was too long. This can occur because either there are too many enlistments on this transaction or the combined RecoveryInformation being logged on behalf of those enlistments is too long.","name": "TRANSACTION_RECORD_TOO_LONG"},{"file": 47,"line": 2893,"col": 4,"docs": " The link-tracking operation could not be completed because a transaction is active.","name": "NO_LINK_TRACKING_IN_TRANSACTION"},{"file": 47,"line": 2895,"col": 4,"docs": " This operation cannot be performed in a transaction.","name": "OPERATION_NOT_SUPPORTED_IN_TRANSACTION"},{"file": 47,"line": 2897,"col": 4,"docs": " The kernel transaction manager had to abort or forget the transaction because it blocked forward progress.","name": "TRANSACTION_INTEGRITY_VIOLATED"},{"file": 47,"line": 2900,"col": 4,"docs": " The handle is no longer properly associated with its transaction.  It might have been opened in a transactional resource manager that was subsequently forced to restart.  Please close the handle and open a new one.","name": "EXPIRED_HANDLE"},{"file": 47,"line": 2902,"col": 4,"docs": " The specified operation could not be performed because the resource manager is not enlisted in the transaction.","name": "TRANSACTION_NOT_ENLISTED"},{"file": 47,"line": 2904,"col": 4,"docs": " The log service found an invalid log sector.","name": "LOG_SECTOR_INVALID"},{"file": 47,"line": 2906,"col": 4,"docs": " The log service encountered a log sector with invalid block parity.","name": "LOG_SECTOR_PARITY_INVALID"},{"file": 47,"line": 2908,"col": 4,"docs": " The log service encountered a remapped log sector.","name": "LOG_SECTOR_REMAPPED"},{"file": 47,"line": 2910,"col": 4,"docs": " The log service encountered a partial or incomplete log block.","name": "LOG_BLOCK_INCOMPLETE"},{"file": 47,"line": 2912,"col": 4,"docs": " The log service encountered an attempt to access data outside the active log range.","name": "LOG_INVALID_RANGE"},{"file": 47,"line": 2914,"col": 4,"docs": " The log service user-log marshaling buffers are exhausted.","name": "LOG_BLOCKS_EXHAUSTED"},{"file": 47,"line": 2916,"col": 4,"docs": " The log service encountered an attempt to read from a marshaling area with an invalid read context.","name": "LOG_READ_CONTEXT_INVALID"},{"file": 47,"line": 2918,"col": 4,"docs": " The log service encountered an invalid log restart area.","name": "LOG_RESTART_INVALID"},{"file": 47,"line": 2920,"col": 4,"docs": " The log service encountered an invalid log block version.","name": "LOG_BLOCK_VERSION"},{"file": 47,"line": 2922,"col": 4,"docs": " The log service encountered an invalid log block.","name": "LOG_BLOCK_INVALID"},{"file": 47,"line": 2924,"col": 4,"docs": " The log service encountered an attempt to read the log with an invalid read mode.","name": "LOG_READ_MODE_INVALID"},{"file": 47,"line": 2926,"col": 4,"docs": " The log service encountered a corrupted metadata file.","name": "LOG_METADATA_CORRUPT"},{"file": 47,"line": 2928,"col": 4,"docs": " The log service encountered a metadata file that could not be created by the log file system.","name": "LOG_METADATA_INVALID"},{"file": 47,"line": 2930,"col": 4,"docs": " The log service encountered a metadata file with inconsistent data.","name": "LOG_METADATA_INCONSISTENT"},{"file": 47,"line": 2932,"col": 4,"docs": " The log service encountered an attempt to erroneously allocate or dispose reservation space.","name": "LOG_RESERVATION_INVALID"},{"file": 47,"line": 2934,"col": 4,"docs": " The log service cannot delete the log file or the file system container.","name": "LOG_CANT_DELETE"},{"file": 47,"line": 2936,"col": 4,"docs": " The log service has reached the maximum allowable containers allocated to a log file.","name": "LOG_CONTAINER_LIMIT_EXCEEDED"},{"file": 47,"line": 2938,"col": 4,"docs": " The log service has attempted to read or write backward past the start of the log.","name": "LOG_START_OF_LOG"},{"file": 47,"line": 2940,"col": 4,"docs": " The log policy could not be installed because a policy of the same type is already present.","name": "LOG_POLICY_ALREADY_INSTALLED"},{"file": 47,"line": 2942,"col": 4,"docs": " The log policy in question was not installed at the time of the request.","name": "LOG_POLICY_NOT_INSTALLED"},{"file": 47,"line": 2944,"col": 4,"docs": " The installed set of policies on the log is invalid.","name": "LOG_POLICY_INVALID"},{"file": 47,"line": 2946,"col": 4,"docs": " A policy on the log in question prevented the operation from completing.","name": "LOG_POLICY_CONFLICT"},{"file": 47,"line": 2948,"col": 4,"docs": " The log space cannot be reclaimed because the log is pinned by the archive tail.","name": "LOG_PINNED_ARCHIVE_TAIL"},{"file": 47,"line": 2950,"col": 4,"docs": " The log record is not a record in the log file.","name": "LOG_RECORD_NONEXISTENT"},{"file": 47,"line": 2952,"col": 4,"docs": " The number of reserved log records or the adjustment of the number of reserved log records is invalid.","name": "LOG_RECORDS_RESERVED_INVALID"},{"file": 47,"line": 2954,"col": 4,"docs": " The reserved log space or the adjustment of the log space is invalid.","name": "LOG_SPACE_RESERVED_INVALID"},{"file": 47,"line": 2956,"col": 4,"docs": " A new or existing archive tail or the base of the active log is invalid.","name": "LOG_TAIL_INVALID"},{"file": 47,"line": 2958,"col": 4,"docs": " The log space is exhausted.","name": "LOG_FULL"},{"file": 47,"line": 2960,"col": 4,"docs": " The log is multiplexed; no direct writes to the physical log are allowed.","name": "LOG_MULTIPLEXED"},{"file": 47,"line": 2962,"col": 4,"docs": " The operation failed because the log is dedicated.","name": "LOG_DEDICATED"},{"file": 47,"line": 2964,"col": 4,"docs": " The operation requires an archive context.","name": "LOG_ARCHIVE_NOT_IN_PROGRESS"},{"file": 47,"line": 2966,"col": 4,"docs": " Log archival is in progress.","name": "LOG_ARCHIVE_IN_PROGRESS"},{"file": 47,"line": 2968,"col": 4,"docs": " The operation requires a nonephemeral log, but the log is ephemeral.","name": "LOG_EPHEMERAL"},{"file": 47,"line": 2970,"col": 4,"docs": " The log must have at least two containers before it can be read from or written to.","name": "LOG_NOT_ENOUGH_CONTAINERS"},{"file": 47,"line": 2972,"col": 4,"docs": " A log client has already registered on the stream.","name": "LOG_CLIENT_ALREADY_REGISTERED"},{"file": 47,"line": 2974,"col": 4,"docs": " A log client has not been registered on the stream.","name": "LOG_CLIENT_NOT_REGISTERED"},{"file": 47,"line": 2976,"col": 4,"docs": " A request has already been made to handle the log full condition.","name": "LOG_FULL_HANDLER_IN_PROGRESS"},{"file": 47,"line": 2978,"col": 4,"docs": " The log service encountered an error when attempting to read from a log container.","name": "LOG_CONTAINER_READ_FAILED"},{"file": 47,"line": 2980,"col": 4,"docs": " The log service encountered an error when attempting to write to a log container.","name": "LOG_CONTAINER_WRITE_FAILED"},{"file": 47,"line": 2982,"col": 4,"docs": " The log service encountered an error when attempting to open a log container.","name": "LOG_CONTAINER_OPEN_FAILED"},{"file": 47,"line": 2984,"col": 4,"docs": " The log service encountered an invalid container state when attempting a requested action.","name": "LOG_CONTAINER_STATE_INVALID"},{"file": 47,"line": 2986,"col": 4,"docs": " The log service is not in the correct state to perform a requested action.","name": "LOG_STATE_INVALID"},{"file": 47,"line": 2988,"col": 4,"docs": " The log space cannot be reclaimed because the log is pinned.","name": "LOG_PINNED"},{"file": 47,"line": 2990,"col": 4,"docs": " The log metadata flush failed.","name": "LOG_METADATA_FLUSH_FAILED"},{"file": 47,"line": 2992,"col": 4,"docs": " Security on the log and its containers is inconsistent.","name": "LOG_INCONSISTENT_SECURITY"},{"file": 47,"line": 2994,"col": 4,"docs": " Records were appended to the log or reservation changes were made, but the log could not be flushed.","name": "LOG_APPENDED_FLUSH_FAILED"},{"file": 47,"line": 2997,"col": 4,"docs": " The log is pinned due to reservation consuming most of the log space. Free some reserved records to make space available.","name": "LOG_PINNED_RESERVATION"},{"file": 47,"line": 3001,"col": 4,"docs": " {Display Driver Stopped Responding} The %hs display driver has stopped working normally. Save your work and reboot the system to restore full display functionality. The next time you reboot the computer, a dialog box will allow you to upload data about this failure to Microsoft.","name": "VIDEO_HUNG_DISPLAY_DRIVER_THREAD"},{"file": 47,"line": 3003,"col": 4,"docs": " A handler was not defined by the filter for this operation.","name": "FLT_NO_HANDLER_DEFINED"},{"file": 47,"line": 3005,"col": 4,"docs": " A context is already defined for this object.","name": "FLT_CONTEXT_ALREADY_DEFINED"},{"file": 47,"line": 3007,"col": 4,"docs": " Asynchronous requests are not valid for this operation.","name": "FLT_INVALID_ASYNCHRONOUS_REQUEST"},{"file": 47,"line": 3009,"col": 4,"docs": " This is an internal error code used by the filter manager to determine if a fast I/O operation should be forced down the input/output request packet (IRP) path. Minifilters should never return this value.","name": "FLT_DISALLOW_FAST_IO"},{"file": 47,"line": 3012,"col": 4,"docs": " An invalid name request was made. The name requested cannot be retrieved at this time.","name": "FLT_INVALID_NAME_REQUEST"},{"file": 47,"line": 3014,"col": 4,"docs": " Posting this operation to a worker thread for further processing is not safe at this time because it could lead to a system deadlock.","name": "FLT_NOT_SAFE_TO_POST_OPERATION"},{"file": 47,"line": 3017,"col": 4,"docs": " The Filter Manager was not initialized when a filter tried to register. Make sure that the Filter Manager is loaded as a driver.","name": "FLT_NOT_INITIALIZED"},{"file": 47,"line": 3019,"col": 4,"docs": " The filter is not ready for attachment to volumes because it has not finished initializing (FltStartFiltering has not been called).","name": "FLT_FILTER_NOT_READY"},{"file": 47,"line": 3021,"col": 4,"docs": " The filter must clean up any operation-specific context at this time because it is being removed from the system before the operation is completed by the lower drivers.","name": "FLT_POST_OPERATION_CLEANUP"},{"file": 47,"line": 3024,"col": 4,"docs": " The Filter Manager had an internal error from which it cannot recover; therefore, the operation has failed. This is usually the result of a filter returning an invalid value from a pre-operation callback.","name": "FLT_INTERNAL_ERROR"},{"file": 47,"line": 3026,"col": 4,"docs": " The object specified for this action is in the process of being deleted; therefore, the action requested cannot be completed at this time.","name": "FLT_DELETING_OBJECT"},{"file": 47,"line": 3028,"col": 4,"docs": " A nonpaged pool must be used for this type of context.","name": "FLT_MUST_BE_NONPAGED_POOL"},{"file": 47,"line": 3030,"col": 4,"docs": " A duplicate handler definition has been provided for an operation.","name": "FLT_DUPLICATE_ENTRY"},{"file": 47,"line": 3032,"col": 4,"docs": " The callback data queue has been disabled.","name": "FLT_CBDQ_DISABLED"},{"file": 47,"line": 3034,"col": 4,"docs": " Do not attach the filter to the volume at this time.","name": "FLT_DO_NOT_ATTACH"},{"file": 47,"line": 3036,"col": 4,"docs": " Do not detach the filter from the volume at this time.","name": "FLT_DO_NOT_DETACH"},{"file": 47,"line": 3038,"col": 4,"docs": " An instance already exists at this altitude on the volume specified.","name": "FLT_INSTANCE_ALTITUDE_COLLISION"},{"file": 47,"line": 3040,"col": 4,"docs": " An instance already exists with this name on the volume specified.","name": "FLT_INSTANCE_NAME_COLLISION"},{"file": 47,"line": 3042,"col": 4,"docs": " The system could not find the filter specified.","name": "FLT_FILTER_NOT_FOUND"},{"file": 47,"line": 3044,"col": 4,"docs": " The system could not find the volume specified.","name": "FLT_VOLUME_NOT_FOUND"},{"file": 47,"line": 3046,"col": 4,"docs": " The system could not find the instance specified.","name": "FLT_INSTANCE_NOT_FOUND"},{"file": 47,"line": 3048,"col": 4,"docs": " No registered context allocation definition was found for the given request.","name": "FLT_CONTEXT_ALLOCATION_NOT_FOUND"},{"file": 47,"line": 3050,"col": 4,"docs": " An invalid parameter was specified during context registration.","name": "FLT_INVALID_CONTEXT_REGISTRATION"},{"file": 47,"line": 3052,"col": 4,"docs": " The name requested was not found in the Filter Manager name cache and could not be retrieved from the file system.","name": "FLT_NAME_CACHE_MISS"},{"file": 47,"line": 3054,"col": 4,"docs": " The requested device object does not exist for the given volume.","name": "FLT_NO_DEVICE_OBJECT"},{"file": 47,"line": 3056,"col": 4,"docs": " The specified volume is already mounted.","name": "FLT_VOLUME_ALREADY_MOUNTED"},{"file": 47,"line": 3058,"col": 4,"docs": " The specified transaction context is already enlisted in a transaction.","name": "FLT_ALREADY_ENLISTED"},{"file": 47,"line": 3060,"col": 4,"docs": " The specified context is already attached to another object.","name": "FLT_CONTEXT_ALREADY_LINKED"},{"file": 47,"line": 3062,"col": 4,"docs": " No waiter is present for the filter's reply to this message.","name": "FLT_NO_WAITER_FOR_REPLY"},{"file": 47,"line": 3064,"col": 4,"docs": " A monitor descriptor could not be obtained.","name": "MONITOR_NO_DESCRIPTOR"},{"file": 47,"line": 3066,"col": 4,"docs": " This release does not support the format of the obtained monitor descriptor.","name": "MONITOR_UNKNOWN_DESCRIPTOR_FORMAT"},{"file": 47,"line": 3068,"col": 4,"docs": " The checksum of the obtained monitor descriptor is invalid.","name": "MONITOR_INVALID_DESCRIPTOR_CHECKSUM"},{"file": 47,"line": 3070,"col": 4,"docs": " The monitor descriptor contains an invalid standard timing block.","name": "MONITOR_INVALID_STANDARD_TIMING_BLOCK"},{"file": 47,"line": 3072,"col": 4,"docs": " WMI data-block registration failed for one of the MSMonitorClass WMI subclasses.","name": "MONITOR_WMI_DATABLOCK_REGISTRATION_FAILED"},{"file": 47,"line": 3074,"col": 4,"docs": " The provided monitor descriptor block is either corrupted or does not contain the monitor's detailed serial number.","name": "MONITOR_INVALID_SERIAL_NUMBER_MONDSC_BLOCK"},{"file": 47,"line": 3076,"col": 4,"docs": " The provided monitor descriptor block is either corrupted or does not contain the monitor's user-friendly name.","name": "MONITOR_INVALID_USER_FRIENDLY_MONDSC_BLOCK"},{"file": 47,"line": 3078,"col": 4,"docs": " There is no monitor descriptor data at the specified (offset or size) region.","name": "MONITOR_NO_MORE_DESCRIPTOR_DATA"},{"file": 47,"line": 3080,"col": 4,"docs": " The monitor descriptor contains an invalid detailed timing block.","name": "MONITOR_INVALID_DETAILED_TIMING_BLOCK"},{"file": 47,"line": 3082,"col": 4,"docs": " Monitor descriptor contains invalid manufacture date.","name": "MONITOR_INVALID_MANUFACTURE_DATE"},{"file": 47,"line": 3084,"col": 4,"docs": " Exclusive mode ownership is needed to create an unmanaged primary allocation.","name": "GRAPHICS_NOT_EXCLUSIVE_MODE_OWNER"},{"file": 47,"line": 3086,"col": 4,"docs": " The driver needs more DMA buffer space to complete the requested operation.","name": "GRAPHICS_INSUFFICIENT_DMA_BUFFER"},{"file": 47,"line": 3088,"col": 4,"docs": " The specified display adapter handle is invalid.","name": "GRAPHICS_INVALID_DISPLAY_ADAPTER"},{"file": 47,"line": 3090,"col": 4,"docs": " The specified display adapter and all of its state have been reset.","name": "GRAPHICS_ADAPTER_WAS_RESET"},{"file": 47,"line": 3092,"col": 4,"docs": " The driver stack does not match the expected driver model.","name": "GRAPHICS_INVALID_DRIVER_MODEL"},{"file": 47,"line": 3094,"col": 4,"docs": " Present happened but ended up into the changed desktop mode.","name": "GRAPHICS_PRESENT_MODE_CHANGED"},{"file": 47,"line": 3096,"col": 4,"docs": " Nothing to present due to desktop occlusion.","name": "GRAPHICS_PRESENT_OCCLUDED"},{"file": 47,"line": 3098,"col": 4,"docs": " Not able to present due to denial of desktop access.","name": "GRAPHICS_PRESENT_DENIED"},{"file": 47,"line": 3100,"col": 4,"docs": " Not able to present with color conversion.","name": "GRAPHICS_CANNOTCOLORCONVERT"},{"file": 47,"line": 3102,"col": 4,"docs": " Present redirection is disabled (desktop windowing management subsystem is off).","name": "GRAPHICS_PRESENT_REDIRECTION_DISABLED"},{"file": 47,"line": 3104,"col": 4,"docs": " Previous exclusive VidPn source owner has released its ownership","name": "GRAPHICS_PRESENT_UNOCCLUDED"},{"file": 47,"line": 3106,"col": 4,"docs": " Not enough video memory is available to complete the operation.","name": "GRAPHICS_NO_VIDEO_MEMORY"},{"file": 47,"line": 3108,"col": 4,"docs": " Could not probe and lock the underlying memory of an allocation.","name": "GRAPHICS_CANT_LOCK_MEMORY"},{"file": 47,"line": 3110,"col": 4,"docs": " The allocation is currently busy.","name": "GRAPHICS_ALLOCATION_BUSY"},{"file": 47,"line": 3112,"col": 4,"docs": " An object being referenced has already reached the maximum reference count and cannot be referenced further.","name": "GRAPHICS_TOO_MANY_REFERENCES"},{"file": 47,"line": 3114,"col": 4,"docs": " A problem could not be solved due to an existing condition. Try again later.","name": "GRAPHICS_TRY_AGAIN_LATER"},{"file": 47,"line": 3116,"col": 4,"docs": " A problem could not be solved due to an existing condition. Try again now.","name": "GRAPHICS_TRY_AGAIN_NOW"},{"file": 47,"line": 3118,"col": 4,"docs": " The allocation is invalid.","name": "GRAPHICS_ALLOCATION_INVALID"},{"file": 47,"line": 3120,"col": 4,"docs": " No more unswizzling apertures are currently available.","name": "GRAPHICS_UNSWIZZLING_APERTURE_UNAVAILABLE"},{"file": 47,"line": 3122,"col": 4,"docs": " The current allocation cannot be unswizzled by an aperture.","name": "GRAPHICS_UNSWIZZLING_APERTURE_UNSUPPORTED"},{"file": 47,"line": 3124,"col": 4,"docs": " The request failed because a pinned allocation cannot be evicted.","name": "GRAPHICS_CANT_EVICT_PINNED_ALLOCATION"},{"file": 47,"line": 3126,"col": 4,"docs": " The allocation cannot be used from its current segment location for the specified operation.","name": "GRAPHICS_INVALID_ALLOCATION_USAGE"},{"file": 47,"line": 3128,"col": 4,"docs": " A locked allocation cannot be used in the current command buffer.","name": "GRAPHICS_CANT_RENDER_LOCKED_ALLOCATION"},{"file": 47,"line": 3130,"col": 4,"docs": " The allocation being referenced has been closed permanently.","name": "GRAPHICS_ALLOCATION_CLOSED"},{"file": 47,"line": 3132,"col": 4,"docs": " An invalid allocation instance is being referenced.","name": "GRAPHICS_INVALID_ALLOCATION_INSTANCE"},{"file": 47,"line": 3134,"col": 4,"docs": " An invalid allocation handle is being referenced.","name": "GRAPHICS_INVALID_ALLOCATION_HANDLE"},{"file": 47,"line": 3136,"col": 4,"docs": " The allocation being referenced does not belong to the current device.","name": "GRAPHICS_WRONG_ALLOCATION_DEVICE"},{"file": 47,"line": 3138,"col": 4,"docs": " The specified allocation lost its content.","name": "GRAPHICS_ALLOCATION_CONTENT_LOST"},{"file": 47,"line": 3140,"col": 4,"docs": " A GPU exception was detected on the given device. The device cannot be scheduled.","name": "GRAPHICS_GPU_EXCEPTION_ON_DEVICE"},{"file": 47,"line": 3142,"col": 4,"docs": " The specified VidPN topology is invalid.","name": "GRAPHICS_INVALID_VIDPN_TOPOLOGY"},{"file": 47,"line": 3144,"col": 4,"docs": " The specified VidPN topology is valid but is not supported by this model of the display adapter.","name": "GRAPHICS_VIDPN_TOPOLOGY_NOT_SUPPORTED"},{"file": 47,"line": 3146,"col": 4,"docs": " The specified VidPN topology is valid but is not currently supported by the display adapter due to allocation of its resources.","name": "GRAPHICS_VIDPN_TOPOLOGY_CURRENTLY_NOT_SUPPORTED"},{"file": 47,"line": 3148,"col": 4,"docs": " The specified VidPN handle is invalid.","name": "GRAPHICS_INVALID_VIDPN"},{"file": 47,"line": 3150,"col": 4,"docs": " The specified video present source is invalid.","name": "GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE"},{"file": 47,"line": 3152,"col": 4,"docs": " The specified video present target is invalid.","name": "GRAPHICS_INVALID_VIDEO_PRESENT_TARGET"},{"file": 47,"line": 3154,"col": 4,"docs": " The specified VidPN modality is not supported (for example, at least two of the pinned modes are not co-functional).","name": "GRAPHICS_VIDPN_MODALITY_NOT_SUPPORTED"},{"file": 47,"line": 3156,"col": 4,"docs": " The specified VidPN source mode set is invalid.","name": "GRAPHICS_INVALID_VIDPN_SOURCEMODESET"},{"file": 47,"line": 3158,"col": 4,"docs": " The specified VidPN target mode set is invalid.","name": "GRAPHICS_INVALID_VIDPN_TARGETMODESET"},{"file": 47,"line": 3160,"col": 4,"docs": " The specified video signal frequency is invalid.","name": "GRAPHICS_INVALID_FREQUENCY"},{"file": 47,"line": 3162,"col": 4,"docs": " The specified video signal active region is invalid.","name": "GRAPHICS_INVALID_ACTIVE_REGION"},{"file": 47,"line": 3164,"col": 4,"docs": " The specified video signal total region is invalid.","name": "GRAPHICS_INVALID_TOTAL_REGION"},{"file": 47,"line": 3166,"col": 4,"docs": " The specified video present source mode is invalid.","name": "GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE_MODE"},{"file": 47,"line": 3168,"col": 4,"docs": " The specified video present target mode is invalid.","name": "GRAPHICS_INVALID_VIDEO_PRESENT_TARGET_MODE"},{"file": 47,"line": 3170,"col": 4,"docs": " The pinned mode must remain in the set on the VidPN's co-functional modality enumeration.","name": "GRAPHICS_PINNED_MODE_MUST_REMAIN_IN_SET"},{"file": 47,"line": 3172,"col": 4,"docs": " The specified video present path is already in the VidPN's topology.","name": "GRAPHICS_PATH_ALREADY_IN_TOPOLOGY"},{"file": 47,"line": 3174,"col": 4,"docs": " The specified mode is already in the mode set.","name": "GRAPHICS_MODE_ALREADY_IN_MODESET"},{"file": 47,"line": 3176,"col": 4,"docs": " The specified video present source set is invalid.","name": "GRAPHICS_INVALID_VIDEOPRESENTSOURCESET"},{"file": 47,"line": 3178,"col": 4,"docs": " The specified video present target set is invalid.","name": "GRAPHICS_INVALID_VIDEOPRESENTTARGETSET"},{"file": 47,"line": 3180,"col": 4,"docs": " The specified video present source is already in the video present source set.","name": "GRAPHICS_SOURCE_ALREADY_IN_SET"},{"file": 47,"line": 3182,"col": 4,"docs": " The specified video present target is already in the video present target set.","name": "GRAPHICS_TARGET_ALREADY_IN_SET"},{"file": 47,"line": 3184,"col": 4,"docs": " The specified VidPN present path is invalid.","name": "GRAPHICS_INVALID_VIDPN_PRESENT_PATH"},{"file": 47,"line": 3186,"col": 4,"docs": " The miniport has no recommendation for augmenting the specified VidPN's topology.","name": "GRAPHICS_NO_RECOMMENDED_VIDPN_TOPOLOGY"},{"file": 47,"line": 3188,"col": 4,"docs": " The specified monitor frequency range set is invalid.","name": "GRAPHICS_INVALID_MONITOR_FREQUENCYRANGESET"},{"file": 47,"line": 3190,"col": 4,"docs": " The specified monitor frequency range is invalid.","name": "GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE"},{"file": 47,"line": 3192,"col": 4,"docs": " The specified frequency range is not in the specified monitor frequency range set.","name": "GRAPHICS_FREQUENCYRANGE_NOT_IN_SET"},{"file": 47,"line": 3194,"col": 4,"docs": " The specified frequency range is already in the specified monitor frequency range set.","name": "GRAPHICS_FREQUENCYRANGE_ALREADY_IN_SET"},{"file": 47,"line": 3196,"col": 4,"docs": " The specified mode set is stale. Reacquire the new mode set.","name": "GRAPHICS_STALE_MODESET"},{"file": 47,"line": 3198,"col": 4,"docs": " The specified monitor source mode set is invalid.","name": "GRAPHICS_INVALID_MONITOR_SOURCEMODESET"},{"file": 47,"line": 3200,"col": 4,"docs": " The specified monitor source mode is invalid.","name": "GRAPHICS_INVALID_MONITOR_SOURCE_MODE"},{"file": 47,"line": 3202,"col": 4,"docs": " The miniport does not have a recommendation regarding the request to provide a functional VidPN given the current display adapter configuration.","name": "GRAPHICS_NO_RECOMMENDED_FUNCTIONAL_VIDPN"},{"file": 47,"line": 3204,"col": 4,"docs": " The ID of the specified mode is being used by another mode in the set.","name": "GRAPHICS_MODE_ID_MUST_BE_UNIQUE"},{"file": 47,"line": 3206,"col": 4,"docs": " The system failed to determine a mode that is supported by both the display adapter and the monitor connected to it.","name": "GRAPHICS_EMPTY_ADAPTER_MONITOR_MODE_SUPPORT_INTERSECTION"},{"file": 47,"line": 3208,"col": 4,"docs": " The number of video present targets must be greater than or equal to the number of video present sources.","name": "GRAPHICS_VIDEO_PRESENT_TARGETS_LESS_THAN_SOURCES"},{"file": 47,"line": 3210,"col": 4,"docs": " The specified present path is not in the VidPN's topology.","name": "GRAPHICS_PATH_NOT_IN_TOPOLOGY"},{"file": 47,"line": 3212,"col": 4,"docs": " The display adapter must have at least one video present source.","name": "GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_SOURCE"},{"file": 47,"line": 3214,"col": 4,"docs": " The display adapter must have at least one video present target.","name": "GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_TARGET"},{"file": 47,"line": 3216,"col": 4,"docs": " The specified monitor descriptor set is invalid.","name": "GRAPHICS_INVALID_MONITORDESCRIPTORSET"},{"file": 47,"line": 3218,"col": 4,"docs": " The specified monitor descriptor is invalid.","name": "GRAPHICS_INVALID_MONITORDESCRIPTOR"},{"file": 47,"line": 3220,"col": 4,"docs": " The specified descriptor is not in the specified monitor descriptor set.","name": "GRAPHICS_MONITORDESCRIPTOR_NOT_IN_SET"},{"file": 47,"line": 3222,"col": 4,"docs": " The specified descriptor is already in the specified monitor descriptor set.","name": "GRAPHICS_MONITORDESCRIPTOR_ALREADY_IN_SET"},{"file": 47,"line": 3224,"col": 4,"docs": " The ID of the specified monitor descriptor is being used by another descriptor in the set.","name": "GRAPHICS_MONITORDESCRIPTOR_ID_MUST_BE_UNIQUE"},{"file": 47,"line": 3226,"col": 4,"docs": " The specified video present target subset type is invalid.","name": "GRAPHICS_INVALID_VIDPN_TARGET_SUBSET_TYPE"},{"file": 47,"line": 3228,"col": 4,"docs": " Two or more of the specified resources are not related to each other, as defined by the interface semantics.","name": "GRAPHICS_RESOURCES_NOT_RELATED"},{"file": 47,"line": 3230,"col": 4,"docs": " The ID of the specified video present source is being used by another source in the set.","name": "GRAPHICS_SOURCE_ID_MUST_BE_UNIQUE"},{"file": 47,"line": 3232,"col": 4,"docs": " The ID of the specified video present target is being used by another target in the set.","name": "GRAPHICS_TARGET_ID_MUST_BE_UNIQUE"},{"file": 47,"line": 3234,"col": 4,"docs": " The specified VidPN source cannot be used because there is no available VidPN target to connect it to.","name": "GRAPHICS_NO_AVAILABLE_VIDPN_TARGET"},{"file": 47,"line": 3236,"col": 4,"docs": " The newly arrived monitor could not be associated with a display adapter.","name": "GRAPHICS_MONITOR_COULD_NOT_BE_ASSOCIATED_WITH_ADAPTER"},{"file": 47,"line": 3238,"col": 4,"docs": " The particular display adapter does not have an associated VidPN manager.","name": "GRAPHICS_NO_VIDPNMGR"},{"file": 47,"line": 3240,"col": 4,"docs": " The VidPN manager of the particular display adapter does not have an active VidPN.","name": "GRAPHICS_NO_ACTIVE_VIDPN"},{"file": 47,"line": 3242,"col": 4,"docs": " The specified VidPN topology is stale; obtain the new topology.","name": "GRAPHICS_STALE_VIDPN_TOPOLOGY"},{"file": 47,"line": 3244,"col": 4,"docs": " No monitor is connected on the specified video present target.","name": "GRAPHICS_MONITOR_NOT_CONNECTED"},{"file": 47,"line": 3246,"col": 4,"docs": " The specified source is not part of the specified VidPN's topology.","name": "GRAPHICS_SOURCE_NOT_IN_TOPOLOGY"},{"file": 47,"line": 3248,"col": 4,"docs": " The specified primary surface size is invalid.","name": "GRAPHICS_INVALID_PRIMARYSURFACE_SIZE"},{"file": 47,"line": 3250,"col": 4,"docs": " The specified visible region size is invalid.","name": "GRAPHICS_INVALID_VISIBLEREGION_SIZE"},{"file": 47,"line": 3252,"col": 4,"docs": " The specified stride is invalid.","name": "GRAPHICS_INVALID_STRIDE"},{"file": 47,"line": 3254,"col": 4,"docs": " The specified pixel format is invalid.","name": "GRAPHICS_INVALID_PIXELFORMAT"},{"file": 47,"line": 3256,"col": 4,"docs": " The specified color basis is invalid.","name": "GRAPHICS_INVALID_COLORBASIS"},{"file": 47,"line": 3258,"col": 4,"docs": " The specified pixel value access mode is invalid.","name": "GRAPHICS_INVALID_PIXELVALUEACCESSMODE"},{"file": 47,"line": 3260,"col": 4,"docs": " The specified target is not part of the specified VidPN's topology.","name": "GRAPHICS_TARGET_NOT_IN_TOPOLOGY"},{"file": 47,"line": 3262,"col": 4,"docs": " Failed to acquire the display mode management interface.","name": "GRAPHICS_NO_DISPLAY_MODE_MANAGEMENT_SUPPORT"},{"file": 47,"line": 3264,"col": 4,"docs": " The specified VidPN source is already owned by a DMM client and cannot be used until that client releases it.","name": "GRAPHICS_VIDPN_SOURCE_IN_USE"},{"file": 47,"line": 3266,"col": 4,"docs": " The specified VidPN is active and cannot be accessed.","name": "GRAPHICS_CANT_ACCESS_ACTIVE_VIDPN"},{"file": 47,"line": 3268,"col": 4,"docs": " The specified VidPN's present path importance ordinal is invalid.","name": "GRAPHICS_INVALID_PATH_IMPORTANCE_ORDINAL"},{"file": 47,"line": 3270,"col": 4,"docs": " The specified VidPN's present path content geometry transformation is invalid.","name": "GRAPHICS_INVALID_PATH_CONTENT_GEOMETRY_TRANSFORMATION"},{"file": 47,"line": 3272,"col": 4,"docs": " The specified content geometry transformation is not supported on the respective VidPN present path.","name": "GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_SUPPORTED"},{"file": 47,"line": 3274,"col": 4,"docs": " The specified gamma ramp is invalid.","name": "GRAPHICS_INVALID_GAMMA_RAMP"},{"file": 47,"line": 3276,"col": 4,"docs": " The specified gamma ramp is not supported on the respective VidPN present path.","name": "GRAPHICS_GAMMA_RAMP_NOT_SUPPORTED"},{"file": 47,"line": 3278,"col": 4,"docs": " Multisampling is not supported on the respective VidPN present path.","name": "GRAPHICS_MULTISAMPLING_NOT_SUPPORTED"},{"file": 47,"line": 3280,"col": 4,"docs": " The specified mode is not in the specified mode set.","name": "GRAPHICS_MODE_NOT_IN_MODESET"},{"file": 47,"line": 3282,"col": 4,"docs": " The specified VidPN topology recommendation reason is invalid.","name": "GRAPHICS_INVALID_VIDPN_TOPOLOGY_RECOMMENDATION_REASON"},{"file": 47,"line": 3284,"col": 4,"docs": " The specified VidPN present path content type is invalid.","name": "GRAPHICS_INVALID_PATH_CONTENT_TYPE"},{"file": 47,"line": 3286,"col": 4,"docs": " The specified VidPN present path copy protection type is invalid.","name": "GRAPHICS_INVALID_COPYPROTECTION_TYPE"},{"file": 47,"line": 3288,"col": 4,"docs": " Only one unassigned mode set can exist at any one time for a particular VidPN source or target.","name": "GRAPHICS_UNASSIGNED_MODESET_ALREADY_EXISTS"},{"file": 47,"line": 3290,"col": 4,"docs": " The specified scan line ordering type is invalid.","name": "GRAPHICS_INVALID_SCANLINE_ORDERING"},{"file": 47,"line": 3292,"col": 4,"docs": " The topology changes are not allowed for the specified VidPN.","name": "GRAPHICS_TOPOLOGY_CHANGES_NOT_ALLOWED"},{"file": 47,"line": 3294,"col": 4,"docs": " All available importance ordinals are being used in the specified topology.","name": "GRAPHICS_NO_AVAILABLE_IMPORTANCE_ORDINALS"},{"file": 47,"line": 3296,"col": 4,"docs": " The specified primary surface has a different private-format attribute than the current primary surface.","name": "GRAPHICS_INCOMPATIBLE_PRIVATE_FORMAT"},{"file": 47,"line": 3298,"col": 4,"docs": " The specified mode-pruning algorithm is invalid.","name": "GRAPHICS_INVALID_MODE_PRUNING_ALGORITHM"},{"file": 47,"line": 3300,"col": 4,"docs": " The specified monitor-capability origin is invalid.","name": "GRAPHICS_INVALID_MONITOR_CAPABILITY_ORIGIN"},{"file": 47,"line": 3302,"col": 4,"docs": " The specified monitor-frequency range constraint is invalid.","name": "GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE_CONSTRAINT"},{"file": 47,"line": 3304,"col": 4,"docs": " The maximum supported number of present paths has been reached.","name": "GRAPHICS_MAX_NUM_PATHS_REACHED"},{"file": 47,"line": 3306,"col": 4,"docs": " The miniport requested that augmentation be canceled for the specified source of the specified VidPN's topology.","name": "GRAPHICS_CANCEL_VIDPN_TOPOLOGY_AUGMENTATION"},{"file": 47,"line": 3308,"col": 4,"docs": " The specified client type was not recognized.","name": "GRAPHICS_INVALID_CLIENT_TYPE"},{"file": 47,"line": 3310,"col": 4,"docs": " The client VidPN is not set on this adapter (for example, no user mode-initiated mode changes have taken place on this adapter).","name": "GRAPHICS_CLIENTVIDPN_NOT_SET"},{"file": 47,"line": 3312,"col": 4,"docs": " The specified display adapter child device already has an external device connected to it.","name": "GRAPHICS_SPECIFIED_CHILD_ALREADY_CONNECTED"},{"file": 47,"line": 3314,"col": 4,"docs": " The display adapter child device does not support reporting a descriptor.","name": "GRAPHICS_CHILD_DESCRIPTOR_NOT_SUPPORTED"},{"file": 47,"line": 3316,"col": 4,"docs": " The display adapter is not linked to any other adapters.","name": "GRAPHICS_NOT_A_LINKED_ADAPTER"},{"file": 47,"line": 3318,"col": 4,"docs": " The lead adapter in a linked configuration was not enumerated yet.","name": "GRAPHICS_LEADLINK_NOT_ENUMERATED"},{"file": 47,"line": 3320,"col": 4,"docs": " Some chain adapters in a linked configuration have not yet been enumerated.","name": "GRAPHICS_CHAINLINKS_NOT_ENUMERATED"},{"file": 47,"line": 3322,"col": 4,"docs": " The chain of linked adapters is not ready to start because of an unknown failure.","name": "GRAPHICS_ADAPTER_CHAIN_NOT_READY"},{"file": 47,"line": 3324,"col": 4,"docs": " An attempt was made to start a lead link display adapter when the chain links had not yet started.","name": "GRAPHICS_CHAINLINKS_NOT_STARTED"},{"file": 47,"line": 3326,"col": 4,"docs": " An attempt was made to turn on a lead link display adapter when the chain links were turned off.","name": "GRAPHICS_CHAINLINKS_NOT_POWERED_ON"},{"file": 47,"line": 3329,"col": 4,"docs": " The adapter link was found in an inconsistent state. Not all adapters are in an expected PNP/power state.","name": "GRAPHICS_INCONSISTENT_DEVICE_LINK_STATE"},{"file": 47,"line": 3331,"col": 4,"docs": " The driver trying to start is not the same as the driver for the posted display adapter.","name": "GRAPHICS_NOT_POST_DEVICE_DRIVER"},{"file": 47,"line": 3333,"col": 4,"docs": " An operation is being attempted that requires the display adapter to be in a quiescent state.","name": "GRAPHICS_ADAPTER_ACCESS_NOT_EXCLUDED"},{"file": 47,"line": 3335,"col": 4,"docs": " The driver does not support OPM.","name": "GRAPHICS_OPM_NOT_SUPPORTED"},{"file": 47,"line": 3337,"col": 4,"docs": " The driver does not support COPP.","name": "GRAPHICS_COPP_NOT_SUPPORTED"},{"file": 47,"line": 3339,"col": 4,"docs": " The driver does not support UAB.","name": "GRAPHICS_UAB_NOT_SUPPORTED"},{"file": 47,"line": 3341,"col": 4,"docs": " The specified encrypted parameters are invalid.","name": "GRAPHICS_OPM_INVALID_ENCRYPTED_PARAMETERS"},{"file": 47,"line": 3343,"col": 4,"docs": " An array passed to a function cannot hold all of the data that the function wants to put in it.","name": "GRAPHICS_OPM_PARAMETER_ARRAY_TOO_SMALL"},{"file": 47,"line": 3345,"col": 4,"docs": " The GDI display device passed to this function does not have any active protected outputs.","name": "GRAPHICS_OPM_NO_PROTECTED_OUTPUTS_EXIST"},{"file": 47,"line": 3347,"col": 4,"docs": " The PVP cannot find an actual GDI display device that corresponds to the passed-in GDI display device name.","name": "GRAPHICS_PVP_NO_DISPLAY_DEVICE_CORRESPONDS_TO_NAME"},{"file": 47,"line": 3349,"col": 4,"docs": " This function failed because the GDI display device passed to it was not attached to the Windows desktop.","name": "GRAPHICS_PVP_DISPLAY_DEVICE_NOT_ATTACHED_TO_DESKTOP"},{"file": 47,"line": 3351,"col": 4,"docs": " The PVP does not support mirroring display devices because they do not have any protected outputs.","name": "GRAPHICS_PVP_MIRRORING_DEVICES_NOT_SUPPORTED"},{"file": 47,"line": 3354,"col": 4,"docs": " The function failed because an invalid pointer parameter was passed to it. A pointer parameter is invalid if it is null, is not correctly aligned, or it points to an invalid address or a kernel mode address.","name": "GRAPHICS_OPM_INVALID_POINTER"},{"file": 47,"line": 3356,"col": 4,"docs": " An internal error caused an operation to fail.","name": "GRAPHICS_OPM_INTERNAL_ERROR"},{"file": 47,"line": 3358,"col": 4,"docs": " The function failed because the caller passed in an invalid OPM user-mode handle.","name": "GRAPHICS_OPM_INVALID_HANDLE"},{"file": 47,"line": 3360,"col": 4,"docs": " This function failed because the GDI device passed to it did not have any monitors associated with it.","name": "GRAPHICS_PVP_NO_MONITORS_CORRESPOND_TO_DISPLAY_DEVICE"},{"file": 47,"line": 3362,"col": 4,"docs": " A certificate could not be returned because the certificate buffer passed to the function was too small.","name": "GRAPHICS_PVP_INVALID_CERTIFICATE_LENGTH"},{"file": 47,"line": 3364,"col": 4,"docs": " DxgkDdiOpmCreateProtectedOutput() could not create a protected output because the video present yarget is in spanning mode.","name": "GRAPHICS_OPM_SPANNING_MODE_ENABLED"},{"file": 47,"line": 3366,"col": 4,"docs": " DxgkDdiOpmCreateProtectedOutput() could not create a protected output because the video present target is in theater mode.","name": "GRAPHICS_OPM_THEATER_MODE_ENABLED"},{"file": 47,"line": 3368,"col": 4,"docs": " The function call failed because the display adapter's hardware functionality scan (HFS) failed to validate the graphics hardware.","name": "GRAPHICS_PVP_HFS_FAILED"},{"file": 47,"line": 3370,"col": 4,"docs": " The HDCP SRM passed to this function did not comply with section 5 of the HDCP 1.1 specification.","name": "GRAPHICS_OPM_INVALID_SRM"},{"file": 47,"line": 3372,"col": 4,"docs": " The protected output cannot enable the HDCP system because it does not support it.","name": "GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_HDCP"},{"file": 47,"line": 3374,"col": 4,"docs": " The protected output cannot enable analog copy protection because it does not support it.","name": "GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_ACP"},{"file": 47,"line": 3376,"col": 4,"docs": " The protected output cannot enable the CGMS-A protection technology because it does not support it.","name": "GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_CGMSA"},{"file": 47,"line": 3378,"col": 4,"docs": " DxgkDdiOPMGetInformation() cannot return the version of the SRM being used because the application never successfully passed an SRM to the protected output.","name": "GRAPHICS_OPM_HDCP_SRM_NEVER_SET"},{"file": 47,"line": 3380,"col": 4,"docs": " DxgkDdiOPMConfigureProtectedOutput() cannot enable the specified output protection technology because the output's screen resolution is too high.","name": "GRAPHICS_OPM_RESOLUTION_TOO_HIGH"},{"file": 47,"line": 3382,"col": 4,"docs": " DxgkDdiOPMConfigureProtectedOutput() cannot enable HDCP because other physical outputs are using the display adapter's HDCP hardware.","name": "GRAPHICS_OPM_ALL_HDCP_HARDWARE_ALREADY_IN_USE"},{"file": 47,"line": 3385,"col": 4,"docs": " The operating system asynchronously destroyed this OPM-protected output because the operating system state changed. This error typically occurs because the monitor PDO associated with this protected output was removed or stopped, the protected output's session became a nonconsole session, or the protected output's desktop became inactive.","name": "GRAPHICS_OPM_PROTECTED_OUTPUT_NO_LONGER_EXISTS"},{"file": 47,"line": 3388,"col": 4,"docs": " OPM functions cannot be called when a session is changing its type. Three types of sessions currently exist: console, disconnected, and remote (RDP or ICA).","name": "GRAPHICS_OPM_SESSION_TYPE_CHANGE_IN_PROGRESS"},{"file": 47,"line": 3394,"col": 4,"docs": " The DxgkDdiOPMGetCOPPCompatibleInformation, DxgkDdiOPMGetInformation, or DxgkDdiOPMConfigureProtectedOutput function failed. This error is returned only if a protected output has OPM semantics. DxgkDdiOPMGetCOPPCompatibleInformation always returns this error if a protected output has OPM semantics. DxgkDdiOPMGetInformation returns this error code if the caller requested COPP-specific information. DxgkDdiOPMConfigureProtectedOutput returns this error when the caller tries to use a COPP-specific command.","name": "GRAPHICS_OPM_PROTECTED_OUTPUT_DOES_NOT_HAVE_COPP_SEMANTICS"},{"file": 47,"line": 3396,"col": 4,"docs": " The DxgkDdiOPMGetInformation and DxgkDdiOPMGetCOPPCompatibleInformation functions return this error code if the passed-in sequence number is not the expected sequence number or the passed-in OMAC value is invalid.","name": "GRAPHICS_OPM_INVALID_INFORMATION_REQUEST"},{"file": 47,"line": 3398,"col": 4,"docs": " The function failed because an unexpected error occurred inside a display driver.","name": "GRAPHICS_OPM_DRIVER_INTERNAL_ERROR"},{"file": 47,"line": 3404,"col": 4,"docs": " The DxgkDdiOPMGetCOPPCompatibleInformation, DxgkDdiOPMGetInformation, or DxgkDdiOPMConfigureProtectedOutput function failed. This error is returned only if a protected output has COPP semantics. DxgkDdiOPMGetCOPPCompatibleInformation returns this error code if the caller requested OPM-specific information. DxgkDdiOPMGetInformation always returns this error if a protected output has COPP semantics. DxgkDdiOPMConfigureProtectedOutput returns this error when the caller tries to use an OPM-specific command.","name": "GRAPHICS_OPM_PROTECTED_OUTPUT_DOES_NOT_HAVE_OPM_SEMANTICS"},{"file": 47,"line": 3406,"col": 4,"docs": " The DxgkDdiOPMGetCOPPCompatibleInformation and DxgkDdiOPMConfigureProtectedOutput functions return this error if the display driver does not support the DXGKMDT_OPM_GET_ACP_AND_CGMSA_SIGNALING and DXGKMDT_OPM_SET_ACP_AND_CGMSA_SIGNALING GUIDs.","name": "GRAPHICS_OPM_SIGNALING_NOT_SUPPORTED"},{"file": 47,"line": 3408,"col": 4,"docs": " The DxgkDdiOPMConfigureProtectedOutput function returns this error code if the passed-in sequence number is not the expected sequence number or the passed-in OMAC value is invalid.","name": "GRAPHICS_OPM_INVALID_CONFIGURATION_REQUEST"},{"file": 47,"line": 3410,"col": 4,"docs": " The monitor connected to the specified video output does not have an I2C bus.","name": "GRAPHICS_I2C_NOT_SUPPORTED"},{"file": 47,"line": 3412,"col": 4,"docs": " No device on the I2C bus has the specified address.","name": "GRAPHICS_I2C_DEVICE_DOES_NOT_EXIST"},{"file": 47,"line": 3414,"col": 4,"docs": " An error occurred while transmitting data to the device on the I2C bus.","name": "GRAPHICS_I2C_ERROR_TRANSMITTING_DATA"},{"file": 47,"line": 3416,"col": 4,"docs": " An error occurred while receiving data from the device on the I2C bus.","name": "GRAPHICS_I2C_ERROR_RECEIVING_DATA"},{"file": 47,"line": 3418,"col": 4,"docs": " The monitor does not support the specified VCP code.","name": "GRAPHICS_DDCCI_VCP_NOT_SUPPORTED"},{"file": 47,"line": 3420,"col": 4,"docs": " The data received from the monitor is invalid.","name": "GRAPHICS_DDCCI_INVALID_DATA"},{"file": 47,"line": 3422,"col": 4,"docs": " A function call failed because a monitor returned an invalid timing status byte when the operating system used the DDC/CI get timing report and timing message command to get a timing report from a monitor.","name": "GRAPHICS_DDCCI_MONITOR_RETURNED_INVALID_TIMING_STATUS_BYTE"},{"file": 47,"line": 3424,"col": 4,"docs": " A monitor returned a DDC/CI capabilities string that did not comply with the ACCESS.bus 3.0, DDC/CI 1.1, or MCCS 2 Revision 1 specification.","name": "GRAPHICS_DDCCI_INVALID_CAPABILITIES_STRING"},{"file": 47,"line": 3426,"col": 4,"docs": " An internal error caused an operation to fail.","name": "GRAPHICS_MCA_INTERNAL_ERROR"},{"file": 47,"line": 3428,"col": 4,"docs": " An operation failed because a DDC/CI message had an invalid value in its command field.","name": "GRAPHICS_DDCCI_INVALID_MESSAGE_COMMAND"},{"file": 47,"line": 3430,"col": 4,"docs": " This error occurred because a DDC/CI message had an invalid value in its length field.","name": "GRAPHICS_DDCCI_INVALID_MESSAGE_LENGTH"},{"file": 47,"line": 3433,"col": 4,"docs": " This error occurred because the value in a DDC/CI message's checksum field did not match the message's computed checksum value. This error implies that the data was corrupted while it was being transmitted from a monitor to a computer.","name": "GRAPHICS_DDCCI_INVALID_MESSAGE_CHECKSUM"},{"file": 47,"line": 3435,"col": 4,"docs": " This function failed because an invalid monitor handle was passed to it.","name": "GRAPHICS_INVALID_PHYSICAL_MONITOR_HANDLE"},{"file": 47,"line": 3439,"col": 4,"docs": " The operating system asynchronously destroyed the monitor that corresponds to this handle because the operating system's state changed. This error typically occurs because the monitor PDO associated with this handle was removed or stopped, or a display mode change occurred. A display mode change occurs when Windows sends a WM_DISPLAYCHANGE message to applications.","name": "GRAPHICS_MONITOR_NO_LONGER_EXISTS"},{"file": 47,"line": 3442,"col": 4,"docs": " This function can be used only if a program is running in the local console session. It cannot be used if a program is running on a remote desktop session or on a terminal server session.","name": "GRAPHICS_ONLY_CONSOLE_SESSION_SUPPORTED"},{"file": 47,"line": 3444,"col": 4,"docs": " This function cannot find an actual GDI display device that corresponds to the specified GDI display device name.","name": "GRAPHICS_NO_DISPLAY_DEVICE_CORRESPONDS_TO_NAME"},{"file": 47,"line": 3446,"col": 4,"docs": " The function failed because the specified GDI display device was not attached to the Windows desktop.","name": "GRAPHICS_DISPLAY_DEVICE_NOT_ATTACHED_TO_DESKTOP"},{"file": 47,"line": 3448,"col": 4,"docs": " This function does not support GDI mirroring display devices because GDI mirroring display devices do not have any physical monitors associated with them.","name": "GRAPHICS_MIRRORING_DEVICES_NOT_SUPPORTED"},{"file": 47,"line": 3451,"col": 4,"docs": " The function failed because an invalid pointer parameter was passed to it. A pointer parameter is invalid if it is null, is not correctly aligned, or points to an invalid address or to a kernel mode address.","name": "GRAPHICS_INVALID_POINTER"},{"file": 47,"line": 3453,"col": 4,"docs": " This function failed because the GDI device passed to it did not have a monitor associated with it.","name": "GRAPHICS_NO_MONITORS_CORRESPOND_TO_DISPLAY_DEVICE"},{"file": 47,"line": 3455,"col": 4,"docs": " An array passed to the function cannot hold all of the data that the function must copy into the array.","name": "GRAPHICS_PARAMETER_ARRAY_TOO_SMALL"},{"file": 47,"line": 3457,"col": 4,"docs": " An internal error caused an operation to fail.","name": "GRAPHICS_INTERNAL_ERROR"},{"file": 47,"line": 3461,"col": 4,"docs": " The function failed because the current session is changing its type. This function cannot be called when the current session is changing its type. Three types of sessions currently exist: console, disconnected, and remote (RDP or ICA).","name": "GRAPHICS_SESSION_TYPE_CHANGE_IN_PROGRESS"},{"file": 47,"line": 3463,"col": 4,"docs": " The volume must be unlocked before it can be used.","name": "FVE_LOCKED_VOLUME"},{"file": 47,"line": 3465,"col": 4,"docs": " The volume is fully decrypted and no key is available.","name": "FVE_NOT_ENCRYPTED"},{"file": 47,"line": 3467,"col": 4,"docs": " The control block for the encrypted volume is not valid.","name": "FVE_BAD_INFORMATION"},{"file": 47,"line": 3469,"col": 4,"docs": " Not enough free space remains on the volume to allow encryption.","name": "FVE_TOO_SMALL"},{"file": 47,"line": 3471,"col": 4,"docs": " The partition cannot be encrypted because the file system is not supported.","name": "FVE_FAILED_WRONG_FS"},{"file": 47,"line": 3473,"col": 4,"docs": " The file system is inconsistent. Run the Check Disk utility.","name": "FVE_FAILED_BAD_FS"},{"file": 47,"line": 3475,"col": 4,"docs": " The file system does not extend to the end of the volume.","name": "FVE_FS_NOT_EXTENDED"},{"file": 47,"line": 3477,"col": 4,"docs": " This operation cannot be performed while a file system is mounted on the volume.","name": "FVE_FS_MOUNTED"},{"file": 47,"line": 3479,"col": 4,"docs": " BitLocker Drive Encryption is not included with this version of Windows.","name": "FVE_NO_LICENSE"},{"file": 47,"line": 3481,"col": 4,"docs": " The requested action was denied by the FVE control engine.","name": "FVE_ACTION_NOT_ALLOWED"},{"file": 47,"line": 3483,"col": 4,"docs": " The data supplied is malformed.","name": "FVE_BAD_DATA"},{"file": 47,"line": 3485,"col": 4,"docs": " The volume is not bound to the system.","name": "FVE_VOLUME_NOT_BOUND"},{"file": 47,"line": 3487,"col": 4,"docs": " The volume specified is not a data volume.","name": "FVE_NOT_DATA_VOLUME"},{"file": 47,"line": 3489,"col": 4,"docs": " A read operation failed while converting the volume.","name": "FVE_CONV_READ_ERROR"},{"file": 47,"line": 3491,"col": 4,"docs": " A write operation failed while converting the volume.","name": "FVE_CONV_WRITE_ERROR"},{"file": 47,"line": 3493,"col": 4,"docs": " The control block for the encrypted volume was updated by another thread. Try again.","name": "FVE_OVERLAPPED_UPDATE"},{"file": 47,"line": 3495,"col": 4,"docs": " The volume encryption algorithm cannot be used on this sector size.","name": "FVE_FAILED_SECTOR_SIZE"},{"file": 47,"line": 3497,"col": 4,"docs": " BitLocker recovery authentication failed.","name": "FVE_FAILED_AUTHENTICATION"},{"file": 47,"line": 3499,"col": 4,"docs": " The volume specified is not the boot operating system volume.","name": "FVE_NOT_OS_VOLUME"},{"file": 47,"line": 3501,"col": 4,"docs": " The BitLocker startup key or recovery password could not be read from external media.","name": "FVE_KEYFILE_NOT_FOUND"},{"file": 47,"line": 3503,"col": 4,"docs": " The BitLocker startup key or recovery password file is corrupt or invalid.","name": "FVE_KEYFILE_INVALID"},{"file": 47,"line": 3505,"col": 4,"docs": " The BitLocker encryption key could not be obtained from the startup key or the recovery password.","name": "FVE_KEYFILE_NO_VMK"},{"file": 47,"line": 3507,"col": 4,"docs": " The TPM is disabled.","name": "FVE_TPM_DISABLED"},{"file": 47,"line": 3509,"col": 4,"docs": " The authorization data for the SRK of the TPM is not zero.","name": "FVE_TPM_SRK_AUTH_NOT_ZERO"},{"file": 47,"line": 3511,"col": 4,"docs": " The system boot information changed or the TPM locked out access to BitLocker encryption keys until the computer is restarted.","name": "FVE_TPM_INVALID_PCR"},{"file": 47,"line": 3513,"col": 4,"docs": " The BitLocker encryption key could not be obtained from the TPM.","name": "FVE_TPM_NO_VMK"},{"file": 47,"line": 3515,"col": 4,"docs": " The BitLocker encryption key could not be obtained from the TPM and PIN.","name": "FVE_PIN_INVALID"},{"file": 47,"line": 3517,"col": 4,"docs": " A boot application hash does not match the hash computed when BitLocker was turned on.","name": "FVE_AUTH_INVALID_APPLICATION"},{"file": 47,"line": 3519,"col": 4,"docs": " The Boot Configuration Data (BCD) settings are not supported or have changed because BitLocker was enabled.","name": "FVE_AUTH_INVALID_CONFIG"},{"file": 47,"line": 3521,"col": 4,"docs": " Boot debugging is enabled. Run Windows Boot Configuration Data Store Editor (bcdedit.exe) to turn it off.","name": "FVE_DEBUGGER_ENABLED"},{"file": 47,"line": 3523,"col": 4,"docs": " The BitLocker encryption key could not be obtained.","name": "FVE_DRY_RUN_FAILED"},{"file": 47,"line": 3525,"col": 4,"docs": " The metadata disk region pointer is incorrect.","name": "FVE_BAD_METADATA_POINTER"},{"file": 47,"line": 3527,"col": 4,"docs": " The backup copy of the metadata is out of date.","name": "FVE_OLD_METADATA_COPY"},{"file": 47,"line": 3529,"col": 4,"docs": " No action was taken because a system restart is required.","name": "FVE_REBOOT_REQUIRED"},{"file": 47,"line": 3531,"col": 4,"docs": " No action was taken because BitLocker Drive Encryption is in RAW access mode.","name": "FVE_RAW_ACCESS"},{"file": 47,"line": 3533,"col": 4,"docs": " BitLocker Drive Encryption cannot enter RAW access mode for this volume.","name": "FVE_RAW_BLOCKED"},{"file": 47,"line": 3535,"col": 4,"docs": " This feature of BitLocker Drive Encryption is not included with this version of Windows.","name": "FVE_NO_FEATURE_LICENSE"},{"file": 47,"line": 3537,"col": 4,"docs": " Group policy does not permit turning off BitLocker Drive Encryption on roaming data volumes.","name": "FVE_POLICY_USER_DISABLE_RDV_NOT_ALLOWED"},{"file": 47,"line": 3540,"col": 4,"docs": " Bitlocker Drive Encryption failed to recover from aborted conversion. This could be due to either all conversion logs being corrupted or the media being write-protected.","name": "FVE_CONV_RECOVERY_FAILED"},{"file": 47,"line": 3542,"col": 4,"docs": " The requested virtualization size is too big.","name": "FVE_VIRTUALIZED_SPACE_TOO_BIG"},{"file": 47,"line": 3544,"col": 4,"docs": " The drive is too small to be protected using BitLocker Drive Encryption.","name": "FVE_VOLUME_TOO_SMALL"},{"file": 47,"line": 3546,"col": 4,"docs": " The callout does not exist.","name": "FWP_CALLOUT_NOT_FOUND"},{"file": 47,"line": 3548,"col": 4,"docs": " The filter condition does not exist.","name": "FWP_CONDITION_NOT_FOUND"},{"file": 47,"line": 3550,"col": 4,"docs": " The filter does not exist.","name": "FWP_FILTER_NOT_FOUND"},{"file": 47,"line": 3552,"col": 4,"docs": " The layer does not exist.","name": "FWP_LAYER_NOT_FOUND"},{"file": 47,"line": 3554,"col": 4,"docs": " The provider does not exist.","name": "FWP_PROVIDER_NOT_FOUND"},{"file": 47,"line": 3556,"col": 4,"docs": " The provider context does not exist.","name": "FWP_PROVIDER_CONTEXT_NOT_FOUND"},{"file": 47,"line": 3558,"col": 4,"docs": " The sublayer does not exist.","name": "FWP_SUBLAYER_NOT_FOUND"},{"file": 47,"line": 3560,"col": 4,"docs": " The object does not exist.","name": "FWP_NOT_FOUND"},{"file": 47,"line": 3562,"col": 4,"docs": " An object with that GUID or LUID already exists.","name": "FWP_ALREADY_EXISTS"},{"file": 47,"line": 3564,"col": 4,"docs": " The object is referenced by other objects and cannot be deleted.","name": "FWP_IN_USE"},{"file": 47,"line": 3566,"col": 4,"docs": " The call is not allowed from within a dynamic session.","name": "FWP_DYNAMIC_SESSION_IN_PROGRESS"},{"file": 47,"line": 3568,"col": 4,"docs": " The call was made from the wrong session and cannot be completed.","name": "FWP_WRONG_SESSION"},{"file": 47,"line": 3570,"col": 4,"docs": " The call must be made from within an explicit transaction.","name": "FWP_NO_TXN_IN_PROGRESS"},{"file": 47,"line": 3572,"col": 4,"docs": " The call is not allowed from within an explicit transaction.","name": "FWP_TXN_IN_PROGRESS"},{"file": 47,"line": 3574,"col": 4,"docs": " The explicit transaction has been forcibly canceled.","name": "FWP_TXN_ABORTED"},{"file": 47,"line": 3576,"col": 4,"docs": " The session has been canceled.","name": "FWP_SESSION_ABORTED"},{"file": 47,"line": 3578,"col": 4,"docs": " The call is not allowed from within a read-only transaction.","name": "FWP_INCOMPATIBLE_TXN"},{"file": 47,"line": 3580,"col": 4,"docs": " The call timed out while waiting to acquire the transaction lock.","name": "FWP_TIMEOUT"},{"file": 47,"line": 3582,"col": 4,"docs": " The collection of network diagnostic events is disabled.","name": "FWP_NET_EVENTS_DISABLED"},{"file": 47,"line": 3584,"col": 4,"docs": " The operation is not supported by the specified layer.","name": "FWP_INCOMPATIBLE_LAYER"},{"file": 47,"line": 3586,"col": 4,"docs": " The call is allowed for kernel-mode callers only.","name": "FWP_KM_CLIENTS_ONLY"},{"file": 47,"line": 3588,"col": 4,"docs": " The call tried to associate two objects with incompatible lifetimes.","name": "FWP_LIFETIME_MISMATCH"},{"file": 47,"line": 3590,"col": 4,"docs": " The object is built-in and cannot be deleted.","name": "FWP_BUILTIN_OBJECT"},{"file": 47,"line": 3592,"col": 4,"docs": " The maximum number of callouts has been reached.","name": "FWP_TOO_MANY_CALLOUTS"},{"file": 47,"line": 3594,"col": 4,"docs": " A notification could not be delivered because a message queue has reached maximum capacity.","name": "FWP_NOTIFICATION_DROPPED"},{"file": 47,"line": 3596,"col": 4,"docs": " The traffic parameters do not match those for the security association context.","name": "FWP_TRAFFIC_MISMATCH"},{"file": 47,"line": 3598,"col": 4,"docs": " The call is not allowed for the current security association state.","name": "FWP_INCOMPATIBLE_SA_STATE"},{"file": 47,"line": 3600,"col": 4,"docs": " A required pointer is null.","name": "FWP_NULL_POINTER"},{"file": 47,"line": 3602,"col": 4,"docs": " An enumerator is not valid.","name": "FWP_INVALID_ENUMERATOR"},{"file": 47,"line": 3604,"col": 4,"docs": " The flags field contains an invalid value.","name": "FWP_INVALID_FLAGS"},{"file": 47,"line": 3606,"col": 4,"docs": " A network mask is not valid.","name": "FWP_INVALID_NET_MASK"},{"file": 47,"line": 3608,"col": 4,"docs": " An FWP_RANGE is not valid.","name": "FWP_INVALID_RANGE"},{"file": 47,"line": 3610,"col": 4,"docs": " The time interval is not valid.","name": "FWP_INVALID_INTERVAL"},{"file": 47,"line": 3612,"col": 4,"docs": " An array that must contain at least one element has a zero length.","name": "FWP_ZERO_LENGTH_ARRAY"},{"file": 47,"line": 3614,"col": 4,"docs": " The displayData.name field cannot be null.","name": "FWP_NULL_DISPLAY_NAME"},{"file": 47,"line": 3616,"col": 4,"docs": " The action type is not one of the allowed action types for a filter.","name": "FWP_INVALID_ACTION_TYPE"},{"file": 47,"line": 3618,"col": 4,"docs": " The filter weight is not valid.","name": "FWP_INVALID_WEIGHT"},{"file": 47,"line": 3620,"col": 4,"docs": " A filter condition contains a match type that is not compatible with the operands.","name": "FWP_MATCH_TYPE_MISMATCH"},{"file": 47,"line": 3622,"col": 4,"docs": " An FWP_VALUE or FWPM_CONDITION_VALUE is of the wrong type.","name": "FWP_TYPE_MISMATCH"},{"file": 47,"line": 3624,"col": 4,"docs": " An integer value is outside the allowed range.","name": "FWP_OUT_OF_BOUNDS"},{"file": 47,"line": 3626,"col": 4,"docs": " A reserved field is nonzero.","name": "FWP_RESERVED"},{"file": 47,"line": 3628,"col": 4,"docs": " A filter cannot contain multiple conditions operating on a single field.","name": "FWP_DUPLICATE_CONDITION"},{"file": 47,"line": 3630,"col": 4,"docs": " A policy cannot contain the same keying module more than once.","name": "FWP_DUPLICATE_KEYMOD"},{"file": 47,"line": 3632,"col": 4,"docs": " The action type is not compatible with the layer.","name": "FWP_ACTION_INCOMPATIBLE_WITH_LAYER"},{"file": 47,"line": 3634,"col": 4,"docs": " The action type is not compatible with the sublayer.","name": "FWP_ACTION_INCOMPATIBLE_WITH_SUBLAYER"},{"file": 47,"line": 3636,"col": 4,"docs": " The raw context or the provider context is not compatible with the layer.","name": "FWP_CONTEXT_INCOMPATIBLE_WITH_LAYER"},{"file": 47,"line": 3638,"col": 4,"docs": " The raw context or the provider context is not compatible with the callout.","name": "FWP_CONTEXT_INCOMPATIBLE_WITH_CALLOUT"},{"file": 47,"line": 3640,"col": 4,"docs": " The authentication method is not compatible with the policy type.","name": "FWP_INCOMPATIBLE_AUTH_METHOD"},{"file": 47,"line": 3642,"col": 4,"docs": " The Diffie-Hellman group is not compatible with the policy type.","name": "FWP_INCOMPATIBLE_DH_GROUP"},{"file": 47,"line": 3644,"col": 4,"docs": " An IKE policy cannot contain an Extended Mode policy.","name": "FWP_EM_NOT_SUPPORTED"},{"file": 47,"line": 3646,"col": 4,"docs": " The enumeration template or subscription will never match any objects.","name": "FWP_NEVER_MATCH"},{"file": 47,"line": 3648,"col": 4,"docs": " The provider context is of the wrong type.","name": "FWP_PROVIDER_CONTEXT_MISMATCH"},{"file": 47,"line": 3650,"col": 4,"docs": " The parameter is incorrect.","name": "FWP_INVALID_PARAMETER"},{"file": 47,"line": 3652,"col": 4,"docs": " The maximum number of sublayers has been reached.","name": "FWP_TOO_MANY_SUBLAYERS"},{"file": 47,"line": 3654,"col": 4,"docs": " The notification function for a callout returned an error.","name": "FWP_CALLOUT_NOTIFICATION_FAILED"},{"file": 47,"line": 3656,"col": 4,"docs": " The IPsec authentication configuration is not compatible with the authentication type.","name": "FWP_INCOMPATIBLE_AUTH_CONFIG"},{"file": 47,"line": 3658,"col": 4,"docs": " The IPsec cipher configuration is not compatible with the cipher type.","name": "FWP_INCOMPATIBLE_CIPHER_CONFIG"},{"file": 47,"line": 3660,"col": 4,"docs": " A policy cannot contain the same auth method more than once.","name": "FWP_DUPLICATE_AUTH_METHOD"},{"file": 47,"line": 3662,"col": 4,"docs": " The TCP/IP stack is not ready.","name": "FWP_TCPIP_NOT_READY"},{"file": 47,"line": 3664,"col": 4,"docs": " The injection handle is being closed by another thread.","name": "FWP_INJECT_HANDLE_CLOSING"},{"file": 47,"line": 3666,"col": 4,"docs": " The injection handle is stale.","name": "FWP_INJECT_HANDLE_STALE"},{"file": 47,"line": 3668,"col": 4,"docs": " The classify cannot be pended.","name": "FWP_CANNOT_PEND"},{"file": 47,"line": 3670,"col": 4,"docs": " The binding to the network interface is being closed.","name": "NDIS_CLOSING"},{"file": 47,"line": 3672,"col": 4,"docs": " An invalid version was specified.","name": "NDIS_BAD_VERSION"},{"file": 47,"line": 3674,"col": 4,"docs": " An invalid characteristics table was used.","name": "NDIS_BAD_CHARACTERISTICS"},{"file": 47,"line": 3676,"col": 4,"docs": " Failed to find the network interface or the network interface is not ready.","name": "NDIS_ADAPTER_NOT_FOUND"},{"file": 47,"line": 3678,"col": 4,"docs": " Failed to open the network interface.","name": "NDIS_OPEN_FAILED"},{"file": 47,"line": 3680,"col": 4,"docs": " The network interface has encountered an internal unrecoverable failure.","name": "NDIS_DEVICE_FAILED"},{"file": 47,"line": 3682,"col": 4,"docs": " The multicast list on the network interface is full.","name": "NDIS_MULTICAST_FULL"},{"file": 47,"line": 3684,"col": 4,"docs": " An attempt was made to add a duplicate multicast address to the list.","name": "NDIS_MULTICAST_EXISTS"},{"file": 47,"line": 3686,"col": 4,"docs": " At attempt was made to remove a multicast address that was never added.","name": "NDIS_MULTICAST_NOT_FOUND"},{"file": 47,"line": 3688,"col": 4,"docs": " The network interface aborted the request.","name": "NDIS_REQUEST_ABORTED"},{"file": 47,"line": 3690,"col": 4,"docs": " The network interface cannot process the request because it is being reset.","name": "NDIS_RESET_IN_PROGRESS"},{"file": 47,"line": 3692,"col": 4,"docs": " An attempt was made to send an invalid packet on a network interface.","name": "NDIS_INVALID_PACKET"},{"file": 47,"line": 3694,"col": 4,"docs": " The specified request is not a valid operation for the target device.","name": "NDIS_INVALID_DEVICE_REQUEST"},{"file": 47,"line": 3696,"col": 4,"docs": " The network interface is not ready to complete this operation.","name": "NDIS_ADAPTER_NOT_READY"},{"file": 47,"line": 3698,"col": 4,"docs": " The length of the buffer submitted for this operation is not valid.","name": "NDIS_INVALID_LENGTH"},{"file": 47,"line": 3700,"col": 4,"docs": " The data used for this operation is not valid.","name": "NDIS_INVALID_DATA"},{"file": 47,"line": 3702,"col": 4,"docs": " The length of the submitted buffer for this operation is too small.","name": "NDIS_BUFFER_TOO_SHORT"},{"file": 47,"line": 3704,"col": 4,"docs": " The network interface does not support this object identifier.","name": "NDIS_INVALID_OID"},{"file": 47,"line": 3706,"col": 4,"docs": " The network interface has been removed.","name": "NDIS_ADAPTER_REMOVED"},{"file": 47,"line": 3708,"col": 4,"docs": " The network interface does not support this media type.","name": "NDIS_UNSUPPORTED_MEDIA"},{"file": 47,"line": 3710,"col": 4,"docs": " An attempt was made to remove a token ring group address that is in use by other components.","name": "NDIS_GROUP_ADDRESS_IN_USE"},{"file": 47,"line": 3712,"col": 4,"docs": " An attempt was made to map a file that cannot be found.","name": "NDIS_FILE_NOT_FOUND"},{"file": 47,"line": 3714,"col": 4,"docs": " An error occurred while NDIS tried to map the file.","name": "NDIS_ERROR_READING_FILE"},{"file": 47,"line": 3716,"col": 4,"docs": " An attempt was made to map a file that is already mapped.","name": "NDIS_ALREADY_MAPPED"},{"file": 47,"line": 3718,"col": 4,"docs": " An attempt to allocate a hardware resource failed because the resource is used by another component.","name": "NDIS_RESOURCE_CONFLICT"},{"file": 47,"line": 3720,"col": 4,"docs": " The I/O operation failed because the network media is disconnected or the wireless access point is out of range.","name": "NDIS_MEDIA_DISCONNECTED"},{"file": 47,"line": 3722,"col": 4,"docs": " The network address used in the request is invalid.","name": "NDIS_INVALID_ADDRESS"},{"file": 47,"line": 3724,"col": 4,"docs": " The offload operation on the network interface has been paused.","name": "NDIS_PAUSED"},{"file": 47,"line": 3726,"col": 4,"docs": " The network interface was not found.","name": "NDIS_INTERFACE_NOT_FOUND"},{"file": 47,"line": 3728,"col": 4,"docs": " The revision number specified in the structure is not supported.","name": "NDIS_UNSUPPORTED_REVISION"},{"file": 47,"line": 3730,"col": 4,"docs": " The specified port does not exist on this network interface.","name": "NDIS_INVALID_PORT"},{"file": 47,"line": 3732,"col": 4,"docs": " The current state of the specified port on this network interface does not support the requested operation.","name": "NDIS_INVALID_PORT_STATE"},{"file": 47,"line": 3734,"col": 4,"docs": " The miniport adapter is in a lower power state.","name": "NDIS_LOW_POWER_STATE"},{"file": 47,"line": 3736,"col": 4,"docs": " The network interface does not support this request.","name": "NDIS_NOT_SUPPORTED"},{"file": 47,"line": 3738,"col": 4,"docs": " The TCP connection is not offloadable because of a local policy setting.","name": "NDIS_OFFLOAD_POLICY"},{"file": 47,"line": 3740,"col": 4,"docs": " The TCP connection is not offloadable by the Chimney offload target.","name": "NDIS_OFFLOAD_CONNECTION_REJECTED"},{"file": 47,"line": 3742,"col": 4,"docs": " The IP Path object is not in an offloadable state.","name": "NDIS_OFFLOAD_PATH_REJECTED"},{"file": 47,"line": 3744,"col": 4,"docs": " The wireless LAN interface is in auto-configuration mode and does not support the requested parameter change operation.","name": "NDIS_DOT11_AUTO_CONFIG_ENABLED"},{"file": 47,"line": 3746,"col": 4,"docs": " The wireless LAN interface is busy and cannot perform the requested operation.","name": "NDIS_DOT11_MEDIA_IN_USE"},{"file": 47,"line": 3748,"col": 4,"docs": " The wireless LAN interface is power down and does not support the requested operation.","name": "NDIS_DOT11_POWER_STATE_INVALID"},{"file": 47,"line": 3750,"col": 4,"docs": " The list of wake on LAN patterns is full.","name": "NDIS_PM_WOL_PATTERN_LIST_FULL"},{"file": 47,"line": 3752,"col": 4,"docs": " The list of low power protocol offloads is full.","name": "NDIS_PM_PROTOCOL_OFFLOAD_LIST_FULL"},{"file": 47,"line": 3754,"col": 4,"docs": " The SPI in the packet does not match a valid IPsec SA.","name": "IPSEC_BAD_SPI"},{"file": 47,"line": 3756,"col": 4,"docs": " The packet was received on an IPsec SA whose lifetime has expired.","name": "IPSEC_SA_LIFETIME_EXPIRED"},{"file": 47,"line": 3758,"col": 4,"docs": " The packet was received on an IPsec SA that does not match the packet characteristics.","name": "IPSEC_WRONG_SA"},{"file": 47,"line": 3760,"col": 4,"docs": " The packet sequence number replay check failed.","name": "IPSEC_REPLAY_CHECK_FAILED"},{"file": 47,"line": 3762,"col": 4,"docs": " The IPsec header and/or trailer in the packet is invalid.","name": "IPSEC_INVALID_PACKET"},{"file": 47,"line": 3764,"col": 4,"docs": " The IPsec integrity check failed.","name": "IPSEC_INTEGRITY_CHECK_FAILED"},{"file": 47,"line": 3766,"col": 4,"docs": " IPsec dropped a clear text packet.","name": "IPSEC_CLEAR_TEXT_DROP"},{"file": 47,"line": 3768,"col": 4,"docs": " IPsec dropped an incoming ESP packet in authenticated firewall mode.  This drop is benign.","name": "IPSEC_AUTH_FIREWALL_DROP"},{"file": 47,"line": 3770,"col": 4,"docs": " IPsec dropped a packet due to DOS throttle.","name": "IPSEC_THROTTLE_DROP"},{"file": 47,"line": 3772,"col": 4,"docs": " IPsec Dos Protection matched an explicit block rule.","name": "IPSEC_DOSP_BLOCK"},{"file": 47,"line": 3774,"col": 4,"docs": " IPsec Dos Protection received an IPsec specific multicast packet which is not allowed.","name": "IPSEC_DOSP_RECEIVED_MULTICAST"},{"file": 47,"line": 3776,"col": 4,"docs": " IPsec Dos Protection received an incorrectly formatted packet.","name": "IPSEC_DOSP_INVALID_PACKET"},{"file": 47,"line": 3778,"col": 4,"docs": " IPsec Dos Protection failed to lookup state.","name": "IPSEC_DOSP_STATE_LOOKUP_FAILED"},{"file": 47,"line": 3780,"col": 4,"docs": " IPsec Dos Protection failed to create state because there are already maximum number of entries allowed by policy.","name": "IPSEC_DOSP_MAX_ENTRIES"},{"file": 47,"line": 3782,"col": 4,"docs": " IPsec Dos Protection received an IPsec negotiation packet for a keying module which is not allowed by policy.","name": "IPSEC_DOSP_KEYMOD_NOT_ALLOWED"},{"file": 47,"line": 3784,"col": 4,"docs": " IPsec Dos Protection failed to create per internal IP ratelimit queue because there is already maximum number of queues allowed by policy.","name": "IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES"},{"file": 47,"line": 3786,"col": 4,"docs": " The system does not support mirrored volumes.","name": "VOLMGR_MIRROR_NOT_SUPPORTED"},{"file": 47,"line": 3788,"col": 4,"docs": " The system does not support RAID-5 volumes.","name": "VOLMGR_RAID5_NOT_SUPPORTED"},{"file": 47,"line": 3790,"col": 4,"docs": " A virtual disk support provider for the specified file was not found.","name": "VIRTDISK_PROVIDER_NOT_FOUND"},{"file": 47,"line": 3792,"col": 4,"docs": " The specified disk is not a virtual disk.","name": "VIRTDISK_NOT_VIRTUAL_DISK"},{"file": 47,"line": 3795,"col": 4,"docs": " The chain of virtual hard disks is inaccessible. The process has not been granted access rights to the parent virtual hard disk for the differencing disk.","name": "VHD_PARENT_VHD_ACCESS_DENIED"},{"file": 47,"line": 3798,"col": 4,"docs": " The chain of virtual hard disks is corrupted. There is a mismatch in the virtual sizes of the parent virtual hard disk and differencing disk.","name": "VHD_CHILD_PARENT_SIZE_MISMATCH"},{"file": 47,"line": 3801,"col": 4,"docs": " The chain of virtual hard disks is corrupted. A differencing disk is indicated in its own parent chain.","name": "VHD_DIFFERENCING_CHAIN_CYCLE_DETECTED"},{"file": 47,"line": 3804,"col": 4,"docs": " The chain of virtual hard disks is inaccessible. There was an error opening a virtual hard disk further up the chain.","name": "VHD_DIFFERENCING_CHAIN_ERROR_IN_PARENT"},{"file": 47,"line": 3805,"col": 4,"name": "_"},{"file": 40,"line": 299,"col": 4,"name": "bytes"},{"file": 40,"line": 300,"col": 4,"name": "i"},{"file": 39,"line": 141,"col": 4,"docs": "if we used resolution's value when performing the  performance counter calc on windows/darwin, it would  be less precise","name": "frequency"},{"file": 39,"line": 146,"col": 4,"name": "resolution"},{"file": 39,"line": 147,"col": 4,"name": "start_time"},{"file": 48,"line": 38,"col": 4,"name": "seed"},{"file": 48,"line": 39,"col": 4,"name": "msg_len"},{"file": 38,"line": 54,"col": 4,"name": "Alpha"},{"file": 38,"line": 55,"col": 4,"name": "Hex"},{"file": 38,"line": 56,"col": 4,"name": "Space"},{"file": 38,"line": 57,"col": 4,"name": "Digit"},{"file": 38,"line": 58,"col": 4,"name": "Lower"},{"file": 38,"line": 59,"col": 4,"name": "Upper"},{"file": 38,"line": 62,"col": 4,"name": "Punct"},{"file": 38,"line": 63,"col": 4,"name": "Graph"},{"file": 5,"line": 71,"col": 28,"name": "None"},{"file": 5,"line": 71,"col": 34,"name": "Shared"},{"file": 5,"line": 71,"col": 42,"name": "Exclusive"},{"file": 26,"line": 1390,"col": 8,"name": "base_address"},{"file": 26,"line": 1391,"col": 8,"name": "debug_data"},{"file": 26,"line": 1392,"col": 8,"name": "coff"},{"file": 6,"line": 727,"col": 12,"name": "values"},{"file": 6,"line": 728,"col": 12,"name": "keys"},{"file": 6,"line": 729,"col": 12,"name": "capacity"},{"file": 21,"line": 266,"col": 4,"name": "Address"},{"file": 21,"line": 267,"col": 4,"name": "Block"},{"file": 21,"line": 268,"col": 4,"name": "Const"},{"file": 21,"line": 269,"col": 4,"name": "ExprLoc"},{"file": 21,"line": 270,"col": 4,"name": "Flag"},{"file": 21,"line": 271,"col": 4,"name": "SecOffset"},{"file": 21,"line": 272,"col": 4,"name": "Ref"},{"file": 21,"line": 273,"col": 4,"name": "RefAddr"},{"file": 21,"line": 274,"col": 4,"name": "String"},{"file": 21,"line": 275,"col": 4,"name": "StrPtr"},{"file": 25,"line": 384,"col": 4,"name": "name"},{"file": 25,"line": 385,"col": 4,"name": "misc"},{"file": 25,"line": 386,"col": 4,"name": "virtual_address"},{"file": 25,"line": 387,"col": 4,"name": "size_of_raw_data"},{"file": 25,"line": 388,"col": 4,"name": "pointer_to_raw_data"},{"file": 25,"line": 389,"col": 4,"name": "pointer_to_relocations"},{"file": 25,"line": 390,"col": 4,"name": "pointer_to_line_numbers"},{"file": 25,"line": 391,"col": 4,"name": "number_of_relocations"},{"file": 25,"line": 392,"col": 4,"name": "number_of_line_numbers"},{"file": 25,"line": 393,"col": 4,"name": "characteristics"},{"file": 3,"line": 13,"col": 8,"name": "tag"},{"file": 3,"line": 14,"col": 8,"name": "version_range"},{"file": 3,"line": 451,"col": 8,"name": "none"},{"file": 3,"line": 452,"col": 8,"name": "gnu"},{"file": 3,"line": 453,"col": 8,"name": "gnuabin32"},{"file": 3,"line": 454,"col": 8,"name": "gnuabi64"},{"file": 3,"line": 455,"col": 8,"name": "gnueabi"},{"file": 3,"line": 456,"col": 8,"name": "gnueabihf"},{"file": 3,"line": 457,"col": 8,"name": "gnux32"},{"file": 3,"line": 458,"col": 8,"name": "gnuilp32"},{"file": 3,"line": 459,"col": 8,"name": "code16"},{"file": 3,"line": 460,"col": 8,"name": "eabi"},{"file": 3,"line": 461,"col": 8,"name": "eabihf"},{"file": 3,"line": 462,"col": 8,"name": "android"},{"file": 3,"line": 463,"col": 8,"name": "musl"},{"file": 3,"line": 464,"col": 8,"name": "musleabi"},{"file": 3,"line": 465,"col": 8,"name": "musleabihf"},{"file": 3,"line": 466,"col": 8,"name": "muslx32"},{"file": 3,"line": 467,"col": 8,"name": "msvc"},{"file": 3,"line": 468,"col": 8,"name": "itanium"},{"file": 3,"line": 469,"col": 8,"name": "cygnus"},{"file": 3,"line": 470,"col": 8,"name": "coreclr"},{"file": 3,"line": 471,"col": 8,"name": "simulator"},{"file": 3,"line": 472,"col": 8,"name": "macabi"},{"file": 3,"line": 598,"col": 8,"docs": " Architecture","name": "arch"},{"file": 3,"line": 602,"col": 8,"docs": " The CPU model to target. It has a set of features which are overridden with the `features` field.","name": "model"},{"file": 3,"line": 605,"col": 8,"docs": " An explicit list of the entire CPU feature set. It may differ from the specific CPU model's features.","name": "features"},{"file": 12,"line": 226,"col": 8,"name": "signedness"},{"file": 12,"line": 227,"col": 8,"name": "bits"},{"file": 12,"line": 233,"col": 8,"name": "bits"},{"file": 12,"line": 239,"col": 8,"name": "size"},{"file": 12,"line": 240,"col": 8,"name": "is_const"},{"file": 12,"line": 241,"col": 8,"name": "is_volatile"},{"file": 12,"line": 242,"col": 8,"name": "alignment"},{"file": 12,"line": 243,"col": 8,"name": "address_space"},{"file": 12,"line": 244,"col": 8,"name": "child"},{"file": 12,"line": 245,"col": 8,"name": "is_allowzero"},{"file": 12,"line": 251,"col": 8,"docs": " This field is an optional type. The type of the sentinel is the element type of the pointer, which is the value of the `child` field in this struct. However there is no way to refer to that type here, so we use `anytype`.","name": "sentinel"},{"file": 12,"line": 266,"col": 8,"name": "len"},{"file": 12,"line": 267,"col": 8,"name": "child"},{"file": 12,"line": 273,"col": 8,"docs": " This field is an optional type. The type of the sentinel is the element type of the array, which is the value of the `child` field in this struct. However there is no way to refer to that type here, so we use `anytype`.","name": "sentinel"},{"file": 12,"line": 279,"col": 8,"name": "Auto"},{"file": 12,"line": 280,"col": 8,"name": "Extern"},{"file": 12,"line": 281,"col": 8,"name": "Packed"},{"file": 12,"line": 287,"col": 8,"name": "name"},{"file": 12,"line": 288,"col": 8,"name": "field_type"},{"file": 12,"line": 289,"col": 8,"name": "default_value"},{"file": 12,"line": 290,"col": 8,"name": "is_comptime"},{"file": 12,"line": 291,"col": 8,"name": "alignment"},{"file": 12,"line": 297,"col": 8,"name": "layout"},{"file": 12,"line": 298,"col": 8,"name": "fields"},{"file": 12,"line": 299,"col": 8,"name": "decls"},{"file": 12,"line": 300,"col": 8,"name": "is_tuple"},{"file": 12,"line": 306,"col": 8,"name": "child"},{"file": 12,"line": 312,"col": 8,"name": "error_set"},{"file": 12,"line": 313,"col": 8,"name": "payload"},{"file": 12,"line": 319,"col": 8,"name": "name"},{"file": 12,"line": 329,"col": 8,"name": "name"},{"file": 12,"line": 330,"col": 8,"name": "value"},{"file": 12,"line": 336,"col": 8,"name": "layout"},{"file": 12,"line": 337,"col": 8,"name": "tag_type"},{"file": 12,"line": 338,"col": 8,"name": "fields"},{"file": 12,"line": 339,"col": 8,"name": "decls"},{"file": 12,"line": 340,"col": 8,"name": "is_exhaustive"},{"file": 12,"line": 346,"col": 8,"name": "name"},{"file": 12,"line": 347,"col": 8,"name": "field_type"},{"file": 12,"line": 348,"col": 8,"name": "alignment"},{"file": 12,"line": 354,"col": 8,"name": "layout"},{"file": 12,"line": 355,"col": 8,"name": "tag_type"},{"file": 12,"line": 356,"col": 8,"name": "fields"},{"file": 12,"line": 357,"col": 8,"name": "decls"},{"file": 12,"line": 363,"col": 8,"name": "is_generic"},{"file": 12,"line": 364,"col": 8,"name": "is_noalias"},{"file": 12,"line": 365,"col": 8,"name": "arg_type"},{"file": 12,"line": 371,"col": 8,"name": "calling_convention"},{"file": 12,"line": 372,"col": 8,"name": "alignment"},{"file": 12,"line": 373,"col": 8,"name": "is_generic"},{"file": 12,"line": 374,"col": 8,"name": "is_var_args"},{"file": 12,"line": 375,"col": 8,"name": "return_type"},{"file": 12,"line": 376,"col": 8,"name": "args"},{"file": 12,"line": 382,"col": 8,"name": "decls"},{"file": 12,"line": 388,"col": 8,"name": "function"},{"file": 12,"line": 394,"col": 8,"name": "child"},{"file": 12,"line": 400,"col": 8,"name": "len"},{"file": 12,"line": 401,"col": 8,"name": "child"},{"file": 12,"line": 407,"col": 8,"name": "name"},{"file": 12,"line": 408,"col": 8,"name": "is_pub"},{"file": 12,"line": 409,"col": 8,"name": "data"},{"file": 16,"line": 167,"col": 12,"name": "prev"},{"file": 16,"line": 168,"col": 12,"name": "next"},{"file": 16,"line": 169,"col": 12,"name": "data"},{"file": 15,"line": 22,"col": 0,"name": "impl"},{"file": 18,"line": 1572,"col": 12,"name": "TickNode"},{"file": 18,"line": 1573,"col": 12,"name": "NoAction"},{"file": 18,"line": 1577,"col": 12,"name": "read"},{"file": 18,"line": 1578,"col": 12,"name": "readv"},{"file": 18,"line": 1579,"col": 12,"name": "write"},{"file": 18,"line": 1580,"col": 12,"name": "writev"},{"file": 18,"line": 1581,"col": 12,"name": "pwrite"},{"file": 18,"line": 1582,"col": 12,"name": "pwritev"},{"file": 18,"line": 1583,"col": 12,"name": "pread"},{"file": 18,"line": 1584,"col": 12,"name": "preadv"},{"file": 18,"line": 1585,"col": 12,"name": "open"},{"file": 18,"line": 1586,"col": 12,"name": "openat"},{"file": 18,"line": 1587,"col": 12,"name": "close"},{"file": 18,"line": 1588,"col": 12,"name": "faccessat"},{"file": 18,"line": 1591,"col": 12,"docs": " special - means the fs thread should exit","name": "end"},{"file": 16,"line": 20,"col": 12,"name": "next"},{"file": 16,"line": 21,"col": 12,"name": "data"},{"file": 19,"line": 18,"col": 12,"name": "next"},{"file": 19,"line": 19,"col": 12,"name": "data"},{"file": 18,"line": 43,"col": 8,"name": "id"},{"file": 18,"line": 44,"col": 8,"name": "handle"},{"file": 18,"line": 45,"col": 8,"name": "overlapped"},{"file": 22,"line": 34,"col": 0,"name": "impl"},{"file": 12,"line": 458,"col": 4,"name": "Exe"},{"file": 12,"line": 459,"col": 4,"name": "Lib"},{"file": 12,"line": 460,"col": 4,"name": "Obj"},{"file": 12,"line": 466,"col": 4,"name": "Static"},{"file": 12,"line": 467,"col": 4,"name": "Dynamic"},{"file": 12,"line": 148,"col": 4,"name": "Debug"},{"file": 12,"line": 149,"col": 4,"name": "ReleaseSafe"},{"file": 12,"line": 150,"col": 4,"name": "ReleaseFast"},{"file": 12,"line": 151,"col": 4,"name": "ReleaseSmall"},{"file": 42,"line": 19,"col": 0,"name": "impl"},{"file": 15,"line": 233,"col": 4,"name": "srwlock"},{"file": 28,"line": 14,"col": 4,"name": "Left"},{"file": 28,"line": 15,"col": 4,"name": "Center"},{"file": 28,"line": 16,"col": 4,"name": "Right"},{"file": 43,"line": 19,"col": 0,"docs": " Attempt to allocate at least `len` bytes aligned to `ptr_align`. If `len_align` is `0`, then the length returned MUST be exactly `len` bytes, otherwise, the length must be aligned to `len_align`. `len` must be greater than or equal to `len_align` and must be aligned by `len_align`. `ret_addr` is optionally provided as the first return address of the allocation call stack. If the value is `0` it means no return address has been provided.","name": "allocFn"},{"file": 43,"line": 41,"col": 0,"docs": " Attempt to expand or shrink memory in place. `buf.len` must equal the most recent length returned by `allocFn` or `resizeFn`. `buf_align` must equal the same value that was passed as the `ptr_align` parameter to the original `allocFn` call. Passing a `new_len` of 0 frees and invalidates the buffer such that it can no longer be passed to `resizeFn`. error.OutOfMemory can only be returned if `new_len` is greater than `buf.len`. If `buf` cannot be expanded to accomodate `new_len`, then the allocation MUST be unmodified and error.OutOfMemory MUST be returned. If `len_align` is `0`, then the length returned MUST be exactly `len` bytes, otherwise, the length must be aligned to `len_align`. Note that `len_align` does *not* provide a way to modify the alignment of a pointer. Rather it provides an API for accepting more bytes of memory from the allocator than requested. `new_len` must be greater than or equal to `len_align` and must be aligned by `len_align`. `ret_addr` is optionally provided as the first return address of the allocation call stack. If the value is `0` it means no return address has been provided.","name": "resizeFn"},{"file": 25,"line": 343,"col": 4,"name": "machine"},{"file": 25,"line": 344,"col": 4,"name": "number_of_sections"},{"file": 25,"line": 345,"col": 4,"name": "timedate_stamp"},{"file": 25,"line": 346,"col": 4,"name": "pointer_to_symbol_table"},{"file": 25,"line": 347,"col": 4,"name": "number_of_symbols"},{"file": 25,"line": 348,"col": 4,"name": "size_of_optional_header"},{"file": 25,"line": 349,"col": 4,"name": "characteristics"},{"file": 25,"line": 358,"col": 4,"name": "magic"},{"file": 25,"line": 359,"col": 4,"name": "data_directory"},{"file": 25,"line": 360,"col": 4,"name": "image_base"},{"file": 21,"line": 289,"col": 4,"name": "tag_id"},{"file": 21,"line": 290,"col": 4,"name": "has_children"},{"file": 21,"line": 291,"col": 4,"name": "attrs"},{"file": 21,"line": 279,"col": 4,"name": "payload"},{"file": 21,"line": 280,"col": 4,"name": "signed"},{"file": 20,"line": 482,"col": 4,"name": "in_file"},{"file": 20,"line": 483,"col": 4,"name": "msf"},{"file": 20,"line": 484,"col": 4,"name": "allocator"},{"file": 20,"line": 485,"col": 4,"name": "string_table"},{"file": 20,"line": 486,"col": 4,"name": "dbi"},{"file": 20,"line": 487,"col": 4,"name": "modules"},{"file": 20,"line": 488,"col": 4,"name": "sect_contribs"},{"file": 20,"line": 489,"col": 4,"name": "guid"},{"file": 20,"line": 490,"col": 4,"name": "age"},{"file": 20,"line": 858,"col": 4,"name": "directory"},{"file": 20,"line": 859,"col": 4,"name": "streams"},{"file": 20,"line": 340,"col": 4,"name": "Ver60"},{"file": 20,"line": 341,"col": 4,"name": "V2"},{"file": 20,"line": 342,"col": 4,"name": "_"},{"file": 42,"line": 116,"col": 4,"name": "waiters"},{"file": 46,"line": 3248,"col": 4,"name": "InheritedAddressSpace"},{"file": 46,"line": 3251,"col": 4,"name": "ReadImageFileExecOptions"},{"file": 46,"line": 3252,"col": 4,"name": "BeingDebugged"},{"file": 46,"line": 3255,"col": 4,"name": "BitField"},{"file": 46,"line": 3258,"col": 4,"name": "Mutant"},{"file": 46,"line": 3259,"col": 4,"name": "ImageBaseAddress"},{"file": 46,"line": 3260,"col": 4,"name": "Ldr"},{"file": 46,"line": 3261,"col": 4,"name": "ProcessParameters"},{"file": 46,"line": 3262,"col": 4,"name": "SubSystemData"},{"file": 46,"line": 3263,"col": 4,"name": "ProcessHeap"},{"file": 46,"line": 3266,"col": 4,"name": "FastPebLock"},{"file": 46,"line": 3269,"col": 4,"name": "AtlThunkSListPtr"},{"file": 46,"line": 3270,"col": 4,"name": "IFEOKey"},{"file": 46,"line": 3275,"col": 4,"docs": " https://www.geoffchappell.com/studies/windows/win32/ntdll/structs/peb/crossprocessflags.htm","name": "CrossProcessFlags"},{"file": 46,"line": 3278,"col": 4,"name": "union1"},{"file": 46,"line": 3284,"col": 4,"name": "SystemReserved"},{"file": 46,"line": 3287,"col": 4,"name": "AtlThunkSListPtr32"},{"file": 46,"line": 3290,"col": 4,"name": "ApiSetMap"},{"file": 46,"line": 3293,"col": 4,"name": "TlsExpansionCounter"},{"file": 46,"line": 3295,"col": 4,"name": "TlsBitmap"},{"file": 46,"line": 3296,"col": 4,"name": "TlsBitmapBits"},{"file": 46,"line": 3297,"col": 4,"name": "ReadOnlySharedMemoryBase"},{"file": 46,"line": 3300,"col": 4,"name": "SharedData"},{"file": 46,"line": 3303,"col": 4,"name": "ReadOnlyStaticServerData"},{"file": 46,"line": 3304,"col": 4,"name": "AnsiCodePageData"},{"file": 46,"line": 3305,"col": 4,"name": "OemCodePageData"},{"file": 46,"line": 3306,"col": 4,"name": "UnicodeCaseTableData"},{"file": 46,"line": 3309,"col": 4,"name": "NumberOfProcessors"},{"file": 46,"line": 3310,"col": 4,"name": "NtGlobalFlag"},{"file": 46,"line": 3313,"col": 4,"name": "CriticalSectionTimeout"},{"file": 46,"line": 3318,"col": 4,"name": "HeapSegmentReserve"},{"file": 46,"line": 3319,"col": 4,"name": "HeapSegmentCommit"},{"file": 46,"line": 3320,"col": 4,"name": "HeapDeCommitTotalFreeThreshold"},{"file": 46,"line": 3321,"col": 4,"name": "HeapDeCommitFreeBlockThreshold"},{"file": 46,"line": 3322,"col": 4,"name": "NumberOfHeaps"},{"file": 46,"line": 3323,"col": 4,"name": "MaximumNumberOfHeaps"},{"file": 46,"line": 3324,"col": 4,"name": "ProcessHeaps"},{"file": 46,"line": 3327,"col": 4,"name": "GdiSharedHandleTable"},{"file": 46,"line": 3328,"col": 4,"name": "ProcessStarterHelper"},{"file": 46,"line": 3329,"col": 4,"name": "GdiDCAttributeList"},{"file": 46,"line": 3331,"col": 4,"name": "LoaderLock"},{"file": 46,"line": 3332,"col": 4,"name": "OSMajorVersion"},{"file": 46,"line": 3333,"col": 4,"name": "OSMinorVersion"},{"file": 46,"line": 3334,"col": 4,"name": "OSBuildNumber"},{"file": 46,"line": 3335,"col": 4,"name": "OSCSDVersion"},{"file": 46,"line": 3336,"col": 4,"name": "OSPlatformId"},{"file": 46,"line": 3337,"col": 4,"name": "ImageSubSystem"},{"file": 46,"line": 3338,"col": 4,"name": "ImageSubSystemMajorVersion"},{"file": 46,"line": 3339,"col": 4,"name": "ImageSubSystemMinorVersion"},{"file": 46,"line": 3341,"col": 4,"name": "ActiveProcessAffinityMask"},{"file": 46,"line": 3342,"col": 4,"name": "GdiHandleBuffer"},{"file": 46,"line": 3351,"col": 4,"name": "PostProcessInitRoutine"},{"file": 46,"line": 3352,"col": 4,"name": "TlsExpansionBitmap"},{"file": 46,"line": 3353,"col": 4,"name": "TlsExpansionBitmapBits"},{"file": 46,"line": 3354,"col": 4,"name": "SessionId"},{"file": 46,"line": 3357,"col": 4,"name": "AppCompatFlags"},{"file": 46,"line": 3358,"col": 4,"name": "AppCompatFlagsUser"},{"file": 46,"line": 3359,"col": 4,"name": "ShimData"},{"file": 46,"line": 3361,"col": 4,"name": "AppCompatInfo"},{"file": 46,"line": 3362,"col": 4,"name": "CSDVersion"},{"file": 46,"line": 3365,"col": 4,"name": "ActivationContextData"},{"file": 46,"line": 3366,"col": 4,"name": "ProcessAssemblyStorageMap"},{"file": 46,"line": 3367,"col": 4,"name": "SystemDefaultActivationData"},{"file": 46,"line": 3368,"col": 4,"name": "SystemAssemblyStorageMap"},{"file": 46,"line": 3369,"col": 4,"name": "MinimumStackCommit"},{"file": 46,"line": 3372,"col": 4,"name": "FlsCallback"},{"file": 46,"line": 3373,"col": 4,"name": "FlsListHead"},{"file": 46,"line": 3374,"col": 4,"name": "FlsBitmap"},{"file": 46,"line": 3375,"col": 4,"name": "FlsBitmapBits"},{"file": 46,"line": 3376,"col": 4,"name": "FlsHighIndex"},{"file": 46,"line": 3379,"col": 4,"name": "WerRegistrationData"},{"file": 46,"line": 3380,"col": 4,"name": "WerShipAssertPtr"},{"file": 46,"line": 3383,"col": 4,"name": "pUnused"},{"file": 46,"line": 3384,"col": 4,"name": "pImageHeaderHash"},{"file": 46,"line": 3387,"col": 4,"docs": " TODO: https://www.geoffchappell.com/studies/windows/win32/ntdll/structs/peb/tracingflags.htm","name": "TracingFlags"},{"file": 46,"line": 3390,"col": 4,"name": "CsrServerReadOnlySharedMemoryBase"},{"file": 46,"line": 3393,"col": 4,"name": "TppWorkerpListLock"},{"file": 46,"line": 3394,"col": 4,"name": "TppWorkerpList"},{"file": 46,"line": 3395,"col": 4,"name": "WaitOnAddressHashTable"},{"file": 46,"line": 3398,"col": 4,"name": "TelemetryCoverageHeader"},{"file": 46,"line": 3399,"col": 4,"name": "CloudFileFlags"},{"file": 46,"line": 3230,"col": 4,"name": "Reserved1"},{"file": 46,"line": 3231,"col": 4,"name": "ProcessEnvironmentBlock"},{"file": 46,"line": 3232,"col": 4,"name": "Reserved2"},{"file": 46,"line": 3233,"col": 4,"name": "Reserved3"},{"file": 46,"line": 3234,"col": 4,"name": "TlsSlots"},{"file": 46,"line": 3235,"col": 4,"name": "Reserved4"},{"file": 46,"line": 3236,"col": 4,"name": "Reserved5"},{"file": 46,"line": 3237,"col": 4,"name": "ReservedForOle"},{"file": 46,"line": 3238,"col": 4,"name": "Reserved6"},{"file": 46,"line": 3239,"col": 4,"name": "TlsExpansionSlots"},{"file": 46,"line": 2289,"col": 4,"name": "u"},{"file": 46,"line": 2293,"col": 4,"name": "Information"},{"file": 12,"line": 480,"col": 4,"name": "major"},{"file": 12,"line": 481,"col": 4,"name": "minor"},{"file": 12,"line": 482,"col": 4,"name": "patch"},{"file": 48,"line": 131,"col": 4,"name": "state"},{"file": 48,"line": 133,"col": 4,"name": "buf"},{"file": 48,"line": 134,"col": 4,"name": "buf_len"},{"file": 26,"line": 51,"col": 4,"name": "pdb"},{"file": 26,"line": 52,"col": 4,"name": "dwarf"},{"file": 21,"line": 229,"col": 4,"name": "start"},{"file": 21,"line": 230,"col": 4,"name": "end"},{"file": 25,"line": 380,"col": 8,"name": "physical_address"},{"file": 25,"line": 381,"col": 8,"name": "virtual_size"},{"file": 3,"line": 94,"col": 12,"name": "nt4"},{"file": 3,"line": 95,"col": 12,"name": "win2k"},{"file": 3,"line": 96,"col": 12,"name": "xp"},{"file": 3,"line": 97,"col": 12,"name": "ws2003"},{"file": 3,"line": 98,"col": 12,"name": "vista"},{"file": 3,"line": 99,"col": 12,"name": "win7"},{"file": 3,"line": 100,"col": 12,"name": "win8"},{"file": 3,"line": 101,"col": 12,"name": "win8_1"},{"file": 3,"line": 102,"col": 12,"name": "win10"},{"file": 3,"line": 103,"col": 12,"name": "win10_th2"},{"file": 3,"line": 104,"col": 12,"name": "win10_rs1"},{"file": 3,"line": 105,"col": 12,"name": "win10_rs2"},{"file": 3,"line": 106,"col": 12,"name": "win10_rs3"},{"file": 3,"line": 107,"col": 12,"name": "win10_rs4"},{"file": 3,"line": 108,"col": 12,"name": "win10_rs5"},{"file": 3,"line": 109,"col": 12,"name": "win10_19h1"},{"file": 3,"line": 110,"col": 12,"name": "win10_vb"},{"file": 3,"line": 111,"col": 12,"name": "win10_mn"},{"file": 3,"line": 112,"col": 12,"name": "win10_fe"},{"file": 3,"line": 113,"col": 12,"name": "_"},{"file": 3,"line": 182,"col": 12,"name": "range"},{"file": 3,"line": 183,"col": 12,"name": "glibc"},{"file": 3,"line": 221,"col": 12,"name": "none"},{"file": 3,"line": 222,"col": 12,"name": "semver"},{"file": 3,"line": 223,"col": 12,"name": "linux"},{"file": 3,"line": 224,"col": 12,"name": "windows"},{"file": 3,"line": 610,"col": 12,"docs": " The bit index into `Set`. Has a default value of `undefined` because the canonical structures are populated via comptime logic.","name": "index"},{"file": 3,"line": 614,"col": 12,"docs": " Has a default value of `undefined` because the canonical structures are populated via comptime logic.","name": "name"},{"file": 3,"line": 618,"col": 12,"docs": " If this corresponds to an LLVM-recognized feature, this will be populated; otherwise null.","name": "llvm_name"},{"file": 3,"line": 621,"col": 12,"docs": " Human-friendly UTF-8 text.","name": "description"},{"file": 3,"line": 624,"col": 12,"docs": " Sparse `Set` of features this depends on.","name": "dependencies"},{"file": 3,"line": 1231,"col": 12,"name": "name"},{"file": 3,"line": 1232,"col": 12,"name": "llvm_name"},{"file": 3,"line": 1233,"col": 12,"name": "features"},{"file": 12,"line": 87,"col": 4,"name": "Internal"},{"file": 12,"line": 88,"col": 4,"name": "Strong"},{"file": 12,"line": 89,"col": 4,"name": "Weak"},{"file": 12,"line": 90,"col": 4,"name": "LinkOnce"},{"file": 12,"line": 96,"col": 4,"name": "Unordered"},{"file": 12,"line": 97,"col": 4,"name": "Monotonic"},{"file": 12,"line": 98,"col": 4,"name": "Acquire"},{"file": 12,"line": 99,"col": 4,"name": "Release"},{"file": 12,"line": 100,"col": 4,"name": "AcqRel"},{"file": 12,"line": 101,"col": 4,"name": "SeqCst"},{"file": 12,"line": 119,"col": 4,"name": "Xchg"},{"file": 12,"line": 120,"col": 4,"name": "Add"},{"file": 12,"line": 121,"col": 4,"name": "Sub"},{"file": 12,"line": 122,"col": 4,"name": "And"},{"file": 12,"line": 123,"col": 4,"name": "Nand"},{"file": 12,"line": 124,"col": 4,"name": "Or"},{"file": 12,"line": 125,"col": 4,"name": "Xor"},{"file": 12,"line": 126,"col": 4,"name": "Max"},{"file": 12,"line": 127,"col": 4,"name": "Min"},{"file": 12,"line": 157,"col": 4,"name": "Unspecified"},{"file": 12,"line": 158,"col": 4,"name": "C"},{"file": 12,"line": 159,"col": 4,"name": "Naked"},{"file": 12,"line": 160,"col": 4,"name": "Async"},{"file": 12,"line": 161,"col": 4,"name": "Inline"},{"file": 12,"line": 162,"col": 4,"name": "Interrupt"},{"file": 12,"line": 163,"col": 4,"name": "Signal"},{"file": 12,"line": 164,"col": 4,"name": "Stdcall"},{"file": 12,"line": 165,"col": 4,"name": "Fastcall"},{"file": 12,"line": 166,"col": 4,"name": "Vectorcall"},{"file": 12,"line": 167,"col": 4,"name": "Thiscall"},{"file": 12,"line": 168,"col": 4,"name": "APCS"},{"file": 12,"line": 169,"col": 4,"name": "AAPCS"},{"file": 12,"line": 170,"col": 4,"name": "AAPCSVFP"},{"file": 12,"line": 171,"col": 4,"name": "SysV"},{"file": 12,"line": 177,"col": 4,"name": "generic"},{"file": 12,"line": 178,"col": 4,"name": "gs"},{"file": 12,"line": 179,"col": 4,"name": "fs"},{"file": 12,"line": 180,"col": 4,"name": "ss"},{"file": 12,"line": 613,"col": 4,"name": "modifier"},{"file": 12,"line": 616,"col": 4,"docs": " Only valid when `Modifier` is `Modifier.async_kw`.","name": "stack"},{"file": 12,"line": 656,"col": 4,"name": "name"},{"file": 12,"line": 657,"col": 4,"name": "linkage"},{"file": 12,"line": 658,"col": 4,"name": "section"},{"file": 12,"line": 414,"col": 12,"name": "Type"},{"file": 12,"line": 415,"col": 12,"name": "Var"},{"file": 12,"line": 416,"col": 12,"name": "Fn"},{"file": 18,"line": 14,"col": 4,"name": "next_tick_queue"},{"file": 18,"line": 15,"col": 4,"name": "os_data"},{"file": 18,"line": 16,"col": 4,"name": "final_resume_node"},{"file": 18,"line": 17,"col": 4,"name": "pending_event_count"},{"file": 18,"line": 18,"col": 4,"name": "extra_threads"},{"file": 18,"line": 23,"col": 4,"docs": " TODO change this to a pool of configurable number of threads and rename it to be not file-system-specific. it will become a thread pool for turning non-CPU-bound blocking things into async things. A fallback for any missing OS-specific API.","name": "fs_thread"},{"file": 18,"line": 24,"col": 4,"name": "fs_queue"},{"file": 18,"line": 25,"col": 4,"name": "fs_end_request"},{"file": 18,"line": 26,"col": 4,"name": "fs_thread_wakeup"},{"file": 18,"line": 30,"col": 4,"docs": " For resources that have the same lifetime as the `Loop`. This is only used by `Loop` for the thread pool and associated resources.","name": "arena"},{"file": 18,"line": 33,"col": 4,"docs": " State which manages frames that are sleeping on timers","name": "delay_queue"},{"file": 18,"line": 37,"col": 4,"docs": " Pre-allocated eventfds. All permanently active. This is how `Loop` sends promises to be resumed on other threads.","name": "available_eventfd_resume_nodes"},{"file": 18,"line": 38,"col": 4,"name": "eventfd_resume_nodes"},{"file": 18,"line": 1594,"col": 16,"name": "fd"},{"file": 18,"line": 1595,"col": 16,"name": "buf"},{"file": 18,"line": 1596,"col": 16,"name": "result"},{"file": 18,"line": 1602,"col": 16,"name": "fd"},{"file": 18,"line": 1603,"col": 16,"name": "iov"},{"file": 18,"line": 1604,"col": 16,"name": "result"},{"file": 18,"line": 1610,"col": 16,"name": "fd"},{"file": 18,"line": 1611,"col": 16,"name": "bytes"},{"file": 18,"line": 1612,"col": 16,"name": "result"},{"file": 18,"line": 1618,"col": 16,"name": "fd"},{"file": 18,"line": 1619,"col": 16,"name": "iov"},{"file": 18,"line": 1620,"col": 16,"name": "result"},{"file": 18,"line": 1626,"col": 16,"name": "fd"},{"file": 18,"line": 1627,"col": 16,"name": "bytes"},{"file": 18,"line": 1628,"col": 16,"name": "offset"},{"file": 18,"line": 1629,"col": 16,"name": "result"},{"file": 18,"line": 1635,"col": 16,"name": "fd"},{"file": 18,"line": 1636,"col": 16,"name": "iov"},{"file": 18,"line": 1637,"col": 16,"name": "offset"},{"file": 18,"line": 1638,"col": 16,"name": "result"},{"file": 18,"line": 1644,"col": 16,"name": "fd"},{"file": 18,"line": 1645,"col": 16,"name": "buf"},{"file": 18,"line": 1646,"col": 16,"name": "offset"},{"file": 18,"line": 1647,"col": 16,"name": "result"},{"file": 18,"line": 1653,"col": 16,"name": "fd"},{"file": 18,"line": 1654,"col": 16,"name": "iov"},{"file": 18,"line": 1655,"col": 16,"name": "offset"},{"file": 18,"line": 1656,"col": 16,"name": "result"},{"file": 18,"line": 1662,"col": 16,"name": "path"},{"file": 18,"line": 1663,"col": 16,"name": "flags"},{"file": 18,"line": 1664,"col": 16,"name": "mode"},{"file": 18,"line": 1665,"col": 16,"name": "result"},{"file": 18,"line": 1671,"col": 16,"name": "fd"},{"file": 18,"line": 1672,"col": 16,"name": "path"},{"file": 18,"line": 1673,"col": 16,"name": "flags"},{"file": 18,"line": 1674,"col": 16,"name": "mode"},{"file": 18,"line": 1675,"col": 16,"name": "result"},{"file": 18,"line": 1681,"col": 16,"name": "fd"},{"file": 18,"line": 1685,"col": 16,"name": "dirfd"},{"file": 18,"line": 1686,"col": 16,"name": "path"},{"file": 18,"line": 1687,"col": 16,"name": "mode"},{"file": 18,"line": 1688,"col": 16,"name": "flags"},{"file": 18,"line": 1689,"col": 16,"name": "result"},{"file": 46,"line": 2376,"col": 4,"name": "Internal"},{"file": 46,"line": 2377,"col": 4,"name": "InternalHigh"},{"file": 46,"line": 2378,"col": 4,"name": "DUMMYUNIONNAME"},{"file": 46,"line": 2385,"col": 4,"name": "hEvent"},{"file": 18,"line": 64,"col": 12,"name": "Basic"},{"file": 18,"line": 65,"col": 12,"name": "Stop"},{"file": 18,"line": 66,"col": 12,"name": "EventFd"},{"file": 20,"line": 113,"col": 4,"name": "S_COMPILE"},{"file": 20,"line": 114,"col": 4,"name": "S_REGISTER_16t"},{"file": 20,"line": 115,"col": 4,"name": "S_CONSTANT_16t"},{"file": 20,"line": 116,"col": 4,"name": "S_UDT_16t"},{"file": 20,"line": 117,"col": 4,"name": "S_SSEARCH"},{"file": 20,"line": 118,"col": 4,"name": "S_SKIP"},{"file": 20,"line": 119,"col": 4,"name": "S_CVRESERVE"},{"file": 20,"line": 120,"col": 4,"name": "S_OBJNAME_ST"},{"file": 20,"line": 121,"col": 4,"name": "S_ENDARG"},{"file": 20,"line": 122,"col": 4,"name": "S_COBOLUDT_16t"},{"file": 20,"line": 123,"col": 4,"name": "S_MANYREG_16t"},{"file": 20,"line": 124,"col": 4,"name": "S_RETURN"},{"file": 20,"line": 125,"col": 4,"name": "S_ENTRYTHIS"},{"file": 20,"line": 126,"col": 4,"name": "S_BPREL16"},{"file": 20,"line": 127,"col": 4,"name": "S_LDATA16"},{"file": 20,"line": 128,"col": 4,"name": "S_GDATA16"},{"file": 20,"line": 129,"col": 4,"name": "S_PUB16"},{"file": 20,"line": 130,"col": 4,"name": "S_LPROC16"},{"file": 20,"line": 131,"col": 4,"name": "S_GPROC16"},{"file": 20,"line": 132,"col": 4,"name": "S_THUNK16"},{"file": 20,"line": 133,"col": 4,"name": "S_BLOCK16"},{"file": 20,"line": 134,"col": 4,"name": "S_WITH16"},{"file": 20,"line": 135,"col": 4,"name": "S_LABEL16"},{"file": 20,"line": 136,"col": 4,"name": "S_CEXMODEL16"},{"file": 20,"line": 137,"col": 4,"name": "S_VFTABLE16"},{"file": 20,"line": 138,"col": 4,"name": "S_REGREL16"},{"file": 20,"line": 139,"col": 4,"name": "S_BPREL32_16t"},{"file": 20,"line": 140,"col": 4,"name": "S_LDATA32_16t"},{"file": 20,"line": 141,"col": 4,"name": "S_GDATA32_16t"},{"file": 20,"line": 142,"col": 4,"name": "S_PUB32_16t"},{"file": 20,"line": 143,"col": 4,"name": "S_LPROC32_16t"},{"file": 20,"line": 144,"col": 4,"name": "S_GPROC32_16t"},{"file": 20,"line": 145,"col": 4,"name": "S_THUNK32_ST"},{"file": 20,"line": 146,"col": 4,"name": "S_BLOCK32_ST"},{"file": 20,"line": 147,"col": 4,"name": "S_WITH32_ST"},{"file": 20,"line": 148,"col": 4,"name": "S_LABEL32_ST"},{"file": 20,"line": 149,"col": 4,"name": "S_CEXMODEL32"},{"file": 20,"line": 150,"col": 4,"name": "S_VFTABLE32_16t"},{"file": 20,"line": 151,"col": 4,"name": "S_REGREL32_16t"},{"file": 20,"line": 152,"col": 4,"name": "S_LTHREAD32_16t"},{"file": 20,"line": 153,"col": 4,"name": "S_GTHREAD32_16t"},{"file": 20,"line": 154,"col": 4,"name": "S_SLINK32"},{"file": 20,"line": 155,"col": 4,"name": "S_LPROCMIPS_16t"},{"file": 20,"line": 156,"col": 4,"name": "S_GPROCMIPS_16t"},{"file": 20,"line": 157,"col": 4,"name": "S_PROCREF_ST"},{"file": 20,"line": 158,"col": 4,"name": "S_DATAREF_ST"},{"file": 20,"line": 159,"col": 4,"name": "S_ALIGN"},{"file": 20,"line": 160,"col": 4,"name": "S_LPROCREF_ST"},{"file": 20,"line": 161,"col": 4,"name": "S_OEM"},{"file": 20,"line": 162,"col": 4,"name": "S_TI16_MAX"},{"file": 20,"line": 163,"col": 4,"name": "S_REGISTER_ST"},{"file": 20,"line": 164,"col": 4,"name": "S_CONSTANT_ST"},{"file": 20,"line": 165,"col": 4,"name": "S_UDT_ST"},{"file": 20,"line": 166,"col": 4,"name": "S_COBOLUDT_ST"},{"file": 20,"line": 167,"col": 4,"name": "S_MANYREG_ST"},{"file": 20,"line": 168,"col": 4,"name": "S_BPREL32_ST"},{"file": 20,"line": 169,"col": 4,"name": "S_LDATA32_ST"},{"file": 20,"line": 170,"col": 4,"name": "S_GDATA32_ST"},{"file": 20,"line": 171,"col": 4,"name": "S_PUB32_ST"},{"file": 20,"line": 172,"col": 4,"name": "S_LPROC32_ST"},{"file": 20,"line": 173,"col": 4,"name": "S_GPROC32_ST"},{"file": 20,"line": 174,"col": 4,"name": "S_VFTABLE32"},{"file": 20,"line": 175,"col": 4,"name": "S_REGREL32_ST"},{"file": 20,"line": 176,"col": 4,"name": "S_LTHREAD32_ST"},{"file": 20,"line": 177,"col": 4,"name": "S_GTHREAD32_ST"},{"file": 20,"line": 178,"col": 4,"name": "S_LPROCMIPS_ST"},{"file": 20,"line": 179,"col": 4,"name": "S_GPROCMIPS_ST"},{"file": 20,"line": 180,"col": 4,"name": "S_COMPILE2_ST"},{"file": 20,"line": 181,"col": 4,"name": "S_MANYREG2_ST"},{"file": 20,"line": 182,"col": 4,"name": "S_LPROCIA64_ST"},{"file": 20,"line": 183,"col": 4,"name": "S_GPROCIA64_ST"},{"file": 20,"line": 184,"col": 4,"name": "S_LOCALSLOT_ST"},{"file": 20,"line": 185,"col": 4,"name": "S_PARAMSLOT_ST"},{"file": 20,"line": 186,"col": 4,"name": "S_ANNOTATION"},{"file": 20,"line": 187,"col": 4,"name": "S_GMANPROC_ST"},{"file": 20,"line": 188,"col": 4,"name": "S_LMANPROC_ST"},{"file": 20,"line": 189,"col": 4,"name": "S_RESERVED1"},{"file": 20,"line": 190,"col": 4,"name": "S_RESERVED2"},{"file": 20,"line": 191,"col": 4,"name": "S_RESERVED3"},{"file": 20,"line": 192,"col": 4,"name": "S_RESERVED4"},{"file": 20,"line": 193,"col": 4,"name": "S_LMANDATA_ST"},{"file": 20,"line": 194,"col": 4,"name": "S_GMANDATA_ST"},{"file": 20,"line": 195,"col": 4,"name": "S_MANFRAMEREL_ST"},{"file": 20,"line": 196,"col": 4,"name": "S_MANREGISTER_ST"},{"file": 20,"line": 197,"col": 4,"name": "S_MANSLOT_ST"},{"file": 20,"line": 198,"col": 4,"name": "S_MANMANYREG_ST"},{"file": 20,"line": 199,"col": 4,"name": "S_MANREGREL_ST"},{"file": 20,"line": 200,"col": 4,"name": "S_MANMANYREG2_ST"},{"file": 20,"line": 201,"col": 4,"name": "S_MANTYPREF"},{"file": 20,"line": 202,"col": 4,"name": "S_UNAMESPACE_ST"},{"file": 20,"line": 203,"col": 4,"name": "S_ST_MAX"},{"file": 20,"line": 204,"col": 4,"name": "S_WITH32"},{"file": 20,"line": 205,"col": 4,"name": "S_MANYREG"},{"file": 20,"line": 206,"col": 4,"name": "S_LPROCMIPS"},{"file": 20,"line": 207,"col": 4,"name": "S_GPROCMIPS"},{"file": 20,"line": 208,"col": 4,"name": "S_MANYREG2"},{"file": 20,"line": 209,"col": 4,"name": "S_LPROCIA64"},{"file": 20,"line": 210,"col": 4,"name": "S_GPROCIA64"},{"file": 20,"line": 211,"col": 4,"name": "S_LOCALSLOT"},{"file": 20,"line": 212,"col": 4,"name": "S_PARAMSLOT"},{"file": 20,"line": 213,"col": 4,"name": "S_MANFRAMEREL"},{"file": 20,"line": 214,"col": 4,"name": "S_MANREGISTER"},{"file": 20,"line": 215,"col": 4,"name": "S_MANSLOT"},{"file": 20,"line": 216,"col": 4,"name": "S_MANMANYREG"},{"file": 20,"line": 217,"col": 4,"name": "S_MANREGREL"},{"file": 20,"line": 218,"col": 4,"name": "S_MANMANYREG2"},{"file": 20,"line": 219,"col": 4,"name": "S_UNAMESPACE"},{"file": 20,"line": 220,"col": 4,"name": "S_DATAREF"},{"file": 20,"line": 221,"col": 4,"name": "S_ANNOTATIONREF"},{"file": 20,"line": 222,"col": 4,"name": "S_TOKENREF"},{"file": 20,"line": 223,"col": 4,"name": "S_GMANPROC"},{"file": 20,"line": 224,"col": 4,"name": "S_LMANPROC"},{"file": 20,"line": 225,"col": 4,"name": "S_ATTR_FRAMEREL"},{"file": 20,"line": 226,"col": 4,"name": "S_ATTR_REGISTER"},{"file": 20,"line": 227,"col": 4,"name": "S_ATTR_REGREL"},{"file": 20,"line": 228,"col": 4,"name": "S_ATTR_MANYREG"},{"file": 20,"line": 229,"col": 4,"name": "S_SEPCODE"},{"file": 20,"line": 230,"col": 4,"name": "S_LOCAL_2005"},{"file": 20,"line": 231,"col": 4,"name": "S_DEFRANGE_2005"},{"file": 20,"line": 232,"col": 4,"name": "S_DEFRANGE2_2005"},{"file": 20,"line": 233,"col": 4,"name": "S_DISCARDED"},{"file": 20,"line": 234,"col": 4,"name": "S_LPROCMIPS_ID"},{"file": 20,"line": 235,"col": 4,"name": "S_GPROCMIPS_ID"},{"file": 20,"line": 236,"col": 4,"name": "S_LPROCIA64_ID"},{"file": 20,"line": 237,"col": 4,"name": "S_GPROCIA64_ID"},{"file": 20,"line": 238,"col": 4,"name": "S_DEFRANGE_HLSL"},{"file": 20,"line": 239,"col": 4,"name": "S_GDATA_HLSL"},{"file": 20,"line": 240,"col": 4,"name": "S_LDATA_HLSL"},{"file": 20,"line": 241,"col": 4,"name": "S_LOCAL_DPC_GROUPSHARED"},{"file": 20,"line": 242,"col": 4,"name": "S_DEFRANGE_DPC_PTR_TAG"},{"file": 20,"line": 243,"col": 4,"name": "S_DPC_SYM_TAG_MAP"},{"file": 20,"line": 244,"col": 4,"name": "S_ARMSWITCHTABLE"},{"file": 20,"line": 245,"col": 4,"name": "S_POGODATA"},{"file": 20,"line": 246,"col": 4,"name": "S_INLINESITE2"},{"file": 20,"line": 247,"col": 4,"name": "S_MOD_TYPEREF"},{"file": 20,"line": 248,"col": 4,"name": "S_REF_MINIPDB"},{"file": 20,"line": 249,"col": 4,"name": "S_PDBMAP"},{"file": 20,"line": 250,"col": 4,"name": "S_GDATA_HLSL32"},{"file": 20,"line": 251,"col": 4,"name": "S_LDATA_HLSL32"},{"file": 20,"line": 252,"col": 4,"name": "S_GDATA_HLSL32_EX"},{"file": 20,"line": 253,"col": 4,"name": "S_LDATA_HLSL32_EX"},{"file": 20,"line": 254,"col": 4,"name": "S_FASTLINK"},{"file": 20,"line": 255,"col": 4,"name": "S_INLINEES"},{"file": 20,"line": 256,"col": 4,"name": "S_END"},{"file": 20,"line": 257,"col": 4,"name": "S_INLINESITE_END"},{"file": 20,"line": 258,"col": 4,"name": "S_PROC_ID_END"},{"file": 20,"line": 259,"col": 4,"name": "S_THUNK32"},{"file": 20,"line": 260,"col": 4,"name": "S_TRAMPOLINE"},{"file": 20,"line": 261,"col": 4,"name": "S_SECTION"},{"file": 20,"line": 262,"col": 4,"name": "S_COFFGROUP"},{"file": 20,"line": 263,"col": 4,"name": "S_EXPORT"},{"file": 20,"line": 264,"col": 4,"name": "S_LPROC32"},{"file": 20,"line": 265,"col": 4,"name": "S_GPROC32"},{"file": 20,"line": 266,"col": 4,"name": "S_LPROC32_ID"},{"file": 20,"line": 267,"col": 4,"name": "S_GPROC32_ID"},{"file": 20,"line": 268,"col": 4,"name": "S_LPROC32_DPC"},{"file": 20,"line": 269,"col": 4,"name": "S_LPROC32_DPC_ID"},{"file": 20,"line": 270,"col": 4,"name": "S_REGISTER"},{"file": 20,"line": 271,"col": 4,"name": "S_PUB32"},{"file": 20,"line": 272,"col": 4,"name": "S_PROCREF"},{"file": 20,"line": 273,"col": 4,"name": "S_LPROCREF"},{"file": 20,"line": 274,"col": 4,"name": "S_ENVBLOCK"},{"file": 20,"line": 275,"col": 4,"name": "S_INLINESITE"},{"file": 20,"line": 276,"col": 4,"name": "S_LOCAL"},{"file": 20,"line": 277,"col": 4,"name": "S_DEFRANGE"},{"file": 20,"line": 278,"col": 4,"name": "S_DEFRANGE_SUBFIELD"},{"file": 20,"line": 279,"col": 4,"name": "S_DEFRANGE_REGISTER"},{"file": 20,"line": 280,"col": 4,"name": "S_DEFRANGE_FRAMEPOINTER_REL"},{"file": 20,"line": 281,"col": 4,"name": "S_DEFRANGE_SUBFIELD_REGISTER"},{"file": 20,"line": 282,"col": 4,"name": "S_DEFRANGE_FRAMEPOINTER_REL_FULL_SCOPE"},{"file": 20,"line": 283,"col": 4,"name": "S_DEFRANGE_REGISTER_REL"},{"file": 20,"line": 284,"col": 4,"name": "S_BLOCK32"},{"file": 20,"line": 285,"col": 4,"name": "S_LABEL32"},{"file": 20,"line": 286,"col": 4,"name": "S_OBJNAME"},{"file": 20,"line": 287,"col": 4,"name": "S_COMPILE2"},{"file": 20,"line": 288,"col": 4,"name": "S_COMPILE3"},{"file": 20,"line": 289,"col": 4,"name": "S_FRAMEPROC"},{"file": 20,"line": 290,"col": 4,"name": "S_CALLSITEINFO"},{"file": 20,"line": 291,"col": 4,"name": "S_FILESTATIC"},{"file": 20,"line": 292,"col": 4,"name": "S_HEAPALLOCSITE"},{"file": 20,"line": 293,"col": 4,"name": "S_FRAMECOOKIE"},{"file": 20,"line": 294,"col": 4,"name": "S_CALLEES"},{"file": 20,"line": 295,"col": 4,"name": "S_CALLERS"},{"file": 20,"line": 296,"col": 4,"name": "S_UDT"},{"file": 20,"line": 297,"col": 4,"name": "S_COBOLUDT"},{"file": 20,"line": 298,"col": 4,"name": "S_BUILDINFO"},{"file": 20,"line": 299,"col": 4,"name": "S_BPREL32"},{"file": 20,"line": 300,"col": 4,"name": "S_REGREL32"},{"file": 20,"line": 301,"col": 4,"name": "S_CONSTANT"},{"file": 20,"line": 302,"col": 4,"name": "S_MANCONSTANT"},{"file": 20,"line": 303,"col": 4,"name": "S_LDATA32"},{"file": 20,"line": 304,"col": 4,"name": "S_GDATA32"},{"file": 20,"line": 305,"col": 4,"name": "S_LMANDATA"},{"file": 20,"line": 306,"col": 4,"name": "S_GMANDATA"},{"file": 20,"line": 307,"col": 4,"name": "S_LTHREAD32"},{"file": 20,"line": 308,"col": 4,"name": "S_GTHREAD32"},{"file": 20,"line": 314,"col": 4,"name": "Parent"},{"file": 20,"line": 315,"col": 4,"name": "End"},{"file": 20,"line": 316,"col": 4,"name": "Next"},{"file": 20,"line": 317,"col": 4,"name": "CodeSize"},{"file": 20,"line": 318,"col": 4,"name": "DbgStart"},{"file": 20,"line": 319,"col": 4,"name": "DbgEnd"},{"file": 20,"line": 320,"col": 4,"name": "FunctionType"},{"file": 20,"line": 321,"col": 4,"name": "CodeOffset"},{"file": 20,"line": 322,"col": 4,"name": "Segment"},{"file": 20,"line": 323,"col": 4,"name": "Flags"},{"file": 20,"line": 329,"col": 4,"name": "HasFP"},{"file": 20,"line": 330,"col": 4,"name": "HasIRET"},{"file": 20,"line": 331,"col": 4,"name": "HasFRET"},{"file": 20,"line": 332,"col": 4,"name": "IsNoReturn"},{"file": 20,"line": 333,"col": 4,"name": "IsUnreachable"},{"file": 20,"line": 334,"col": 4,"name": "HasCustomCallingConv"},{"file": 20,"line": 335,"col": 4,"name": "IsNoInline"},{"file": 20,"line": 336,"col": 4,"name": "HasOptimizedDebugInfo"},{"file": 20,"line": 347,"col": 4,"docs": " Record length, starting from &RecordKind.","name": "RecordLen"},{"file": 20,"line": 350,"col": 4,"docs": " Record kind enum (SymRecordKind or TypeRecordKind)","name": "RecordKind"},{"file": 20,"line": 359,"col": 4,"docs": " Code offset of line contribution.","name": "RelocOffset"},{"file": 20,"line": 362,"col": 4,"docs": " Code segment of line contribution.","name": "RelocSegment"},{"file": 20,"line": 363,"col": 4,"name": "Flags"},{"file": 20,"line": 366,"col": 4,"docs": " Code size of this line contribution.","name": "CodeSize"},{"file": 20,"line": 371,"col": 4,"docs": " CV_LINES_HAVE_COLUMNS","name": "LF_HaveColumns"},{"file": 20,"line": 372,"col": 4,"name": "unused"},{"file": 20,"line": 384,"col": 4,"docs": " Offset of FileChecksum entry in File checksums buffer.  The checksum entry then contains another offset into the string table of the actual name.","name": "NameIndex"},{"file": 20,"line": 385,"col": 4,"name": "NumLines"},{"file": 20,"line": 388,"col": 4,"docs": " code size of block, in bytes","name": "BlockSize"},{"file": 20,"line": 393,"col": 4,"docs": " Offset to start of code bytes for line number","name": "Offset"},{"file": 20,"line": 394,"col": 4,"name": "Flags"},{"file": 20,"line": 408,"col": 4,"name": "StartColumn"},{"file": 20,"line": 409,"col": 4,"name": "EndColumn"},{"file": 20,"line": 415,"col": 4,"docs": " Byte offset of filename in global string table.","name": "FileNameOffset"},{"file": 20,"line": 418,"col": 4,"docs": " Number of bytes of checksum.","name": "ChecksumSize"},{"file": 20,"line": 421,"col": 4,"docs": " FileChecksumKind","name": "ChecksumKind"},{"file": 20,"line": 425,"col": 4,"name": "None"},{"file": 20,"line": 426,"col": 4,"name": "Symbols"},{"file": 20,"line": 427,"col": 4,"name": "Lines"},{"file": 20,"line": 428,"col": 4,"name": "StringTable"},{"file": 20,"line": 429,"col": 4,"name": "FileChecksums"},{"file": 20,"line": 430,"col": 4,"name": "FrameData"},{"file": 20,"line": 431,"col": 4,"name": "InlineeLines"},{"file": 20,"line": 432,"col": 4,"name": "CrossScopeImports"},{"file": 20,"line": 433,"col": 4,"name": "CrossScopeExports"},{"file": 20,"line": 436,"col": 4,"name": "ILLines"},{"file": 20,"line": 437,"col": 4,"name": "FuncMDTokenMap"},{"file": 20,"line": 438,"col": 4,"name": "TypeMDTokenMap"},{"file": 20,"line": 439,"col": 4,"name": "MergedAssemblyInput"},{"file": 20,"line": 441,"col": 4,"name": "CoffSymbolRVA"},{"file": 20,"line": 446,"col": 4,"docs": " codeview::DebugSubsectionKind enum","name": "Kind"},{"file": 20,"line": 449,"col": 4,"docs": " number of bytes occupied by this record.","name": "Length"},{"file": 20,"line": 454,"col": 4,"docs": " PDBStringTableSignature","name": "Signature"},{"file": 20,"line": 457,"col": 4,"docs": " 1 or 2","name": "HashVersion"},{"file": 20,"line": 460,"col": 4,"docs": " Number of bytes of names buffer.","name": "ByteSize"},{"file": 53,"line": 25,"col": 0,"name": "state"},{"file": 54,"line": 17,"col": 0,"name": "impl"},{"file": 22,"line": 427,"col": 4,"name": "thread"},{"file": 26,"line": 950,"col": 4,"name": "nlist"},{"file": 26,"line": 951,"col": 4,"name": "ofile"},{"file": 26,"line": 952,"col": 4,"name": "reloc"},{"file": 32,"line": 16,"col": 4,"docs": " I/O operates normally, waiting for the operating system syscalls to complete.","name": "blocking"},{"file": 32,"line": 19,"col": 4,"docs": " I/O functions are generated async and rely on a global event loop. Event-based I/O.","name": "evented"},{"file": 33,"line": 741,"col": 4,"name": "n_strx"},{"file": 33,"line": 742,"col": 4,"name": "n_type"},{"file": 33,"line": 743,"col": 4,"name": "n_sect"},{"file": 33,"line": 744,"col": 4,"name": "n_desc"},{"file": 33,"line": 745,"col": 4,"name": "n_value"},{"file": 36,"line": 182,"col": 4,"name": "iov_base"},{"file": 36,"line": 183,"col": 4,"name": "iov_len"},{"file": 36,"line": 187,"col": 4,"name": "iov_base"},{"file": 36,"line": 188,"col": 4,"name": "iov_len"},{"file": 25,"line": 354,"col": 8,"name": "virtual_address"},{"file": 25,"line": 355,"col": 8,"name": "size"},{"file": 46,"line": 3279,"col": 8,"name": "KernelCallbackTable"},{"file": 46,"line": 3280,"col": 8,"name": "UserSharedInfoPtr"},{"file": 46,"line": 3218,"col": 4,"name": "Length"},{"file": 46,"line": 3219,"col": 4,"name": "MaximumLength"},{"file": 46,"line": 3220,"col": 4,"name": "Buffer"},{"file": 46,"line": 2897,"col": 4,"name": "Flink"},{"file": 46,"line": 2898,"col": 4,"name": "Blink"},{"file": 46,"line": 2435,"col": 4,"name": "FileNameLength"},{"file": 46,"line": 2436,"col": 4,"name": "FileName"},{"file": 46,"line": 2458,"col": 4,"name": "nLength"},{"file": 46,"line": 2459,"col": 4,"name": "lpSecurityDescriptor"},{"file": 46,"line": 2460,"col": 4,"name": "bInheritHandle"},{"file": 46,"line": 2816,"col": 4,"name": "Left"},{"file": 46,"line": 2817,"col": 4,"name": "Top"},{"file": 46,"line": 2818,"col": 4,"name": "Right"},{"file": 46,"line": 2819,"col": 4,"name": "Bottom"},{"file": 46,"line": 2828,"col": 4,"name": "X"},{"file": 46,"line": 2829,"col": 4,"name": "Y"},{"file": 46,"line": 2884,"col": 4,"name": "dwSize"},{"file": 46,"line": 2885,"col": 4,"name": "dwCursorPosition"},{"file": 46,"line": 2886,"col": 4,"name": "wAttributes"},{"file": 46,"line": 2887,"col": 4,"name": "srWindow"},{"file": 46,"line": 2888,"col": 4,"name": "dwMaximumWindowSize"},{"file": 46,"line": 2902,"col": 4,"name": "Type"},{"file": 46,"line": 2903,"col": 4,"name": "CreatorBackTraceIndex"},{"file": 46,"line": 2904,"col": 4,"name": "CriticalSection"},{"file": 46,"line": 2905,"col": 4,"name": "ProcessLocksList"},{"file": 46,"line": 2906,"col": 4,"name": "EntryCount"},{"file": 46,"line": 2907,"col": 4,"name": "ContentionCount"},{"file": 46,"line": 2908,"col": 4,"name": "Flags"},{"file": 46,"line": 2909,"col": 4,"name": "CreatorBackTraceIndexHigh"},{"file": 46,"line": 2910,"col": 4,"name": "SpareWORD"},{"file": 46,"line": 2914,"col": 4,"name": "DebugInfo"},{"file": 46,"line": 2915,"col": 4,"name": "LockCount"},{"file": 46,"line": 2916,"col": 4,"name": "RecursionCount"},{"file": 46,"line": 2917,"col": 4,"name": "OwningThread"},{"file": 46,"line": 2918,"col": 4,"name": "LockSemaphore"},{"file": 46,"line": 2919,"col": 4,"name": "SpinCount"},{"file": 46,"line": 3200,"col": 4,"name": "Length"},{"file": 46,"line": 3201,"col": 4,"name": "RootDirectory"},{"file": 46,"line": 3202,"col": 4,"name": "ObjectName"},{"file": 46,"line": 3203,"col": 4,"name": "Attributes"},{"file": 46,"line": 3204,"col": 4,"name": "SecurityDescriptor"},{"file": 46,"line": 3205,"col": 4,"name": "SecurityQualityOfService"},{"file": 46,"line": 3410,"col": 4,"docs": " The size in bytes of the structure","name": "Length"},{"file": 46,"line": 3413,"col": 4,"docs": " TRUE if the structure is prepared.","name": "Initialized"},{"file": 46,"line": 3415,"col": 4,"name": "SsHandle"},{"file": 46,"line": 3416,"col": 4,"name": "InLoadOrderModuleList"},{"file": 46,"line": 3417,"col": 4,"name": "InMemoryOrderModuleList"},{"file": 46,"line": 3418,"col": 4,"name": "InInitializationOrderModuleList"},{"file": 46,"line": 3423,"col": 4,"docs": " No known use of this field is known in Windows 8 and higher.","name": "EntryInProgress"},{"file": 46,"line": 3426,"col": 4,"name": "ShutdownInProgress"},{"file": 46,"line": 3432,"col": 4,"docs": " Though ShutdownThreadId is declared as a HANDLE, it is indeed the thread ID as suggested by its name. It is picked up from the UniqueThread member of the CLIENT_ID in the TEB of the thread that asks to terminate the process.","name": "ShutdownThreadId"},{"file": 46,"line": 3436,"col": 4,"name": "AllocationSize"},{"file": 46,"line": 3437,"col": 4,"name": "Size"},{"file": 46,"line": 3438,"col": 4,"name": "Flags"},{"file": 46,"line": 3439,"col": 4,"name": "DebugFlags"},{"file": 46,"line": 3440,"col": 4,"name": "ConsoleHandle"},{"file": 46,"line": 3441,"col": 4,"name": "ConsoleFlags"},{"file": 46,"line": 3442,"col": 4,"name": "hStdInput"},{"file": 46,"line": 3443,"col": 4,"name": "hStdOutput"},{"file": 46,"line": 3444,"col": 4,"name": "hStdError"},{"file": 46,"line": 3445,"col": 4,"name": "CurrentDirectory"},{"file": 46,"line": 3446,"col": 4,"name": "DllPath"},{"file": 46,"line": 3447,"col": 4,"name": "ImagePathName"},{"file": 46,"line": 3448,"col": 4,"name": "CommandLine"},{"file": 46,"line": 3449,"col": 4,"name": "Environment"},{"file": 46,"line": 3450,"col": 4,"name": "dwX"},{"file": 46,"line": 3451,"col": 4,"name": "dwY"},{"file": 46,"line": 3452,"col": 4,"name": "dwXSize"},{"file": 46,"line": 3453,"col": 4,"name": "dwYSize"},{"file": 46,"line": 3454,"col": 4,"name": "dwXCountChars"},{"file": 46,"line": 3455,"col": 4,"name": "dwYCountChars"},{"file": 46,"line": 3456,"col": 4,"name": "dwFillAttribute"},{"file": 46,"line": 3457,"col": 4,"name": "dwFlags"},{"file": 46,"line": 3458,"col": 4,"name": "dwShowWindow"},{"file": 46,"line": 3459,"col": 4,"name": "WindowTitle"},{"file": 46,"line": 3460,"col": 4,"name": "Desktop"},{"file": 46,"line": 3461,"col": 4,"name": "ShellInfo"},{"file": 46,"line": 3462,"col": 4,"name": "RuntimeInfo"},{"file": 46,"line": 3463,"col": 4,"name": "DLCurrentDirectory"},{"file": 46,"line": 3467,"col": 4,"name": "Flags"},{"file": 46,"line": 3468,"col": 4,"name": "Length"},{"file": 46,"line": 3469,"col": 4,"name": "TimeStamp"},{"file": 46,"line": 3470,"col": 4,"name": "DosPath"},{"file": 46,"line": 3496,"col": 4,"name": "DosPath"},{"file": 46,"line": 3497,"col": 4,"name": "Handle"},{"file": 46,"line": 3503,"col": 4,"name": "lpBaseOfDll"},{"file": 46,"line": 3504,"col": 4,"name": "SizeOfImage"},{"file": 46,"line": 3505,"col": 4,"name": "EntryPoint"},{"file": 46,"line": 2290,"col": 8,"name": "Status"},{"file": 46,"line": 2291,"col": 8,"name": "Pointer"},{"file": 12,"line": 485,"col": 8,"name": "min"},{"file": 12,"line": 486,"col": 8,"name": "max"},{"file": 3,"line": 140,"col": 16,"name": "min"},{"file": 3,"line": 141,"col": 16,"name": "max"},{"file": 12,"line": 620,"col": 8,"docs": " Equivalent to function call syntax.","name": "auto"},{"file": 12,"line": 623,"col": 8,"docs": " Equivalent to async keyword used with function call syntax.","name": "async_kw"},{"file": 12,"line": 629,"col": 8,"docs": " Prevents tail call optimization. This guarantees that the return address will point to the callsite, as opposed to the callsite's callsite. If the call is otherwise required to be tail-called or inlined, a compile error is emitted instead.","name": "never_tail"},{"file": 12,"line": 633,"col": 8,"docs": " Guarantees that the call will not be inlined. If the call is otherwise required to be inlined, a compile error is emitted instead.","name": "never_inline"},{"file": 12,"line": 637,"col": 8,"docs": " Asserts that the function call will not suspend. This allows a non-async function to call an async function.","name": "no_async"},{"file": 12,"line": 641,"col": 8,"docs": " Guarantees that the call will be generated with tail call optimization. If this is not possible, a compile error is emitted instead.","name": "always_tail"},{"file": 12,"line": 645,"col": 8,"docs": " Guarantees that the call will inlined at the callsite. If this is not possible, a compile error is emitted instead.","name": "always_inline"},{"file": 12,"line": 649,"col": 8,"docs": " Evaluates the call at compile-time. If the call cannot be completed at compile-time, a compile error is emitted instead.","name": "compile_time"},{"file": 12,"line": 421,"col": 16,"name": "fn_type"},{"file": 12,"line": 422,"col": 16,"name": "is_noinline"},{"file": 12,"line": 423,"col": 16,"name": "is_var_args"},{"file": 12,"line": 424,"col": 16,"name": "is_extern"},{"file": 12,"line": 425,"col": 16,"name": "is_export"},{"file": 12,"line": 426,"col": 16,"name": "lib_name"},{"file": 12,"line": 427,"col": 16,"name": "return_type"},{"file": 12,"line": 428,"col": 16,"name": "arg_names"},{"file": 18,"line": 845,"col": 8,"name": "timer"},{"file": 18,"line": 846,"col": 8,"name": "waiters"},{"file": 18,"line": 847,"col": 8,"name": "thread"},{"file": 18,"line": 848,"col": 8,"name": "event"},{"file": 18,"line": 849,"col": 8,"name": "is_running"},{"file": 18,"line": 1548,"col": 12,"name": "io_port"},{"file": 18,"line": 1549,"col": 12,"name": "extra_thread_count"},{"file": 46,"line": 2379,"col": 8,"name": "DUMMYSTRUCTNAME"},{"file": 46,"line": 2383,"col": 8,"name": "Pointer"},{"file": 20,"line": 399,"col": 8,"docs": " Start line number","name": "Start"},{"file": 20,"line": 402,"col": 8,"docs": " Delta of lines to the end of the expression. Still unclear.","name": "End"},{"file": 20,"line": 403,"col": 8,"name": "IsStatement"},{"file": 22,"line": 430,"col": 8,"name": "completion"},{"file": 22,"line": 431,"col": 8,"name": "heap_ptr"},{"file": 22,"line": 432,"col": 8,"name": "heap_handle"},{"file": 22,"line": 433,"col": 8,"name": "thread_handle"},{"file": 18,"line": 892,"col": 12,"name": "entries"},{"file": 46,"line": 2380,"col": 12,"name": "Offset"},{"file": 46,"line": 2381,"col": 12,"name": "OffsetHigh"},{"file": 3,"line": 724,"col": 41,"name": "set"},{"file": 3,"line": 724,"col": 51,"name": "feature"},{"file": 3,"line": 729,"col": 44,"name": "set"},{"file": 3,"line": 729,"col": 54,"name": "features"},{"file": 3,"line": 738,"col": 44,"name": "set"},{"file": 3,"line": 738,"col": 54,"name": "features"},{"file": 4,"line": 49,"col": 30,"name": "self"},{"file": 4,"line": 49,"col": 42,"name": "T","comptime": true},{"file": 4,"line": 49,"col": 60,"name": "value"},{"file": 4,"line": 57,"col": 31,"name": "self"},{"file": 4,"line": 57,"col": 43,"name": "T","comptime": true},{"file": 4,"line": 57,"col": 61,"name": "value"},{"file": 4,"line": 64,"col": 30,"name": "self"},{"file": 4,"line": 64,"col": 42,"name": "T","comptime": true},{"file": 4,"line": 64,"col": 60,"name": "value"},{"file": 4,"line": 71,"col": 27,"name": "self"},{"file": 4,"line": 71,"col": 39,"name": "T","comptime": true},{"file": 4,"line": 71,"col": 57,"name": "value"},{"file": 4,"line": 78,"col": 24,"name": "self"},{"file": 4,"line": 78,"col": 36,"name": "T","comptime": true},{"file": 4,"line": 78,"col": 54,"name": "value"},{"file": 4,"line": 78,"col": 64,"name": "endian"},{"file": 4,"line": 84,"col": 27,"name": "self"},{"file": 4,"line": 84,"col": 39,"name": "value"},{"file": 5,"line": 225,"col": 21,"name": "self"},{"file": 5,"line": 225,"col": 33,"name": "length"},{"file": 5,"line": 233,"col": 18,"name": "self"},{"file": 5,"line": 233,"col": 30,"name": "offset"},{"file": 5,"line": 239,"col": 23,"name": "self"},{"file": 5,"line": 239,"col": 35,"name": "offset"},{"file": 5,"line": 267,"col": 16,"name": "self"},{"file": 5,"line": 299,"col": 16,"name": "self"},{"file": 5,"line": 372,"col": 17,"name": "self"},{"file": 5,"line": 372,"col": 29,"name": "new_mode"},{"file": 5,"line": 383,"col": 17,"name": "self"},{"file": 5,"line": 383,"col": 29,"name": "owner"},{"file": 5,"line": 383,"col": 42,"name": "group"},{"file": 5,"line": 395,"col": 8,"name": "self"},{"file": 5,"line": 397,"col": 8,"docs": " access timestamp in nanoseconds","name": "atime"},{"file": 5,"line": 399,"col": 8,"docs": " last modification timestamp in nanoseconds","name": "mtime"},{"file": 5,"line": 422,"col": 26,"name": "self"},{"file": 5,"line": 422,"col": 38,"name": "allocator"},{"file": 5,"line": 422,"col": 65,"name": "max_bytes"},{"file": 5,"line": 433,"col": 8,"name": "self"},{"file": 5,"line": 434,"col": 8,"name": "allocator"},{"file": 5,"line": 435,"col": 8,"name": "max_bytes"},{"file": 5,"line": 436,"col": 8,"name": "size_hint"},{"file": 5,"line": 437,"col": 8,"name": "alignment","comptime": true},{"file": 5,"line": 438,"col": 8,"name": "optional_sentinel","comptime": true},{"file": 5,"line": 481,"col": 19,"name": "self"},{"file": 5,"line": 481,"col": 31,"name": "buffer"},{"file": 5,"line": 491,"col": 17,"name": "self"},{"file": 5,"line": 491,"col": 29,"name": "buffer"},{"file": 5,"line": 491,"col": 43,"name": "offset"},{"file": 5,"line": 505,"col": 20,"name": "self"},{"file": 5,"line": 505,"col": 32,"name": "buffer"},{"file": 5,"line": 505,"col": 46,"name": "offset"},{"file": 5,"line": 516,"col": 17,"name": "self"},{"file": 5,"line": 516,"col": 29,"name": "iovecs"},{"file": 5,"line": 537,"col": 20,"name": "self"},{"file": 5,"line": 537,"col": 32,"name": "iovecs"},{"file": 5,"line": 559,"col": 18,"name": "self"},{"file": 5,"line": 559,"col": 30,"name": "iovecs"},{"file": 5,"line": 559,"col": 56,"name": "offset"},{"file": 5,"line": 580,"col": 21,"name": "self"},{"file": 5,"line": 580,"col": 33,"name": "iovecs"},{"file": 5,"line": 580,"col": 53,"name": "offset"},{"file": 5,"line": 616,"col": 20,"name": "self"},{"file": 5,"line": 616,"col": 32,"name": "bytes"},{"file": 5,"line": 623,"col": 18,"name": "self"},{"file": 5,"line": 623,"col": 30,"name": "bytes"},{"file": 5,"line": 623,"col": 49,"name": "offset"},{"file": 5,"line": 635,"col": 21,"name": "self"},{"file": 5,"line": 635,"col": 33,"name": "bytes"},{"file": 5,"line": 635,"col": 52,"name": "offset"},{"file": 5,"line": 644,"col": 18,"name": "self"},{"file": 5,"line": 644,"col": 30,"name": "iovecs"},{"file": 5,"line": 663,"col": 21,"name": "self"},{"file": 5,"line": 663,"col": 33,"name": "iovecs"},{"file": 5,"line": 680,"col": 19,"name": "self"},{"file": 5,"line": 680,"col": 31,"name": "iovecs"},{"file": 5,"line": 680,"col": 57,"name": "offset"},{"file": 5,"line": 698,"col": 22,"name": "self"},{"file": 5,"line": 698,"col": 34,"name": "iovecs"},{"file": 5,"line": 698,"col": 60,"name": "offset"},{"file": 5,"line": 718,"col": 21,"name": "in"},{"file": 5,"line": 718,"col": 31,"name": "in_offset"},{"file": 5,"line": 718,"col": 47,"name": "out"},{"file": 5,"line": 718,"col": 58,"name": "out_offset"},{"file": 5,"line": 718,"col": 75,"name": "len"},{"file": 5,"line": 726,"col": 24,"name": "in"},{"file": 5,"line": 726,"col": 34,"name": "in_offset"},{"file": 5,"line": 726,"col": 50,"name": "out"},{"file": 5,"line": 726,"col": 61,"name": "out_offset"},{"file": 5,"line": 726,"col": 78,"name": "len"},{"file": 5,"line": 758,"col": 24,"name": "self"},{"file": 5,"line": 758,"col": 36,"name": "in_file"},{"file": 5,"line": 758,"col": 51,"name": "args"},{"file": 5,"line": 774,"col": 34,"name": "self"},{"file": 5,"line": 774,"col": 46,"name": "in_file"},{"file": 5,"line": 774,"col": 61,"name": "args"},{"file": 5,"line": 882,"col": 26,"name": "file"},{"file": 5,"line": 901,"col": 16,"name": "file"},{"file": 5,"line": 901,"col": 28,"name": "l"},{"file": 5,"line": 937,"col": 18,"name": "file"},{"file": 5,"line": 968,"col": 19,"name": "file"},{"file": 5,"line": 968,"col": 31,"name": "l"},{"file": 5,"line": 1008,"col": 25,"name": "file"},{"file": 5,"line": 796,"col": 28,"name": "self"},{"file": 5,"line": 796,"col": 40,"name": "in_file"},{"file": 5,"line": 796,"col": 55,"name": "args"},{"file": 6,"line": 406,"col": 27,"name": "allocator"},{"file": 6,"line": 406,"col": 50,"name": "ctx"},{"file": 6,"line": 418,"col": 22,"name": "self"},{"file": 6,"line": 427,"col": 38,"name": "self"},{"file": 6,"line": 435,"col": 28,"name": "self"},{"file": 6,"line": 440,"col": 21,"name": "self"},{"file": 6,"line": 446,"col": 24,"name": "self"},{"file": 6,"line": 452,"col": 27,"name": "self"},{"file": 6,"line": 458,"col": 29,"name": "self"},{"file": 6,"line": 468,"col": 24,"name": "self"},{"file": 6,"line": 468,"col": 37,"name": "key"},{"file": 6,"line": 478,"col": 31,"name": "self"},{"file": 6,"line": 478,"col": 44,"name": "key"},{"file": 6,"line": 478,"col": 58,"name": "ctx"},{"file": 6,"line": 489,"col": 38,"name": "self"},{"file": 6,"line": 489,"col": 51,"name": "key"},{"file": 6,"line": 500,"col": 45,"name": "self"},{"file": 6,"line": 500,"col": 58,"name": "key"},{"file": 6,"line": 500,"col": 72,"name": "ctx"},{"file": 6,"line": 504,"col": 29,"name": "self"},{"file": 6,"line": 504,"col": 42,"name": "key"},{"file": 6,"line": 504,"col": 50,"name": "value"},{"file": 6,"line": 513,"col": 35,"name": "self"},{"file": 6,"line": 513,"col": 48,"name": "expected_count"},{"file": 6,"line": 520,"col": 36,"name": "self"},{"file": 6,"line": 520,"col": 49,"name": "additional_count"},{"file": 6,"line": 526,"col": 24,"name": "self"},{"file": 6,"line": 532,"col": 19,"name": "self"},{"file": 6,"line": 532,"col": 32,"name": "key"},{"file": 6,"line": 532,"col": 40,"name": "value"},{"file": 6,"line": 545,"col": 33,"name": "self"},{"file": 6,"line": 545,"col": 46,"name": "key"},{"file": 6,"line": 545,"col": 54,"name": "value"},{"file": 6,"line": 552,"col": 42,"name": "self"},{"file": 6,"line": 552,"col": 55,"name": "key"},{"file": 6,"line": 552,"col": 63,"name": "value"},{"file": 6,"line": 557,"col": 24,"name": "self"},{"file": 6,"line": 557,"col": 37,"name": "key"},{"file": 6,"line": 557,"col": 45,"name": "value"},{"file": 6,"line": 563,"col": 38,"name": "self"},{"file": 6,"line": 563,"col": 51,"name": "key"},{"file": 6,"line": 563,"col": 59,"name": "value"},{"file": 6,"line": 568,"col": 27,"name": "self"},{"file": 6,"line": 568,"col": 40,"name": "key"},{"file": 6,"line": 572,"col": 34,"name": "self"},{"file": 6,"line": 572,"col": 47,"name": "key"},{"file": 6,"line": 572,"col": 61,"name": "ctx"},{"file": 6,"line": 580,"col": 26,"name": "self"},{"file": 6,"line": 580,"col": 38,"name": "key"},{"file": 6,"line": 580,"col": 52,"name": "ctx"},{"file": 6,"line": 584,"col": 22,"name": "self"},{"file": 6,"line": 584,"col": 34,"name": "key"},{"file": 6,"line": 587,"col": 29,"name": "self"},{"file": 6,"line": 587,"col": 41,"name": "key"},{"file": 6,"line": 587,"col": 55,"name": "ctx"},{"file": 6,"line": 592,"col": 22,"name": "self"},{"file": 6,"line": 592,"col": 34,"name": "key"},{"file": 6,"line": 595,"col": 29,"name": "self"},{"file": 6,"line": 595,"col": 41,"name": "key"},{"file": 6,"line": 595,"col": 55,"name": "ctx"},{"file": 6,"line": 599,"col": 25,"name": "self"},{"file": 6,"line": 599,"col": 37,"name": "key"},{"file": 6,"line": 602,"col": 32,"name": "self"},{"file": 6,"line": 602,"col": 44,"name": "key"},{"file": 6,"line": 602,"col": 58,"name": "ctx"},{"file": 6,"line": 607,"col": 24,"name": "self"},{"file": 6,"line": 607,"col": 36,"name": "key"},{"file": 6,"line": 611,"col": 31,"name": "self"},{"file": 6,"line": 611,"col": 43,"name": "key"},{"file": 6,"line": 611,"col": 57,"name": "ctx"},{"file": 6,"line": 616,"col": 24,"name": "self"},{"file": 6,"line": 616,"col": 36,"name": "key"},{"file": 6,"line": 620,"col": 31,"name": "self"},{"file": 6,"line": 620,"col": 43,"name": "key"},{"file": 6,"line": 620,"col": 57,"name": "ctx"},{"file": 6,"line": 626,"col": 22,"name": "self"},{"file": 6,"line": 626,"col": 35,"name": "key"},{"file": 6,"line": 630,"col": 29,"name": "self"},{"file": 6,"line": 630,"col": 42,"name": "key"},{"file": 6,"line": 630,"col": 56,"name": "ctx"},{"file": 6,"line": 635,"col": 21,"name": "self"},{"file": 6,"line": 641,"col": 34,"name": "self"},{"file": 6,"line": 641,"col": 46,"name": "new_allocator"},{"file": 6,"line": 647,"col": 32,"name": "self"},{"file": 6,"line": 647,"col": 44,"name": "new_ctx"},{"file": 6,"line": 654,"col": 12,"name": "self"},{"file": 6,"line": 655,"col": 12,"name": "new_allocator"},{"file": 6,"line": 656,"col": 12,"name": "new_ctx"},{"file": 6,"line": 846,"col": 23,"name": "self"},{"file": 6,"line": 846,"col": 35,"name": "allocator"},{"file": 6,"line": 852,"col": 30,"name": "self"},{"file": 6,"line": 852,"col": 42,"name": "allocator"},{"file": 6,"line": 852,"col": 65,"name": "ctx"},{"file": 6,"line": 878,"col": 35,"name": "self"},{"file": 6,"line": 878,"col": 48,"name": "allocator"},{"file": 6,"line": 878,"col": 71,"name": "new_size"},{"file": 6,"line": 883,"col": 42,"name": "self"},{"file": 6,"line": 883,"col": 55,"name": "allocator"},{"file": 6,"line": 883,"col": 78,"name": "new_size"},{"file": 6,"line": 883,"col": 94,"name": "ctx"},{"file": 6,"line": 888,"col": 36,"name": "self"},{"file": 6,"line": 888,"col": 49,"name": "allocator"},{"file": 6,"line": 888,"col": 72,"name": "additional_size"},{"file": 6,"line": 891,"col": 43,"name": "self"},{"file": 6,"line": 891,"col": 56,"name": "allocator"},{"file": 6,"line": 891,"col": 79,"name": "additional_size"},{"file": 6,"line": 891,"col": 102,"name": "ctx"},{"file": 6,"line": 895,"col": 38,"name": "self"},{"file": 6,"line": 903,"col": 28,"name": "self"},{"file": 6,"line": 903,"col": 41,"name": "allocator"},{"file": 6,"line": 909,"col": 21,"name": "self"},{"file": 6,"line": 931,"col": 24,"name": "self"},{"file": 6,"line": 935,"col": 27,"name": "self"},{"file": 6,"line": 951,"col": 29,"name": "self"},{"file": 6,"line": 968,"col": 28,"name": "self"},{"file": 6,"line": 968,"col": 41,"name": "allocator"},{"file": 6,"line": 968,"col": 64,"name": "key"},{"file": 6,"line": 968,"col": 72,"name": "value"},{"file": 6,"line": 983,"col": 33,"name": "self"},{"file": 6,"line": 983,"col": 46,"name": "key"},{"file": 6,"line": 983,"col": 54,"name": "value"},{"file": 6,"line": 988,"col": 40,"name": "self"},{"file": 6,"line": 988,"col": 53,"name": "key"},{"file": 6,"line": 988,"col": 61,"name": "value"},{"file": 6,"line": 988,"col": 71,"name": "ctx"},{"file": 6,"line": 995,"col": 42,"name": "self"},{"file": 6,"line": 995,"col": 55,"name": "key"},{"file": 6,"line": 995,"col": 63,"name": "value"},{"file": 6,"line": 1027,"col": 24,"name": "self"},{"file": 6,"line": 1027,"col": 37,"name": "allocator"},{"file": 6,"line": 1027,"col": 60,"name": "key"},{"file": 6,"line": 1027,"col": 68,"name": "value"},{"file": 6,"line": 1032,"col": 31,"name": "self"},{"file": 6,"line": 1032,"col": 44,"name": "allocator"},{"file": 6,"line": 1032,"col": 67,"name": "key"},{"file": 6,"line": 1032,"col": 75,"name": "value"},{"file": 6,"line": 1032,"col": 85,"name": "ctx"},{"file": 6,"line": 1047,"col": 38,"name": "self"},{"file": 6,"line": 1047,"col": 51,"name": "key"},{"file": 6,"line": 1047,"col": 59,"name": "value"},{"file": 6,"line": 1052,"col": 45,"name": "self"},{"file": 6,"line": 1052,"col": 58,"name": "key"},{"file": 6,"line": 1052,"col": 66,"name": "value"},{"file": 6,"line": 1052,"col": 76,"name": "ctx"},{"file": 6,"line": 1067,"col": 27,"name": "self"},{"file": 6,"line": 1067,"col": 40,"name": "key"},{"file": 6,"line": 1072,"col": 34,"name": "self"},{"file": 6,"line": 1072,"col": 47,"name": "key"},{"file": 6,"line": 1072,"col": 55,"name": "ctx"},{"file": 6,"line": 1075,"col": 34,"name": "self"},{"file": 6,"line": 1075,"col": 47,"name": "key"},{"file": 6,"line": 1075,"col": 61,"name": "ctx"},{"file": 6,"line": 1144,"col": 24,"name": "self"},{"file": 6,"line": 1144,"col": 36,"name": "key"},{"file": 6,"line": 1149,"col": 31,"name": "self"},{"file": 6,"line": 1149,"col": 43,"name": "key"},{"file": 6,"line": 1149,"col": 51,"name": "ctx"},{"file": 6,"line": 1152,"col": 31,"name": "self"},{"file": 6,"line": 1152,"col": 43,"name": "key"},{"file": 6,"line": 1152,"col": 57,"name": "ctx"},{"file": 6,"line": 1163,"col": 19,"name": "self"},{"file": 6,"line": 1163,"col": 32,"name": "allocator"},{"file": 6,"line": 1163,"col": 55,"name": "key"},{"file": 6,"line": 1163,"col": 63,"name": "value"},{"file": 6,"line": 1168,"col": 26,"name": "self"},{"file": 6,"line": 1168,"col": 39,"name": "allocator"},{"file": 6,"line": 1168,"col": 62,"name": "key"},{"file": 6,"line": 1168,"col": 70,"name": "value"},{"file": 6,"line": 1168,"col": 80,"name": "ctx"},{"file": 6,"line": 1174,"col": 25,"name": "self"},{"file": 6,"line": 1174,"col": 37,"name": "key"},{"file": 6,"line": 1179,"col": 32,"name": "self"},{"file": 6,"line": 1179,"col": 44,"name": "key"},{"file": 6,"line": 1179,"col": 52,"name": "ctx"},{"file": 6,"line": 1182,"col": 32,"name": "self"},{"file": 6,"line": 1182,"col": 44,"name": "key"},{"file": 6,"line": 1182,"col": 58,"name": "ctx"},{"file": 6,"line": 1190,"col": 22,"name": "self"},{"file": 6,"line": 1190,"col": 34,"name": "key"},{"file": 6,"line": 1195,"col": 29,"name": "self"},{"file": 6,"line": 1195,"col": 41,"name": "key"},{"file": 6,"line": 1195,"col": 49,"name": "ctx"},{"file": 6,"line": 1198,"col": 29,"name": "self"},{"file": 6,"line": 1198,"col": 41,"name": "key"},{"file": 6,"line": 1198,"col": 55,"name": "ctx"},{"file": 6,"line": 1206,"col": 22,"name": "self"},{"file": 6,"line": 1206,"col": 34,"name": "key"},{"file": 6,"line": 1211,"col": 29,"name": "self"},{"file": 6,"line": 1211,"col": 41,"name": "key"},{"file": 6,"line": 1211,"col": 49,"name": "ctx"},{"file": 6,"line": 1214,"col": 29,"name": "self"},{"file": 6,"line": 1214,"col": 41,"name": "key"},{"file": 6,"line": 1214,"col": 55,"name": "ctx"},{"file": 6,"line": 1222,"col": 19,"name": "self"},{"file": 6,"line": 1222,"col": 31,"name": "key"},{"file": 6,"line": 1237,"col": 24,"name": "self"},{"file": 6,"line": 1237,"col": 37,"name": "allocator"},{"file": 6,"line": 1237,"col": 60,"name": "key"},{"file": 6,"line": 1242,"col": 31,"name": "self"},{"file": 6,"line": 1242,"col": 44,"name": "allocator"},{"file": 6,"line": 1242,"col": 67,"name": "key"},{"file": 6,"line": 1242,"col": 75,"name": "ctx"},{"file": 6,"line": 1249,"col": 31,"name": "self"},{"file": 6,"line": 1249,"col": 44,"name": "allocator"},{"file": 6,"line": 1249,"col": 67,"name": "key"},{"file": 6,"line": 1249,"col": 81,"name": "key_ctx"},{"file": 6,"line": 1254,"col": 38,"name": "self"},{"file": 6,"line": 1254,"col": 51,"name": "allocator"},{"file": 6,"line": 1254,"col": 74,"name": "key"},{"file": 6,"line": 1254,"col": 88,"name": "key_ctx"},{"file": 6,"line": 1254,"col": 106,"name": "ctx"},{"file": 6,"line": 1269,"col": 38,"name": "self"},{"file": 6,"line": 1269,"col": 51,"name": "key"},{"file": 6,"line": 1274,"col": 45,"name": "self"},{"file": 6,"line": 1274,"col": 58,"name": "key"},{"file": 6,"line": 1274,"col": 66,"name": "ctx"},{"file": 6,"line": 1281,"col": 45,"name": "self"},{"file": 6,"line": 1281,"col": 58,"name": "key"},{"file": 6,"line": 1281,"col": 72,"name": "ctx"},{"file": 6,"line": 1347,"col": 29,"name": "self"},{"file": 6,"line": 1347,"col": 42,"name": "allocator"},{"file": 6,"line": 1347,"col": 65,"name": "key"},{"file": 6,"line": 1347,"col": 73,"name": "value"},{"file": 6,"line": 1352,"col": 36,"name": "self"},{"file": 6,"line": 1352,"col": 49,"name": "allocator"},{"file": 6,"line": 1352,"col": 72,"name": "key"},{"file": 6,"line": 1352,"col": 80,"name": "value"},{"file": 6,"line": 1352,"col": 90,"name": "ctx"},{"file": 6,"line": 1362,"col": 24,"name": "self"},{"file": 6,"line": 1362,"col": 43,"name": "key"},{"file": 6,"line": 1377,"col": 22,"name": "self"},{"file": 6,"line": 1377,"col": 35,"name": "key"},{"file": 6,"line": 1382,"col": 29,"name": "self"},{"file": 6,"line": 1382,"col": 42,"name": "key"},{"file": 6,"line": 1382,"col": 50,"name": "ctx"},{"file": 6,"line": 1385,"col": 29,"name": "self"},{"file": 6,"line": 1385,"col": 42,"name": "key"},{"file": 6,"line": 1385,"col": 56,"name": "ctx"},{"file": 6,"line": 1415,"col": 21,"name": "self"},{"file": 6,"line": 1415,"col": 33,"name": "allocator"},{"file": 6,"line": 1420,"col": 28,"name": "self"},{"file": 6,"line": 1420,"col": 40,"name": "allocator"},{"file": 6,"line": 1420,"col": 63,"name": "new_ctx"},{"file": 6,"line": 816,"col": 25,"name": "T","comptime": true},{"file": 6,"line": 860,"col": 36,"name": "size"},{"file": 6,"line": 860,"col": 48,"name": "cap"},{"file": 7,"line": 60,"col": 28,"name": "allocator"},{"file": 7,"line": 60,"col": 51,"name": "num"},{"file": 7,"line": 85,"col": 30,"name": "allocator"},{"file": 7,"line": 85,"col": 53,"name": "slice"},{"file": 7,"line": 96,"col": 27,"name": "self"},{"file": 7,"line": 102,"col": 31,"name": "self"},{"file": 7,"line": 118,"col": 36,"name": "self"},{"file": 7,"line": 118,"col": 49,"name": "sentinel","comptime": true},{"file": 7,"line": 126,"col": 22,"name": "self"},{"file": 7,"line": 126,"col": 35,"name": "n"},{"file": 7,"line": 126,"col": 45,"name": "item"},{"file": 7,"line": 136,"col": 27,"name": "self"},{"file": 7,"line": 136,"col": 40,"name": "i"},{"file": 7,"line": 136,"col": 50,"name": "items"},{"file": 7,"line": 148,"col": 28,"name": "self"},{"file": 7,"line": 148,"col": 41,"name": "start"},{"file": 7,"line": 148,"col": 55,"name": "len"},{"file": 7,"line": 148,"col": 67,"name": "new_items"},{"file": 7,"line": 191,"col": 29,"name": "self"},{"file": 7,"line": 191,"col": 42,"name": "i"},{"file": 7,"line": 205,"col": 26,"name": "self"},{"file": 7,"line": 205,"col": 39,"name": "i"},{"file": 7,"line": 215,"col": 27,"name": "self"},{"file": 7,"line": 215,"col": 40,"name": "items"},{"file": 7,"line": 222,"col": 41,"name": "self"},{"file": 7,"line": 222,"col": 54,"name": "items"},{"file": 7,"line": 237,"col": 22,"name": "self"},{"file": 7,"line": 250,"col": 28,"name": "self"},{"file": 7,"line": 250,"col": 41,"name": "value"},{"file": 7,"line": 250,"col": 51,"name": "n"},{"file": 7,"line": 258,"col": 42,"name": "self"},{"file": 7,"line": 258,"col": 55,"name": "value"},{"file": 7,"line": 258,"col": 65,"name": "n"},{"file": 7,"line": 274,"col": 29,"name": "self"},{"file": 7,"line": 274,"col": 42,"name": "new_len"},{"file": 7,"line": 298,"col": 38,"name": "self"},{"file": 7,"line": 303,"col": 28,"name": "self"},{"file": 7,"line": 349,"col": 36,"name": "self"},{"file": 7,"line": 349,"col": 49,"name": "additional_count"},{"file": 7,"line": 355,"col": 32,"name": "self"},{"file": 7,"line": 382,"col": 30,"name": "self"},{"file": 7,"line": 382,"col": 43,"name": "n","comptime": true},{"file": 7,"line": 393,"col": 44,"name": "self"},{"file": 7,"line": 393,"col": 57,"name": "n","comptime": true},{"file": 7,"line": 403,"col": 19,"name": "self"},{"file": 7,"line": 412,"col": 25,"name": "self"},{"file": 7,"line": 429,"col": 35,"name": "self"},{"file": 7,"line": 243,"col": 23,"name": "self"},{"file": 7,"line": 243,"col": 36,"name": "m"},{"file": 3,"line": 66,"col": 25,"name": "tag"},{"file": 3,"line": 73,"col": 36,"name": "tag"},{"file": 3,"line": 83,"col": 39,"name": "tag"},{"file": 3,"line": 1308,"col": 21,"name": "self"},{"file": 3,"line": 1308,"col": 35,"name": "allocator"},{"file": 3,"line": 1312,"col": 29,"name": "allocator"},{"file": 3,"line": 1312,"col": 56,"name": "cpu_arch"},{"file": 3,"line": 1312,"col": 76,"name": "os_tag"},{"file": 3,"line": 1312,"col": 92,"name": "abi"},{"file": 3,"line": 1316,"col": 23,"name": "self"},{"file": 3,"line": 1316,"col": 37,"name": "allocator"},{"file": 3,"line": 1320,"col": 28,"name": "cpu_arch"},{"file": 3,"line": 1320,"col": 48,"name": "os_tag"},{"file": 3,"line": 1332,"col": 22,"name": "self"},{"file": 3,"line": 1336,"col": 34,"name": "os_tag"},{"file": 3,"line": 1336,"col": 50,"name": "abi"},{"file": 3,"line": 1346,"col": 27,"name": "self"},{"file": 3,"line": 1350,"col": 28,"name": "self"},{"file": 3,"line": 1354,"col": 28,"name": "os_tag"},{"file": 3,"line": 1354,"col": 44,"name": "abi"},{"file": 3,"line": 1364,"col": 21,"name": "self"},{"file": 3,"line": 1368,"col": 33,"name": "os_tag"},{"file": 3,"line": 1368,"col": 49,"name": "cpu_arch"},{"file": 3,"line": 1381,"col": 27,"name": "self"},{"file": 3,"line": 1385,"col": 19,"name": "self"},{"file": 3,"line": 1389,"col": 17,"name": "self"},{"file": 3,"line": 1393,"col": 18,"name": "self"},{"file": 3,"line": 1397,"col": 21,"name": "self"},{"file": 3,"line": 1409,"col": 17,"name": "self"},{"file": 3,"line": 1413,"col": 32,"name": "os_tag"},{"file": 3,"line": 1413,"col": 48,"name": "abi"},{"file": 3,"line": 1417,"col": 21,"name": "self"},{"file": 3,"line": 1421,"col": 32,"name": "self"},{"file": 3,"line": 1431,"col": 23,"name": "self"},{"file": 3,"line": 1435,"col": 28,"name": "self"},{"file": 3,"line": 1491,"col": 37,"name": "self"},{"file": 3,"line": 1672,"col": 29,"name": "host_target"},{"file": 3,"line": 1672,"col": 50,"name": "binary_target"},{"file": 3,"line": 1701,"col": 20,"name": "cpu_arch"},{"file": 3,"line": 1715,"col": 35,"name": "target"},{"file": 9,"line": 52,"col": 32,"name": "self"},{"file": 9,"line": 52,"col": 44,"name": "array_list"},{"file": 9,"line": 52,"col": 76,"name": "max_append_size"},{"file": 9,"line": 57,"col": 12,"name": "self"},{"file": 9,"line": 58,"col": 12,"name": "alignment","comptime": true},{"file": 9,"line": 59,"col": 12,"name": "array_list"},{"file": 9,"line": 60,"col": 12,"name": "max_append_size"},{"file": 9,"line": 90,"col": 28,"name": "self"},{"file": 9,"line": 90,"col": 40,"name": "allocator"},{"file": 9,"line": 90,"col": 67,"name": "max_size"},{"file": 9,"line": 143,"col": 34,"name": "self"},{"file": 9,"line": 143,"col": 46,"name": "buf"},{"file": 9,"line": 143,"col": 57,"name": "delimiter"},{"file": 9,"line": 164,"col": 12,"name": "self"},{"file": 9,"line": 165,"col": 12,"name": "allocator"},{"file": 9,"line": 166,"col": 12,"name": "delimiter"},{"file": 9,"line": 167,"col": 12,"name": "max_size"},{"file": 9,"line": 213,"col": 39,"name": "self"},{"file": 9,"line": 213,"col": 51,"name": "delimiter"},{"file": 9,"line": 245,"col": 29,"name": "self"},{"file": 9,"line": 245,"col": 41,"name": "T","comptime": true},{"file": 9,"line": 251,"col": 30,"name": "self"},{"file": 9,"line": 251,"col": 42,"name": "T","comptime": true},{"file": 9,"line": 261,"col": 26,"name": "self"},{"file": 9,"line": 261,"col": 38,"name": "T","comptime": true},{"file": 9,"line": 286,"col": 25,"name": "self"},{"file": 9,"line": 286,"col": 37,"name": "num_bytes"},{"file": 9,"line": 286,"col": 53,"name": "options","comptime": true},{"file": 9,"line": 298,"col": 23,"name": "self"},{"file": 9,"line": 298,"col": 35,"name": "slice"},{"file": 3,"line": 810,"col": 25,"name": "arch"},{"file": 3,"line": 817,"col": 25,"name": "arch"},{"file": 3,"line": 824,"col": 29,"name": "arch"},{"file": 3,"line": 831,"col": 27,"name": "arch"},{"file": 3,"line": 845,"col": 27,"name": "arch"},{"file": 3,"line": 852,"col": 26,"name": "arch"},{"file": 3,"line": 859,"col": 25,"name": "arch"},{"file": 3,"line": 866,"col": 27,"name": "arch"},{"file": 3,"line": 873,"col": 27,"name": "arch"},{"file": 3,"line": 880,"col": 27,"name": "arch"},{"file": 3,"line": 887,"col": 33,"name": "arch"},{"file": 3,"line": 887,"col": 45,"name": "cpu_name"},{"file": 3,"line": 896,"col": 32,"name": "arch"},{"file": 3,"line": 957,"col": 33,"name": "arch"},{"file": 3,"line": 1084,"col": 31,"name": "arch"},{"file": 3,"line": 1152,"col": 31,"name": "arch"},{"file": 3,"line": 1172,"col": 35,"name": "arch"},{"file": 3,"line": 1197,"col": 32,"name": "arch"},{"file": 3,"line": 1220,"col": 32,"name": "cpus","comptime": true},{"file": 10,"line": 38,"col": 22,"name": "self"},{"file": 10,"line": 60,"col": 21,"name": "self"},{"file": 10,"line": 60,"col": 34,"name": "bytes"},{"file": 10,"line": 105,"col": 26,"name": "self"},{"file": 10,"line": 109,"col": 21,"name": "self"},{"file": 13,"line": 1822,"col": 20,"name": "self"},{"file": 13,"line": 1830,"col": 21,"name": "self"},{"file": 14,"line": 30,"col": 19,"name": "self"},{"file": 14,"line": 30,"col": 32,"name": "node"},{"file": 14,"line": 49,"col": 19,"name": "self"},{"file": 14,"line": 66,"col": 21,"name": "self"},{"file": 14,"line": 66,"col": 34,"name": "node"},{"file": 14,"line": 85,"col": 22,"name": "self"},{"file": 14,"line": 85,"col": 35,"name": "node"},{"file": 14,"line": 111,"col": 23,"name": "self"},{"file": 14,"line": 118,"col": 20,"name": "self"},{"file": 14,"line": 125,"col": 28,"name": "self"},{"file": 14,"line": 125,"col": 41,"name": "stream"},{"file": 16,"line": 181,"col": 27,"name": "list"},{"file": 16,"line": 181,"col": 40,"name": "node"},{"file": 16,"line": 181,"col": 53,"name": "new_node"},{"file": 16,"line": 202,"col": 28,"name": "list"},{"file": 16,"line": 202,"col": 41,"name": "node"},{"file": 16,"line": 202,"col": 54,"name": "new_node"},{"file": 16,"line": 223,"col": 30,"name": "list1"},{"file": 16,"line": 223,"col": 44,"name": "list2"},{"file": 16,"line": 244,"col": 22,"name": "list"},{"file": 16,"line": 244,"col": 35,"name": "new_node"},{"file": 16,"line": 258,"col": 23,"name": "list"},{"file": 16,"line": 258,"col": 36,"name": "new_node"},{"file": 16,"line": 277,"col": 22,"name": "list"},{"file": 16,"line": 277,"col": 35,"name": "node"},{"file": 16,"line": 302,"col": 19,"name": "list"},{"file": 16,"line": 312,"col": 24,"name": "list"},{"file": 17,"line": 12,"col": 20,"name": "value"},{"file": 17,"line": 18,"col": 29,"name": "self"},{"file": 17,"line": 24,"col": 30,"name": "self"},{"file": 17,"line": 24,"col": 43,"name": "value"},{"file": 17,"line": 28,"col": 20,"name": "self"},{"file": 17,"line": 28,"col": 39,"name": "ordering","comptime": true},{"file": 17,"line": 36,"col": 21,"name": "self"},{"file": 17,"line": 36,"col": 34,"name": "value"},{"file": 17,"line": 36,"col": 44,"name": "ordering","comptime": true},{"file": 17,"line": 44,"col": 27,"name": "self"},{"file": 17,"line": 44,"col": 40,"name": "value"},{"file": 17,"line": 44,"col": 50,"name": "ordering","comptime": true},{"file": 17,"line": 49,"col": 12,"name": "self"},{"file": 17,"line": 50,"col": 12,"name": "compare"},{"file": 17,"line": 51,"col": 12,"name": "exchange"},{"file": 17,"line": 52,"col": 12,"name": "success","comptime": true},{"file": 17,"line": 53,"col": 12,"name": "failure","comptime": true},{"file": 17,"line": 59,"col": 12,"name": "self"},{"file": 17,"line": 60,"col": 12,"name": "compare"},{"file": 17,"line": 61,"col": 12,"name": "exchange"},{"file": 17,"line": 62,"col": 12,"name": "success","comptime": true},{"file": 17,"line": 63,"col": 12,"name": "failure","comptime": true},{"file": 17,"line": 69,"col": 12,"name": "self"},{"file": 17,"line": 70,"col": 12,"name": "is_strong","comptime": true},{"file": 17,"line": 71,"col": 12,"name": "compare"},{"file": 17,"line": 72,"col": 12,"name": "exchange"},{"file": 17,"line": 73,"col": 12,"name": "success","comptime": true},{"file": 17,"line": 74,"col": 12,"name": "failure","comptime": true},{"file": 17,"line": 100,"col": 12,"name": "self"},{"file": 17,"line": 101,"col": 12,"name": "op","comptime": true},{"file": 17,"line": 102,"col": 12,"name": "value"},{"file": 17,"line": 103,"col": 12,"name": "ordering","comptime": true},{"file": 16,"line": 82,"col": 22,"name": "list"},{"file": 16,"line": 82,"col": 35,"name": "node"},{"file": 16,"line": 98,"col": 24,"name": "list"},{"file": 16,"line": 106,"col": 19,"name": "list"},{"file": 19,"line": 31,"col": 25,"name": "self"},{"file": 19,"line": 31,"col": 38,"name": "node"},{"file": 19,"line": 36,"col": 20,"name": "self"},{"file": 19,"line": 36,"col": 33,"name": "node"},{"file": 19,"line": 49,"col": 19,"name": "self"},{"file": 19,"line": 64,"col": 23,"name": "self"},{"file": 17,"line": 131,"col": 35,"name": "self"},{"file": 17,"line": 131,"col": 48,"name": "value"},{"file": 17,"line": 131,"col": 58,"name": "ordering","comptime": true},{"file": 17,"line": 135,"col": 36,"name": "self"},{"file": 17,"line": 135,"col": 49,"name": "value"},{"file": 17,"line": 135,"col": 59,"name": "ordering","comptime": true},{"file": 17,"line": 139,"col": 34,"name": "self"},{"file": 17,"line": 139,"col": 47,"name": "value"},{"file": 17,"line": 139,"col": 57,"name": "ordering","comptime": true},{"file": 17,"line": 143,"col": 35,"name": "self"},{"file": 17,"line": 143,"col": 48,"name": "value"},{"file": 17,"line": 143,"col": 58,"name": "ordering","comptime": true},{"file": 17,"line": 154,"col": 33,"name": "self"},{"file": 17,"line": 154,"col": 46,"name": "bit"},{"file": 17,"line": 154,"col": 56,"name": "ordering","comptime": true},{"file": 17,"line": 158,"col": 35,"name": "self"},{"file": 17,"line": 158,"col": 48,"name": "bit"},{"file": 17,"line": 158,"col": 58,"name": "ordering","comptime": true},{"file": 17,"line": 162,"col": 36,"name": "self"},{"file": 17,"line": 162,"col": 49,"name": "bit"},{"file": 17,"line": 162,"col": 59,"name": "ordering","comptime": true},{"file": 17,"line": 167,"col": 16,"name": "self"},{"file": 17,"line": 168,"col": 16,"name": "op","comptime": true},{"file": 17,"line": 169,"col": 16,"name": "bit"},{"file": 17,"line": 170,"col": 16,"name": "ordering","comptime": true},{"file": 17,"line": 113,"col": 35,"name": "self"},{"file": 17,"line": 113,"col": 48,"name": "value"},{"file": 17,"line": 113,"col": 58,"name": "ordering","comptime": true},{"file": 17,"line": 117,"col": 35,"name": "self"},{"file": 17,"line": 117,"col": 48,"name": "value"},{"file": 17,"line": 117,"col": 58,"name": "ordering","comptime": true},{"file": 17,"line": 121,"col": 35,"name": "self"},{"file": 17,"line": 121,"col": 48,"name": "value"},{"file": 17,"line": 121,"col": 58,"name": "ordering","comptime": true},{"file": 17,"line": 125,"col": 35,"name": "self"},{"file": 17,"line": 125,"col": 48,"name": "value"},{"file": 17,"line": 125,"col": 58,"name": "ordering","comptime": true},{"file": 3,"line": 641,"col": 31,"name": "set"},{"file": 3,"line": 647,"col": 33,"name": "set"},{"file": 3,"line": 647,"col": 43,"name": "arch_feature_index"},{"file": 3,"line": 661,"col": 37,"name": "set"},{"file": 3,"line": 661,"col": 48,"name": "other_set"},{"file": 3,"line": 667,"col": 37,"name": "set"},{"file": 3,"line": 667,"col": 48,"name": "arch_feature_index"},{"file": 3,"line": 674,"col": 40,"name": "set"},{"file": 3,"line": 674,"col": 51,"name": "other_set"},{"file": 3,"line": 679,"col": 44,"name": "set"},{"file": 3,"line": 679,"col": 55,"name": "all_features_list"},{"file": 3,"line": 696,"col": 31,"name": "set"},{"file": 3,"line": 700,"col": 27,"name": "set"},{"file": 3,"line": 700,"col": 37,"name": "other_set"},{"file": 3,"line": 704,"col": 36,"name": "set"},{"file": 3,"line": 704,"col": 46,"name": "other_set"},{"file": 12,"line": 58,"col": 8,"name": "self"},{"file": 12,"line": 59,"col": 8,"name": "fmt","comptime": true},{"file": 12,"line": 60,"col": 8,"name": "options"},{"file": 12,"line": 61,"col": 8,"name": "writer"},{"file": 29,"line": 753,"col": 19,"name": "self"},{"file": 29,"line": 874,"col": 16,"name": "self"},{"file": 29,"line": 874,"col": 27,"name": "allocator"},{"file": 29,"line": 907,"col": 17,"name": "self"},{"file": 29,"line": 933,"col": 24,"name": "self"},{"file": 29,"line": 933,"col": 35,"name": "sub_path"},{"file": 29,"line": 933,"col": 57,"name": "flags"},{"file": 29,"line": 960,"col": 21,"name": "self"},{"file": 29,"line": 960,"col": 32,"name": "sub_path"},{"file": 29,"line": 960,"col": 57,"name": "flags"},{"file": 29,"line": 1080,"col": 22,"name": "self"},{"file": 29,"line": 1080,"col": 33,"name": "sub_path"},{"file": 29,"line": 1080,"col": 55,"name": "flags"},{"file": 29,"line": 1095,"col": 26,"name": "self"},{"file": 29,"line": 1095,"col": 37,"name": "sub_path"},{"file": 29,"line": 1095,"col": 59,"name": "flags"},{"file": 29,"line": 1123,"col": 23,"name": "self"},{"file": 29,"line": 1123,"col": 34,"name": "sub_path_c"},{"file": 29,"line": 1123,"col": 61,"name": "flags"},{"file": 29,"line": 1194,"col": 23,"name": "self"},{"file": 29,"line": 1194,"col": 34,"name": "sub_path_w"},{"file": 29,"line": 1194,"col": 59,"name": "flags"},{"file": 29,"line": 1239,"col": 19,"name": "self"},{"file": 29,"line": 1239,"col": 30,"name": "sub_path"},{"file": 29,"line": 1243,"col": 20,"name": "self"},{"file": 29,"line": 1243,"col": 31,"name": "sub_path"},{"file": 29,"line": 1247,"col": 20,"name": "self"},{"file": 29,"line": 1247,"col": 31,"name": "sub_path"},{"file": 29,"line": 1255,"col": 20,"name": "self"},{"file": 29,"line": 1255,"col": 31,"name": "sub_path"},{"file": 29,"line": 1288,"col": 24,"name": "self"},{"file": 29,"line": 1288,"col": 35,"name": "sub_path"},{"file": 29,"line": 1288,"col": 57,"name": "open_dir_options"},{"file": 29,"line": 1301,"col": 20,"name": "self"},{"file": 29,"line": 1301,"col": 31,"name": "pathname"},{"file": 29,"line": 1301,"col": 53,"name": "out_buffer"},{"file": 29,"line": 1315,"col": 21,"name": "self"},{"file": 29,"line": 1315,"col": 32,"name": "pathname"},{"file": 29,"line": 1315,"col": 57,"name": "out_buffer"},{"file": 29,"line": 1348,"col": 21,"name": "self"},{"file": 29,"line": 1348,"col": 32,"name": "pathname"},{"file": 29,"line": 1348,"col": 55,"name": "out_buffer"},{"file": 29,"line": 1400,"col": 25,"name": "self"},{"file": 29,"line": 1400,"col": 36,"name": "allocator"},{"file": 29,"line": 1400,"col": 59,"name": "pathname"},{"file": 29,"line": 1418,"col": 20,"name": "self"},{"file": 29,"line": 1443,"col": 19,"name": "self"},{"file": 29,"line": 1443,"col": 30,"name": "sub_path"},{"file": 29,"line": 1443,"col": 52,"name": "args"},{"file": 29,"line": 1458,"col": 23,"name": "self"},{"file": 29,"line": 1458,"col": 34,"name": "sub_path"},{"file": 29,"line": 1458,"col": 56,"name": "args"},{"file": 29,"line": 1496,"col": 20,"name": "self"},{"file": 29,"line": 1496,"col": 31,"name": "sub_path_c"},{"file": 29,"line": 1496,"col": 58,"name": "args"},{"file": 29,"line": 1512,"col": 20,"name": "self"},{"file": 29,"line": 1512,"col": 31,"name": "sub_path_w"},{"file": 29,"line": 1512,"col": 59,"name": "args"},{"file": 29,"line": 1590,"col": 22,"name": "self"},{"file": 29,"line": 1590,"col": 33,"name": "sub_path"},{"file": 29,"line": 1608,"col": 23,"name": "self"},{"file": 29,"line": 1608,"col": 34,"name": "sub_path_c"},{"file": 29,"line": 1627,"col": 23,"name": "self"},{"file": 29,"line": 1627,"col": 34,"name": "sub_path_w"},{"file": 29,"line": 1653,"col": 21,"name": "self"},{"file": 29,"line": 1653,"col": 32,"name": "sub_path"},{"file": 29,"line": 1669,"col": 22,"name": "self"},{"file": 29,"line": 1669,"col": 33,"name": "sub_path_c"},{"file": 29,"line": 1678,"col": 22,"name": "self"},{"file": 29,"line": 1678,"col": 33,"name": "sub_path_w"},{"file": 29,"line": 1691,"col": 18,"name": "self"},{"file": 29,"line": 1691,"col": 29,"name": "old_sub_path"},{"file": 29,"line": 1691,"col": 55,"name": "new_sub_path"},{"file": 29,"line": 1696,"col": 19,"name": "self"},{"file": 29,"line": 1696,"col": 30,"name": "old_sub_path_z"},{"file": 29,"line": 1696,"col": 61,"name": "new_sub_path_z"},{"file": 29,"line": 1702,"col": 19,"name": "self"},{"file": 29,"line": 1702,"col": 30,"name": "old_sub_path_w"},{"file": 29,"line": 1702,"col": 59,"name": "new_sub_path_w"},{"file": 29,"line": 1711,"col": 8,"name": "self"},{"file": 29,"line": 1712,"col": 8,"name": "target_path"},{"file": 29,"line": 1713,"col": 8,"name": "sym_link_path"},{"file": 29,"line": 1714,"col": 8,"name": "flags"},{"file": 29,"line": 1731,"col": 8,"name": "self"},{"file": 29,"line": 1732,"col": 8,"name": "target_path"},{"file": 29,"line": 1733,"col": 8,"name": "sym_link_path"},{"file": 29,"line": 1734,"col": 8,"name": "_"},{"file": 29,"line": 1741,"col": 8,"name": "self"},{"file": 29,"line": 1742,"col": 8,"name": "target_path_c"},{"file": 29,"line": 1743,"col": 8,"name": "sym_link_path_c"},{"file": 29,"line": 1744,"col": 8,"name": "flags"},{"file": 29,"line": 1757,"col": 8,"name": "self"},{"file": 29,"line": 1758,"col": 8,"name": "target_path_w"},{"file": 29,"line": 1759,"col": 8,"name": "sym_link_path_w"},{"file": 29,"line": 1760,"col": 8,"name": "flags"},{"file": 29,"line": 1768,"col": 20,"name": "self"},{"file": 29,"line": 1768,"col": 31,"name": "sub_path"},{"file": 29,"line": 1768,"col": 53,"name": "buffer"},{"file": 29,"line": 1783,"col": 24,"name": "self"},{"file": 29,"line": 1783,"col": 35,"name": "sub_path"},{"file": 29,"line": 1783,"col": 57,"name": "buffer"},{"file": 29,"line": 1788,"col": 21,"name": "self"},{"file": 29,"line": 1788,"col": 32,"name": "sub_path_c"},{"file": 29,"line": 1788,"col": 59,"name": "buffer"},{"file": 29,"line": 1798,"col": 21,"name": "self"},{"file": 29,"line": 1798,"col": 32,"name": "sub_path_w"},{"file": 29,"line": 1798,"col": 57,"name": "buffer"},{"file": 29,"line": 1807,"col": 20,"name": "self"},{"file": 29,"line": 1807,"col": 31,"name": "file_path"},{"file": 29,"line": 1807,"col": 54,"name": "buffer"},{"file": 29,"line": 1817,"col": 25,"name": "self"},{"file": 29,"line": 1817,"col": 36,"name": "allocator"},{"file": 29,"line": 1817,"col": 63,"name": "file_path"},{"file": 29,"line": 1817,"col": 86,"name": "max_bytes"},{"file": 29,"line": 1827,"col": 8,"name": "self"},{"file": 29,"line": 1828,"col": 8,"name": "allocator"},{"file": 29,"line": 1829,"col": 8,"name": "file_path"},{"file": 29,"line": 1830,"col": 8,"name": "max_bytes"},{"file": 29,"line": 1831,"col": 8,"name": "size_hint"},{"file": 29,"line": 1832,"col": 8,"name": "alignment","comptime": true},{"file": 29,"line": 1833,"col": 8,"name": "optional_sentinel","comptime": true},{"file": 29,"line": 1876,"col": 22,"name": "self"},{"file": 29,"line": 1876,"col": 33,"name": "sub_path"},{"file": 29,"line": 2025,"col": 21,"name": "self"},{"file": 29,"line": 2025,"col": 32,"name": "sub_path"},{"file": 29,"line": 2025,"col": 54,"name": "data"},{"file": 29,"line": 2038,"col": 18,"name": "self"},{"file": 29,"line": 2038,"col": 29,"name": "sub_path"},{"file": 29,"line": 2038,"col": 51,"name": "flags"},{"file": 29,"line": 2048,"col": 19,"name": "self"},{"file": 29,"line": 2048,"col": 30,"name": "sub_path"},{"file": 29,"line": 2048,"col": 55,"name": "flags"},{"file": 29,"line": 2071,"col": 19,"name": "self"},{"file": 29,"line": 2071,"col": 30,"name": "sub_path_w"},{"file": 29,"line": 2071,"col": 58,"name": "flags"},{"file": 29,"line": 2082,"col": 8,"name": "source_dir"},{"file": 29,"line": 2083,"col": 8,"name": "source_path"},{"file": 29,"line": 2084,"col": 8,"name": "dest_dir"},{"file": 29,"line": 2085,"col": 8,"name": "dest_path"},{"file": 29,"line": 2086,"col": 8,"name": "options"},{"file": 29,"line": 2130,"col": 8,"name": "source_dir"},{"file": 29,"line": 2131,"col": 8,"name": "source_path"},{"file": 29,"line": 2132,"col": 8,"name": "dest_dir"},{"file": 29,"line": 2133,"col": 8,"name": "dest_path"},{"file": 29,"line": 2134,"col": 8,"name": "options"},{"file": 29,"line": 2161,"col": 22,"name": "self"},{"file": 29,"line": 2161,"col": 33,"name": "dest_path"},{"file": 29,"line": 2161,"col": 56,"name": "options"},{"file": 29,"line": 2173,"col": 16,"name": "self"},{"file": 29,"line": 2188,"col": 17,"name": "self"},{"file": 29,"line": 2188,"col": 28,"name": "new_mode"},{"file": 29,"line": 2202,"col": 17,"name": "self"},{"file": 29,"line": 2202,"col": 28,"name": "owner"},{"file": 29,"line": 2202,"col": 46,"name": "group"},{"file": 29,"line": 1522,"col": 21,"name": "self"},{"file": 29,"line": 1522,"col": 32,"name": "sub_path_c"},{"file": 29,"line": 1522,"col": 59,"name": "flags"},{"file": 29,"line": 1539,"col": 26,"name": "self"},{"file": 29,"line": 1539,"col": 37,"name": "sub_path_w"},{"file": 29,"line": 1539,"col": 65,"name": "access_mask"},{"file": 29,"line": 1539,"col": 83,"name": "no_follow"},{"file": 20,"line": 1059,"col": 15,"name": "self"},{"file": 20,"line": 1063,"col": 18,"name": "self"},{"file": 6,"line": 774,"col": 26,"name": "self"},{"file": 26,"line": 998,"col": 18,"name": "self"},{"file": 26,"line": 1015,"col": 24,"name": "self"},{"file": 26,"line": 1015,"col": 42,"name": "address"},{"file": 26,"line": 1153,"col": 22,"name": "self"},{"file": 26,"line": 1153,"col": 40,"name": "address"},{"file": 26,"line": 1220,"col": 25,"name": "self"},{"file": 26,"line": 1220,"col": 43,"name": "address"},{"file": 45,"line": 37,"col": 18,"name": "self"},{"file": 39,"line": 211,"col": 17,"name": "self"},{"file": 39,"line": 216,"col": 15,"name": "self"},{"file": 6,"line": 51,"col": 28,"name": "K","comptime": true},{"file": 6,"line": 51,"col": 46,"name": "V","comptime": true},{"file": 6,"line": 71,"col": 30,"name": "V","comptime": true},{"file": 26,"line": 1394,"col": 25,"name": "self"},{"file": 7,"line": 439,"col": 26,"name": "T","comptime": true},{"file": 7,"line": 447,"col": 33,"name": "T","comptime": true},{"file": 7,"line": 447,"col": 51,"name": "alignment","comptime": true},{"file": 3,"line": 346,"col": 31,"name": "self"},{"file": 3,"line": 368,"col": 25,"name": "self"},{"file": 3,"line": 368,"col": 35,"name": "tag","comptime": true},{"file": 3,"line": 368,"col": 54,"name": "version"},{"file": 3,"line": 381,"col": 28,"name": "os"},{"file": 3,"line": 474,"col": 23,"name": "arch"},{"file": 3,"line": 474,"col": 39,"name": "target_os"},{"file": 3,"line": 527,"col": 21,"name": "abi"},{"file": 3,"line": 534,"col": 22,"name": "abi"},{"file": 3,"line": 541,"col": 24,"name": "abi"},{"file": 3,"line": 1298,"col": 24,"name": "arch"},{"file": 13,"line": 36,"col": 27,"name": "T","comptime": true},{"file": 13,"line": 113,"col": 22,"name": "allocator"},{"file": 13,"line": 206,"col": 21,"name": "T","comptime": true},{"file": 13,"line": 206,"col": 39,"name": "dest"},{"file": 13,"line": 206,"col": 50,"name": "source"},{"file": 13,"line": 231,"col": 14,"name": "T","comptime": true},{"file": 13,"line": 398,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 398,"col": 34,"name": "init"},{"file": 13,"line": 492,"col": 13,"name": "T","comptime": true},{"file": 13,"line": 492,"col": 31,"name": "lhs"},{"file": 13,"line": 492,"col": 47,"name": "rhs"},{"file": 13,"line": 514,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 514,"col": 34,"name": "lhs"},{"file": 13,"line": 514,"col": 50,"name": "rhs"},{"file": 13,"line": 538,"col": 19,"name": "T","comptime": true},{"file": 13,"line": 538,"col": 37,"name": "a"},{"file": 13,"line": 538,"col": 51,"name": "b"},{"file": 13,"line": 734,"col": 15,"name": "ptr"},{"file": 13,"line": 734,"col": 29,"name": "end","comptime": true},{"file": 13,"line": 984,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 984,"col": 34,"name": "slice"},{"file": 13,"line": 984,"col": 52,"name": "scalar"},{"file": 13,"line": 992,"col": 12,"name": "allocator"},{"file": 13,"line": 992,"col": 35,"name": "T","comptime": true},{"file": 13,"line": 992,"col": 53,"name": "m"},{"file": 13,"line": 997,"col": 13,"name": "allocator"},{"file": 13,"line": 997,"col": 36,"name": "T","comptime": true},{"file": 13,"line": 997,"col": 54,"name": "m"},{"file": 13,"line": 1002,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 1002,"col": 34,"name": "slice"},{"file": 13,"line": 1002,"col": 52,"name": "values_to_strip"},{"file": 13,"line": 1009,"col": 17,"name": "T","comptime": true},{"file": 13,"line": 1009,"col": 35,"name": "slice"},{"file": 13,"line": 1009,"col": 53,"name": "values_to_strip"},{"file": 13,"line": 1016,"col": 12,"name": "T","comptime": true},{"file": 13,"line": 1016,"col": 30,"name": "slice"},{"file": 13,"line": 1016,"col": 48,"name": "values_to_strip"},{"file": 13,"line": 1037,"col": 25,"name": "T","comptime": true},{"file": 13,"line": 1037,"col": 43,"name": "slice"},{"file": 13,"line": 1037,"col": 61,"name": "value"},{"file": 13,"line": 1054,"col": 18,"name": "T","comptime": true},{"file": 13,"line": 1054,"col": 36,"name": "slice"},{"file": 13,"line": 1054,"col": 54,"name": "values"},{"file": 13,"line": 1058,"col": 22,"name": "T","comptime": true},{"file": 13,"line": 1058,"col": 40,"name": "slice"},{"file": 13,"line": 1058,"col": 58,"name": "values"},{"file": 13,"line": 1069,"col": 21,"name": "T","comptime": true},{"file": 13,"line": 1069,"col": 39,"name": "slice"},{"file": 13,"line": 1069,"col": 57,"name": "start_index"},{"file": 13,"line": 1069,"col": 77,"name": "values"},{"file": 13,"line": 1087,"col": 25,"name": "T","comptime": true},{"file": 13,"line": 1087,"col": 43,"name": "haystack"},{"file": 13,"line": 1087,"col": 64,"name": "needle"},{"file": 13,"line": 1135,"col": 19,"name": "T","comptime": true},{"file": 13,"line": 1135,"col": 37,"name": "haystack"},{"file": 13,"line": 1135,"col": 58,"name": "needle"},{"file": 13,"line": 1242,"col": 13,"name": "T","comptime": true},{"file": 13,"line": 1242,"col": 31,"name": "haystack"},{"file": 13,"line": 1242,"col": 52,"name": "needle"},{"file": 13,"line": 1272,"col": 23,"name": "T","comptime": true},{"file": 13,"line": 1272,"col": 41,"name": "haystack"},{"file": 13,"line": 1272,"col": 62,"name": "expected_count"},{"file": 13,"line": 1272,"col": 85,"name": "needle"},{"file": 13,"line": 1356,"col": 26,"name": "T","comptime": true},{"file": 13,"line": 1356,"col": 44,"name": "bytes"},{"file": 13,"line": 1366,"col": 27,"name": "T","comptime": true},{"file": 13,"line": 1366,"col": 45,"name": "bytes"},{"file": 13,"line": 1394,"col": 20,"name": "T","comptime": true},{"file": 13,"line": 1394,"col": 38,"name": "bytes"},{"file": 13,"line": 1394,"col": 57,"name": "endian"},{"file": 13,"line": 1440,"col": 22,"name": "T","comptime": true},{"file": 13,"line": 1440,"col": 40,"name": "buf"},{"file": 13,"line": 1440,"col": 83,"name": "value"},{"file": 13,"line": 1448,"col": 23,"name": "T","comptime": true},{"file": 13,"line": 1448,"col": 41,"name": "buf"},{"file": 13,"line": 1448,"col": 88,"name": "value"},{"file": 13,"line": 1465,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 1465,"col": 34,"name": "buffer"},{"file": 13,"line": 1465,"col": 84,"name": "value"},{"file": 13,"line": 1465,"col": 94,"name": "endian"},{"file": 13,"line": 1479,"col": 27,"name": "T","comptime": true},{"file": 13,"line": 1479,"col": 45,"name": "buffer"},{"file": 13,"line": 1479,"col": 59,"name": "value"},{"file": 13,"line": 1503,"col": 24,"name": "T","comptime": true},{"file": 13,"line": 1503,"col": 42,"name": "buffer"},{"file": 13,"line": 1503,"col": 56,"name": "value"},{"file": 13,"line": 1541,"col": 21,"name": "T","comptime": true},{"file": 13,"line": 1541,"col": 39,"name": "buffer"},{"file": 13,"line": 1541,"col": 53,"name": "value"},{"file": 13,"line": 1541,"col": 63,"name": "endian"},{"file": 13,"line": 1588,"col": 22,"name": "S","comptime": true},{"file": 13,"line": 1588,"col": 40,"name": "ptr"},{"file": 13,"line": 1716,"col": 13,"name": "T","comptime": true},{"file": 13,"line": 1716,"col": 31,"name": "buffer"},{"file": 13,"line": 1716,"col": 50,"name": "delimiter"},{"file": 13,"line": 1788,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 1788,"col": 34,"name": "haystack"},{"file": 13,"line": 1788,"col": 55,"name": "needle"},{"file": 13,"line": 1845,"col": 21,"name": "T","comptime": true},{"file": 13,"line": 1877,"col": 12,"name": "allocator"},{"file": 13,"line": 1877,"col": 35,"name": "separator"},{"file": 13,"line": 1877,"col": 58,"name": "slices"},{"file": 13,"line": 1883,"col": 13,"name": "allocator"},{"file": 13,"line": 1883,"col": 36,"name": "separator"},{"file": 13,"line": 1883,"col": 59,"name": "slices"},{"file": 13,"line": 1967,"col": 14,"name": "allocator"},{"file": 13,"line": 1967,"col": 37,"name": "T","comptime": true},{"file": 13,"line": 1967,"col": 55,"name": "slices"},{"file": 13,"line": 2208,"col": 11,"name": "T","comptime": true},{"file": 13,"line": 2208,"col": 29,"name": "slice"},{"file": 13,"line": 2222,"col": 11,"name": "T","comptime": true},{"file": 13,"line": 2222,"col": 29,"name": "slice"},{"file": 13,"line": 2241,"col": 15,"name": "T","comptime": true},{"file": 13,"line": 2241,"col": 33,"name": "items"},{"file": 13,"line": 2258,"col": 14,"name": "T","comptime": true},{"file": 13,"line": 2258,"col": 32,"name": "items"},{"file": 13,"line": 2258,"col": 44,"name": "amount"},{"file": 13,"line": 2274,"col": 15,"name": "T","comptime": true},{"file": 13,"line": 2274,"col": 33,"name": "input"},{"file": 13,"line": 2274,"col": 51,"name": "needle"},{"file": 13,"line": 2274,"col": 70,"name": "replacement"},{"file": 13,"line": 2274,"col": 94,"name": "output"},{"file": 13,"line": 2352,"col": 23,"name": "T","comptime": true},{"file": 13,"line": 2352,"col": 41,"name": "slice"},{"file": 13,"line": 2352,"col": 53,"name": "elem"},{"file": 13,"line": 2377,"col": 23,"name": "T","comptime": true},{"file": 13,"line": 2377,"col": 41,"name": "input"},{"file": 13,"line": 2377,"col": 59,"name": "needle"},{"file": 13,"line": 2377,"col": 78,"name": "replacement"},{"file": 13,"line": 2409,"col": 20,"name": "T","comptime": true},{"file": 13,"line": 2409,"col": 38,"name": "allocator"},{"file": 13,"line": 2409,"col": 61,"name": "input"},{"file": 13,"line": 2409,"col": 79,"name": "needle"},{"file": 13,"line": 2409,"col": 98,"name": "replacement"},{"file": 13,"line": 2428,"col": 22,"name": "T","comptime": true},{"file": 13,"line": 2428,"col": 40,"name": "x"},{"file": 13,"line": 2436,"col": 19,"name": "T","comptime": true},{"file": 13,"line": 2436,"col": 37,"name": "x"},{"file": 13,"line": 2444,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 2444,"col": 34,"name": "x"},{"file": 13,"line": 2444,"col": 40,"name": "endianness_of_x"},{"file": 13,"line": 2452,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 2452,"col": 34,"name": "x"},{"file": 13,"line": 2452,"col": 40,"name": "desired_endianness"},{"file": 13,"line": 2468,"col": 19,"name": "T","comptime": true},{"file": 13,"line": 2468,"col": 37,"name": "x"},{"file": 13,"line": 2481,"col": 26,"name": "ptr"},{"file": 13,"line": 2481,"col": 40,"name": "align_to"},{"file": 13,"line": 2513,"col": 20,"name": "ptr"},{"file": 13,"line": 2513,"col": 34,"name": "align_to"},{"file": 13,"line": 2619,"col": 15,"name": "value"},{"file": 13,"line": 2652,"col": 20,"name": "T","comptime": true},{"file": 13,"line": 2652,"col": 38,"name": "bytes"},{"file": 13,"line": 2709,"col": 20,"name": "T","comptime": true},{"file": 13,"line": 2709,"col": 38,"name": "bytes"},{"file": 13,"line": 2934,"col": 25,"name": "val"},{"file": 13,"line": 2984,"col": 20,"name": "alignment"},{"file": 13,"line": 2988,"col": 25,"name": "i"},{"file": 13,"line": 2988,"col": 35,"name": "alignment"},{"file": 13,"line": 3046,"col": 20,"name": "bytes"},{"file": 13,"line": 3046,"col": 33,"name": "new_alignment","comptime": true},{"file": 13,"line": 3060,"col": 20,"name": "slice"},{"file": 13,"line": 3060,"col": 36,"name": "new_alignment","comptime": true},{"file": 13,"line": 136,"col": 22,"name": "self"},{"file": 13,"line": 136,"col": 40,"name": "n"},{"file": 13,"line": 136,"col": 50,"name": "alignment"},{"file": 13,"line": 136,"col": 66,"name": "len_align"},{"file": 13,"line": 136,"col": 82,"name": "ra"},{"file": 13,"line": 676,"col": 11,"name": "T","comptime": true},{"file": 13,"line": 676,"col": 29,"name": "end","comptime": true},{"file": 13,"line": 788,"col": 14,"name": "ptr"},{"file": 13,"line": 788,"col": 28,"name": "end","comptime": true},{"file": 13,"line": 1106,"col": 39,"name": "pattern"},{"file": 13,"line": 1106,"col": 60,"name": "table"},{"file": 13,"line": 1888,"col": 14,"name": "allocator"},{"file": 13,"line": 1888,"col": 37,"name": "separator"},{"file": 13,"line": 1888,"col": 60,"name": "slices"},{"file": 13,"line": 1888,"col": 88,"name": "zero"},{"file": 13,"line": 2356,"col": 23,"name": "str"},{"file": 13,"line": 2356,"col": 40,"name": "elem"},{"file": 13,"line": 2356,"col": 50,"name": "expected"},{"file": 13,"line": 2637,"col": 26,"name": "T","comptime": true},{"file": 13,"line": 2637,"col": 44,"name": "B","comptime": true},{"file": 13,"line": 3028,"col": 16,"name": "AttributeSource","comptime": true},{"file": 13,"line": 3028,"col": 48,"name": "new_alignment","comptime": true},{"file": 14,"line": 242,"col": 13,"name": "ctx"},{"file": 14,"line": 261,"col": 13,"name": "ctx"},{"file": 15,"line": 36,"col": 15,"name": "m"},{"file": 15,"line": 279,"col": 10,"name": "ctx"},{"file": 18,"line": 1717,"col": 18,"name": "h"},{"file": 18,"line": 1717,"col": 36,"name": "did_it"},{"file": 18,"line": 1772,"col": 13,"name": "wait_ns"},{"file": 18,"line": 1772,"col": 27,"name": "sleep_count"},{"file": 16,"line": 29,"col": 31,"name": "node"},{"file": 16,"line": 29,"col": 44,"name": "new_node"},{"file": 16,"line": 40,"col": 30,"name": "node"},{"file": 16,"line": 48,"col": 28,"name": "node"},{"file": 16,"line": 57,"col": 33,"name": "node"},{"file": 19,"line": 147,"col": 13,"name": "ctx"},{"file": 19,"line": 165,"col": 13,"name": "ctx"},{"file": 22,"line": 53,"col": 15,"name": "self"},{"file": 22,"line": 53,"col": 29,"name": "name"},{"file": 22,"line": 148,"col": 15,"name": "self"},{"file": 22,"line": 148,"col": 29,"name": "buffer_ptr"},{"file": 22,"line": 288,"col": 13,"name": "config"},{"file": 22,"line": 288,"col": 34,"name": "function","comptime": true},{"file": 22,"line": 288,"col": 62,"name": "args"},{"file": 22,"line": 302,"col": 17,"name": "self"},{"file": 22,"line": 308,"col": 14,"name": "self"},{"file": 22,"line": 314,"col": 12,"name": "self"},{"file": 22,"line": 326,"col": 10,"name": "f","comptime": true},{"file": 22,"line": 326,"col": 31,"name": "args"},{"file": 22,"line": 1003,"col": 18,"name": "thread"},{"file": 22,"line": 1102,"col": 23,"name": "value"},{"file": 22,"line": 1102,"col": 38,"name": "event"},{"file": 23,"line": 15,"col": 20,"name": "ordering","comptime": true},{"file": 23,"line": 26,"col": 28,"name": "ordering","comptime": true},{"file": 24,"line": 22,"col": 20,"name": "glibc_version"},{"file": 24,"line": 89,"col": 16,"name": "rc"},{"file": 24,"line": 99,"col": 24,"name": "filename","noalias": true},{"file": 24,"line": 99,"col": 57,"name": "modes","noalias": true},{"file": 24,"line": 100,"col": 25,"name": "stream"},{"file": 24,"line": 101,"col": 25,"name": "ptr","noalias": true},{"file": 24,"line": 101,"col": 51,"name": "size_of_type"},{"file": 24,"line": 101,"col": 72,"name": "item_count"},{"file": 24,"line": 101,"col": 91,"name": "stream","noalias": true},{"file": 24,"line": 102,"col": 24,"name": "ptr","noalias": true},{"file": 24,"line": 102,"col": 44,"name": "size_of_type"},{"file": 24,"line": 102,"col": 65,"name": "item_count"},{"file": 24,"line": 102,"col": 84,"name": "stream","noalias": true},{"file": 24,"line": 104,"col": 25,"name": "format"},{"file": 24,"line": 104,"col": 48,"varArgs": true},{"file": 24,"line": 106,"col": 23,"name": "code"},{"file": 24,"line": 107,"col": 24,"name": "code"},{"file": 24,"line": 108,"col": 25,"name": "fd"},{"file": 24,"line": 109,"col": 24,"name": "fd"},{"file": 24,"line": 110,"col": 24,"name": "fd"},{"file": 24,"line": 110,"col": 36,"name": "offset"},{"file": 24,"line": 110,"col": 53,"name": "whence"},{"file": 24,"line": 111,"col": 23,"name": "path"},{"file": 24,"line": 111,"col": 44,"name": "oflag"},{"file": 24,"line": 111,"col": 59,"varArgs": true},{"file": 24,"line": 112,"col": 25,"name": "fd"},{"file": 24,"line": 112,"col": 36,"name": "path"},{"file": 24,"line": 112,"col": 57,"name": "oflag"},{"file": 24,"line": 112,"col": 72,"varArgs": true},{"file": 24,"line": 113,"col": 28,"name": "fd"},{"file": 24,"line": 113,"col": 39,"name": "length"},{"file": 24,"line": 114,"col": 24,"name": "sig"},{"file": 24,"line": 115,"col": 23,"name": "fd"},{"file": 24,"line": 115,"col": 35,"name": "buf"},{"file": 24,"line": 115,"col": 47,"name": "nbyte"},{"file": 24,"line": 116,"col": 24,"name": "fd"},{"file": 24,"line": 116,"col": 35,"name": "iov"},{"file": 24,"line": 116,"col": 56,"name": "iovcnt"},{"file": 24,"line": 117,"col": 24,"name": "fd"},{"file": 24,"line": 117,"col": 36,"name": "buf"},{"file": 24,"line": 117,"col": 48,"name": "nbyte"},{"file": 24,"line": 117,"col": 62,"name": "offset"},{"file": 24,"line": 118,"col": 25,"name": "fd"},{"file": 24,"line": 118,"col": 36,"name": "iov"},{"file": 24,"line": 118,"col": 57,"name": "iovcnt"},{"file": 24,"line": 118,"col": 73,"name": "offset"},{"file": 24,"line": 119,"col": 25,"name": "fd"},{"file": 24,"line": 119,"col": 36,"name": "iov"},{"file": 24,"line": 119,"col": 63,"name": "iovcnt"},{"file": 24,"line": 120,"col": 26,"name": "fd"},{"file": 24,"line": 120,"col": 37,"name": "iov"},{"file": 24,"line": 120,"col": 64,"name": "iovcnt"},{"file": 24,"line": 120,"col": 80,"name": "offset"},{"file": 24,"line": 121,"col": 24,"name": "fd"},{"file": 24,"line": 121,"col": 36,"name": "buf"},{"file": 24,"line": 121,"col": 54,"name": "nbyte"},{"file": 24,"line": 122,"col": 25,"name": "fd"},{"file": 24,"line": 122,"col": 37,"name": "buf"},{"file": 24,"line": 122,"col": 55,"name": "nbyte"},{"file": 24,"line": 122,"col": 69,"name": "offset"},{"file": 24,"line": 123,"col": 23,"name": "addr"},{"file": 24,"line": 123,"col": 56,"name": "len"},{"file": 24,"line": 123,"col": 68,"name": "prot"},{"file": 24,"line": 123,"col": 82,"name": "flags"},{"file": 24,"line": 123,"col": 97,"name": "fd"},{"file": 24,"line": 123,"col": 109,"name": "offset"},{"file": 24,"line": 124,"col": 25,"name": "addr"},{"file": 24,"line": 124,"col": 63,"name": "len"},{"file": 24,"line": 125,"col": 27,"name": "addr"},{"file": 24,"line": 125,"col": 59,"name": "len"},{"file": 24,"line": 125,"col": 71,"name": "prot"},{"file": 24,"line": 126,"col": 23,"name": "oldpath"},{"file": 24,"line": 126,"col": 47,"name": "newpath"},{"file": 24,"line": 126,"col": 71,"name": "flags"},{"file": 24,"line": 127,"col": 25,"name": "oldfd"},{"file": 24,"line": 127,"col": 40,"name": "oldpath"},{"file": 24,"line": 127,"col": 64,"name": "newfd"},{"file": 24,"line": 127,"col": 79,"name": "newpath"},{"file": 24,"line": 127,"col": 103,"name": "flags"},{"file": 24,"line": 128,"col": 25,"name": "path"},{"file": 24,"line": 129,"col": 27,"name": "dirfd"},{"file": 24,"line": 129,"col": 42,"name": "path"},{"file": 24,"line": 129,"col": 63,"name": "flags"},{"file": 24,"line": 130,"col": 25,"name": "buf"},{"file": 24,"line": 130,"col": 37,"name": "size"},{"file": 24,"line": 131,"col": 26,"name": "pid"},{"file": 24,"line": 131,"col": 40,"name": "stat_loc"},{"file": 24,"line": 131,"col": 59,"name": "options"},{"file": 24,"line": 133,"col": 25,"name": "path"},{"file": 24,"line": 133,"col": 46,"name": "mode"},{"file": 24,"line": 134,"col": 28,"name": "dirfd"},{"file": 24,"line": 134,"col": 43,"name": "path"},{"file": 24,"line": 134,"col": 64,"name": "mode"},{"file": 24,"line": 134,"col": 78,"name": "flags"},{"file": 24,"line": 135,"col": 23,"name": "fds"},{"file": 24,"line": 136,"col": 24,"name": "path"},{"file": 24,"line": 136,"col": 45,"name": "mode"},{"file": 24,"line": 137,"col": 26,"name": "dirfd"},{"file": 24,"line": 137,"col": 41,"name": "path"},{"file": 24,"line": 137,"col": 62,"name": "mode"},{"file": 24,"line": 138,"col": 26,"name": "existing"},{"file": 24,"line": 138,"col": 51,"name": "new"},{"file": 24,"line": 139,"col": 28,"name": "oldpath"},{"file": 24,"line": 139,"col": 52,"name": "newdirfd"},{"file": 24,"line": 139,"col": 70,"name": "newpath"},{"file": 24,"line": 140,"col": 25,"name": "old"},{"file": 24,"line": 140,"col": 45,"name": "new"},{"file": 24,"line": 141,"col": 27,"name": "olddirfd"},{"file": 24,"line": 141,"col": 45,"name": "old"},{"file": 24,"line": 141,"col": 65,"name": "newdirfd"},{"file": 24,"line": 141,"col": 83,"name": "new"},{"file": 24,"line": 142,"col": 24,"name": "path"},{"file": 24,"line": 143,"col": 25,"name": "fd"},{"file": 24,"line": 144,"col": 25,"name": "path"},{"file": 24,"line": 144,"col": 46,"name": "argv"},{"file": 24,"line": 144,"col": 82,"name": "envp"},{"file": 24,"line": 145,"col": 22,"name": "fd"},{"file": 24,"line": 146,"col": 23,"name": "old_fd"},{"file": 24,"line": 146,"col": 39,"name": "new_fd"},{"file": 24,"line": 147,"col": 27,"name": "path","noalias": true},{"file": 24,"line": 147,"col": 56,"name": "buf","noalias": true},{"file": 24,"line": 147,"col": 76,"name": "bufsize"},{"file": 24,"line": 148,"col": 29,"name": "dirfd"},{"file": 24,"line": 148,"col": 44,"name": "path","noalias": true},{"file": 24,"line": 148,"col": 73,"name": "buf","noalias": true},{"file": 24,"line": 148,"col": 93,"name": "bufsize"},{"file": 24,"line": 149,"col": 25,"name": "fd"},{"file": 24,"line": 149,"col": 37,"name": "mode"},{"file": 24,"line": 150,"col": 25,"name": "fd"},{"file": 24,"line": 150,"col": 37,"name": "owner"},{"file": 24,"line": 150,"col": 53,"name": "group"},{"file": 24,"line": 152,"col": 24,"name": "path"},{"file": 24,"line": 153,"col": 25,"name": "name"},{"file": 24,"line": 154,"col": 25,"name": "name"},{"file": 24,"line": 154,"col": 47,"name": "namelen"},{"file": 24,"line": 154,"col": 64,"name": "oldp"},{"file": 24,"line": 154,"col": 80,"name": "oldlenp"},{"file": 24,"line": 154,"col": 98,"name": "newp"},{"file": 24,"line": 154,"col": 114,"name": "newlen"},{"file": 24,"line": 155,"col": 31,"name": "name"},{"file": 24,"line": 155,"col": 52,"name": "oldp"},{"file": 24,"line": 155,"col": 68,"name": "oldlenp"},{"file": 24,"line": 155,"col": 86,"name": "newp"},{"file": 24,"line": 155,"col": 102,"name": "newlen"},{"file": 24,"line": 156,"col": 34,"name": "name"},{"file": 24,"line": 156,"col": 55,"name": "mibp"},{"file": 24,"line": 156,"col": 70,"name": "sizep"},{"file": 24,"line": 157,"col": 28,"name": "fd"},{"file": 24,"line": 157,"col": 40,"name": "termios_p"},{"file": 24,"line": 158,"col": 28,"name": "fd"},{"file": 24,"line": 158,"col": 40,"name": "optional_action"},{"file": 24,"line": 158,"col": 65,"name": "termios_p"},{"file": 24,"line": 159,"col": 24,"name": "fd"},{"file": 24,"line": 159,"col": 36,"name": "cmd"},{"file": 24,"line": 159,"col": 48,"varArgs": true},{"file": 24,"line": 160,"col": 24,"name": "fd"},{"file": 24,"line": 160,"col": 36,"name": "operation"},{"file": 24,"line": 161,"col": 24,"name": "fd"},{"file": 24,"line": 161,"col": 36,"name": "request"},{"file": 24,"line": 161,"col": 52,"varArgs": true},{"file": 24,"line": 162,"col": 24,"name": "buf"},{"file": 24,"line": 164,"col": 30,"name": "name"},{"file": 24,"line": 164,"col": 43,"name": "len"},{"file": 24,"line": 165,"col": 27,"name": "socket"},{"file": 24,"line": 165,"col": 43,"name": "how"},{"file": 24,"line": 166,"col": 23,"name": "socket"},{"file": 24,"line": 166,"col": 39,"name": "address"},{"file": 24,"line": 166,"col": 68,"name": "address_len"},{"file": 24,"line": 167,"col": 29,"name": "domain"},{"file": 24,"line": 167,"col": 45,"name": "sock_type"},{"file": 24,"line": 167,"col": 64,"name": "protocol"},{"file": 24,"line": 167,"col": 82,"name": "sv"},{"file": 24,"line": 168,"col": 25,"name": "sockfd"},{"file": 24,"line": 168,"col": 41,"name": "backlog"},{"file": 24,"line": 169,"col": 30,"name": "sockfd"},{"file": 24,"line": 169,"col": 46,"name": "addr","noalias": true},{"file": 24,"line": 169,"col": 73,"name": "addrlen","noalias": true},{"file": 24,"line": 170,"col": 30,"name": "sockfd"},{"file": 24,"line": 170,"col": 46,"name": "addr","noalias": true},{"file": 24,"line": 170,"col": 73,"name": "addrlen","noalias": true},{"file": 24,"line": 171,"col": 26,"name": "sockfd"},{"file": 24,"line": 171,"col": 42,"name": "sock_addr"},{"file": 24,"line": 171,"col": 72,"name": "addrlen"},{"file": 24,"line": 172,"col": 25,"name": "sockfd"},{"file": 24,"line": 172,"col": 41,"name": "addr","noalias": true},{"file": 24,"line": 172,"col": 69,"name": "addrlen","noalias": true},{"file": 24,"line": 173,"col": 26,"name": "sockfd"},{"file": 24,"line": 173,"col": 42,"name": "addr","noalias": true},{"file": 24,"line": 173,"col": 70,"name": "addrlen","noalias": true},{"file": 24,"line": 173,"col": 102,"name": "flags"},{"file": 24,"line": 174,"col": 29,"name": "sockfd"},{"file": 24,"line": 174,"col": 45,"name": "level"},{"file": 24,"line": 174,"col": 57,"name": "optname"},{"file": 24,"line": 174,"col": 71,"name": "optval","noalias": true},{"file": 24,"line": 174,"col": 97,"name": "optlen","noalias": true},{"file": 24,"line": 175,"col": 29,"name": "sockfd"},{"file": 24,"line": 175,"col": 45,"name": "level"},{"file": 24,"line": 175,"col": 57,"name": "optname"},{"file": 24,"line": 175,"col": 71,"name": "optval"},{"file": 24,"line": 175,"col": 95,"name": "optlen"},{"file": 24,"line": 176,"col": 23,"name": "sockfd"},{"file": 24,"line": 176,"col": 39,"name": "buf"},{"file": 24,"line": 176,"col": 59,"name": "len"},{"file": 24,"line": 176,"col": 71,"name": "flags"},{"file": 24,"line": 178,"col": 4,"name": "sockfd"},{"file": 24,"line": 179,"col": 4,"name": "buf"},{"file": 24,"line": 180,"col": 4,"name": "len"},{"file": 24,"line": 181,"col": 4,"name": "flags"},{"file": 24,"line": 182,"col": 4,"name": "dest_addr"},{"file": 24,"line": 183,"col": 4,"name": "addrlen"},{"file": 24,"line": 185,"col": 26,"name": "sockfd"},{"file": 24,"line": 185,"col": 42,"name": "msg"},{"file": 24,"line": 185,"col": 79,"name": "flags"},{"file": 24,"line": 187,"col": 23,"name": "sockfd"},{"file": 24,"line": 187,"col": 39,"name": "arg1"},{"file": 24,"line": 187,"col": 55,"name": "arg2"},{"file": 24,"line": 187,"col": 68,"name": "arg3"},{"file": 24,"line": 189,"col": 4,"name": "sockfd"},{"file": 24,"line": 190,"col": 4,"name": "buf","noalias": true},{"file": 24,"line": 191,"col": 4,"name": "len"},{"file": 24,"line": 192,"col": 4,"name": "flags"},{"file": 24,"line": 193,"col": 4,"name": "src_addr","noalias": true},{"file": 24,"line": 194,"col": 4,"name": "addrlen","noalias": true},{"file": 24,"line": 196,"col": 26,"name": "sockfd"},{"file": 24,"line": 196,"col": 42,"name": "msg"},{"file": 24,"line": 196,"col": 73,"name": "flags"},{"file": 24,"line": 198,"col": 23,"name": "pid"},{"file": 24,"line": 198,"col": 37,"name": "sig"},{"file": 24,"line": 199,"col": 32,"name": "fd"},{"file": 24,"line": 199,"col": 44,"name": "buf_ptr"},{"file": 24,"line": 199,"col": 60,"name": "nbytes"},{"file": 24,"line": 199,"col": 75,"name": "basep"},{"file": 24,"line": 201,"col": 25,"name": "uid"},{"file": 24,"line": 202,"col": 25,"name": "gid"},{"file": 24,"line": 203,"col": 26,"name": "euid"},{"file": 24,"line": 204,"col": 26,"name": "egid"},{"file": 24,"line": 205,"col": 27,"name": "ruid"},{"file": 24,"line": 205,"col": 42,"name": "euid"},{"file": 24,"line": 206,"col": 27,"name": "rgid"},{"file": 24,"line": 206,"col": 42,"name": "egid"},{"file": 24,"line": 207,"col": 28,"name": "ruid"},{"file": 24,"line": 207,"col": 43,"name": "euid"},{"file": 24,"line": 207,"col": 58,"name": "suid"},{"file": 24,"line": 208,"col": 28,"name": "rgid"},{"file": 24,"line": 208,"col": 43,"name": "egid"},{"file": 24,"line": 208,"col": 58,"name": "sgid"},{"file": 24,"line": 210,"col": 25},{"file": 24,"line": 211,"col": 26},{"file": 24,"line": 211,"col": 36},{"file": 24,"line": 212,"col": 23},{"file": 24,"line": 214,"col": 26,"name": "fd"},{"file": 24,"line": 214,"col": 38,"name": "times"},{"file": 24,"line": 215,"col": 25,"name": "path"},{"file": 24,"line": 215,"col": 46,"name": "times"},{"file": 24,"line": 217,"col": 28,"name": "dirfd"},{"file": 24,"line": 217,"col": 43,"name": "pathname"},{"file": 24,"line": 217,"col": 68,"name": "times"},{"file": 24,"line": 217,"col": 91,"name": "flags"},{"file": 24,"line": 218,"col": 27,"name": "fd"},{"file": 24,"line": 218,"col": 39,"name": "times"},{"file": 24,"line": 220,"col": 33,"name": "newthread","noalias": true},{"file": 24,"line": 220,"col": 64,"name": "attr","noalias": true},{"file": 24,"line": 220,"col": 104,"name": "start_routine"},{"file": 24,"line": 220,"col": 156,"name": "arg","noalias": true},{"file": 24,"line": 221,"col": 36,"name": "attr"},{"file": 24,"line": 222,"col": 40,"name": "attr"},{"file": 24,"line": 222,"col": 65,"name": "stackaddr"},{"file": 24,"line": 222,"col": 85,"name": "stacksize"},{"file": 24,"line": 223,"col": 44,"name": "attr"},{"file": 24,"line": 223,"col": 69,"name": "stacksize"},{"file": 24,"line": 224,"col": 44,"name": "attr"},{"file": 24,"line": 224,"col": 69,"name": "guardsize"},{"file": 24,"line": 225,"col": 39,"name": "attr"},{"file": 24,"line": 227,"col": 31,"name": "thread"},{"file": 24,"line": 227,"col": 50,"name": "arg_return"},{"file": 24,"line": 228,"col": 33,"name": "thread"},{"file": 24,"line": 230,"col": 4,"name": "prepare"},{"file": 24,"line": 231,"col": 4,"name": "parent"},{"file": 24,"line": 232,"col": 4,"name": "child"},{"file": 24,"line": 234,"col": 37,"name": "key"},{"file": 24,"line": 234,"col": 60,"name": "destructor"},{"file": 24,"line": 235,"col": 37,"name": "key"},{"file": 24,"line": 236,"col": 38,"name": "key"},{"file": 24,"line": 237,"col": 38,"name": "key"},{"file": 24,"line": 237,"col": 60,"name": "value"},{"file": 24,"line": 238,"col": 27,"name": "sem"},{"file": 24,"line": 238,"col": 42,"name": "pshared"},{"file": 24,"line": 238,"col": 58,"name": "value"},{"file": 24,"line": 239,"col": 30,"name": "sem"},{"file": 24,"line": 240,"col": 27,"name": "sem"},{"file": 24,"line": 241,"col": 27,"name": "sem"},{"file": 24,"line": 242,"col": 30,"name": "sem"},{"file": 24,"line": 243,"col": 32,"name": "sem"},{"file": 24,"line": 243,"col": 47,"name": "abs_timeout"},{"file": 24,"line": 244,"col": 31,"name": "sem"},{"file": 24,"line": 244,"col": 46,"name": "sval"},{"file": 24,"line": 248,"col": 4,"name": "kq"},{"file": 24,"line": 249,"col": 4,"name": "changelist"},{"file": 24,"line": 250,"col": 4,"name": "nchanges"},{"file": 24,"line": 251,"col": 4,"name": "eventlist"},{"file": 24,"line": 252,"col": 4,"name": "nevents"},{"file": 24,"line": 253,"col": 4,"name": "timeout"},{"file": 24,"line": 258,"col": 4,"name": "port"},{"file": 24,"line": 259,"col": 4,"name": "source"},{"file": 24,"line": 260,"col": 4,"name": "object"},{"file": 24,"line": 261,"col": 4,"name": "events"},{"file": 24,"line": 262,"col": 4,"name": "user_var"},{"file": 24,"line": 264,"col": 34,"name": "port"},{"file": 24,"line": 264,"col": 50,"name": "source"},{"file": 24,"line": 264,"col": 63,"name": "object"},{"file": 24,"line": 265,"col": 28,"name": "port"},{"file": 24,"line": 265,"col": 44,"name": "events"},{"file": 24,"line": 265,"col": 57,"name": "user_var"},{"file": 24,"line": 267,"col": 4,"name": "ports"},{"file": 24,"line": 268,"col": 4,"name": "errors"},{"file": 24,"line": 269,"col": 4,"name": "num_ports"},{"file": 24,"line": 270,"col": 4,"name": "events"},{"file": 24,"line": 271,"col": 4,"name": "user_var"},{"file": 24,"line": 273,"col": 27,"name": "port"},{"file": 24,"line": 273,"col": 43,"name": "event"},{"file": 24,"line": 273,"col": 65,"name": "timeout"},{"file": 24,"line": 275,"col": 4,"name": "port"},{"file": 24,"line": 276,"col": 4,"name": "event_list"},{"file": 24,"line": 277,"col": 4,"name": "max_events"},{"file": 24,"line": 278,"col": 4,"name": "events_retrieved"},{"file": 24,"line": 279,"col": 4,"name": "timeout"},{"file": 24,"line": 281,"col": 29,"name": "port"},{"file": 24,"line": 281,"col": 45,"name": "flags"},{"file": 24,"line": 281,"col": 57,"name": "events"},{"file": 24,"line": 281,"col": 70,"name": "user_var"},{"file": 24,"line": 284,"col": 4,"name": "node","noalias": true},{"file": 24,"line": 285,"col": 4,"name": "service","noalias": true},{"file": 24,"line": 286,"col": 4,"name": "hints","noalias": true},{"file": 24,"line": 287,"col": 4,"name": "res","noalias": true},{"file": 24,"line": 290,"col": 31,"name": "res"},{"file": 24,"line": 293,"col": 4,"name": "addr","noalias": true},{"file": 24,"line": 294,"col": 4,"name": "addrlen"},{"file": 24,"line": 295,"col": 4,"name": "host","noalias": true},{"file": 24,"line": 296,"col": 4,"name": "hostlen"},{"file": 24,"line": 297,"col": 4,"name": "serv","noalias": true},{"file": 24,"line": 298,"col": 4,"name": "servlen"},{"file": 24,"line": 299,"col": 4,"name": "flags"},{"file": 24,"line": 302,"col": 31,"name": "errcode"},{"file": 24,"line": 304,"col": 23,"name": "fds"},{"file": 24,"line": 304,"col": 41,"name": "nfds"},{"file": 24,"line": 304,"col": 57,"name": "timeout"},{"file": 24,"line": 305,"col": 24,"name": "fds"},{"file": 24,"line": 305,"col": 42,"name": "nfds"},{"file": 24,"line": 305,"col": 58,"name": "timeout"},{"file": 24,"line": 305,"col": 87,"name": "sigmask"},{"file": 24,"line": 308,"col": 4,"name": "msg"},{"file": 24,"line": 309,"col": 4,"name": "eomorig"},{"file": 24,"line": 310,"col": 4,"name": "comp_dn"},{"file": 24,"line": 311,"col": 4,"name": "exp_dn"},{"file": 24,"line": 312,"col": 4,"name": "length"},{"file": 24,"line": 316,"col": 37,"name": "mutex"},{"file": 24,"line": 317,"col": 39,"name": "mutex"},{"file": 24,"line": 318,"col": 40,"name": "mutex"},{"file": 24,"line": 319,"col": 40,"name": "mutex"},{"file": 24,"line": 322,"col": 36,"name": "cond","noalias": true},{"file": 24,"line": 322,"col": 69,"name": "mutex","noalias": true},{"file": 24,"line": 323,"col": 41,"name": "cond","noalias": true},{"file": 24,"line": 323,"col": 74,"name": "mutex","noalias": true},{"file": 24,"line": 323,"col": 109,"name": "abstime","noalias": true},{"file": 24,"line": 324,"col": 38,"name": "cond"},{"file": 24,"line": 325,"col": 41,"name": "cond"},{"file": 24,"line": 326,"col": 39,"name": "cond"},{"file": 24,"line": 328,"col": 41,"name": "rwl"},{"file": 24,"line": 329,"col": 40,"name": "rwl"},{"file": 24,"line": 330,"col": 40,"name": "rwl"},{"file": 24,"line": 331,"col": 43,"name": "rwl"},{"file": 24,"line": 332,"col": 43,"name": "rwl"},{"file": 24,"line": 333,"col": 40,"name": "rwl"},{"file": 24,"line": 338,"col": 25,"name": "path"},{"file": 24,"line": 338,"col": 46,"name": "mode"},{"file": 24,"line": 339,"col": 26,"name": "handle"},{"file": 24,"line": 340,"col": 24,"name": "handle"},{"file": 24,"line": 340,"col": 42,"name": "symbol"},{"file": 24,"line": 343,"col": 25,"name": "fd"},{"file": 24,"line": 344,"col": 24,"name": "fd"},{"file": 24,"line": 345,"col": 28,"name": "fd"},{"file": 24,"line": 347,"col": 24,"name": "option"},{"file": 24,"line": 347,"col": 39,"varArgs": true},{"file": 24,"line": 349,"col": 28,"name": "resource"},{"file": 24,"line": 349,"col": 57,"name": "rlim"},{"file": 24,"line": 350,"col": 28,"name": "resource"},{"file": 24,"line": 350,"col": 57,"name": "rlim"},{"file": 24,"line": 352,"col": 27,"name": "buf","noalias": true},{"file": 24,"line": 352,"col": 50,"name": "size"},{"file": 24,"line": 352,"col": 63,"name": "mode","noalias": true},{"file": 24,"line": 354,"col": 25,"name": "priority"},{"file": 24,"line": 354,"col": 42,"name": "message"},{"file": 24,"line": 354,"col": 66,"varArgs": true},{"file": 24,"line": 355,"col": 26,"name": "ident"},{"file": 24,"line": 355,"col": 48,"name": "logopt"},{"file": 24,"line": 355,"col": 63,"name": "facility"},{"file": 24,"line": 357,"col": 29,"name": "maskpri"},{"file": 24,"line": 84,"col": 35,"name": "file_name","noalias": true},{"file": 24,"line": 84,"col": 69,"name": "resolved_name","noalias": true},{"file": 24,"line": 85,"col": 34,"name": "dirfd"},{"file": 24,"line": 85,"col": 49,"name": "path"},{"file": 24,"line": 85,"col": 70,"name": "stat_buf"},{"file": 24,"line": 85,"col": 89,"name": "flags"},{"file": 55,"line": 7,"col": 25,"name": "memblock"},{"file": 55,"line": 11,"col": 31,"name": "clk_id"},{"file": 55,"line": 11,"col": 46,"name": "tp"},{"file": 55,"line": 12,"col": 32,"name": "clk_id"},{"file": 55,"line": 12,"col": 47,"name": "tp"},{"file": 55,"line": 13,"col": 24,"name": "fd"},{"file": 55,"line": 13,"col": 34,"name": "buf"},{"file": 55,"line": 14,"col": 28,"name": "who"},{"file": 55,"line": 14,"col": 40,"name": "usage"},{"file": 55,"line": 15,"col": 31,"name": "tv","noalias": true},{"file": 55,"line": 15,"col": 54,"name": "tz","noalias": true},{"file": 55,"line": 16,"col": 28,"name": "rqtp"},{"file": 55,"line": 16,"col": 51,"name": "rmtp"},{"file": 55,"line": 18,"col": 28,"name": "sig"},{"file": 55,"line": 18,"col": 40,"name": "act","noalias": true},{"file": 55,"line": 18,"col": 72,"name": "oact","noalias": true},{"file": 55,"line": 19,"col": 30,"name": "how"},{"file": 55,"line": 19,"col": 42,"name": "set","noalias": true},{"file": 55,"line": 19,"col": 73,"name": "oset","noalias": true},{"file": 55,"line": 20,"col": 23,"name": "path","noalias": true},{"file": 55,"line": 20,"col": 52,"name": "buf","noalias": true},{"file": 55,"line": 21,"col": 29,"name": "set"},{"file": 55,"line": 22,"col": 24,"name": "seconds"},{"file": 55,"line": 23,"col": 26,"name": "set"},{"file": 55,"line": 23,"col": 43,"name": "sig"},{"file": 26,"line": 63,"col": 13,"name": "fmt","comptime": true},{"file": 26,"line": 63,"col": 39,"name": "args"},{"file": 26,"line": 126,"col": 30,"name": "bp"},{"file": 26,"line": 126,"col": 41,"name": "ip"},{"file": 26,"line": 152,"col": 25,"name": "first_address"},{"file": 26,"line": 152,"col": 48,"name": "stack_trace"},{"file": 26,"line": 228,"col": 13,"name": "format","comptime": true},{"file": 26,"line": 228,"col": 42,"name": "args"},{"file": 26,"line": 237,"col": 4,"name": "trace"},{"file": 26,"line": 238,"col": 4,"name": "format","comptime": true},{"file": 26,"line": 239,"col": 4,"name": "args"},{"file": 26,"line": 759,"col": 24,"name": "allocator"},{"file": 26,"line": 759,"col": 51,"name": "elf_file"},{"file": 26,"line": 1666,"col": 28,"name": "prefix"},{"file": 26,"line": 561,"col": 22,"name": "symbols"},{"file": 26,"line": 561,"col": 52,"name": "address"},{"file": 26,"line": 749,"col": 13,"name": "ptr"},{"file": 26,"line": 749,"col": 30,"name": "offset"},{"file": 26,"line": 749,"col": 43,"name": "size"},{"file": 26,"line": 831,"col": 22,"name": "allocator"},{"file": 26,"line": 831,"col": 49,"name": "macho_file"},{"file": 26,"line": 968,"col": 16,"name": "file"},{"file": 26,"line": 1552,"col": 23,"name": "sig"},{"file": 26,"line": 1552,"col": 33,"name": "info"},{"file": 26,"line": 1552,"col": 60,"name": "ctx_ptr"},{"file": 26,"line": 1623,"col": 25,"name": "info"},{"file": 26,"line": 1634,"col": 30,"name": "info"},{"file": 26,"line": 1634,"col": 65,"name": "msg","comptime": true},{"file": 26,"line": 1634,"col": 83,"name": "format","comptime": true},{"file": 28,"line": 365,"col": 21,"name": "value"},{"file": 28,"line": 365,"col": 37,"name": "options"},{"file": 28,"line": 365,"col": 61,"name": "writer"},{"file": 28,"line": 764,"col": 24,"name": "bytes"},{"file": 28,"line": 770,"col": 24,"name": "bytes"},{"file": 28,"line": 810,"col": 27,"name": "bytes"},{"file": 28,"line": 817,"col": 27,"name": "bytes"},{"file": 28,"line": 872,"col": 21,"name": "value"},{"file": 28,"line": 879,"col": 21,"name": "value"},{"file": 28,"line": 909,"col": 4,"name": "c"},{"file": 28,"line": 910,"col": 4,"name": "options"},{"file": 28,"line": 911,"col": 4,"name": "writer"},{"file": 28,"line": 918,"col": 4,"name": "c"},{"file": 28,"line": 919,"col": 4,"name": "options"},{"file": 28,"line": 920,"col": 4,"name": "writer"},{"file": 28,"line": 972,"col": 4,"name": "value"},{"file": 28,"line": 973,"col": 4,"name": "options"},{"file": 28,"line": 974,"col": 4,"name": "writer"},{"file": 28,"line": 1063,"col": 4,"name": "value"},{"file": 28,"line": 1064,"col": 4,"name": "options"},{"file": 28,"line": 1065,"col": 4,"name": "writer"},{"file": 28,"line": 1174,"col": 4,"name": "value"},{"file": 28,"line": 1175,"col": 4,"name": "options"},{"file": 28,"line": 1176,"col": 4,"name": "writer"},{"file": 28,"line": 1364,"col": 20,"name": "out_buf"},{"file": 28,"line": 1364,"col": 35,"name": "value"},{"file": 28,"line": 1364,"col": 51,"name": "base"},{"file": 28,"line": 1364,"col": 61,"name": "case"},{"file": 28,"line": 1364,"col": 73,"name": "options"},{"file": 28,"line": 1421,"col": 19,"name": "ns"},{"file": 28,"line": 1474,"col": 25,"name": "ns"},{"file": 28,"line": 1563,"col": 17,"name": "format_fn","comptime": true},{"file": 28,"line": 1711,"col": 21,"name": "T","comptime": true},{"file": 28,"line": 1711,"col": 39,"name": "buf"},{"file": 28,"line": 1711,"col": 56,"name": "radix"},{"file": 28,"line": 1785,"col": 16,"name": "buf"},{"file": 28,"line": 1785,"col": 27,"name": "fmt","comptime": true},{"file": 28,"line": 1785,"col": 53,"name": "args"},{"file": 28,"line": 1791,"col": 17,"name": "buf"},{"file": 28,"line": 1791,"col": 28,"name": "fmt","comptime": true},{"file": 28,"line": 1791,"col": 54,"name": "args"},{"file": 28,"line": 1797,"col": 13,"name": "fmt","comptime": true},{"file": 28,"line": 1797,"col": 39,"name": "args"},{"file": 28,"line": 1805,"col": 18,"name": "allocator"},{"file": 28,"line": 1805,"col": 45,"name": "fmt","comptime": true},{"file": 28,"line": 1805,"col": 71,"name": "args"},{"file": 28,"line": 1819,"col": 19,"name": "allocator"},{"file": 28,"line": 1819,"col": 46,"name": "fmt","comptime": true},{"file": 28,"line": 1819,"col": 72,"name": "args"},{"file": 28,"line": 1845,"col": 26,"name": "buf"},{"file": 28,"line": 1845,"col": 37,"name": "value"},{"file": 28,"line": 1845,"col": 53,"name": "base"},{"file": 28,"line": 1845,"col": 63,"name": "case"},{"file": 28,"line": 1845,"col": 75,"name": "options"},{"file": 28,"line": 1849,"col": 21,"name": "fmt","comptime": true},{"file": 28,"line": 1849,"col": 47,"name": "args"},{"file": 28,"line": 2375,"col": 18,"name": "out"},{"file": 28,"line": 2375,"col": 29,"name": "input"},{"file": 28,"line": 394,"col": 15,"name": "T","comptime": true},{"file": 28,"line": 703,"col": 4,"name": "value"},{"file": 28,"line": 704,"col": 4,"name": "fmt","comptime": true},{"file": 28,"line": 705,"col": 4,"name": "options"},{"file": 28,"line": 706,"col": 4,"name": "writer"},{"file": 28,"line": 736,"col": 22,"name": "case","comptime": true},{"file": 28,"line": 774,"col": 25,"name": "case","comptime": true},{"file": 28,"line": 821,"col": 18,"name": "radix","comptime": true},{"file": 28,"line": 1370,"col": 18,"name": "ns"},{"file": 28,"line": 1370,"col": 27,"name": "fmt","comptime": true},{"file": 28,"line": 1370,"col": 53,"name": "options"},{"file": 28,"line": 1370,"col": 85,"name": "writer"},{"file": 28,"line": 1463,"col": 24,"name": "ns"},{"file": 28,"line": 1463,"col": 33,"name": "fmt","comptime": true},{"file": 28,"line": 1463,"col": 59,"name": "options"},{"file": 28,"line": 1463,"col": 91,"name": "writer"},{"file": 29,"line": 67,"col": 21,"name": "allocator"},{"file": 29,"line": 67,"col": 44,"name": "existing_path"},{"file": 29,"line": 67,"col": 71,"name": "new_path"},{"file": 29,"line": 109,"col": 4,"name": "source_path"},{"file": 29,"line": 110,"col": 4,"name": "dest_path"},{"file": 29,"line": 111,"col": 4,"name": "args"},{"file": 29,"line": 122,"col": 24,"name": "source_path"},{"file": 29,"line": 122,"col": 49,"name": "dest_path"},{"file": 29,"line": 122,"col": 72,"name": "args"},{"file": 29,"line": 212,"col": 23,"name": "absolute_path"},{"file": 29,"line": 218,"col": 24,"name": "absolute_path_z"},{"file": 29,"line": 224,"col": 24,"name": "absolute_path_w"},{"file": 29,"line": 234,"col": 25,"name": "dir_path"},{"file": 29,"line": 240,"col": 26,"name": "dir_path"},{"file": 29,"line": 246,"col": 26,"name": "dir_path"},{"file": 29,"line": 254,"col": 22,"name": "old_path"},{"file": 29,"line": 254,"col": 44,"name": "new_path"},{"file": 29,"line": 261,"col": 23,"name": "old_path"},{"file": 29,"line": 261,"col": 48,"name": "new_path"},{"file": 29,"line": 268,"col": 23,"name": "old_path"},{"file": 29,"line": 268,"col": 49,"name": "new_path"},{"file": 29,"line": 275,"col": 14,"name": "old_dir"},{"file": 29,"line": 275,"col": 28,"name": "old_sub_path"},{"file": 29,"line": 275,"col": 54,"name": "new_dir"},{"file": 29,"line": 275,"col": 68,"name": "new_sub_path"},{"file": 29,"line": 280,"col": 15,"name": "old_dir"},{"file": 29,"line": 280,"col": 29,"name": "old_sub_path_z"},{"file": 29,"line": 280,"col": 60,"name": "new_dir"},{"file": 29,"line": 280,"col": 74,"name": "new_sub_path_z"},{"file": 29,"line": 286,"col": 15,"name": "old_dir"},{"file": 29,"line": 286,"col": 29,"name": "old_sub_path_w"},{"file": 29,"line": 286,"col": 58,"name": "new_dir"},{"file": 29,"line": 286,"col": 72,"name": "new_sub_path_w"},{"file": 29,"line": 2231,"col": 23,"name": "absolute_path"},{"file": 29,"line": 2231,"col": 50,"name": "flags"},{"file": 29,"line": 2240,"col": 24,"name": "absolute_path_c"},{"file": 29,"line": 2240,"col": 56,"name": "flags"},{"file": 29,"line": 2248,"col": 24,"name": "absolute_path_c"},{"file": 29,"line": 2248,"col": 57,"name": "flags"},{"file": 29,"line": 2262,"col": 24,"name": "absolute_path"},{"file": 29,"line": 2262,"col": 51,"name": "flags"},{"file": 29,"line": 2270,"col": 25,"name": "absolute_path_c"},{"file": 29,"line": 2270,"col": 57,"name": "flags"},{"file": 29,"line": 2287,"col": 22,"name": "absolute_path"},{"file": 29,"line": 2287,"col": 49,"name": "flags"},{"file": 29,"line": 2295,"col": 23,"name": "absolute_path"},{"file": 29,"line": 2295,"col": 53,"name": "flags"},{"file": 29,"line": 2303,"col": 23,"name": "absolute_path"},{"file": 29,"line": 2303,"col": 53,"name": "flags"},{"file": 29,"line": 2317,"col": 26,"name": "absolute_path"},{"file": 29,"line": 2317,"col": 53,"name": "flags"},{"file": 29,"line": 2325,"col": 27,"name": "absolute_path_c"},{"file": 29,"line": 2325,"col": 59,"name": "flags"},{"file": 29,"line": 2331,"col": 27,"name": "absolute_path_w"},{"file": 29,"line": 2331,"col": 60,"name": "flags"},{"file": 29,"line": 2340,"col": 26,"name": "absolute_path"},{"file": 29,"line": 2348,"col": 27,"name": "absolute_path_c"},{"file": 29,"line": 2354,"col": 27,"name": "absolute_path_w"},{"file": 29,"line": 2364,"col": 26,"name": "absolute_path"},{"file": 29,"line": 2379,"col": 24,"name": "pathname"},{"file": 29,"line": 2379,"col": 46,"name": "buffer"},{"file": 29,"line": 2386,"col": 25,"name": "pathname_w"},{"file": 29,"line": 2386,"col": 53,"name": "buffer"},{"file": 29,"line": 2392,"col": 25,"name": "pathname_c"},{"file": 29,"line": 2392,"col": 52,"name": "buffer"},{"file": 29,"line": 2413,"col": 23,"name": "target_path"},{"file": 29,"line": 2413,"col": 48,"name": "sym_link_path"},{"file": 29,"line": 2413,"col": 75,"name": "flags"},{"file": 29,"line": 2431,"col": 24,"name": "target_path_w"},{"file": 29,"line": 2431,"col": 52,"name": "sym_link_path_w"},{"file": 29,"line": 2431,"col": 82,"name": "flags"},{"file": 29,"line": 2439,"col": 24,"name": "target_path_c"},{"file": 29,"line": 2439,"col": 54,"name": "sym_link_path_c"},{"file": 29,"line": 2439,"col": 86,"name": "flags"},{"file": 29,"line": 2470,"col": 19,"name": "flags"},{"file": 29,"line": 2491,"col": 24,"name": "allocator"},{"file": 29,"line": 2513,"col": 19,"name": "out_buffer"},{"file": 29,"line": 2600,"col": 27,"name": "allocator"},{"file": 29,"line": 2614,"col": 22,"name": "out_buffer"},{"file": 29,"line": 2623,"col": 21,"name": "allocator"},{"file": 29,"line": 2623,"col": 44,"name": "pathname"},{"file": 29,"line": 2639,"col": 13,"name": "fd_in"},{"file": 29,"line": 2639,"col": 29,"name": "fd_out"},{"file": 31,"line": 814,"col": 21,"name": "size","comptime": true},{"file": 31,"line": 814,"col": 43,"name": "fallback_allocator"},{"file": 31,"line": 826,"col": 30,"name": "size","comptime": true},{"file": 31,"line": 1050,"col": 21,"name": "base_allocator"},{"file": 31,"line": 1096,"col": 28,"name": "base_allocator"},{"file": 31,"line": 1126,"col": 35,"name": "base_allocator"},{"file": 31,"line": 1158,"col": 34,"name": "base_allocator"},{"file": 31,"line": 174,"col": 4,"name": "self"},{"file": 31,"line": 175,"col": 4,"name": "len"},{"file": 31,"line": 176,"col": 4,"name": "ptr_align"},{"file": 31,"line": 177,"col": 4,"name": "len_align"},{"file": 31,"line": 178,"col": 4,"name": "ret_addr"},{"file": 31,"line": 189,"col": 4,"name": "self"},{"file": 31,"line": 190,"col": 4,"name": "buf"},{"file": 31,"line": 191,"col": 4,"name": "old_align"},{"file": 31,"line": 192,"col": 4,"name": "new_len"},{"file": 31,"line": 193,"col": 4,"name": "len_align"},{"file": 31,"line": 194,"col": 4,"name": "ret_addr"},{"file": 31,"line": 673,"col": 20,"name": "container"},{"file": 31,"line": 673,"col": 37,"name": "ptr"},{"file": 31,"line": 678,"col": 22,"name": "container"},{"file": 31,"line": 678,"col": 39,"name": "slice"},{"file": 32,"line": 157,"col": 14,"name": "context"},{"file": 32,"line": 157,"col": 29,"name": "data"},{"file": 34,"line": 118,"col": 19,"name": "T","comptime": true},{"file": 34,"line": 118,"col": 37,"name": "x"},{"file": 34,"line": 118,"col": 43,"name": "y"},{"file": 34,"line": 118,"col": 49,"name": "tolerance"},{"file": 34,"line": 146,"col": 19,"name": "T","comptime": true},{"file": 34,"line": 146,"col": 37,"name": "x"},{"file": 34,"line": 146,"col": 43,"name": "y"},{"file": 34,"line": 146,"col": 49,"name": "tolerance"},{"file": 34,"line": 194,"col": 25,"name": "value"},{"file": 34,"line": 284,"col": 25,"name": "T","comptime": true},{"file": 34,"line": 299,"col": 25,"name": "T","comptime": true},{"file": 34,"line": 387,"col": 12,"name": "x"},{"file": 34,"line": 387,"col": 24,"name": "y"},{"file": 34,"line": 387,"col": 36,"name": "z"},{"file": 34,"line": 426,"col": 13,"name": "val"},{"file": 34,"line": 426,"col": 27,"name": "lower"},{"file": 34,"line": 426,"col": 43,"name": "upper"},{"file": 34,"line": 466,"col": 14,"name": "x"},{"file": 34,"line": 472,"col": 16,"name": "T","comptime": true},{"file": 34,"line": 472,"col": 34,"name": "a"},{"file": 34,"line": 472,"col": 40,"name": "shift_amt"},{"file": 34,"line": 479,"col": 11,"name": "T","comptime": true},{"file": 34,"line": 479,"col": 29,"name": "a"},{"file": 34,"line": 479,"col": 35,"name": "shift_amt"},{"file": 34,"line": 519,"col": 11,"name": "T","comptime": true},{"file": 34,"line": 519,"col": 29,"name": "a"},{"file": 34,"line": 519,"col": 35,"name": "shift_amt"},{"file": 34,"line": 559,"col": 12,"name": "T","comptime": true},{"file": 34,"line": 559,"col": 30,"name": "x"},{"file": 34,"line": 559,"col": 36,"name": "r"},{"file": 34,"line": 587,"col": 12,"name": "T","comptime": true},{"file": 34,"line": 587,"col": 30,"name": "x"},{"file": 34,"line": 587,"col": 36,"name": "r"},{"file": 34,"line": 627,"col": 19,"name": "T","comptime": true},{"file": 34,"line": 639,"col": 23,"name": "from","comptime": true},{"file": 34,"line": 639,"col": 52,"name": "to","comptime": true},{"file": 34,"line": 716,"col": 14,"name": "x"},{"file": 34,"line": 751,"col": 16,"name": "T","comptime": true},{"file": 34,"line": 751,"col": 34,"name": "numerator"},{"file": 34,"line": 751,"col": 48,"name": "denominator"},{"file": 34,"line": 775,"col": 16,"name": "T","comptime": true},{"file": 34,"line": 775,"col": 34,"name": "numerator"},{"file": 34,"line": 775,"col": 48,"name": "denominator"},{"file": 34,"line": 799,"col": 15,"name": "T","comptime": true},{"file": 34,"line": 799,"col": 33,"name": "numerator"},{"file": 34,"line": 799,"col": 47,"name": "denominator"},{"file": 34,"line": 854,"col": 16,"name": "T","comptime": true},{"file": 34,"line": 854,"col": 34,"name": "numerator"},{"file": 34,"line": 854,"col": 48,"name": "denominator"},{"file": 34,"line": 882,"col": 11,"name": "T","comptime": true},{"file": 34,"line": 882,"col": 29,"name": "numerator"},{"file": 34,"line": 882,"col": 43,"name": "denominator"},{"file": 34,"line": 908,"col": 11,"name": "T","comptime": true},{"file": 34,"line": 908,"col": 29,"name": "numerator"},{"file": 34,"line": 908,"col": 43,"name": "denominator"},{"file": 34,"line": 968,"col": 18,"name": "x"},{"file": 34,"line": 1017,"col": 17,"name": "alignment","comptime": true},{"file": 34,"line": 1017,"col": 42,"name": "ptr"},{"file": 34,"line": 1032,"col": 23,"name": "T","comptime": true},{"file": 34,"line": 1032,"col": 41,"name": "value"},{"file": 34,"line": 1088,"col": 28,"name": "T","comptime": true},{"file": 34,"line": 1088,"col": 46,"name": "value"},{"file": 34,"line": 1128,"col": 16,"name": "T","comptime": true},{"file": 34,"line": 1128,"col": 34,"name": "x"},{"file": 34,"line": 1137,"col": 21,"name": "T","comptime": true},{"file": 34,"line": 1137,"col": 39,"name": "x"},{"file": 34,"line": 1162,"col": 17,"name": "T","comptime": true},{"file": 34,"line": 1162,"col": 35,"name": "value"},{"file": 34,"line": 1340,"col": 13,"name": "a"},{"file": 34,"line": 1340,"col": 25,"name": "b"},{"file": 34,"line": 1371,"col": 15,"name": "a"},{"file": 34,"line": 1371,"col": 27,"name": "op"},{"file": 34,"line": 1371,"col": 48,"name": "b"},{"file": 34,"line": 1433,"col": 23,"name": "MaskInt","comptime": true},{"file": 34,"line": 1433,"col": 47,"name": "value"},{"file": 34,"line": 1478,"col": 19,"name": "num"},{"file": 34,"line": 1478,"col": 33,"name": "denom"},{"file": 35,"line": 12,"col": 15,"name": "v"},{"file": 35,"line": 55,"col": 20,"name": "T","comptime": true},{"file": 35,"line": 55,"col": 38,"name": "str"},{"file": 35,"line": 99,"col": 16,"name": "T","comptime": true},{"file": 35,"line": 118,"col": 17,"name": "T","comptime": true},{"file": 35,"line": 328,"col": 23,"name": "T","comptime": true},{"file": 35,"line": 363,"col": 20,"name": "T","comptime": true},{"file": 35,"line": 404,"col": 23,"name": "T","comptime": true},{"file": 35,"line": 404,"col": 41,"name": "decl_name","comptime": true},{"file": 35,"line": 440,"col": 14,"name": "T","comptime": true},{"file": 35,"line": 485,"col": 17,"name": "T","comptime": true},{"file": 35,"line": 485,"col": 35,"name": "field","comptime": true},{"file": 35,"line": 520,"col": 18,"name": "T","comptime": true},{"file": 35,"line": 559,"col": 17,"name": "T","comptime": true},{"file": 35,"line": 622,"col": 17,"name": "u"},{"file": 35,"line": 649,"col": 18,"name": "U","comptime": true},{"file": 35,"line": 649,"col": 36,"name": "tag"},{"file": 35,"line": 816,"col": 17,"name": "EnumTag","comptime": true},{"file": 35,"line": 816,"col": 41,"name": "tag_int"},{"file": 35,"line": 828,"col": 18,"name": "T","comptime": true},{"file": 35,"line": 828,"col": 36,"name": "name","comptime": true},{"file": 35,"line": 839,"col": 16,"name": "Namespace","comptime": true},{"file": 35,"line": 839,"col": 42,"name": "Decl","comptime": true},{"file": 35,"line": 868,"col": 13,"name": "bit_count","comptime": true},{"file": 35,"line": 881,"col": 14,"name": "len","comptime": true},{"file": 35,"line": 881,"col": 33,"name": "child","comptime": true},{"file": 35,"line": 897,"col": 17,"name": "Function","comptime": true},{"file": 35,"line": 939,"col": 13,"name": "types","comptime": true},{"file": 35,"line": 1003,"col": 20,"name": "name","comptime": true},{"file": 35,"line": 1003,"col": 47,"name": "T","comptime": true},{"file": 35,"line": 1010,"col": 15,"name": "error_union"},{"file": 35,"line": 580,"col": 19,"name": "expected"},{"file": 35,"line": 580,"col": 38,"name": "actual"},{"file": 36,"line": 235,"col": 13,"name": "fd"},{"file": 36,"line": 270,"col": 14,"name": "fd"},{"file": 36,"line": 270,"col": 24,"name": "mode"},{"file": 36,"line": 311,"col": 14,"name": "fd"},{"file": 36,"line": 311,"col": 24,"name": "owner"},{"file": 36,"line": 311,"col": 39,"name": "group"},{"file": 36,"line": 345,"col": 17,"name": "buffer"},{"file": 36,"line": 446,"col": 13,"name": "sig"},{"file": 36,"line": 476,"col": 12,"name": "pid"},{"file": 36,"line": 476,"col": 24,"name": "sig"},{"file": 36,"line": 487,"col": 12,"name": "status"},{"file": 36,"line": 541,"col": 12,"name": "fd"},{"file": 36,"line": 541,"col": 22,"name": "buf"},{"file": 36,"line": 608,"col": 13,"name": "fd"},{"file": 36,"line": 608,"col": 23,"name": "iov"},{"file": 36,"line": 668,"col": 13,"name": "fd"},{"file": 36,"line": 668,"col": 23,"name": "buf"},{"file": 36,"line": 668,"col": 34,"name": "offset"},{"file": 36,"line": 745,"col": 17,"name": "fd"},{"file": 36,"line": 745,"col": 27,"name": "length"},{"file": 36,"line": 816,"col": 14,"name": "fd"},{"file": 36,"line": 816,"col": 24,"name": "iov"},{"file": 36,"line": 816,"col": 44,"name": "offset"},{"file": 36,"line": 922,"col": 13,"name": "fd"},{"file": 36,"line": 922,"col": 23,"name": "bytes"},{"file": 36,"line": 999,"col": 14,"name": "fd"},{"file": 36,"line": 999,"col": 24,"name": "iov"},{"file": 36,"line": 1074,"col": 14,"name": "fd"},{"file": 36,"line": 1074,"col": 24,"name": "bytes"},{"file": 36,"line": 1074,"col": 43,"name": "offset"},{"file": 36,"line": 1166,"col": 15,"name": "fd"},{"file": 36,"line": 1166,"col": 25,"name": "iov"},{"file": 36,"line": 1166,"col": 51,"name": "offset"},{"file": 36,"line": 1282,"col": 12,"name": "file_path"},{"file": 36,"line": 1282,"col": 35,"name": "flags"},{"file": 36,"line": 1282,"col": 47,"name": "perm"},{"file": 36,"line": 1295,"col": 13,"name": "file_path"},{"file": 36,"line": 1295,"col": 39,"name": "flags"},{"file": 36,"line": 1295,"col": 51,"name": "perm"},{"file": 36,"line": 1373,"col": 13,"name": "file_path_w"},{"file": 36,"line": 1373,"col": 39,"name": "flags"},{"file": 36,"line": 1373,"col": 51,"name": "perm"},{"file": 36,"line": 1387,"col": 14,"name": "dir_fd"},{"file": 36,"line": 1387,"col": 28,"name": "file_path"},{"file": 36,"line": 1387,"col": 51,"name": "flags"},{"file": 36,"line": 1387,"col": 63,"name": "mode"},{"file": 36,"line": 1400,"col": 18,"name": "dir_fd"},{"file": 36,"line": 1400,"col": 32,"name": "file_path"},{"file": 36,"line": 1400,"col": 55,"name": "lookup_flags"},{"file": 36,"line": 1400,"col": 84,"name": "oflags"},{"file": 36,"line": 1400,"col": 102,"name": "fdflags"},{"file": 36,"line": 1400,"col": 122,"name": "base"},{"file": 36,"line": 1400,"col": 138,"name": "inheriting"},{"file": 36,"line": 1436,"col": 15,"name": "dir_fd"},{"file": 36,"line": 1436,"col": 29,"name": "file_path"},{"file": 36,"line": 1436,"col": 55,"name": "flags"},{"file": 36,"line": 1436,"col": 67,"name": "mode"},{"file": 36,"line": 1483,"col": 15,"name": "dir_fd"},{"file": 36,"line": 1483,"col": 29,"name": "file_path_w"},{"file": 36,"line": 1483,"col": 55,"name": "flags"},{"file": 36,"line": 1483,"col": 67,"name": "mode"},{"file": 36,"line": 1494,"col": 11,"name": "old_fd"},{"file": 36,"line": 1504,"col": 12,"name": "old_fd"},{"file": 36,"line": 1504,"col": 26,"name": "new_fd"},{"file": 36,"line": 1537,"col": 4,"name": "path"},{"file": 36,"line": 1538,"col": 4,"name": "child_argv"},{"file": 36,"line": 1539,"col": 4,"name": "envp"},{"file": 36,"line": 1574,"col": 4,"name": "arg0_expand","comptime": true},{"file": 36,"line": 1575,"col": 4,"name": "file"},{"file": 36,"line": 1576,"col": 4,"name": "child_argv"},{"file": 36,"line": 1580,"col": 4,"name": "envp"},{"file": 36,"line": 1628,"col": 4,"name": "file"},{"file": 36,"line": 1629,"col": 4,"name": "argv_ptr"},{"file": 36,"line": 1630,"col": 4,"name": "envp"},{"file": 36,"line": 1637,"col": 14,"name": "key"},{"file": 36,"line": 1686,"col": 15,"name": "key"},{"file": 36,"line": 1792,"col": 15,"name": "target_path"},{"file": 36,"line": 1792,"col": 40,"name": "sym_link_path"},{"file": 36,"line": 1808,"col": 16,"name": "target_path"},{"file": 36,"line": 1808,"col": 44,"name": "sym_link_path"},{"file": 36,"line": 1838,"col": 17,"name": "target_path"},{"file": 36,"line": 1838,"col": 42,"name": "newdirfd"},{"file": 36,"line": 1838,"col": 58,"name": "sym_link_path"},{"file": 36,"line": 1854,"col": 21,"name": "target_path"},{"file": 36,"line": 1854,"col": 46,"name": "newdirfd"},{"file": 36,"line": 1854,"col": 62,"name": "sym_link_path"},{"file": 36,"line": 1878,"col": 18,"name": "target_path"},{"file": 36,"line": 1878,"col": 46,"name": "newdirfd"},{"file": 36,"line": 1878,"col": 62,"name": "sym_link_path"},{"file": 36,"line": 1917,"col": 13,"name": "oldpath"},{"file": 36,"line": 1917,"col": 37,"name": "newpath"},{"file": 36,"line": 1917,"col": 61,"name": "flags"},{"file": 36,"line": 1939,"col": 12,"name": "oldpath"},{"file": 36,"line": 1939,"col": 33,"name": "newpath"},{"file": 36,"line": 1939,"col": 54,"name": "flags"},{"file": 36,"line": 1948,"col": 4,"name": "olddir"},{"file": 36,"line": 1949,"col": 4,"name": "oldpath"},{"file": 36,"line": 1950,"col": 4,"name": "newdir"},{"file": 36,"line": 1951,"col": 4,"name": "newpath"},{"file": 36,"line": 1952,"col": 4,"name": "flags"},{"file": 36,"line": 1977,"col": 4,"name": "olddir"},{"file": 36,"line": 1978,"col": 4,"name": "oldpath"},{"file": 36,"line": 1979,"col": 4,"name": "newdir"},{"file": 36,"line": 1980,"col": 4,"name": "newpath"},{"file": 36,"line": 1981,"col": 4,"name": "flags"},{"file": 36,"line": 2013,"col": 14,"name": "file_path"},{"file": 36,"line": 2028,"col": 15,"name": "file_path"},{"file": 36,"line": 2053,"col": 15,"name": "file_path_w"},{"file": 36,"line": 2064,"col": 16,"name": "dirfd"},{"file": 36,"line": 2064,"col": 29,"name": "file_path"},{"file": 36,"line": 2064,"col": 52,"name": "flags"},{"file": 36,"line": 2080,"col": 20,"name": "dirfd"},{"file": 36,"line": 2080,"col": 33,"name": "file_path"},{"file": 36,"line": 2080,"col": 56,"name": "flags"},{"file": 36,"line": 2111,"col": 17,"name": "dirfd"},{"file": 36,"line": 2111,"col": 30,"name": "file_path_c"},{"file": 36,"line": 2111,"col": 58,"name": "flags"},{"file": 36,"line": 2141,"col": 17,"name": "dirfd"},{"file": 36,"line": 2141,"col": 30,"name": "sub_path_w"},{"file": 36,"line": 2141,"col": 55,"name": "flags"},{"file": 36,"line": 2171,"col": 14,"name": "old_path"},{"file": 36,"line": 2171,"col": 36,"name": "new_path"},{"file": 36,"line": 2188,"col": 15,"name": "old_path"},{"file": 36,"line": 2188,"col": 40,"name": "new_path"},{"file": 36,"line": 2220,"col": 15,"name": "old_path"},{"file": 36,"line": 2220,"col": 41,"name": "new_path"},{"file": 36,"line": 2227,"col": 4,"name": "old_dir_fd"},{"file": 36,"line": 2228,"col": 4,"name": "old_path"},{"file": 36,"line": 2229,"col": 4,"name": "new_dir_fd"},{"file": 36,"line": 2230,"col": 4,"name": "new_path"},{"file": 36,"line": 2247,"col": 20,"name": "old_dir_fd"},{"file": 36,"line": 2247,"col": 38,"name": "old_path"},{"file": 36,"line": 2247,"col": 60,"name": "new_dir_fd"},{"file": 36,"line": 2247,"col": 78,"name": "new_path"},{"file": 36,"line": 2275,"col": 4,"name": "old_dir_fd"},{"file": 36,"line": 2276,"col": 4,"name": "old_path"},{"file": 36,"line": 2277,"col": 4,"name": "new_dir_fd"},{"file": 36,"line": 2278,"col": 4,"name": "new_path"},{"file": 36,"line": 2313,"col": 4,"name": "old_dir_fd"},{"file": 36,"line": 2314,"col": 4,"name": "old_path_w"},{"file": 36,"line": 2315,"col": 4,"name": "new_dir_fd"},{"file": 36,"line": 2316,"col": 4,"name": "new_path_w"},{"file": 36,"line": 2317,"col": 4,"name": "ReplaceIfExists"},{"file": 36,"line": 2368,"col": 15,"name": "dir_fd"},{"file": 36,"line": 2368,"col": 29,"name": "sub_dir_path"},{"file": 36,"line": 2368,"col": 55,"name": "mode"},{"file": 36,"line": 2382,"col": 19,"name": "dir_fd"},{"file": 36,"line": 2382,"col": 33,"name": "sub_dir_path"},{"file": 36,"line": 2382,"col": 59,"name": "mode"},{"file": 36,"line": 2405,"col": 16,"name": "dir_fd"},{"file": 36,"line": 2405,"col": 30,"name": "sub_dir_path"},{"file": 36,"line": 2405,"col": 59,"name": "mode"},{"file": 36,"line": 2430,"col": 16,"name": "dir_fd"},{"file": 36,"line": 2430,"col": 30,"name": "sub_path_w"},{"file": 36,"line": 2430,"col": 55,"name": "mode"},{"file": 36,"line": 2468,"col": 13,"name": "dir_path"},{"file": 36,"line": 2468,"col": 35,"name": "mode"},{"file": 36,"line": 2481,"col": 14,"name": "dir_path"},{"file": 36,"line": 2481,"col": 39,"name": "mode"},{"file": 36,"line": 2506,"col": 14,"name": "dir_path_w"},{"file": 36,"line": 2506,"col": 39,"name": "mode"},{"file": 36,"line": 2538,"col": 13,"name": "dir_path"},{"file": 36,"line": 2553,"col": 14,"name": "dir_path"},{"file": 36,"line": 2578,"col": 14,"name": "dir_path_w"},{"file": 36,"line": 2601,"col": 13,"name": "dir_path"},{"file": 36,"line": 2618,"col": 14,"name": "dir_path"},{"file": 36,"line": 2640,"col": 14,"name": "dir_path"},{"file": 36,"line": 2653,"col": 14,"name": "dirfd"},{"file": 36,"line": 2687,"col": 16,"name": "file_path"},{"file": 36,"line": 2687,"col": 39,"name": "out_buffer"},{"file": 36,"line": 2703,"col": 17,"name": "file_path"},{"file": 36,"line": 2703,"col": 41,"name": "out_buffer"},{"file": 36,"line": 2708,"col": 17,"name": "file_path"},{"file": 36,"line": 2708,"col": 43,"name": "out_buffer"},{"file": 36,"line": 2732,"col": 18,"name": "dirfd"},{"file": 36,"line": 2732,"col": 31,"name": "file_path"},{"file": 36,"line": 2732,"col": 54,"name": "out_buffer"},{"file": 36,"line": 2748,"col": 22,"name": "dirfd"},{"file": 36,"line": 2748,"col": 35,"name": "file_path"},{"file": 36,"line": 2748,"col": 58,"name": "out_buffer"},{"file": 36,"line": 2768,"col": 19,"name": "dirfd"},{"file": 36,"line": 2768,"col": 32,"name": "file_path"},{"file": 36,"line": 2768,"col": 56,"name": "out_buffer"},{"file": 36,"line": 2774,"col": 19,"name": "dirfd"},{"file": 36,"line": 2774,"col": 32,"name": "file_path"},{"file": 36,"line": 2774,"col": 58,"name": "out_buffer"},{"file": 36,"line": 2802,"col": 14,"name": "uid"},{"file": 36,"line": 2812,"col": 15,"name": "uid"},{"file": 36,"line": 2821,"col": 16,"name": "ruid"},{"file": 36,"line": 2821,"col": 29,"name": "euid"},{"file": 36,"line": 2831,"col": 14,"name": "gid"},{"file": 36,"line": 2841,"col": 15,"name": "uid"},{"file": 36,"line": 2850,"col": 16,"name": "rgid"},{"file": 36,"line": 2850,"col": 29,"name": "egid"},{"file": 36,"line": 2955,"col": 14,"name": "domain"},{"file": 36,"line": 2955,"col": 27,"name": "socket_type"},{"file": 36,"line": 2955,"col": 45,"name": "protocol"},{"file": 36,"line": 3030,"col": 16,"name": "sock"},{"file": 36,"line": 3030,"col": 32,"name": "how"},{"file": 36,"line": 3066,"col": 19,"name": "sock"},{"file": 36,"line": 3117,"col": 12,"name": "sock"},{"file": 36,"line": 3117,"col": 28,"name": "addr"},{"file": 36,"line": 3117,"col": 51,"name": "len"},{"file": 36,"line": 3187,"col": 14,"name": "sock"},{"file": 36,"line": 3187,"col": 30,"name": "backlog"},{"file": 36,"line": 3263,"col": 4,"docs": " This argument is a socket that has been created with `socket`, bound to a local address with `bind`, and is listening for connections after a `listen`.","name": "sock"},{"file": 36,"line": 3268,"col": 4,"docs": " This argument is a pointer to a sockaddr structure.  This structure is filled in with  the address  of  the  peer  socket, as known to the communications layer.  The exact format of the address returned addr is determined by the socket's address  family  (see  `socket`  and  the respective  protocol  man  pages).","name": "addr"},{"file": 36,"line": 3275,"col": 4,"docs": " This argument is a value-result argument: the caller must initialize it to contain  the size (in bytes) of the structure pointed to by addr; on return it will contain the actual size of the peer address. The returned address is truncated if the buffer provided is too small; in this  case,  `addr_size` will return a value greater than was supplied to the call.","name": "addr_size"},{"file": 36,"line": 3282,"col": 4,"docs": " The following values can be bitwise ORed in flags to obtain different behavior: * `SOCK.NONBLOCK` - Set the `O.NONBLOCK` file status flag on the open file description (see `open`)   referred  to by the new file descriptor.  Using this flag saves extra calls to `fcntl` to achieve   the same result. * `SOCK.CLOEXEC`  - Set the close-on-exec (`FD_CLOEXEC`) flag on the new file descriptor.   See  the   description  of the `O.CLOEXEC` flag in `open` for reasons why this may be useful.","name": "flags"},{"file": 36,"line": 3356,"col": 21,"name": "flags"},{"file": 36,"line": 3395,"col": 17,"name": "epfd"},{"file": 36,"line": 3395,"col": 28,"name": "op"},{"file": 36,"line": 3395,"col": 37,"name": "fd"},{"file": 36,"line": 3395,"col": 46,"name": "event"},{"file": 36,"line": 3415,"col": 18,"name": "epfd"},{"file": 36,"line": 3415,"col": 29,"name": "events"},{"file": 36,"line": 3415,"col": 58,"name": "timeout"},{"file": 36,"line": 3436,"col": 15,"name": "initval"},{"file": 36,"line": 3436,"col": 29,"name": "flags"},{"file": 36,"line": 3463,"col": 19,"name": "sock"},{"file": 36,"line": 3463,"col": 35,"name": "addr"},{"file": 36,"line": 3463,"col": 52,"name": "addrlen"},{"file": 36,"line": 3492,"col": 19,"name": "sock"},{"file": 36,"line": 3492,"col": 35,"name": "addr"},{"file": 36,"line": 3492,"col": 52,"name": "addrlen"},{"file": 36,"line": 3571,"col": 15,"name": "sock"},{"file": 36,"line": 3571,"col": 31,"name": "sock_addr"},{"file": 36,"line": 3571,"col": 59,"name": "len"},{"file": 36,"line": 3623,"col": 23,"name": "sockfd"},{"file": 36,"line": 3663,"col": 15,"name": "pid"},{"file": 36,"line": 3663,"col": 27,"name": "flags"},{"file": 36,"line": 3690,"col": 13,"name": "fd"},{"file": 36,"line": 3728,"col": 15,"name": "dirfd"},{"file": 36,"line": 3728,"col": 28,"name": "pathname"},{"file": 36,"line": 3728,"col": 50,"name": "flags"},{"file": 36,"line": 3743,"col": 19,"name": "dirfd"},{"file": 36,"line": 3743,"col": 32,"name": "pathname"},{"file": 36,"line": 3743,"col": 54,"name": "flags"},{"file": 36,"line": 3762,"col": 16,"name": "dirfd"},{"file": 36,"line": 3762,"col": 29,"name": "pathname"},{"file": 36,"line": 3762,"col": 54,"name": "flags"},{"file": 36,"line": 3822,"col": 4,"name": "kq"},{"file": 36,"line": 3823,"col": 4,"name": "changelist"},{"file": 36,"line": 3824,"col": 4,"name": "eventlist"},{"file": 36,"line": 3825,"col": 4,"name": "timeout"},{"file": 36,"line": 3858,"col": 21,"name": "flags"},{"file": 36,"line": 3880,"col": 25,"name": "inotify_fd"},{"file": 36,"line": 3880,"col": 42,"name": "pathname"},{"file": 36,"line": 3880,"col": 64,"name": "mask"},{"file": 36,"line": 3888,"col": 26,"name": "inotify_fd"},{"file": 36,"line": 3888,"col": 43,"name": "pathname"},{"file": 36,"line": 3888,"col": 68,"name": "mask"},{"file": 36,"line": 3906,"col": 24,"name": "inotify_fd"},{"file": 36,"line": 3906,"col": 41,"name": "wd"},{"file": 36,"line": 3930,"col": 16,"name": "memory"},{"file": 36,"line": 3930,"col": 51,"name": "protection"},{"file": 36,"line": 3976,"col": 4,"name": "ptr"},{"file": 36,"line": 3977,"col": 4,"name": "length"},{"file": 36,"line": 3978,"col": 4,"name": "prot"},{"file": 36,"line": 3979,"col": 4,"name": "flags"},{"file": 36,"line": 3980,"col": 4,"name": "fd"},{"file": 36,"line": 3981,"col": 4,"name": "offset"},{"file": 36,"line": 4019,"col": 14,"name": "memory"},{"file": 36,"line": 4045,"col": 14,"name": "path"},{"file": 36,"line": 4045,"col": 32,"name": "mode"},{"file": 36,"line": 4058,"col": 15,"name": "path"},{"file": 36,"line": 4058,"col": 36,"name": "mode"},{"file": 36,"line": 4084,"col": 15,"name": "path"},{"file": 36,"line": 4084,"col": 37,"name": "mode"},{"file": 36,"line": 4100,"col": 17,"name": "dirfd"},{"file": 36,"line": 4100,"col": 30,"name": "path"},{"file": 36,"line": 4100,"col": 48,"name": "mode"},{"file": 36,"line": 4100,"col": 59,"name": "flags"},{"file": 36,"line": 4110,"col": 18,"name": "dirfd"},{"file": 36,"line": 4110,"col": 31,"name": "path"},{"file": 36,"line": 4110,"col": 52,"name": "mode"},{"file": 36,"line": 4110,"col": 63,"name": "flags"},{"file": 36,"line": 4135,"col": 18,"name": "dirfd"},{"file": 36,"line": 4135,"col": 31,"name": "sub_path_w"},{"file": 36,"line": 4135,"col": 59,"name": "mode"},{"file": 36,"line": 4135,"col": 70,"name": "flags"},{"file": 36,"line": 4192,"col": 13,"name": "flags"},{"file": 36,"line": 4251,"col": 4,"name": "name"},{"file": 36,"line": 4252,"col": 4,"name": "oldp"},{"file": 36,"line": 4253,"col": 4,"name": "oldlenp"},{"file": 36,"line": 4254,"col": 4,"name": "newp"},{"file": 36,"line": 4255,"col": 4,"name": "newlen"},{"file": 36,"line": 4278,"col": 4,"name": "name"},{"file": 36,"line": 4279,"col": 4,"name": "oldp"},{"file": 36,"line": 4280,"col": 4,"name": "oldlenp"},{"file": 36,"line": 4281,"col": 4,"name": "newp"},{"file": 36,"line": 4282,"col": 4,"name": "newlen"},{"file": 36,"line": 4301,"col": 20,"name": "tv"},{"file": 36,"line": 4301,"col": 35,"name": "tz"},{"file": 36,"line": 4366,"col": 17,"name": "fd"},{"file": 36,"line": 4366,"col": 27,"name": "offset"},{"file": 36,"line": 4413,"col": 17,"name": "fd"},{"file": 36,"line": 4413,"col": 27,"name": "offset"},{"file": 36,"line": 4513,"col": 13,"name": "fd"},{"file": 36,"line": 4513,"col": 23,"name": "cmd"},{"file": 36,"line": 4513,"col": 33,"name": "arg"},{"file": 36,"line": 4592,"col": 13,"name": "fd"},{"file": 36,"line": 4592,"col": 23,"name": "operation"},{"file": 36,"line": 4641,"col": 16,"name": "pathname"},{"file": 36,"line": 4641,"col": 38,"name": "out_buffer"},{"file": 36,"line": 4656,"col": 17,"name": "pathname"},{"file": 36,"line": 4656,"col": 42,"name": "out_buffer"},{"file": 36,"line": 4690,"col": 17,"name": "pathname"},{"file": 36,"line": 4690,"col": 40,"name": "out_buffer"},{"file": 36,"line": 4730,"col": 17,"name": "fd"},{"file": 36,"line": 4730,"col": 27,"name": "out_buffer"},{"file": 36,"line": 4783,"col": 17,"name": "seconds"},{"file": 36,"line": 4783,"col": 31,"name": "nanoseconds"},{"file": 36,"line": 4808,"col": 4,"name": "context"},{"file": 36,"line": 4809,"col": 4,"name": "Error","comptime": true},{"file": 36,"line": 4810,"col": 4,"name": "callback","comptime": true},{"file": 36,"line": 4893,"col": 21,"name": "clk_id"},{"file": 36,"line": 4893,"col": 34,"name": "tp"},{"file": 36,"line": 4934,"col": 20,"name": "clk_id"},{"file": 36,"line": 4934,"col": 33,"name": "res"},{"file": 36,"line": 4958,"col": 25,"name": "pid"},{"file": 36,"line": 4972,"col": 19,"name": "file_path"},{"file": 36,"line": 4997,"col": 23,"name": "err"},{"file": 36,"line": 5013,"col": 19,"name": "ss"},{"file": 36,"line": 5013,"col": 34,"name": "old_ss"},{"file": 36,"line": 5025,"col": 17,"name": "sig"},{"file": 36,"line": 5025,"col": 26,"name": "act"},{"file": 36,"line": 5025,"col": 50,"name": "oact"},{"file": 36,"line": 5058,"col": 16,"name": "fd"},{"file": 36,"line": 5058,"col": 26,"name": "times"},{"file": 36,"line": 5091,"col": 19,"name": "name_buffer"},{"file": 36,"line": 5121,"col": 4,"name": "op"},{"file": 36,"line": 5122,"col": 4,"name": "dname"},{"file": 36,"line": 5123,"col": 4,"name": "class"},{"file": 36,"line": 5124,"col": 4,"name": "ty"},{"file": 36,"line": 5125,"col": 4,"name": "data"},{"file": 36,"line": 5126,"col": 4,"name": "newrr"},{"file": 36,"line": 5127,"col": 4,"name": "buf"},{"file": 36,"line": 5238,"col": 4,"docs": " The file descriptor of the sending socket.","name": "sockfd"},{"file": 36,"line": 5240,"col": 4,"docs": " Message header and iovecs","name": "msg"},{"file": 36,"line": 5241,"col": 4,"name": "flags"},{"file": 36,"line": 5336,"col": 4,"docs": " The file descriptor of the sending socket.","name": "sockfd"},{"file": 36,"line": 5338,"col": 4,"docs": " Message to send.","name": "buf"},{"file": 36,"line": 5339,"col": 4,"name": "flags"},{"file": 36,"line": 5340,"col": 4,"name": "dest_addr"},{"file": 36,"line": 5341,"col": 4,"name": "addrlen"},{"file": 36,"line": 5428,"col": 4,"docs": " The file descriptor of the sending socket.","name": "sockfd"},{"file": 36,"line": 5429,"col": 4,"name": "buf"},{"file": 36,"line": 5430,"col": 4,"name": "flags"},{"file": 36,"line": 5490,"col": 4,"name": "out_fd"},{"file": 36,"line": 5491,"col": 4,"name": "in_fd"},{"file": 36,"line": 5492,"col": 4,"name": "in_offset"},{"file": 36,"line": 5493,"col": 4,"name": "in_len"},{"file": 36,"line": 5494,"col": 4,"name": "headers"},{"file": 36,"line": 5495,"col": 4,"name": "trailers"},{"file": 36,"line": 5496,"col": 4,"name": "flags"},{"file": 36,"line": 5811,"col": 23,"name": "fd_in"},{"file": 36,"line": 5811,"col": 36,"name": "off_in"},{"file": 36,"line": 5811,"col": 49,"name": "fd_out"},{"file": 36,"line": 5811,"col": 63,"name": "off_out"},{"file": 36,"line": 5811,"col": 77,"name": "len"},{"file": 36,"line": 5811,"col": 89,"name": "flags"},{"file": 36,"line": 5865,"col": 12,"name": "fds"},{"file": 36,"line": 5865,"col": 27,"name": "timeout"},{"file": 36,"line": 5903,"col": 13,"name": "fds"},{"file": 36,"line": 5903,"col": 28,"name": "timeout"},{"file": 36,"line": 5903,"col": 55,"name": "mask"},{"file": 36,"line": 5949,"col": 12,"name": "sock"},{"file": 36,"line": 5949,"col": 28,"name": "buf"},{"file": 36,"line": 5949,"col": 39,"name": "flags"},{"file": 36,"line": 5956,"col": 4,"name": "sockfd"},{"file": 36,"line": 5957,"col": 4,"name": "buf"},{"file": 36,"line": 5958,"col": 4,"name": "flags"},{"file": 36,"line": 5959,"col": 4,"name": "src_addr"},{"file": 36,"line": 5960,"col": 4,"name": "addrlen"},{"file": 36,"line": 6002,"col": 4,"name": "msg"},{"file": 36,"line": 6003,"col": 4,"name": "comp_dn"},{"file": 36,"line": 6004,"col": 4,"name": "exp_dn"},{"file": 36,"line": 6090,"col": 18,"name": "fd"},{"file": 36,"line": 6090,"col": 32,"name": "level"},{"file": 36,"line": 6090,"col": 44,"name": "optname"},{"file": 36,"line": 6090,"col": 58,"name": "opt"},{"file": 36,"line": 6134,"col": 21,"name": "name"},{"file": 36,"line": 6134,"col": 42,"name": "flags"},{"file": 36,"line": 6163,"col": 20,"name": "name"},{"file": 36,"line": 6163,"col": 38,"name": "flags"},{"file": 36,"line": 6168,"col": 17,"name": "who"},{"file": 36,"line": 6181,"col": 17,"name": "handle"},{"file": 36,"line": 6196,"col": 17,"name": "handle"},{"file": 36,"line": 6196,"col": 31,"name": "optional_action"},{"file": 36,"line": 6196,"col": 54,"name": "termios_p"},{"file": 36,"line": 6215,"col": 26,"name": "fd"},{"file": 36,"line": 6215,"col": 36,"name": "ifr"},{"file": 36,"line": 6232,"col": 16,"name": "fd"},{"file": 36,"line": 6232,"col": 26,"name": "mask"},{"file": 36,"line": 6232,"col": 49,"name": "flags"},{"file": 36,"line": 6259,"col": 14,"name": "fd"},{"file": 36,"line": 6272,"col": 13,"name": "fd"},{"file": 36,"line": 6296,"col": 17,"name": "fd"},{"file": 36,"line": 6329,"col": 13,"name": "option"},{"file": 36,"line": 6329,"col": 25,"name": "args"},{"file": 36,"line": 6358,"col": 17,"name": "resource"},{"file": 36,"line": 6375,"col": 17,"name": "resource"},{"file": 36,"line": 6375,"col": 44,"name": "limits"},{"file": 36,"line": 6424,"col": 15,"name": "ptr"},{"file": 36,"line": 6424,"col": 48,"name": "length"},{"file": 36,"line": 6424,"col": 63,"name": "advice"},{"file": 36,"line": 6493,"col": 4,"name": "attr"},{"file": 36,"line": 6494,"col": 4,"name": "pid"},{"file": 36,"line": 6495,"col": 4,"name": "cpu"},{"file": 36,"line": 6496,"col": 4,"name": "group_fd"},{"file": 36,"line": 6497,"col": 4,"name": "flags"},{"file": 36,"line": 393,"col": 28,"name": "buf"},{"file": 36,"line": 1335,"col": 24,"name": "flags"},{"file": 36,"line": 4531,"col": 16,"name": "sock"},{"file": 36,"line": 4531,"col": 32,"name": "flags"},{"file": 36,"line": 5447,"col": 21,"name": "iovs"},{"file": 36,"line": 6154,"col": 15,"name": "name"},{"file": 37,"line": 18,"col": 14,"name": "out_buffer"},{"file": 37,"line": 56,"col": 17,"name": "allocator"},{"file": 37,"line": 156,"col": 22,"name": "allocator"},{"file": 37,"line": 156,"col": 49,"name": "key"},{"file": 37,"line": 185,"col": 17,"name": "allocator"},{"file": 37,"line": 185,"col": 40,"name": "key"},{"file": 37,"line": 515,"col": 25,"name": "allocator"},{"file": 37,"line": 541,"col": 17,"name": "allocator"},{"file": 37,"line": 581,"col": 16,"name": "allocator"},{"file": 37,"line": 581,"col": 43,"name": "args_alloc"},{"file": 37,"line": 625,"col": 19,"name": "name"},{"file": 37,"line": 634,"col": 24,"name": "name"},{"file": 37,"line": 743,"col": 32,"name": "allocator"},{"file": 37,"line": 835,"col": 13,"name": "allocator"},{"file": 37,"line": 835,"col": 40,"name": "argv"},{"file": 37,"line": 848,"col": 4,"name": "allocator"},{"file": 37,"line": 849,"col": 4,"name": "argv"},{"file": 37,"line": 850,"col": 4,"name": "env_map"},{"file": 37,"line": 609,"col": 22,"name": "input_cmd_line"},{"file": 37,"line": 609,"col": 52,"name": "expected_args"},{"file": 38,"line": 190,"col": 15,"name": "c"},{"file": 38,"line": 195,"col": 15,"name": "c"},{"file": 38,"line": 199,"col": 15,"name": "c"},{"file": 38,"line": 203,"col": 15,"name": "c"},{"file": 38,"line": 207,"col": 15,"name": "c"},{"file": 38,"line": 211,"col": 15,"name": "c"},{"file": 38,"line": 215,"col": 15,"name": "c"},{"file": 38,"line": 219,"col": 15,"name": "c"},{"file": 38,"line": 223,"col": 15,"name": "c"},{"file": 38,"line": 245,"col": 16,"name": "c"},{"file": 38,"line": 249,"col": 15,"name": "c"},{"file": 38,"line": 253,"col": 15,"name": "c"},{"file": 38,"line": 257,"col": 15,"name": "c"},{"file": 38,"line": 287,"col": 19,"name": "output"},{"file": 38,"line": 287,"col": 33,"name": "ascii_string"},{"file": 38,"line": 303,"col": 24,"name": "allocator"},{"file": 38,"line": 303,"col": 55,"name": "ascii_string"},{"file": 38,"line": 316,"col": 19,"name": "output"},{"file": 38,"line": 316,"col": 33,"name": "ascii_string"},{"file": 38,"line": 332,"col": 24,"name": "allocator"},{"file": 38,"line": 332,"col": 55,"name": "ascii_string"},{"file": 38,"line": 344,"col": 21,"name": "a"},{"file": 38,"line": 344,"col": 36,"name": "b"},{"file": 38,"line": 358,"col": 28,"name": "haystack"},{"file": 38,"line": 358,"col": 50,"name": "needle"},{"file": 38,"line": 367,"col": 26,"name": "haystack"},{"file": 38,"line": 367,"col": 48,"name": "needle"},{"file": 38,"line": 378,"col": 28,"name": "container"},{"file": 38,"line": 378,"col": 51,"name": "start_index"},{"file": 38,"line": 378,"col": 71,"name": "substr"},{"file": 38,"line": 390,"col": 25,"name": "container"},{"file": 38,"line": 390,"col": 48,"name": "substr"},{"file": 38,"line": 404,"col": 23,"name": "lhs"},{"file": 38,"line": 404,"col": 40,"name": "rhs"},{"file": 38,"line": 419,"col": 26,"name": "lhs"},{"file": 38,"line": 419,"col": 43,"name": "rhs"},{"file": 39,"line": 11,"col": 13,"name": "nanoseconds"},{"file": 40,"line": 151,"col": 26,"name": "value"},{"file": 40,"line": 194,"col": 25,"name": "s"},{"file": 40,"line": 552,"col": 26,"name": "allocator"},{"file": 40,"line": 552,"col": 53,"name": "utf16le"},{"file": 40,"line": 569,"col": 27,"name": "allocator"},{"file": 40,"line": 569,"col": 54,"name": "utf16le"},{"file": 40,"line": 591,"col": 21,"name": "utf8"},{"file": 40,"line": 591,"col": 33,"name": "utf16le"},{"file": 40,"line": 663,"col": 29,"name": "allocator"},{"file": 40,"line": 663,"col": 56,"name": "utf8"},{"file": 40,"line": 804,"col": 18,"name": "utf16le"},{"file": 40,"line": 367,"col": 19,"name": "codePoint"},{"file": 40,"line": 367,"col": 35,"name": "array"},{"file": 40,"line": 367,"col": 48,"name": "expectedErr"},{"file": 40,"line": 536,"col": 13,"name": "bytes"},{"file": 40,"line": 536,"col": 32,"name": "expected_err"},{"file": 40,"line": 540,"col": 13,"name": "bytes"},{"file": 40,"line": 540,"col": 32,"name": "expected_codepoint"},{"file": 40,"line": 544,"col": 14,"name": "bytes"},{"file": 40,"line": 781,"col": 4,"name": "utf16le"},{"file": 40,"line": 782,"col": 4,"name": "fmt","comptime": true},{"file": 40,"line": 783,"col": 4,"name": "options"},{"file": 40,"line": 784,"col": 4,"name": "writer"},{"file": 41,"line": 105,"col": 9,"name": "code"},{"file": 41,"line": 173,"col": 33,"name": "exit_code"},{"file": 41,"line": 208,"col": 11,"name": "handle"},{"file": 41,"line": 208,"col": 32,"name": "system_table"},{"file": 41,"line": 393,"col": 19,"name": "phdrs"},{"file": 41,"line": 420,"col": 20,"name": "argc"},{"file": 41,"line": 420,"col": 33,"name": "argv"},{"file": 41,"line": 420,"col": 51,"name": "envp"},{"file": 41,"line": 429,"col": 8,"name": "c_argc"},{"file": 41,"line": 429,"col": 21,"name": "c_argv"},{"file": 41,"line": 429,"col": 41,"name": "c_envp"},{"file": 41,"line": 444,"col": 18,"name": "c_argc"},{"file": 41,"line": 444,"col": 31,"name": "c_argv"},{"file": 41,"line": 508,"col": 17,"name": "loop"},{"file": 42,"line": 30,"col": 11,"name": "ev"},{"file": 42,"line": 45,"col": 13,"name": "ev"},{"file": 42,"line": 58,"col": 17,"name": "ev"},{"file": 42,"line": 58,"col": 40,"name": "timeout_ns"},{"file": 15,"line": 235,"col": 19,"name": "m"},{"file": 43,"line": 45,"col": 4,"name": "self"},{"file": 43,"line": 46,"col": 4,"name": "buf"},{"file": 43,"line": 47,"col": 4,"name": "buf_align"},{"file": 43,"line": 48,"col": 4,"name": "new_len"},{"file": 43,"line": 49,"col": 4,"name": "len_align"},{"file": 43,"line": 50,"col": 4,"name": "ret_addr"},{"file": 43,"line": 184,"col": 4,"name": "self"},{"file": 43,"line": 185,"col": 4,"name": "Elem","comptime": true},{"file": 43,"line": 186,"col": 4,"name": "n"},{"file": 43,"line": 188,"col": 4,"docs": " null means naturally aligned","name": "optional_alignment","comptime": true},{"file": 43,"line": 189,"col": 4,"name": "optional_sentinel","comptime": true},{"file": 43,"line": 195,"col": 4,"name": "self"},{"file": 43,"line": 196,"col": 4,"name": "Elem","comptime": true},{"file": 43,"line": 197,"col": 4,"name": "n"},{"file": 43,"line": 199,"col": 4,"docs": " null means naturally aligned","name": "optional_alignment","comptime": true},{"file": 43,"line": 200,"col": 4,"name": "optional_sentinel","comptime": true},{"file": 43,"line": 201,"col": 4,"name": "return_address"},{"file": 43,"line": 229,"col": 4,"name": "self"},{"file": 43,"line": 230,"col": 4,"name": "Elem","comptime": true},{"file": 43,"line": 231,"col": 4,"name": "n"},{"file": 43,"line": 232,"col": 4,"name": "sentinel","comptime": true},{"file": 43,"line": 249,"col": 4,"name": "self"},{"file": 43,"line": 250,"col": 4,"name": "T","comptime": true},{"file": 43,"line": 252,"col": 4,"docs": " null means naturally aligned","name": "alignment","comptime": true},{"file": 43,"line": 253,"col": 4,"name": "n"},{"file": 43,"line": 254,"col": 4,"name": "exact"},{"file": 43,"line": 329,"col": 15,"name": "self"},{"file": 43,"line": 329,"col": 33,"name": "old_mem"},{"file": 43,"line": 329,"col": 51,"name": "new_n"},{"file": 43,"line": 349,"col": 4,"name": "self"},{"file": 43,"line": 350,"col": 4,"name": "old_mem"},{"file": 43,"line": 351,"col": 4,"name": "new_alignment","comptime": true},{"file": 43,"line": 352,"col": 4,"name": "new_n"},{"file": 43,"line": 353,"col": 4,"name": "exact"},{"file": 43,"line": 404,"col": 4,"name": "self"},{"file": 43,"line": 405,"col": 4,"name": "old_mem"},{"file": 43,"line": 406,"col": 4,"name": "new_alignment","comptime": true},{"file": 43,"line": 407,"col": 4,"name": "new_n"},{"file": 43,"line": 462,"col": 13,"name": "allocator"},{"file": 43,"line": 462,"col": 36,"name": "T","comptime": true},{"file": 43,"line": 462,"col": 54,"name": "m"},{"file": 43,"line": 212,"col": 27,"name": "Elem","comptime": true},{"file": 43,"line": 212,"col": 48,"name": "alignment","comptime": true},{"file": 43,"line": 212,"col": 74,"name": "sentinel","comptime": true},{"file": 21,"line": 322,"col": 25,"name": "self"},{"file": 21,"line": 322,"col": 43,"name": "id"},{"file": 44,"line": 107,"col": 13,"name": "allocator"},{"file": 44,"line": 107,"col": 36,"name": "paths"},{"file": 44,"line": 191,"col": 19,"name": "path_c"},{"file": 44,"line": 234,"col": 26,"name": "path_w"},{"file": 44,"line": 244,"col": 26,"name": "path_c"},{"file": 44,"line": 248,"col": 23,"name": "path"},{"file": 44,"line": 254,"col": 24,"name": "path_c"},{"file": 44,"line": 388,"col": 22,"name": "path"},{"file": 44,"line": 396,"col": 29,"name": "path"},{"file": 44,"line": 655,"col": 20,"name": "allocator"},{"file": 44,"line": 655,"col": 43,"name": "paths"},{"file": 44,"line": 816,"col": 15,"name": "path"},{"file": 44,"line": 824,"col": 22,"name": "path"},{"file": 44,"line": 858,"col": 20,"name": "path"},{"file": 44,"line": 958,"col": 21,"name": "path"},{"file": 44,"line": 1066,"col": 16,"name": "allocator"},{"file": 44,"line": 1066,"col": 39,"name": "from"},{"file": 44,"line": 1066,"col": 57,"name": "to"},{"file": 44,"line": 1074,"col": 23,"name": "allocator"},{"file": 44,"line": 1074,"col": 46,"name": "from"},{"file": 44,"line": 1074,"col": 64,"name": "to"},{"file": 44,"line": 1147,"col": 21,"name": "allocator"},{"file": 44,"line": 1147,"col": 44,"name": "from"},{"file": 44,"line": 1147,"col": 62,"name": "to"},{"file": 44,"line": 1263,"col": 17,"name": "path"},{"file": 44,"line": 112,"col": 25,"name": "paths"},{"file": 44,"line": 112,"col": 52,"name": "expected"},{"file": 44,"line": 112,"col": 74,"name": "zero"},{"file": 44,"line": 123,"col": 23,"name": "paths"},{"file": 44,"line": 123,"col": 50,"name": "expected"},{"file": 44,"line": 123,"col": 72,"name": "zero"},{"file": 44,"line": 289,"col": 25,"name": "path"},{"file": 44,"line": 289,"col": 43,"name": "expected_result"},{"file": 44,"line": 293,"col": 23,"name": "path"},{"file": 44,"line": 293,"col": 41,"name": "expected_result"},{"file": 44,"line": 400,"col": 26,"name": "ns1"},{"file": 44,"line": 400,"col": 43,"name": "ns2"},{"file": 44,"line": 798,"col": 22,"name": "paths"},{"file": 44,"line": 798,"col": 49,"name": "expected"},{"file": 44,"line": 804,"col": 20,"name": "paths"},{"file": 44,"line": 804,"col": 47,"name": "expected"},{"file": 44,"line": 934,"col": 20,"name": "input"},{"file": 44,"line": 934,"col": 39,"name": "expected_output"},{"file": 44,"line": 942,"col": 22,"name": "input"},{"file": 44,"line": 942,"col": 41,"name": "expected_output"},{"file": 44,"line": 1050,"col": 16,"name": "input"},{"file": 44,"line": 1050,"col": 35,"name": "expected_output"},{"file": 44,"line": 1054,"col": 21,"name": "input"},{"file": 44,"line": 1054,"col": 40,"name": "expected_output"},{"file": 44,"line": 1058,"col": 23,"name": "input"},{"file": 44,"line": 1058,"col": 42,"name": "expected_output"},{"file": 44,"line": 1238,"col": 21,"name": "from"},{"file": 44,"line": 1238,"col": 39,"name": "to"},{"file": 44,"line": 1238,"col": 55,"name": "expected_output"},{"file": 44,"line": 1244,"col": 23,"name": "from"},{"file": 44,"line": 1244,"col": 41,"name": "to"},{"file": 44,"line": 1244,"col": 57,"name": "expected_output"},{"file": 44,"line": 1270,"col": 17,"name": "path"},{"file": 44,"line": 1270,"col": 35,"name": "expected"},{"file": 20,"line": 520,"col": 18,"name": "self"},{"file": 42,"line": 123,"col": 16,"name": "ev"},{"file": 42,"line": 129,"col": 18,"name": "ev"},{"file": 42,"line": 133,"col": 15,"name": "ev"},{"file": 42,"line": 161,"col": 17,"name": "ev"},{"file": 46,"line": 131,"col": 18,"name": "rd"},{"file": 46,"line": 131,"col": 31,"name": "wr"},{"file": 46,"line": 131,"col": 44,"name": "sattr"},{"file": 46,"line": 139,"col": 21,"name": "attributes"},{"file": 46,"line": 139,"col": 56,"name": "name"},{"file": 46,"line": 139,"col": 74,"name": "flags"},{"file": 46,"line": 139,"col": 88,"name": "desired_access"},{"file": 46,"line": 144,"col": 22,"name": "attributes"},{"file": 46,"line": 144,"col": 57,"name": "nameW"},{"file": 46,"line": 144,"col": 80,"name": "flags"},{"file": 46,"line": 144,"col": 94,"name": "desired_access"},{"file": 46,"line": 162,"col": 4,"name": "h"},{"file": 46,"line": 163,"col": 4,"name": "ioControlCode"},{"file": 46,"line": 164,"col": 4,"name": "in"},{"file": 46,"line": 165,"col": 4,"name": "out"},{"file": 46,"line": 214,"col": 27,"name": "h"},{"file": 46,"line": 214,"col": 38,"name": "overlapped"},{"file": 46,"line": 214,"col": 63,"name": "wait"},{"file": 46,"line": 227,"col": 28,"name": "h"},{"file": 46,"line": 227,"col": 39,"name": "mask"},{"file": 46,"line": 227,"col": 52,"name": "flags"},{"file": 46,"line": 240,"col": 20,"name": "output"},{"file": 46,"line": 263,"col": 27,"name": "handle"},{"file": 46,"line": 263,"col": 43,"name": "milliseconds"},{"file": 46,"line": 267,"col": 29,"name": "handle"},{"file": 46,"line": 267,"col": 45,"name": "milliseconds"},{"file": 46,"line": 267,"col": 66,"name": "alertable"},{"file": 46,"line": 279,"col": 32,"name": "handles"},{"file": 46,"line": 279,"col": 57,"name": "waitAll"},{"file": 46,"line": 279,"col": 72,"name": "milliseconds"},{"file": 46,"line": 279,"col": 93,"name": "alertable"},{"file": 46,"line": 310,"col": 4,"name": "file_handle"},{"file": 46,"line": 311,"col": 4,"name": "existing_completion_port"},{"file": 46,"line": 312,"col": 4,"name": "completion_key"},{"file": 46,"line": 313,"col": 4,"name": "concurrent_thread_count"},{"file": 46,"line": 327,"col": 4,"name": "completion_port"},{"file": 46,"line": 328,"col": 4,"name": "bytes_transferred_count"},{"file": 46,"line": 329,"col": 4,"name": "completion_key"},{"file": 46,"line": 330,"col": 4,"name": "lpOverlapped"},{"file": 46,"line": 347,"col": 4,"name": "completion_port"},{"file": 46,"line": 348,"col": 4,"name": "bytes_transferred_count"},{"file": 46,"line": 349,"col": 4,"name": "lpCompletionKey"},{"file": 46,"line": 350,"col": 4,"name": "lpOverlapped"},{"file": 46,"line": 351,"col": 4,"name": "dwMilliseconds"},{"file": 46,"line": 383,"col": 4,"name": "completion_port"},{"file": 46,"line": 384,"col": 4,"name": "completion_port_entries"},{"file": 46,"line": 385,"col": 4,"name": "timeout_ms"},{"file": 46,"line": 386,"col": 4,"name": "alertable"},{"file": 46,"line": 416,"col": 17,"name": "hFindFile"},{"file": 46,"line": 606,"col": 27,"name": "path_name"},{"file": 46,"line": 676,"col": 4,"name": "dir"},{"file": 46,"line": 677,"col": 4,"name": "sym_link_path"},{"file": 46,"line": 678,"col": 4,"name": "target_path"},{"file": 46,"line": 679,"col": 4,"name": "is_directory"},{"file": 46,"line": 737,"col": 16,"name": "dir"},{"file": 46,"line": 737,"col": 30,"name": "sub_path_w"},{"file": 46,"line": 737,"col": 55,"name": "out_buffer"},{"file": 46,"line": 847,"col": 18,"name": "sub_path_w"},{"file": 46,"line": 847,"col": 43,"name": "options"},{"file": 46,"line": 908,"col": 18,"name": "old_path"},{"file": 46,"line": 908,"col": 40,"name": "new_path"},{"file": 46,"line": 908,"col": 62,"name": "flags"},{"file": 46,"line": 914,"col": 19,"name": "old_path"},{"file": 46,"line": 914,"col": 45,"name": "new_path"},{"file": 46,"line": 914,"col": 71,"name": "flags"},{"file": 46,"line": 929,"col": 20,"name": "handle_id"},{"file": 46,"line": 957,"col": 32,"name": "handle"},{"file": 46,"line": 957,"col": 48,"name": "offset"},{"file": 46,"line": 968,"col": 28,"name": "handle"},{"file": 46,"line": 968,"col": 44,"name": "offset"},{"file": 46,"line": 994,"col": 4,"name": "handle"},{"file": 46,"line": 995,"col": 4,"name": "out_buffer"},{"file": 46,"line": 1066,"col": 4,"name": "hFile"},{"file": 46,"line": 1067,"col": 4,"name": "fmt"},{"file": 46,"line": 1068,"col": 4,"name": "out_buffer"},{"file": 46,"line": 1204,"col": 4,"name": "handle"},{"file": 46,"line": 1205,"col": 4,"name": "info_class"},{"file": 46,"line": 1206,"col": 4,"name": "out_buffer"},{"file": 46,"line": 1236,"col": 25,"name": "filename"},{"file": 46,"line": 1241,"col": 26,"name": "lpFileName"},{"file": 46,"line": 1254,"col": 18,"name": "majorVersion"},{"file": 46,"line": 1254,"col": 36,"name": "minorVersion"},{"file": 46,"line": 1306,"col": 4,"name": "af"},{"file": 46,"line": 1307,"col": 4,"name": "socket_type"},{"file": 46,"line": 1308,"col": 4,"name": "protocol"},{"file": 46,"line": 1309,"col": 4,"name": "protocolInfo"},{"file": 46,"line": 1310,"col": 4,"name": "g"},{"file": 46,"line": 1311,"col": 4,"name": "dwFlags"},{"file": 46,"line": 1349,"col": 12,"name": "s"},{"file": 46,"line": 1349,"col": 30,"name": "name"},{"file": 46,"line": 1349,"col": 60,"name": "namelen"},{"file": 46,"line": 1353,"col": 14,"name": "s"},{"file": 46,"line": 1353,"col": 32,"name": "backlog"},{"file": 46,"line": 1357,"col": 19,"name": "s"},{"file": 46,"line": 1367,"col": 14,"name": "s"},{"file": 46,"line": 1367,"col": 32,"name": "name"},{"file": 46,"line": 1367,"col": 57,"name": "namelen"},{"file": 46,"line": 1372,"col": 19,"name": "s"},{"file": 46,"line": 1372,"col": 37,"name": "name"},{"file": 46,"line": 1372,"col": 61,"name": "namelen"},{"file": 46,"line": 1376,"col": 19,"name": "s"},{"file": 46,"line": 1376,"col": 37,"name": "name"},{"file": 46,"line": 1376,"col": 61,"name": "namelen"},{"file": 46,"line": 1381,"col": 4,"name": "s"},{"file": 46,"line": 1382,"col": 4,"name": "msg"},{"file": 46,"line": 1383,"col": 4,"name": "flags"},{"file": 46,"line": 1393,"col": 14,"name": "s"},{"file": 46,"line": 1393,"col": 32,"name": "buf"},{"file": 46,"line": 1393,"col": 50,"name": "len"},{"file": 46,"line": 1393,"col": 62,"name": "flags"},{"file": 46,"line": 1393,"col": 74,"name": "to"},{"file": 46,"line": 1393,"col": 103,"name": "to_len"},{"file": 46,"line": 1403,"col": 16,"name": "s"},{"file": 46,"line": 1403,"col": 34,"name": "buf"},{"file": 46,"line": 1403,"col": 46,"name": "len"},{"file": 46,"line": 1403,"col": 58,"name": "flags"},{"file": 46,"line": 1403,"col": 70,"name": "from"},{"file": 46,"line": 1403,"col": 95,"name": "from_len"},{"file": 46,"line": 1414,"col": 12,"name": "fds"},{"file": 46,"line": 1414,"col": 35,"name": "n"},{"file": 46,"line": 1414,"col": 47,"name": "timeout"},{"file": 46,"line": 1419,"col": 4,"name": "s"},{"file": 46,"line": 1420,"col": 4,"name": "dwIoControlCode"},{"file": 46,"line": 1421,"col": 4,"name": "inBuffer"},{"file": 46,"line": 1422,"col": 4,"name": "outBuffer"},{"file": 46,"line": 1423,"col": 4,"name": "overlapped"},{"file": 46,"line": 1424,"col": 4,"name": "completionRoutine"},{"file": 46,"line": 1449,"col": 26,"name": "hModule"},{"file": 46,"line": 1449,"col": 45,"name": "buf_ptr"},{"file": 46,"line": 1449,"col": 62,"name": "buf_len"},{"file": 46,"line": 1461,"col": 24,"name": "hProcess"},{"file": 46,"line": 1461,"col": 42,"name": "uExitCode"},{"file": 46,"line": 1493,"col": 29,"name": "handler_routine"},{"file": 46,"line": 1493,"col": 64,"name": "add"},{"file": 46,"line": 1506,"col": 42,"name": "handle"},{"file": 46,"line": 1506,"col": 58,"name": "flags"},{"file": 46,"line": 1521,"col": 31,"name": "penv"},{"file": 46,"line": 1530,"col": 31,"name": "lpName"},{"file": 46,"line": 1530,"col": 47,"name": "lpBuffer"},{"file": 46,"line": 1530,"col": 65,"name": "nSize"},{"file": 46,"line": 1549,"col": 4,"name": "lpApplicationName"},{"file": 46,"line": 1550,"col": 4,"name": "lpCommandLine"},{"file": 46,"line": 1551,"col": 4,"name": "lpProcessAttributes"},{"file": 46,"line": 1552,"col": 4,"name": "lpThreadAttributes"},{"file": 46,"line": 1553,"col": 4,"name": "bInheritHandles"},{"file": 46,"line": 1554,"col": 4,"name": "dwCreationFlags"},{"file": 46,"line": 1555,"col": 4,"name": "lpEnvironment"},{"file": 46,"line": 1556,"col": 4,"name": "lpCurrentDirectory"},{"file": 46,"line": 1557,"col": 4,"name": "lpStartupInfo"},{"file": 46,"line": 1558,"col": 4,"name": "lpProcessInformation"},{"file": 46,"line": 1588,"col": 20,"name": "lpLibFileName"},{"file": 46,"line": 1599,"col": 19,"name": "hModule"},{"file": 46,"line": 1621,"col": 27,"name": "InitOnce"},{"file": 46,"line": 1621,"col": 49,"name": "InitFn"},{"file": 46,"line": 1621,"col": 71,"name": "Parameter"},{"file": 46,"line": 1621,"col": 92,"name": "Context"},{"file": 46,"line": 1625,"col": 16,"name": "hHeap"},{"file": 46,"line": 1625,"col": 31,"name": "dwFlags"},{"file": 46,"line": 1625,"col": 47,"name": "lpMem"},{"file": 46,"line": 1629,"col": 19,"name": "hHeap"},{"file": 46,"line": 1633,"col": 17,"name": "hMem"},{"file": 46,"line": 1640,"col": 4,"name": "hFile"},{"file": 46,"line": 1655,"col": 4,"name": "hFile"},{"file": 46,"line": 1656,"col": 4,"name": "lpCreationTime"},{"file": 46,"line": 1657,"col": 4,"name": "lpLastAccessTime"},{"file": 46,"line": 1658,"col": 4,"name": "lpLastWriteTime"},{"file": 46,"line": 1711,"col": 4,"name": "FileHandle"},{"file": 46,"line": 1712,"col": 4,"name": "IoStatusBlock"},{"file": 46,"line": 1713,"col": 4,"name": "ByteOffset"},{"file": 46,"line": 1714,"col": 4,"name": "Length"},{"file": 46,"line": 1715,"col": 4,"name": "Key"},{"file": 46,"line": 1753,"col": 19,"name": "hns"},{"file": 46,"line": 1758,"col": 17,"name": "ns"},{"file": 46,"line": 1763,"col": 29,"name": "ft"},{"file": 46,"line": 1769,"col": 29,"name": "ns"},{"file": 46,"line": 1863,"col": 27,"name": "s"},{"file": 46,"line": 1917,"col": 24,"name": "s"},{"file": 46,"line": 1949,"col": 36,"name": "T","comptime": true},{"file": 46,"line": 1949,"col": 54,"name": "sock"},{"file": 46,"line": 1949,"col": 75,"name": "guid"},{"file": 46,"line": 2003,"col": 26,"name": "err"},{"file": 46,"line": 2017,"col": 28,"name": "hThread"},{"file": 46,"line": 2017,"col": 45,"name": "lpThreadDescription"},{"file": 46,"line": 2024,"col": 28,"name": "hThread"},{"file": 46,"line": 2024,"col": 45,"name": "ppszThreadDescription"},{"file": 46,"line": 2208,"col": 16,"name": "deviceType"},{"file": 46,"line": 2208,"col": 33,"name": "function"},{"file": 46,"line": 2208,"col": 48,"name": "method"},{"file": 46,"line": 2208,"col": 70,"name": "access"},{"file": 46,"line": 821,"col": 21,"name": "path"},{"file": 46,"line": 821,"col": 40,"name": "is_relative"},{"file": 46,"line": 821,"col": 59,"name": "out_buffer"},{"file": 46,"line": 1944,"col": 21,"name": "p"},{"file": 46,"line": 1944,"col": 34,"name": "s"},{"file": 12,"line": 503,"col": 17,"name": "lhs"},{"file": 12,"line": 503,"col": 31,"name": "rhs"},{"file": 12,"line": 513,"col": 17,"name": "text"},{"file": 12,"line": 538,"col": 8,"name": "self"},{"file": 12,"line": 539,"col": 8,"name": "fmt","comptime": true},{"file": 12,"line": 540,"col": 8,"name": "options"},{"file": 12,"line": 541,"col": 8,"name": "out_stream"},{"file": 49,"line": 10,"col": 18,"name": "traits","comptime": true},{"file": 49,"line": 67,"col": 16,"name": "name","comptime": true},{"file": 49,"line": 132,"col": 17,"name": "id","comptime": true},{"file": 49,"line": 153,"col": 16,"name": "T","comptime": true},{"file": 49,"line": 171,"col": 16,"name": "T","comptime": true},{"file": 49,"line": 189,"col": 21,"name": "T","comptime": true},{"file": 49,"line": 203,"col": 19,"name": "T","comptime": true},{"file": 49,"line": 233,"col": 21,"name": "T","comptime": true},{"file": 49,"line": 263,"col": 19,"name": "T","comptime": true},{"file": 49,"line": 324,"col": 15,"name": "T","comptime": true},{"file": 49,"line": 340,"col": 18,"name": "T","comptime": true},{"file": 49,"line": 379,"col": 15,"name": "T","comptime": true},{"file": 49,"line": 404,"col": 19,"name": "T","comptime": true},{"file": 49,"line": 470,"col": 16,"name": "T","comptime": true},{"file": 49,"line": 470,"col": 34,"name": "names","comptime": true},{"file": 49,"line": 496,"col": 17,"name": "T","comptime": true},{"file": 49,"line": 496,"col": 35,"name": "names","comptime": true},{"file": 49,"line": 522,"col": 20,"name": "T","comptime": true},{"file": 49,"line": 522,"col": 38,"name": "names","comptime": true},{"file": 48,"line": 136,"col": 16,"name": "seed"},{"file": 48,"line": 144,"col": 18,"name": "self"},{"file": 48,"line": 144,"col": 33,"name": "b"},{"file": 48,"line": 162,"col": 17,"name": "self"},{"file": 3,"line": 135,"col": 29,"name": "self"},{"file": 3,"line": 135,"col": 51,"name": "ver"},{"file": 3,"line": 159,"col": 16,"name": "self"},{"file": 3,"line": 160,"col": 16,"name": "fmt","comptime": true},{"file": 3,"line": 161,"col": 16,"name": "_"},{"file": 3,"line": 162,"col": 16,"name": "out_stream"},{"file": 3,"line": 185,"col": 35,"name": "self"},{"file": 3,"line": 185,"col": 60,"name": "ver"},{"file": 3,"line": 191,"col": 29,"name": "self"},{"file": 3,"line": 191,"col": 54,"name": "ver"},{"file": 3,"line": 228,"col": 27,"name": "tag"},{"file": 3,"line": 1235,"col": 25,"name": "model"},{"file": 3,"line": 1235,"col": 46,"name": "arch"},{"file": 3,"line": 1245,"col": 27,"name": "arch"},{"file": 3,"line": 1282,"col": 28,"name": "arch"},{"file": 18,"line": 115,"col": 16,"name": "self"},{"file": 18,"line": 129,"col": 30,"name": "self"},{"file": 18,"line": 139,"col": 29,"name": "self"},{"file": 18,"line": 148,"col": 26,"name": "self"},{"file": 18,"line": 148,"col": 39,"name": "thread_count"},{"file": 18,"line": 197,"col": 18,"name": "self"},{"file": 18,"line": 468,"col": 22,"name": "self"},{"file": 18,"line": 468,"col": 35,"name": "fd"},{"file": 18,"line": 468,"col": 44,"name": "resume_node"},{"file": 18,"line": 468,"col": 70,"name": "flags"},{"file": 18,"line": 480,"col": 22,"name": "self"},{"file": 18,"line": 480,"col": 35,"name": "fd"},{"file": 18,"line": 480,"col": 44,"name": "op"},{"file": 18,"line": 480,"col": 53,"name": "flags"},{"file": 18,"line": 480,"col": 65,"name": "resume_node"},{"file": 18,"line": 489,"col": 25,"name": "self"},{"file": 18,"line": 489,"col": 38,"name": "fd"},{"file": 18,"line": 494,"col": 23,"name": "self"},{"file": 18,"line": 494,"col": 36,"name": "fd"},{"file": 18,"line": 494,"col": 45,"name": "flags"},{"file": 18,"line": 546,"col": 31,"name": "self"},{"file": 18,"line": 546,"col": 44,"name": "fd"},{"file": 18,"line": 558,"col": 31,"name": "self"},{"file": 18,"line": 558,"col": 44,"name": "fd"},{"file": 18,"line": 570,"col": 41,"name": "self"},{"file": 18,"line": 570,"col": 54,"name": "fd"},{"file": 18,"line": 583,"col": 22,"name": "self"},{"file": 18,"line": 583,"col": 35,"name": "ident"},{"file": 18,"line": 583,"col": 49,"name": "filter"},{"file": 18,"line": 583,"col": 62,"name": "flags"},{"file": 18,"line": 606,"col": 21,"name": "self"},{"file": 18,"line": 606,"col": 34,"name": "resume_node"},{"file": 18,"line": 606,"col": 66,"name": "ident"},{"file": 18,"line": 606,"col": 80,"name": "filter"},{"file": 18,"line": 606,"col": 93,"name": "flags"},{"file": 18,"line": 621,"col": 24,"name": "self"},{"file": 18,"line": 621,"col": 37,"name": "ident"},{"file": 18,"line": 621,"col": 51,"name": "filter"},{"file": 18,"line": 686,"col": 22,"name": "self"},{"file": 18,"line": 686,"col": 35,"name": "node"},{"file": 18,"line": 692,"col": 28,"name": "self"},{"file": 18,"line": 692,"col": 41,"name": "node"},{"file": 18,"line": 698,"col": 15,"name": "self"},{"file": 18,"line": 729,"col": 23,"name": "self"},{"file": 18,"line": 729,"col": 36,"name": "alloc"},{"file": 18,"line": 729,"col": 59,"name": "func","comptime": true},{"file": 18,"line": 729,"col": 83,"name": "args"},{"file": 18,"line": 757,"col": 17,"name": "self"},{"file": 18,"line": 779,"col": 25,"name": "self"},{"file": 18,"line": 783,"col": 26,"name": "self"},{"file": 18,"line": 826,"col": 17,"name": "self"},{"file": 18,"line": 826,"col": 30,"name": "nanoseconds"},{"file": 18,"line": 951,"col": 8,"name": "self"},{"file": 18,"line": 954,"col": 8,"docs": " This argument is a socket that has been created with `socket`, bound to a local address with `bind`, and is listening for connections after a `listen`.","name": "sockfd"},{"file": 18,"line": 959,"col": 8,"docs": " This argument is a pointer to a sockaddr structure.  This structure is filled in with  the address  of  the  peer  socket, as known to the communications layer.  The exact format of the address returned addr is determined by the socket's address  family  (see  `socket`  and  the respective  protocol  man  pages).","name": "addr"},{"file": 18,"line": 966,"col": 8,"docs": " This argument is a value-result argument: the caller must initialize it to contain  the size (in bytes) of the structure pointed to by addr; on return it will contain the actual size of the peer address. The returned address is truncated if the buffer provided is too small; in this  case,  `addr_size` will return a value greater than was supplied to the call.","name": "addr_size"},{"file": 18,"line": 970,"col": 8,"docs": " The following values can be bitwise ORed in flags to obtain different behavior: * `SOCK.CLOEXEC`  - Set the close-on-exec (`FD_CLOEXEC`) flag on the new file descriptor.   See  the   description  of the `O.CLOEXEC` flag in `open` for reasons why this may be useful.","name": "flags"},{"file": 18,"line": 983,"col": 19,"name": "self"},{"file": 18,"line": 983,"col": 32,"name": "sockfd"},{"file": 18,"line": 983,"col": 53,"name": "sock_addr"},{"file": 18,"line": 983,"col": 84,"name": "len"},{"file": 18,"line": 994,"col": 17,"name": "self"},{"file": 18,"line": 994,"col": 30,"name": "file_path"},{"file": 18,"line": 994,"col": 56,"name": "flags"},{"file": 18,"line": 994,"col": 68,"name": "mode"},{"file": 18,"line": 1015,"col": 19,"name": "self"},{"file": 18,"line": 1015,"col": 32,"name": "fd"},{"file": 18,"line": 1015,"col": 45,"name": "file_path"},{"file": 18,"line": 1015,"col": 71,"name": "flags"},{"file": 18,"line": 1015,"col": 83,"name": "mode"},{"file": 18,"line": 1037,"col": 17,"name": "self"},{"file": 18,"line": 1037,"col": 30,"name": "fd"},{"file": 18,"line": 1051,"col": 16,"name": "self"},{"file": 18,"line": 1051,"col": 29,"name": "fd"},{"file": 18,"line": 1051,"col": 42,"name": "buf"},{"file": 18,"line": 1051,"col": 53,"name": "simulate_evented"},{"file": 18,"line": 1084,"col": 17,"name": "self"},{"file": 18,"line": 1084,"col": 30,"name": "fd"},{"file": 18,"line": 1084,"col": 43,"name": "iov"},{"file": 18,"line": 1084,"col": 66,"name": "simulate_evented"},{"file": 18,"line": 1117,"col": 17,"name": "self"},{"file": 18,"line": 1117,"col": 30,"name": "fd"},{"file": 18,"line": 1117,"col": 43,"name": "buf"},{"file": 18,"line": 1117,"col": 54,"name": "offset"},{"file": 18,"line": 1117,"col": 67,"name": "simulate_evented"},{"file": 18,"line": 1151,"col": 18,"name": "self"},{"file": 18,"line": 1151,"col": 31,"name": "fd"},{"file": 18,"line": 1151,"col": 44,"name": "iov"},{"file": 18,"line": 1151,"col": 67,"name": "offset"},{"file": 18,"line": 1151,"col": 80,"name": "simulate_evented"},{"file": 18,"line": 1185,"col": 17,"name": "self"},{"file": 18,"line": 1185,"col": 30,"name": "fd"},{"file": 18,"line": 1185,"col": 43,"name": "bytes"},{"file": 18,"line": 1185,"col": 62,"name": "simulate_evented"},{"file": 18,"line": 1218,"col": 18,"name": "self"},{"file": 18,"line": 1218,"col": 31,"name": "fd"},{"file": 18,"line": 1218,"col": 44,"name": "iov"},{"file": 18,"line": 1218,"col": 73,"name": "simulate_evented"},{"file": 18,"line": 1251,"col": 18,"name": "self"},{"file": 18,"line": 1251,"col": 31,"name": "fd"},{"file": 18,"line": 1251,"col": 44,"name": "bytes"},{"file": 18,"line": 1251,"col": 63,"name": "offset"},{"file": 18,"line": 1251,"col": 76,"name": "simulate_evented"},{"file": 18,"line": 1285,"col": 19,"name": "self"},{"file": 18,"line": 1285,"col": 32,"name": "fd"},{"file": 18,"line": 1285,"col": 45,"name": "iov"},{"file": 18,"line": 1285,"col": 74,"name": "offset"},{"file": 18,"line": 1285,"col": 87,"name": "simulate_evented"},{"file": 18,"line": 1318,"col": 8,"name": "self"},{"file": 18,"line": 1320,"col": 8,"docs": " The file descriptor of the sending socket.","name": "sockfd"},{"file": 18,"line": 1322,"col": 8,"docs": " Message to send.","name": "buf"},{"file": 18,"line": 1323,"col": 8,"name": "flags"},{"file": 18,"line": 1324,"col": 8,"name": "dest_addr"},{"file": 18,"line": 1325,"col": 8,"name": "addrlen"},{"file": 18,"line": 1339,"col": 8,"name": "self"},{"file": 18,"line": 1340,"col": 8,"name": "sockfd"},{"file": 18,"line": 1341,"col": 8,"name": "buf"},{"file": 18,"line": 1342,"col": 8,"name": "flags"},{"file": 18,"line": 1343,"col": 8,"name": "src_addr"},{"file": 18,"line": 1344,"col": 8,"name": "addrlen"},{"file": 18,"line": 1360,"col": 8,"name": "self"},{"file": 18,"line": 1361,"col": 8,"name": "dirfd"},{"file": 18,"line": 1362,"col": 8,"name": "path_z"},{"file": 18,"line": 1363,"col": 8,"name": "mode"},{"file": 18,"line": 1364,"col": 8,"name": "flags"},{"file": 18,"line": 210,"col": 18,"name": "self"},{"file": 18,"line": 210,"col": 31,"name": "extra_thread_count"},{"file": 18,"line": 449,"col": 20,"name": "self"},{"file": 18,"line": 635,"col": 16,"name": "self"},{"file": 18,"line": 1386,"col": 17,"name": "self"},{"file": 18,"line": 1479,"col": 22,"name": "self"},{"file": 18,"line": 1479,"col": 35,"name": "request_node"},{"file": 18,"line": 1485,"col": 21,"name": "self"},{"file": 18,"line": 1485,"col": 34,"name": "request_node"},{"file": 18,"line": 1491,"col": 18,"name": "self"},{"file": 52,"line": 35,"col": 20,"name": "writer"},{"file": 52,"line": 35,"col": 37,"name": "uint_value"},{"file": 52,"line": 111,"col": 20,"name": "writer"},{"file": 52,"line": 111,"col": 37,"name": "int_value"},{"file": 52,"line": 139,"col": 26,"name": "l","comptime": true},{"file": 52,"line": 139,"col": 45,"name": "ptr"},{"file": 52,"line": 139,"col": 58,"name": "int"},{"file": 52,"line": 177,"col": 28,"name": "T","comptime": true},{"file": 52,"line": 177,"col": 46,"name": "encoded"},{"file": 52,"line": 182,"col": 28,"name": "T","comptime": true},{"file": 52,"line": 182,"col": 46,"name": "encoded"},{"file": 52,"line": 187,"col": 21,"name": "T","comptime": true},{"file": 52,"line": 187,"col": 39,"name": "encoded"},{"file": 52,"line": 193,"col": 21,"name": "T","comptime": true},{"file": 52,"line": 193,"col": 39,"name": "encoded"},{"file": 52,"line": 199,"col": 25,"name": "T","comptime": true},{"file": 52,"line": 199,"col": 43,"name": "N","comptime": true},{"file": 52,"line": 199,"col": 62,"name": "encoded"},{"file": 52,"line": 207,"col": 25,"name": "T","comptime": true},{"file": 52,"line": 207,"col": 43,"name": "N","comptime": true},{"file": 52,"line": 207,"col": 62,"name": "encoded"},{"file": 52,"line": 302,"col": 21,"name": "value"},{"file": 53,"line": 40,"col": 12,"name": "self"},{"file": 53,"line": 44,"col": 17,"name": "self"},{"file": 53,"line": 44,"col": 40,"name": "timeout"},{"file": 53,"line": 125,"col": 11,"name": "self"},{"file": 53,"line": 48,"col": 11,"name": "self"},{"file": 53,"line": 48,"col": 34,"name": "timeout"},{"file": 54,"line": 31,"col": 12,"name": "ev"},{"file": 54,"line": 37,"col": 14,"name": "ev"},{"file": 54,"line": 45,"col": 11,"name": "ev"},{"file": 54,"line": 52,"col": 13,"name": "ev"},{"file": 54,"line": 60,"col": 12,"name": "ev"},{"file": 54,"line": 73,"col": 17,"name": "ev"},{"file": 54,"line": 73,"col": 34,"name": "timeout_ns"},{"file": 22,"line": 441,"col": 13,"name": "config"},{"file": 22,"line": 441,"col": 34,"name": "f","comptime": true},{"file": 22,"line": 441,"col": 55,"name": "args"},{"file": 22,"line": 495,"col": 17,"name": "self"},{"file": 22,"line": 499,"col": 14,"name": "self"},{"file": 22,"line": 508,"col": 12,"name": "self"},{"file": 26,"line": 955,"col": 15,"name": "self"},{"file": 26,"line": 959,"col": 23,"name": "context"},{"file": 26,"line": 959,"col": 38,"name": "lhs"},{"file": 26,"line": 959,"col": 56,"name": "rhs"},{"file": 42,"line": 229,"col": 20,"name": "waiters"},{"file": 42,"line": 229,"col": 35,"name": "wake_count"},{"file": 42,"line": 172,"col": 16,"name": "waiters"},{"file": 42,"line": 172,"col": 31,"name": "wake_count"},{"file": 56,"line": 59,"col": 53,"name": "First"},{"file": 56,"line": 59,"col": 69,"name": "Handler"},{"file": 56,"line": 60,"col": 56,"name": "Handle"},{"file": 56,"line": 62,"col": 34,"name": "hFile"},{"file": 56,"line": 63,"col": 36,"name": "hFile"},{"file": 56,"line": 63,"col": 51,"name": "lpOverlapped"},{"file": 56,"line": 65,"col": 37,"name": "hObject"},{"file": 56,"line": 67,"col": 42,"name": "lpPathName"},{"file": 56,"line": 67,"col": 70,"name": "lpSecurityAttributes"},{"file": 56,"line": 68,"col": 38,"name": "hFile"},{"file": 56,"line": 71,"col": 4,"name": "lpEventAttributes"},{"file": 56,"line": 72,"col": 4,"name": "lpName"},{"file": 56,"line": 73,"col": 4,"name": "dwFlags"},{"file": 56,"line": 74,"col": 4,"name": "dwDesiredAccess"},{"file": 56,"line": 78,"col": 4,"name": "lpFileName"},{"file": 56,"line": 79,"col": 4,"name": "dwDesiredAccess"},{"file": 56,"line": 80,"col": 4,"name": "dwShareMode"},{"file": 56,"line": 81,"col": 4,"name": "lpSecurityAttributes"},{"file": 56,"line": 82,"col": 4,"name": "dwCreationDisposition"},{"file": 56,"line": 83,"col": 4,"name": "dwFlagsAndAttributes"},{"file": 56,"line": 84,"col": 4,"name": "hTemplateFile"},{"file": 56,"line": 88,"col": 4,"name": "hReadPipe"},{"file": 56,"line": 89,"col": 4,"name": "hWritePipe"},{"file": 56,"line": 90,"col": 4,"name": "lpPipeAttributes"},{"file": 56,"line": 91,"col": 4,"name": "nSize"},{"file": 56,"line": 95,"col": 4,"name": "lpName"},{"file": 56,"line": 96,"col": 4,"name": "dwOpenMode"},{"file": 56,"line": 97,"col": 4,"name": "dwPipeMode"},{"file": 56,"line": 98,"col": 4,"name": "nMaxInstances"},{"file": 56,"line": 99,"col": 4,"name": "nOutBufferSize"},{"file": 56,"line": 100,"col": 4,"name": "nInBufferSize"},{"file": 56,"line": 101,"col": 4,"name": "nDefaultTimeOut"},{"file": 56,"line": 102,"col": 4,"name": "lpSecurityAttributes"},{"file": 56,"line": 106,"col": 4,"name": "lpApplicationName"},{"file": 56,"line": 107,"col": 4,"name": "lpCommandLine"},{"file": 56,"line": 108,"col": 4,"name": "lpProcessAttributes"},{"file": 56,"line": 109,"col": 4,"name": "lpThreadAttributes"},{"file": 56,"line": 110,"col": 4,"name": "bInheritHandles"},{"file": 56,"line": 111,"col": 4,"name": "dwCreationFlags"},{"file": 56,"line": 112,"col": 4,"name": "lpEnvironment"},{"file": 56,"line": 113,"col": 4,"name": "lpCurrentDirectory"},{"file": 56,"line": 114,"col": 4,"name": "lpStartupInfo"},{"file": 56,"line": 115,"col": 4,"name": "lpProcessInformation"},{"file": 56,"line": 118,"col": 45,"name": "lpSymlinkFileName"},{"file": 56,"line": 118,"col": 80,"name": "lpTargetFileName"},{"file": 56,"line": 118,"col": 114,"name": "dwFlags"},{"file": 56,"line": 120,"col": 48,"name": "FileHandle"},{"file": 56,"line": 120,"col": 68,"name": "ExistingCompletionPort"},{"file": 56,"line": 120,"col": 101,"name": "CompletionKey"},{"file": 56,"line": 120,"col": 127,"name": "NumberOfConcurrentThreads"},{"file": 56,"line": 122,"col": 38,"name": "lpThreadAttributes"},{"file": 56,"line": 122,"col": 81,"name": "dwStackSize"},{"file": 56,"line": 122,"col": 102,"name": "lpStartAddress"},{"file": 56,"line": 122,"col": 142,"name": "lpParameter"},{"file": 56,"line": 122,"col": 164,"name": "dwCreationFlags"},{"file": 56,"line": 122,"col": 188,"name": "lpThreadId"},{"file": 56,"line": 125,"col": 4,"name": "h"},{"file": 56,"line": 126,"col": 4,"name": "dwIoControlCode"},{"file": 56,"line": 127,"col": 4,"name": "lpInBuffer"},{"file": 56,"line": 128,"col": 4,"name": "nInBufferSize"},{"file": 56,"line": 129,"col": 4,"name": "lpOutBuffer"},{"file": 56,"line": 130,"col": 4,"name": "nOutBufferSize"},{"file": 56,"line": 131,"col": 4,"name": "lpBytesReturned"},{"file": 56,"line": 132,"col": 4,"name": "lpOverlapped"},{"file": 56,"line": 135,"col": 37,"name": "lpFileName"},{"file": 56,"line": 137,"col": 41,"name": "hSourceProcessHandle"},{"file": 56,"line": 137,"col": 71,"name": "hSourceHandle"},{"file": 56,"line": 137,"col": 94,"name": "hTargetProcessHandle"},{"file": 56,"line": 137,"col": 124,"name": "lpTargetHandle"},{"file": 56,"line": 137,"col": 149,"name": "dwDesiredAccess"},{"file": 56,"line": 137,"col": 173,"name": "bInheritHandle"},{"file": 56,"line": 137,"col": 195,"name": "dwOptions"},{"file": 56,"line": 139,"col": 37,"name": "exit_code"},{"file": 56,"line": 141,"col": 40,"name": "lpFileName"},{"file": 56,"line": 141,"col": 68,"name": "lpFindFileData"},{"file": 56,"line": 142,"col": 35,"name": "hFindFile"},{"file": 56,"line": 143,"col": 39,"name": "hFindFile"},{"file": 56,"line": 143,"col": 58,"name": "lpFindFileData"},{"file": 56,"line": 145,"col": 40,"name": "dwFlags"},{"file": 56,"line": 145,"col": 56,"name": "lpSource"},{"file": 56,"line": 145,"col": 75,"name": "dwMessageId"},{"file": 56,"line": 145,"col": 100,"name": "dwLanguageId"},{"file": 56,"line": 145,"col": 121,"name": "lpBuffer"},{"file": 56,"line": 145,"col": 139,"name": "nSize"},{"file": 56,"line": 145,"col": 153,"name": "Arguments"},{"file": 56,"line": 147,"col": 49,"name": "penv"},{"file": 56,"line": 152,"col": 40,"name": "in_hConsoleHandle"},{"file": 56,"line": 152,"col": 67,"name": "out_lpMode"},{"file": 56,"line": 156,"col": 52,"name": "hConsoleOutput"},{"file": 56,"line": 156,"col": 76,"name": "lpConsoleScreenBufferInfo"},{"file": 56,"line": 157,"col": 53,"name": "hConsoleOutput"},{"file": 56,"line": 157,"col": 77,"name": "cCharacter"},{"file": 56,"line": 157,"col": 95,"name": "nLength"},{"file": 56,"line": 157,"col": 111,"name": "dwWriteCoord"},{"file": 56,"line": 157,"col": 132,"name": "lpNumberOfCharsWritten"},{"file": 56,"line": 158,"col": 53,"name": "hConsoleOutput"},{"file": 56,"line": 158,"col": 77,"name": "cCharacter"},{"file": 56,"line": 158,"col": 96,"name": "nLength"},{"file": 56,"line": 158,"col": 112,"name": "dwWriteCoord"},{"file": 56,"line": 158,"col": 133,"name": "lpNumberOfCharsWritten"},{"file": 56,"line": 159,"col": 52,"name": "hConsoleOutput"},{"file": 56,"line": 159,"col": 76,"name": "wAttribute"},{"file": 56,"line": 159,"col": 94,"name": "nLength"},{"file": 56,"line": 159,"col": 110,"name": "dwWriteCoord"},{"file": 56,"line": 159,"col": 131,"name": "lpNumberOfAttrsWritten"},{"file": 56,"line": 160,"col": 50,"name": "hConsoleOutput"},{"file": 56,"line": 160,"col": 74,"name": "dwCursorPosition"},{"file": 56,"line": 162,"col": 46,"name": "nBufferLength"},{"file": 56,"line": 162,"col": 68,"name": "lpBuffer"},{"file": 56,"line": 173,"col": 49,"name": "lpName"},{"file": 56,"line": 173,"col": 65,"name": "lpBuffer"},{"file": 56,"line": 173,"col": 83,"name": "nSize"},{"file": 56,"line": 175,"col": 44,"name": "hProcess"},{"file": 56,"line": 175,"col": 62,"name": "lpExitCode"},{"file": 56,"line": 177,"col": 39,"name": "hFile"},{"file": 56,"line": 177,"col": 54,"name": "lpFileSize"},{"file": 56,"line": 179,"col": 44,"name": "lpFileName"},{"file": 56,"line": 181,"col": 44,"name": "hModule"},{"file": 56,"line": 181,"col": 63,"name": "lpFilename"},{"file": 56,"line": 181,"col": 83,"name": "nSize"},{"file": 56,"line": 183,"col": 42,"name": "lpModuleName"},{"file": 56,"line": 186,"col": 38,"name": "dwErrCode"},{"file": 56,"line": 189,"col": 4,"name": "hFile"},{"file": 56,"line": 190,"col": 4,"name": "lpFileInformation"},{"file": 56,"line": 194,"col": 4,"name": "in_hFile"},{"file": 56,"line": 195,"col": 4,"name": "in_FileInformationClass"},{"file": 56,"line": 196,"col": 4,"name": "out_lpFileInformation"},{"file": 56,"line": 197,"col": 4,"name": "in_dwBufferSize"},{"file": 56,"line": 201,"col": 4,"name": "hFile"},{"file": 56,"line": 202,"col": 4,"name": "lpszFilePath"},{"file": 56,"line": 203,"col": 4,"name": "cchFilePath"},{"file": 56,"line": 204,"col": 4,"name": "dwFlags"},{"file": 56,"line": 208,"col": 4,"name": "lpFileName"},{"file": 56,"line": 209,"col": 4,"name": "nBufferLength"},{"file": 56,"line": 210,"col": 4,"name": "lpBuffer"},{"file": 56,"line": 211,"col": 4,"name": "lpFilePart"},{"file": 56,"line": 214,"col": 45,"name": "hFile"},{"file": 56,"line": 214,"col": 60,"name": "lpOverlapped"},{"file": 56,"line": 214,"col": 87,"name": "lpNumberOfBytesTransferred"},{"file": 56,"line": 214,"col": 123,"name": "bWait"},{"file": 56,"line": 217,"col": 51,"name": "CompletionPort"},{"file": 56,"line": 217,"col": 75,"name": "lpNumberOfBytesTransferred"},{"file": 56,"line": 217,"col": 111,"name": "lpCompletionKey"},{"file": 56,"line": 217,"col": 140,"name": "lpOverlapped"},{"file": 56,"line": 217,"col": 169,"name": "dwMilliseconds"},{"file": 56,"line": 219,"col": 4,"name": "CompletionPort"},{"file": 56,"line": 220,"col": 4,"name": "lpCompletionPortEntries"},{"file": 56,"line": 221,"col": 4,"name": "ulCount"},{"file": 56,"line": 222,"col": 4,"name": "ulNumEntriesRemoved"},{"file": 56,"line": 223,"col": 4,"name": "dwMilliseconds"},{"file": 56,"line": 224,"col": 4,"name": "fAlertable"},{"file": 56,"line": 227,"col": 39,"name": "lpSystemInfo"},{"file": 56,"line": 228,"col": 49},{"file": 56,"line": 230,"col": 36,"name": "flOptions"},{"file": 56,"line": 230,"col": 54,"name": "dwInitialSize"},{"file": 56,"line": 230,"col": 77,"name": "dwMaximumSize"},{"file": 56,"line": 231,"col": 37,"name": "hHeap"},{"file": 56,"line": 232,"col": 37,"name": "hHeap"},{"file": 56,"line": 232,"col": 52,"name": "dwFlags"},{"file": 56,"line": 232,"col": 68,"name": "lpMem"},{"file": 56,"line": 232,"col": 84,"name": "dwBytes"},{"file": 56,"line": 233,"col": 34,"name": "hHeap"},{"file": 56,"line": 233,"col": 49,"name": "dwFlags"},{"file": 56,"line": 233,"col": 65,"name": "lpMem"},{"file": 56,"line": 234,"col": 37,"name": "hHeap"},{"file": 56,"line": 234,"col": 52,"name": "dwFlags"},{"file": 56,"line": 235,"col": 37,"name": "hHeap"},{"file": 56,"line": 235,"col": 52,"name": "dwFlags"},{"file": 56,"line": 235,"col": 68,"name": "lpSummary"},{"file": 56,"line": 237,"col": 38,"name": "in_nStdHandle"},{"file": 56,"line": 239,"col": 35,"name": "hHeap"},{"file": 56,"line": 239,"col": 50,"name": "dwFlags"},{"file": 56,"line": 239,"col": 66,"name": "dwBytes"},{"file": 56,"line": 241,"col": 34,"name": "hHeap"},{"file": 56,"line": 241,"col": 49,"name": "dwFlags"},{"file": 56,"line": 241,"col": 65,"name": "lpMem"},{"file": 56,"line": 243,"col": 38,"name": "hHeap"},{"file": 56,"line": 243,"col": 53,"name": "dwFlags"},{"file": 56,"line": 243,"col": 69,"name": "lpMem"},{"file": 56,"line": 245,"col": 38,"name": "lpAddress"},{"file": 56,"line": 245,"col": 58,"name": "dwSize"},{"file": 56,"line": 245,"col": 74,"name": "flAllocationType"},{"file": 56,"line": 245,"col": 99,"name": "flProtect"},{"file": 56,"line": 246,"col": 37,"name": "lpAddress"},{"file": 56,"line": 246,"col": 57,"name": "dwSize"},{"file": 56,"line": 246,"col": 73,"name": "dwFreeType"},{"file": 56,"line": 248,"col": 35,"name": "hMem"},{"file": 56,"line": 251,"col": 4,"name": "lpExistingFileName"},{"file": 56,"line": 252,"col": 4,"name": "lpNewFileName"},{"file": 56,"line": 253,"col": 4,"name": "dwFlags"},{"file": 56,"line": 256,"col": 52,"name": "CompletionPort"},{"file": 56,"line": 256,"col": 76,"name": "dwNumberOfBytesTransferred"},{"file": 56,"line": 256,"col": 111,"name": "dwCompletionKey"},{"file": 56,"line": 256,"col": 139,"name": "lpOverlapped"},{"file": 56,"line": 258,"col": 49,"name": "lpPerformanceCount"},{"file": 56,"line": 260,"col": 51,"name": "lpFrequency"},{"file": 56,"line": 263,"col": 4,"name": "hDirectory"},{"file": 56,"line": 264,"col": 4,"name": "lpBuffer"},{"file": 56,"line": 265,"col": 4,"name": "nBufferLength"},{"file": 56,"line": 266,"col": 4,"name": "bWatchSubtree"},{"file": 56,"line": 267,"col": 4,"name": "dwNotifyFilter"},{"file": 56,"line": 268,"col": 4,"name": "lpBytesReturned"},{"file": 56,"line": 269,"col": 4,"name": "lpOverlapped"},{"file": 56,"line": 270,"col": 4,"name": "lpCompletionRoutine"},{"file": 56,"line": 274,"col": 4,"name": "in_hFile"},{"file": 56,"line": 275,"col": 4,"name": "out_lpBuffer"},{"file": 56,"line": 276,"col": 4,"name": "in_nNumberOfBytesToRead"},{"file": 56,"line": 277,"col": 4,"name": "out_lpNumberOfBytesRead"},{"file": 56,"line": 278,"col": 4,"name": "in_out_lpOverlapped"},{"file": 56,"line": 281,"col": 42,"name": "lpPathName"},{"file": 56,"line": 283,"col": 49,"name": "hConsoleOutput"},{"file": 56,"line": 283,"col": 73,"name": "wAttributes"},{"file": 56,"line": 286,"col": 4,"name": "HandlerRoutine"},{"file": 56,"line": 287,"col": 4,"name": "Add"},{"file": 56,"line": 290,"col": 44,"name": "wCodePageID"},{"file": 56,"line": 293,"col": 4,"name": "FileHandle"},{"file": 56,"line": 294,"col": 4,"name": "Flags"},{"file": 56,"line": 298,"col": 4,"name": "in_fFile"},{"file": 56,"line": 299,"col": 4,"name": "in_liDistanceToMove"},{"file": 56,"line": 300,"col": 4,"name": "out_opt_ldNewFilePointer"},{"file": 56,"line": 301,"col": 4,"name": "in_dwMoveMethod"},{"file": 56,"line": 305,"col": 4,"name": "hFile"},{"file": 56,"line": 306,"col": 4,"name": "lpCreationTime"},{"file": 56,"line": 307,"col": 4,"name": "lpLastAccessTime"},{"file": 56,"line": 308,"col": 4,"name": "lpLastWriteTime"},{"file": 56,"line": 311,"col": 46,"name": "hObject"},{"file": 56,"line": 311,"col": 63,"name": "dwMask"},{"file": 56,"line": 311,"col": 78,"name": "dwFlags"},{"file": 56,"line": 313,"col": 31,"name": "dwMilliseconds"},{"file": 56,"line": 317,"col": 42,"name": "hProcess"},{"file": 56,"line": 317,"col": 60,"name": "uExitCode"},{"file": 56,"line": 321,"col": 33,"name": "dwTlsIndex"},{"file": 56,"line": 323,"col": 45,"name": "hHandle"},{"file": 56,"line": 323,"col": 62,"name": "dwMilliseconds"},{"file": 56,"line": 325,"col": 47,"name": "hHandle"},{"file": 56,"line": 325,"col": 64,"name": "dwMilliseconds"},{"file": 56,"line": 325,"col": 87,"name": "bAlertable"},{"file": 56,"line": 327,"col": 48,"name": "nCount"},{"file": 56,"line": 327,"col": 63,"name": "lpHandle"},{"file": 56,"line": 327,"col": 90,"name": "bWaitAll"},{"file": 56,"line": 327,"col": 106,"name": "dwMilliseconds"},{"file": 56,"line": 330,"col": 4,"name": "nCount"},{"file": 56,"line": 331,"col": 4,"name": "lpHandle"},{"file": 56,"line": 332,"col": 4,"name": "bWaitAll"},{"file": 56,"line": 333,"col": 4,"name": "dwMilliseconds"},{"file": 56,"line": 334,"col": 4,"name": "bAlertable"},{"file": 56,"line": 338,"col": 4,"name": "in_hFile"},{"file": 56,"line": 339,"col": 4,"name": "in_lpBuffer"},{"file": 56,"line": 340,"col": 4,"name": "in_nNumberOfBytesToWrite"},{"file": 56,"line": 341,"col": 4,"name": "out_lpNumberOfBytesWritten"},{"file": 56,"line": 342,"col": 4,"name": "in_out_lpOverlapped"},{"file": 56,"line": 345,"col": 37,"name": "hFile"},{"file": 56,"line": 345,"col": 52,"name": "lpBuffer"},{"file": 56,"line": 345,"col": 75,"name": "nNumberOfBytesToWrite"},{"file": 56,"line": 345,"col": 105,"name": "lpOverlapped"},{"file": 56,"line": 345,"col": 132,"name": "lpCompletionRoutine"},{"file": 56,"line": 347,"col": 38,"name": "lpLibFileName"},{"file": 56,"line": 349,"col": 40,"name": "hModule"},{"file": 56,"line": 349,"col": 58,"name": "lpProcName"},{"file": 56,"line": 351,"col": 37,"name": "hModule"},{"file": 56,"line": 353,"col": 51,"name": "lpCriticalSection"},{"file": 56,"line": 354,"col": 46,"name": "lpCriticalSection"},{"file": 56,"line": 355,"col": 46,"name": "lpCriticalSection"},{"file": 56,"line": 356,"col": 47,"name": "lpCriticalSection"},{"file": 56,"line": 358,"col": 45,"name": "InitOnce"},{"file": 56,"line": 358,"col": 67,"name": "InitFn"},{"file": 56,"line": 358,"col": 89,"name": "Parameter"},{"file": 56,"line": 358,"col": 110,"name": "Context"},{"file": 56,"line": 360,"col": 44,"name": "hProcess"},{"file": 56,"line": 361,"col": 46,"name": "lpImageBase"},{"file": 56,"line": 361,"col": 70,"name": "cb"},{"file": 56,"line": 361,"col": 81,"name": "lpcbNeeded"},{"file": 56,"line": 362,"col": 43,"name": "pCallBackRoutine"},{"file": 56,"line": 362,"col": 88,"name": "pContext"},{"file": 56,"line": 363,"col": 43,"name": "pCallBackRoutine"},{"file": 56,"line": 363,"col": 88,"name": "pContext"},{"file": 56,"line": 364,"col": 47,"name": "hProcess"},{"file": 56,"line": 364,"col": 65,"name": "lphModule"},{"file": 56,"line": 364,"col": 88,"name": "cb"},{"file": 56,"line": 364,"col": 99,"name": "lpcbNeeded"},{"file": 56,"line": 365,"col": 49,"name": "hProcess"},{"file": 56,"line": 365,"col": 67,"name": "lphModule"},{"file": 56,"line": 365,"col": 90,"name": "cb"},{"file": 56,"line": 365,"col": 101,"name": "lpcbNeeded"},{"file": 56,"line": 365,"col": 121,"name": "dwFilterFlag"},{"file": 56,"line": 366,"col": 42,"name": "lpidProcess"},{"file": 56,"line": 366,"col": 65,"name": "cb"},{"file": 56,"line": 366,"col": 76,"name": "cbNeeded"},{"file": 56,"line": 367,"col": 53,"name": "ImageBase"},{"file": 56,"line": 367,"col": 72,"name": "lpBaseName"},{"file": 56,"line": 367,"col": 91,"name": "nSize"},{"file": 56,"line": 368,"col": 53,"name": "ImageBase"},{"file": 56,"line": 368,"col": 72,"name": "lpBaseName"},{"file": 56,"line": 368,"col": 92,"name": "nSize"},{"file": 56,"line": 369,"col": 53,"name": "ImageBase"},{"file": 56,"line": 369,"col": 72,"name": "lpFilename"},{"file": 56,"line": 369,"col": 91,"name": "nSize"},{"file": 56,"line": 370,"col": 53,"name": "ImageBase"},{"file": 56,"line": 370,"col": 72,"name": "lpFilename"},{"file": 56,"line": 370,"col": 92,"name": "nSize"},{"file": 56,"line": 371,"col": 47,"name": "hProcess"},{"file": 56,"line": 371,"col": 65,"name": "lpv"},{"file": 56,"line": 371,"col": 79,"name": "lpFilename"},{"file": 56,"line": 371,"col": 98,"name": "nSize"},{"file": 56,"line": 372,"col": 47,"name": "hProcess"},{"file": 56,"line": 372,"col": 65,"name": "lpv"},{"file": 56,"line": 372,"col": 79,"name": "lpFilename"},{"file": 56,"line": 372,"col": 99,"name": "nSize"},{"file": 56,"line": 373,"col": 47,"name": "hProcess"},{"file": 56,"line": 373,"col": 65,"name": "hModule"},{"file": 56,"line": 373,"col": 84,"name": "lpBaseName"},{"file": 56,"line": 373,"col": 103,"name": "nSize"},{"file": 56,"line": 374,"col": 47,"name": "hProcess"},{"file": 56,"line": 374,"col": 65,"name": "hModule"},{"file": 56,"line": 374,"col": 84,"name": "lpBaseName"},{"file": 56,"line": 374,"col": 104,"name": "nSize"},{"file": 56,"line": 375,"col": 49,"name": "hProcess"},{"file": 56,"line": 375,"col": 67,"name": "hModule"},{"file": 56,"line": 375,"col": 86,"name": "lpFilename"},{"file": 56,"line": 375,"col": 105,"name": "nSize"},{"file": 56,"line": 376,"col": 49,"name": "hProcess"},{"file": 56,"line": 376,"col": 67,"name": "hModule"},{"file": 56,"line": 376,"col": 86,"name": "lpFilename"},{"file": 56,"line": 376,"col": 106,"name": "nSize"},{"file": 56,"line": 377,"col": 49,"name": "hProcess"},{"file": 56,"line": 377,"col": 67,"name": "hModule"},{"file": 56,"line": 377,"col": 85,"name": "lpmodinfo"},{"file": 56,"line": 377,"col": 109,"name": "cb"},{"file": 56,"line": 378,"col": 47,"name": "pPerformanceInformation"},{"file": 56,"line": 378,"col": 98,"name": "cb"},{"file": 56,"line": 379,"col": 53,"name": "hProcess"},{"file": 56,"line": 379,"col": 71,"name": "lpImageFileName"},{"file": 56,"line": 379,"col": 95,"name": "nSize"},{"file": 56,"line": 380,"col": 53,"name": "hProcess"},{"file": 56,"line": 380,"col": 71,"name": "lpImageFileName"},{"file": 56,"line": 380,"col": 96,"name": "nSize"},{"file": 56,"line": 381,"col": 49,"name": "Process"},{"file": 56,"line": 381,"col": 66,"name": "ppsmemCounters"},{"file": 56,"line": 381,"col": 108,"name": "cb"},{"file": 56,"line": 382,"col": 41,"name": "hProcess"},{"file": 56,"line": 382,"col": 59,"name": "lpWatchInfo"},{"file": 56,"line": 382,"col": 101,"name": "cb"},{"file": 56,"line": 383,"col": 43,"name": "hProcess"},{"file": 56,"line": 383,"col": 61,"name": "lpWatchInfoEx"},{"file": 56,"line": 383,"col": 108,"name": "cb"},{"file": 56,"line": 384,"col": 56,"name": "hProcess"},{"file": 56,"line": 385,"col": 44,"name": "hProcess"},{"file": 56,"line": 385,"col": 62,"name": "pv"},{"file": 56,"line": 385,"col": 73,"name": "cb"},{"file": 56,"line": 386,"col": 46,"name": "hProcess"},{"file": 56,"line": 386,"col": 64,"name": "pv"},{"file": 56,"line": 386,"col": 75,"name": "cb"},{"file": 56,"line": 388,"col": 42,"name": "hFile"},{"file": 56,"line": 390,"col": 50,"name": "c"},{"file": 56,"line": 391,"col": 47,"name": "c"},{"file": 56,"line": 393,"col": 4,"name": "c"},{"file": 56,"line": 394,"col": 4,"name": "s"},{"file": 56,"line": 395,"col": 4,"name": "t"},{"file": 56,"line": 396,"col": 4,"name": "f"},{"file": 56,"line": 399,"col": 52,"name": "s"},{"file": 56,"line": 400,"col": 49,"name": "s"},{"file": 56,"line": 401,"col": 49,"name": "s"},{"file": 56,"line": 403,"col": 46,"name": "hThread"},{"file": 56,"line": 403,"col": 63,"name": "lpThreadDescription"},{"file": 56,"line": 404,"col": 46,"name": "hThread"},{"file": 56,"line": 404,"col": 63,"name": "ppszThreadDescription"},{"file": 57,"line": 26,"col": 4,"name": "lpVersionInformation"},{"file": 57,"line": 29,"col": 4,"name": "FramesToSkip"},{"file": 57,"line": 30,"col": 4,"name": "FramesToCapture"},{"file": 57,"line": 31,"col": 4,"name": "BackTrace"},{"file": 57,"line": 32,"col": 4,"name": "BackTraceHash"},{"file": 57,"line": 35,"col": 4,"name": "FileHandle"},{"file": 57,"line": 36,"col": 4,"name": "IoStatusBlock"},{"file": 57,"line": 37,"col": 4,"name": "FileInformation"},{"file": 57,"line": 38,"col": 4,"name": "Length"},{"file": 57,"line": 39,"col": 4,"name": "FileInformationClass"},{"file": 57,"line": 42,"col": 4,"name": "FileHandle"},{"file": 57,"line": 43,"col": 4,"name": "IoStatusBlock"},{"file": 57,"line": 44,"col": 4,"name": "FileInformation"},{"file": 57,"line": 45,"col": 4,"name": "Length"},{"file": 57,"line": 46,"col": 4,"name": "FileInformationClass"},{"file": 57,"line": 50,"col": 4,"name": "ObjectAttributes"},{"file": 57,"line": 51,"col": 4,"name": "FileAttributes"},{"file": 57,"line": 55,"col": 4,"name": "FileHandle"},{"file": 57,"line": 56,"col": 4,"name": "DesiredAccess"},{"file": 57,"line": 57,"col": 4,"name": "ObjectAttributes"},{"file": 57,"line": 58,"col": 4,"name": "IoStatusBlock"},{"file": 57,"line": 59,"col": 4,"name": "AllocationSize"},{"file": 57,"line": 60,"col": 4,"name": "FileAttributes"},{"file": 57,"line": 61,"col": 4,"name": "ShareAccess"},{"file": 57,"line": 62,"col": 4,"name": "CreateDisposition"},{"file": 57,"line": 63,"col": 4,"name": "CreateOptions"},{"file": 57,"line": 64,"col": 4,"name": "EaBuffer"},{"file": 57,"line": 65,"col": 4,"name": "EaLength"},{"file": 57,"line": 68,"col": 4,"name": "FileHandle"},{"file": 57,"line": 69,"col": 4,"name": "Event"},{"file": 57,"line": 70,"col": 4,"name": "ApcRoutine"},{"file": 57,"line": 71,"col": 4,"name": "ApcContext"},{"file": 57,"line": 72,"col": 4,"name": "IoStatusBlock"},{"file": 57,"line": 73,"col": 4,"name": "IoControlCode"},{"file": 57,"line": 74,"col": 4,"name": "InputBuffer"},{"file": 57,"line": 75,"col": 4,"name": "InputBufferLength"},{"file": 57,"line": 76,"col": 4,"name": "OutputBuffer"},{"file": 57,"line": 77,"col": 4,"name": "OutputBufferLength"},{"file": 57,"line": 80,"col": 4,"name": "FileHandle"},{"file": 57,"line": 81,"col": 4,"name": "Event"},{"file": 57,"line": 82,"col": 4,"name": "ApcRoutine"},{"file": 57,"line": 83,"col": 4,"name": "ApcContext"},{"file": 57,"line": 84,"col": 4,"name": "IoStatusBlock"},{"file": 57,"line": 85,"col": 4,"name": "FsControlCode"},{"file": 57,"line": 86,"col": 4,"name": "InputBuffer"},{"file": 57,"line": 87,"col": 4,"name": "InputBufferLength"},{"file": 57,"line": 88,"col": 4,"name": "OutputBuffer"},{"file": 57,"line": 89,"col": 4,"name": "OutputBufferLength"},{"file": 57,"line": 91,"col": 30,"name": "Handle"},{"file": 57,"line": 93,"col": 4,"name": "DosPathName"},{"file": 57,"line": 94,"col": 4,"name": "NtPathName"},{"file": 57,"line": 95,"col": 4,"name": "NtFileNamePart"},{"file": 57,"line": 96,"col": 4,"name": "DirectoryInfo"},{"file": 57,"line": 98,"col": 43,"name": "UnicodeString"},{"file": 57,"line": 101,"col": 4,"name": "FileHandle"},{"file": 57,"line": 102,"col": 4,"name": "Event"},{"file": 57,"line": 103,"col": 4,"name": "ApcRoutine"},{"file": 57,"line": 104,"col": 4,"name": "ApcContext"},{"file": 57,"line": 105,"col": 4,"name": "IoStatusBlock"},{"file": 57,"line": 106,"col": 4,"name": "FileInformation"},{"file": 57,"line": 107,"col": 4,"name": "Length"},{"file": 57,"line": 108,"col": 4,"name": "FileInformationClass"},{"file": 57,"line": 109,"col": 4,"name": "ReturnSingleEntry"},{"file": 57,"line": 110,"col": 4,"name": "FileName"},{"file": 57,"line": 111,"col": 4,"name": "RestartScan"},{"file": 57,"line": 115,"col": 4,"name": "KeyedEventHandle"},{"file": 57,"line": 116,"col": 4,"name": "DesiredAccess"},{"file": 57,"line": 117,"col": 4,"name": "ObjectAttributes"},{"file": 57,"line": 118,"col": 4,"name": "Flags"},{"file": 57,"line": 122,"col": 4,"name": "EventHandle"},{"file": 57,"line": 123,"col": 4,"name": "Key"},{"file": 57,"line": 124,"col": 4,"name": "Alertable"},{"file": 57,"line": 125,"col": 4,"name": "Timeout"},{"file": 57,"line": 129,"col": 4,"name": "EventHandle"},{"file": 57,"line": 130,"col": 4,"name": "Key"},{"file": 57,"line": 131,"col": 4,"name": "Alertable"},{"file": 57,"line": 132,"col": 4,"name": "Timeout"},{"file": 57,"line": 135,"col": 47,"name": "PathName"},{"file": 57,"line": 138,"col": 4,"name": "Handle"},{"file": 57,"line": 139,"col": 4,"name": "ObjectInformationClass"},{"file": 57,"line": 140,"col": 4,"name": "ObjectInformation"},{"file": 57,"line": 141,"col": 4,"name": "ObjectInformationLength"},{"file": 57,"line": 142,"col": 4,"name": "ReturnLength"},{"file": 57,"line": 146,"col": 4,"name": "Address"},{"file": 57,"line": 150,"col": 4,"name": "Address"},{"file": 57,"line": 154,"col": 4,"name": "Address"},{"file": 57,"line": 155,"col": 4,"name": "CompareAddress"},{"file": 57,"line": 156,"col": 4,"name": "AddressSize"},{"file": 57,"line": 157,"col": 4,"name": "Timeout"},{"file": 57,"line": 161,"col": 4,"name": "FileHandle"},{"file": 57,"line": 162,"col": 4,"name": "Event"},{"file": 57,"line": 163,"col": 4,"name": "ApcRoutine"},{"file": 57,"line": 164,"col": 4,"name": "ApcContext"},{"file": 57,"line": 165,"col": 4,"name": "IoStatusBlock"},{"file": 57,"line": 166,"col": 4,"name": "ByteOffset"},{"file": 57,"line": 167,"col": 4,"name": "Length"},{"file": 57,"line": 168,"col": 4,"name": "Key"},{"file": 57,"line": 169,"col": 4,"name": "FailImmediately"},{"file": 57,"line": 170,"col": 4,"name": "ExclusiveLock"},{"file": 57,"line": 174,"col": 4,"name": "FileHandle"},{"file": 57,"line": 175,"col": 4,"name": "IoStatusBlock"},{"file": 57,"line": 176,"col": 4,"name": "ByteOffset"},{"file": 57,"line": 177,"col": 4,"name": "Length"},{"file": 57,"line": 178,"col": 4,"name": "Key"},{"file": 12,"line": 488,"col": 31,"name": "self"},{"file": 12,"line": 488,"col": 44,"name": "ver"},{"file": 12,"line": 496,"col": 25,"name": "self"},{"file": 12,"line": 496,"col": 38,"name": "ver"},{"file": 3,"line": 143,"col": 39,"name": "self"},{"file": 3,"line": 143,"col": 52,"name": "ver"},{"file": 3,"line": 149,"col": 33,"name": "self"},{"file": 3,"line": 149,"col": 46,"name": "ver"},{"file": 18,"line": 853,"col": 16,"name": "self"},{"file": 18,"line": 868,"col": 15,"name": "self"},{"file": 22,"line": 435,"col": 16,"name": "self"},{"file": 18,"line": 905,"col": 22,"name": "self"},{"file": 18,"line": 905,"col": 38,"name": "entry"},{"file": 18,"line": 910,"col": 26,"name": "self"},{"file": 18,"line": 910,"col": 42,"name": "now"},{"file": 18,"line": 921,"col": 26,"name": "self"},{"file": 18,"line": 926,"col": 33,"name": "self"}],"files": ["C:\\Users\\Ren\\code\\ziglib\\src\\main.zig","C:\\zig\\lib\\std\\std.zig","C:\\Users\\Ren\\code\\ziglib\\zig-cache\\o\\a13a7b794012ffc8ac2656be4cd397e2\\builtin.zig","C:\\zig\\lib\\std\\target.zig","C:\\zig\\lib\\std\\io\\writer.zig","C:\\zig\\lib\\std\\fs\\file.zig","C:\\zig\\lib\\std\\hash_map.zig","C:\\zig\\lib\\std\\array_list.zig","C:\\zig\\lib\\std\\target\\x86.zig","C:\\zig\\lib\\std\\io\\reader.zig","C:\\zig\\lib\\std\\io\\fixed_buffer_stream.zig","C:\\zig\\lib\\std\\io\\seekable_stream.zig","C:\\zig\\lib\\std\\builtin.zig","C:\\zig\\lib\\std\\mem.zig","C:\\zig\\lib\\std\\atomic\\queue.zig","C:\\zig\\lib\\std\\Thread\\Mutex.zig","C:\\zig\\lib\\std\\linked_list.zig","C:\\zig\\lib\\std\\atomic\\Atomic.zig","C:\\zig\\lib\\std\\event\\loop.zig","C:\\zig\\lib\\std\\atomic\\stack.zig","C:\\zig\\lib\\std\\pdb.zig","C:\\zig\\lib\\std\\dwarf.zig","C:\\zig\\lib\\std\\Thread.zig","C:\\zig\\lib\\std\\atomic.zig","C:\\zig\\lib\\std\\c.zig","C:\\zig\\lib\\std\\coff.zig","C:\\zig\\lib\\std\\debug.zig","C:\\zig\\lib\\std\\event.zig","C:\\zig\\lib\\std\\fmt.zig","C:\\zig\\lib\\std\\fs.zig","C:\\zig\\lib\\std\\hash.zig","C:\\zig\\lib\\std\\heap.zig","C:\\zig\\lib\\std\\io.zig","C:\\zig\\lib\\std\\macho.zig","C:\\zig\\lib\\std\\math.zig","C:\\zig\\lib\\std\\meta.zig","C:\\zig\\lib\\std\\os.zig","C:\\zig\\lib\\std\\process.zig","C:\\zig\\lib\\std\\ascii.zig","C:\\zig\\lib\\std\\time.zig","C:\\zig\\lib\\std\\unicode.zig","C:\\zig\\lib\\std\\start.zig","C:\\zig\\lib\\std\\Thread\\StaticResetEvent.zig","C:\\zig\\lib\\std\\mem\\Allocator.zig","C:\\zig\\lib\\std\\fs\\path.zig","C:\\zig\\lib\\std\\heap\\arena_allocator.zig","C:\\zig\\lib\\std\\os\\windows.zig","C:\\zig\\lib\\std\\os\\windows\\ntstatus.zig","C:\\zig\\lib\\std\\hash\\wyhash.zig","C:\\zig\\lib\\std\\meta\\trait.zig","C:\\zig\\lib\\std\\dwarf\\TAG.zig","C:\\zig\\lib\\std\\dwarf\\AT.zig","C:\\zig\\lib\\std\\leb128.zig","C:\\zig\\lib\\std\\Thread\\AutoResetEvent.zig","C:\\zig\\lib\\std\\Thread\\ResetEvent.zig","C:\\zig\\lib\\std\\c\\windows.zig","C:\\zig\\lib\\std\\os\\windows\\kernel32.zig","C:\\zig\\lib\\std\\os\\windows\\ntdll.zig","C:\\zig\\lib\\std\\os\\windows\\win32error.zig"]};